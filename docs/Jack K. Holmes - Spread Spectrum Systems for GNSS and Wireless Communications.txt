Spread Spec trum Sys tems for
GNSS and Wire less Communications

For a list ing of recent titles 
in the Artech House GNSS Tech nol ogy and Appli ca tions Series,
turn to the back of this book.

Spread Spec trum Sys tems for
GNSS and Wire less Communications
Jack K. Holmes
artechhouse.com 

Library of Con gress Cataloguing- in- Publication Data
A cat a log record for this book is avail able from the U.S. Library of Con gress.
Brit ish Library Cata logu ing in Pub li ca tion Data
A cat a logue record for this book is avail able from the Brit ish Library.
ISBN-13:  978-1-59693-083-4
Cover design by Igor Valdman
The opin ions expressed in this book are solely those of the author and do not reflect those of the pub lisher or any other
party.
© 2007 ARTECH HOUSE, INC. 
685 Can ton Street
Norwood, MA 02062
All rights reserved. Printed and bound in the United States of Amer ica. No part of this book may be repro duced or uti -
lized in any form or by any means, elec tronic or mechan i cal, includ ing pho to copy ing, record ing, or by any infor ma tion
stor age and retrieval sys tem, with out per mis sion in writ ing from the pub lisher.
 All terms men tioned in this book that are known to be trade marks or serv ice marks have been appro pri ately capi tal -
ized. Artech House can not attest to the accu racy of this infor ma tion. Use of a term in this book should not be regarded as 
affect ing the valid ity of any trade mark or serv ice mark.
10 9 8 7 6 5 4 3 2 1

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
To my wife Fontayne, my daughters Julie and Rachel, my grandchildren Sarah, Danielle, 
Emily, and Andrew, and my sons-in-law Scott and Vince 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

Contents 
Chapter 1 An Introduction to Spread Spectrum Systems 
1 
1.0 Introduction 
1 
1.1 A Very Brief History of Spread Spectrum Communications 
2 
1.2 A Digital Spread Spectrum Communication Systems Model 
3 
1.3 Narrowband Signals 
4 
1.3.1 
Narrowband Process Via the Complex Envelope 
4 
1.3.2 
Narrowband Signals Through Narrowband Systems 
5 
1.3.3 
Complex Envelope Characterization for Direct Sequence and  
Frequency-Hopping Signals 
7 
1.4 Direct Sequence Spread Spectrum Systems 
8 
1.4.1 
Direct Sequence Spreading with Binary Phase Shift Keying (BPSK) 8 
1.4.2 
Quadriphase Direct Sequence Spread Spectrum Systems 
23 
1.4.3 
Minimum Shift Keying (MSK) 
28 
1.5 Frequency-Hopped Spread Spectrum Systems 
30 
1.5.1 
Noncoherent Slow Frequency-Hopped Systems with MFSK Data 
Modulation 
33 
1.5.2 
Noncoherent Fast Frequency-Hopped Systems with MFSK Data  
Modulation 
34 
1.5.3 
Noncoherent Slow Frequency-Hopped Systems with DPSK Data  
Modulation 
36 
1.5.4 
Noncoherent Slow Frequency-Hopped Signals with BPSK Data  
Modulation 
39 
1.6 Hybrid Spread Spectrum Systems 
40 
1.6.1 
Hybrid DS with Slow Frequency Hopping with BPSK Data 
40 
1.6.2 
Hybrid OQPSK DS with SFH with BPSK Data 
41 
1.7 Time Hopping Spread Spectrum Signals 
42 
1.8 An Introduction to OFDM 
44 
1.8.1 
OFDM Communication System Implemented Via the FFT 
45 
1.8.2 
OFDM Intersymbol Interference Reduction Techniques 
46 
1.8.3 
OFDM Power Spectral Density 
46 
1.9 An Introduction to Ultrawideband Communications 
47 
1.9.1 
A Brief Early History of UWB Communications 
47 
1.9.2 
Description of UWB Signals 
48 
1.9.3 
Regulatory Constraints and Spectral Masks for Various UWB  
Applications 
53 
1.9.4 
Impact of the Transmit Antenna on the Transmitted Signal 
53 
1.9.5 
The Advantages and the Disadvantages of Impulse Versus  
Multicarrier UWB 
56 
1.9.6 
Advantages of UWB Systems 
56 
1.9.7 
Applications of UWB 
56 
1.10 The Near-Far Problem 
57 
1.11 Low Probability of Interception 
57 
                   1.12 Summary  
58 
                   References 
58 
                  Problems 
60 
 
                                           
vii

 viii                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
Chapter 2 Binary Shift Register Codes for Spread Spectrum Systems 
63 
2.0 Introduction 
63 
2.1 Finite Field Arithmetic 
63 
2.1.1 
Polynomial Arithmetic 
65 
2.2 Shift Register Sequences 
66 
2.2.1 
Equivalence of the Fibonacci and Galois Forms of a Linear SRG 
70 
2.3 Mathematical Characterization of SRGs 
72 
2.3.1 
The Shift Register Matrix 
72 
2.3.2 
The Characteristic Equation and Characteristic Polynomial 
73 
2.4 The Generating Function 
75 
2.5 The Correlation Function of Sequences 
78 
2.5.1 
Periodic Correlation Functions for Sequences 
81 
2.5.2 
Aperiodic Correlation Functions for Sequences 
83 
2.6 Codes for Spread Spectrum Multiple Access Applications 
84 
2.6.1 
Binary Maximal Length Sequences 
84 
2.6.2 
Gold Codes 
94 
2.6.3 
Gold-Like Sequences and Dual BCH Sequences 
103 
2.6.4 
Kasami Sequences 
104 
2.6.5 
Bent Sequences 
106 
2.6.6 
Comparison of CDMA Code Performance 
106 
2.7 Sequences with Good Aperiodic Correlation 
107 
2.7.1 
Barker and Williard Sequences 
108 
2.7.2 
Neuman-Hofman Sequences 
109 
2.7.3 
Partial Period Correlation for m-Sequences 
109 
2.7.4 
Frequency-Hopping Multiple Access Code Generators 
111 
                  2.8  Summary  
114 
                  References 
114 
                  Problems 
116 
 
Chapter 3 Jamming Performance of Uncoded Spread Spectrum Systems 
121 
3.0 Introduction 
121 
3.1 Jammer Types 
123 
3.2 Bit Error Rate Performance in Broadband Noise Jamming 
125 
3.2.1 
DS/PSK in Broadband Noise Jamming 
125 
3.2.2 
SFH/DPSK in Broadband Noise Jamming 
129 
3.2.3 
SFH/PSK in Broadband Noise Jamming 
132 
3.2.4 
SFH/MFSK in Broadband Noise Jamming 
133 
3.2.5 
FFH/BFSK in Broadband Noise Jamming 
137 
3.2.6 
Hybrid DS-SFH SS Modulation in Broadband Noise Jamming 
138 
3.3 BER Performance in Partial Band Noise Jamming 
140 
3.3.1 
DS/PSK in Partial Band Noise Jamming 
140 
3.3.2 
SFH/DPSK Systems in Partial Band Noise Jamming 
144 
3.3.3 
SFH/PSK BER in Partial Band Noise Jamming 
146 
3.3.4 
SFH/MFSK in Partial Band Noise Jamming 
148 
3.3.5 
FFH/MFSK in Partial Band Noise Jamming 
151 
3.3.6 
Hybrid DS-SFH/MFSK in Partial Band Noise Jamming 
154 
3.3.7 
Hybrid DS-SFH/DPSK in Partial Band Noise Jamming 
157 
3.4 Bit Error Rate Performance in Pulsed Jamming 
157 
3.4.1 
Bit Error Rate Performance for DS/PSK in Pulsed Jamming 
157 
3.4.2 
Performance of SFH/MFSK in Pulsed Jamming 
159 
3.4.3 
Performance of SFH/DPSK in Pulsed Jamming 
160 
3.4.4 
Performance of Hybrid DS-SFH/MFSK in Pulsed Jamming 
160 

 
                                         Contents 
 
 
        ix 
3.4.5 
Performance of Hybrid DS-SFH/DPSK in Pulsed Jamming 
161 
3.5 Bit Error Rate Performance in Tone Jamming 
161 
3.5.1 
Bit Error Rate Performance for DS(BPSK)/BPSK in Tone  
Jamming 
161 
3.5.2 
Bit Error Rate Performance for DS(QPSK)/BPSK in Tone  
Jamming 
165 
3.5.3 
Bit Error Rate Performance for DS(MSK)/BPSK in Tone  
Jamming 
168 
3.6 Multitone Jamming Bit Error Rate Performance 
173 
3.6.1 
Multitone Jamming Bit Error Rate Performance for SFH/MSK 
173 
3.6.2 
Multitone Jamming Bit Error Rate Performance for SFH/DPSK 
175 
3.7 Degradation Due to Interference or Jamming in DS Systems 
178 
3.7.1 
Equivalent Noise Spectral Density for DS(BPSK)/BPSK Systems 179 
3.7.2 
Carrier to Equivalent Noise Spectral Density Ratio for  
DS(BPSK)/BPSK 
181 
3.7.3 
Equivalent Noise Spectral Density Degradation for 
DS(BPSK)/BPSK Systems 
183 
3.7.4 
Degradation to NRZ Signals Due to Narrowband Jammers for 
DS(BPSK)/BPSK Signals 
185 
                 3.8   Summary  
186 
                 References 
186 
                 Problems 
187 
 
Chapter 4 Jamming Performance of Coded Spread Spectrum Systems 
191 
4.0 Introduction 
191 
4.1 Interleaver Structures for Coded Systems 
192 
4.1.1 
Block Periodic Interleaving 
192 
4.1.2 
Convolutional Interleaving 
194 
4.2 Linear Block Coding 
195 
4.2.1 
Linear Block Coding Concepts 
195 
4.2.2 
Rule for Optimum Decoding with No Jammer Side Information 
208 
4.2.3 
Rule for Optimum Decoding with Jammer Side Information 
211 
4.2.4 
Computation of the Block Coded Word and Bit Error Rates 
213 
4.3 Convolutional Codes 
224 
4.3.1 
Convolutional Code Encoder Characterization 
224 
4.3.2 
The Transfer Function of a Convolutional Code and the Free  
Distance  
228 
4.3.3 
Decoding of Convolutional Codes 
230 
4.3.4 
The Viterbi Algorithm 
232 
4.3.5 
Error Probabilities for Viterbi Decoding of Convolutional Codes 
238 
4.3.6 
Sequential Decoding of Convolutional Codes 
242 
4.3.7 
Threshold Decoding of Convolutional Codes 
242 
4.3.8 
Nonbinary Convolutional Codes 
243 
4.4 Iteratively Decoded Codes 
243 
4.4.1 
Turbo Codes 
244 
4.4.2 
A Serial Concatenated Convolutional Code 
249 
4.4.3 
Serial Concatenated Block Codes 
251 
4.4.4 
Parallel Concatenated Block Codes 
251 
4.4.5 
Low-Density Parity Check Codes 
252 
4.5 Selected Results for Some Error Correction Codes 
253 
4.5.1 
Bose, Chaudhuri, and Hocquenghem Codes 
253 
4.5.2 
Reed-Solomon Codes 
255 
4.5.3 
Convolutional Codes with Maximum Free Distance 
257 

 x                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
4.5.4 
Hard- and Soft-Decision FFH/MFSK with Repeat Coding BER 
Performance  
259 
4.6 Shannon’s Capacity Theorem, the Channel Coding Theorem, and BW  
Efficiency 
266 
4.6.1 
Shannon’s Capacity Theorem 
267 
4.6.2 
Channel Coding Theorem 
267 
4.6.3 
Bandwidth Efficiency 
267 
4.7 Application of Error Control Coding 
268 
                  4.8   Summary 
269 
                   References 
269 
                  Selected Bibliography 
272 
                   Problems 
272 
 
Chapter 5 Carrier Tracking Loops and Frequency Synthesizer 
275 
5.0 Introduction 
275 
5.1 Tracking of Residual Carrier Signals 
275 
5.2 PLL for Tracking a Residual Carrier Component 
276 
5.2.1 
The Likelihood Function for Phase Estimation 
276 
5.2.2 
The Maximum-Likelihood Estimation of Carrier Phase 
277 
5.2.3 
Long Loops and Short Loops 
278 
5.2.4 
The Stochastic Differential Equation of Operation 
279 
5.2.5 
The Linear Model of the PLL with Noise 
281 
5.2.6 
The Various Loop Filter Types 
283 
5.2.7 
Transient Response of a Second-Order Loop 
286 
5.2.8 
Steady  State Tracking Error When the Phase Error Is Small 
287 
5.2.9 
The Variance of the Linearized PLL Phase Error Due to Thermal 
Noise 
290 
5.2.10 
Frequency Response of the Active Filter Second-Order PLL 
292 
5.2.11 
Phase Noise Effects of the Total Phase Error in the PLL 
293 
5.2.12 
Nonlinear PLL Results 
297 
5.3 Frequency Synthesizers 
299 
5.3.1 
Digital Frequency Synthesis 
299 
5.3.2 
Direct Frequency Synthesis 
301 
5.3.3 
Indirect Frequency Synthesis 
303 
5.3.4 
Indirect Frequency Synthesis Transfer Functions 
304 
5.4 Tracking of BPSK Signals 
306 
5.4.1 
Tracking a BPSK Signal with a Squaring Loop 
306 
5.4.2 
Tracking a BPSK Signal with an Integrate-and-Dump Costas  
Loop 
310 
5.4.3 
Tracking a BPSK Signal with a Passive Arm Filter Costas Loop 
314 
5.4.4 
Steady State Tracking Error for the Costas and Squaring Loops 
315 
5.4.5 
Costas Loop with Hard-Limited In-Phase Arm Processing 
315 
5.4.6 
Improved Frequency Acquisition of a Passive Filter Costas  
Loop 
315 
5.4.7 
Lock Detectors for Costas and Squaring Loops 
317 
5.4.8 
False Lock in Costas Loops 
318 
5.4.9 
Decision-Directed Feedback Loops 
326 
5.5 Multiphase Tracking Loops 
330 
5.5.1 
The N-th Power Loop 
330 
5.5.2 
The N-Phase Costas Loop 
331 
5.5.3 
Demod-Remod Quadriphase Tracking Loop 
331 
5.5.4 
Modified Four-Phase Costas Loop-SQPSK Modulation 
331 
5.6 Frequency Locked Loops 
341 

 
                                         Contents 
 
 
        xi 
5.6.1 
The Cross Product FLL 
341 
5.7 Summary 
342 
                 References 
343 
                 Problems 
345 
 
Chapter 6 Code Acquisition in Direct Sequence Receivers 
349 
6.0 Introduction 
349 
6.1 The Acquisition Problem 
354 
6.2 Active Search Acquisition (Sliding Correlator) 
354 
6.2.1 
Mean Acquisition Time Model for an Active Search System 
355 
6.2.2 
Analysis of the Active Search System 
356 
6.2.3 
Single Dwell Mean Acquisition Time Formula with Doppler 
361 
6.2.4 
Mean Acquisition Time for the Double Dwell Time Search 
362 
6.2.5 
Active Acquisition System Structures Used for Acquisition for  
BPSK, QPSK, OQPSK, and MSK 
364 
6.3 Acquisition Probability Versus Time for Active Correlation 
368 
6.4 Parallel Methods of Active Code Acquisition 
371 
6.4.1 
Active Search Mean Acquisition Time with Parallel Processing 
372 
6.5 Active Code Search Utilizing the FFT 
375 
6.5.1 
Signal Modeling for BPSK Code Acquisition Utilizing the FFT 
375 
6.5.2 
Model for the Correlator Output Out of the FFT 
380 
6.5.3 
Evaluation of the FFT Enhanced Acquisition System Output  
Variance for an Arbitrary Gaussian Noise Process 
382 
6.5.4 
BPSK Code Modulation Evaluation of PD and PFA for Arbitrary 
Noise 
384 
6.5.5 
Gaussian Approximation of the Detection Probability for BPSK 
386 
6.5.6 
Losses Between Bins in a Zero Padded FFT 
387 
6.5.7 
The Frequency Search Range and Total Frequency Losses Using  
an FFT 
388 
6.5.8 
The Correlator Bins of the FFT Are Uncorrelated 
389 
6.5.9 
BPSK Code Modulation  in a Matched Spectral Jammer 
390 
6.5.10 
BPSK Code Modulation  in a Narrowband Jammer 
391 
6.5.11 
Balanced QPSK and Balanced OQPSK Acquisition Performance 
394 
6.5.12 
A Gaussian Approximation for PD for Balanced QPSK and  
Balanced OQPSK 
398 
6.6 An Optimum Sweep Search Technique for Active Acquisition 
400 
6.7 Sequential Detection 
403 
6.7.1 
Sequential Probability Ratio Test 
404 
6.7.2 
Sequential Detection for DS Acquisition with BPSK Data 
Modulation 
404 
6.7.3 
A Sequential Detection Implementation 
407 
6.7.4 
Acquisition Time of a Sequential Detector 
409 
6.7.5 
The Tong Detector 
412 
6.8 Transform Methods Used in Code Acquisition 
415 
6.9 Code Acquisition Using a Passive Matched Filter 
417 
6.9.1 
The Matched Filter 
417 
6.9.2 
Optimum Time of Arrival Estimator 
419 
6.9.3 
Digital Passive Matched Filter Introduction 
420 
6.9.4 
DPMF Acquisition Model 
421 
6.9.5 
Digital Matched Filter Acquisition Time Model 
422 
6.9.6 
Signal Model for DPMF 
424 
6.9.7 
Noise Variance Equation for a Gaussian Random Process Model 
 of a Jammer 
426 

 xii                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
6.9.8 
Variance Evaluation of an MSJ 
426 
6.9.9 
Correlation Signal Voltage Loss 
427 
6.9.10 
Combining Coherent Segments of the DMF with the FFT 
428 
6.9.11 
Detection and False Alarm Probability Densities for the NRZ  
Code Case 
430 
6.9.12 
The Acquisition Probability 
433 
6.9.13 
Mean Acquisition Time Calculation 
436 
6.10 Serial Active Search for Acquisition of FH/MFSK Signals 
439 
6.10.1 
Serial Active Search for Acquisition of FFH/MFSK Signals 
439 
6.10.2 
Detection and False Alarm Probabilities for FFH/MFSK Serial 
Active Search 
444 
6.10.3 
Detection and False Alarm Probabilities for SFH/MFSK Serial 
Active Search 
447 
6.10.4 
Acquisition Time Calculations for FFH/MFSK and SFH/MFSK 
450 
6.11 Summary 
451 
                 References 
452 
                 Selected Bibliography 
454 
                 Problems 
455 
                Appendix 6A Signal Flow Graphs and Discrete Time Invariant Markov Processes 
458 
 
Chapter 7 Direct Sequence Code-Tracking Loops 
473 
7.0 Introduction  
473 
7.1 Basis for the Early-Late Gate Code-Tracking Loop 
473 
7.1.1 
Maximum-Likelihood Estimate Formulation 
474 
7.1.2 
Maximum-Likelihood Estimate of the PN Code Timing 
475 
7.2 Full-Time Code-Tracking Loops 
477 
7.2.1 
Baseband Early-Late Gate Code-Tracking Loop with NRZ 
Symbols 
478 
7.2.2 
Noncoherent Early-Late Gate I-Q Code-Tracking Loop 
483 
7.2.3 
Noncoherent Early-Late Gate RF Implemented Code-Tracking 
Loop 
492 
7.2.4 
Noncoherent I-Q Dot Product Code-Tracking Loop with 
Passive Arm Filters 
493 
7.2.5 
Noncoherent I-Q Dot Product Code-Tracking Loop with 
Active Arm Filters 
501 
7.3 Early-Late Gate Noncoherent I-Q Code-Tracking with Filtering and  
                     Interference 
502 
7.3.1 
Signal Model for the Noncoherent I-Q Early-Late Gate Code- 
Tracking Loop with Channel Filtering 
502 
7.3.2 
Signal and Noise Terms in the Noncoherent I-Q Early-Late Gate 
 Code Loop with Channel Filtering 
505 
7.3.3 
Signal Terms in the Noncoherent I-Q Early-Late Gate Code  
Loop with Channel Filtering 
507 
7.3.4 
Closed-Loop Operation of the Noncoherent I-Q Early-Late  
Gate Code Loop with Channel Filtering 
513 
7.3.5 
Noncoherent I-Q Early-Late Gate Code-Tracking Loop with Channel 
Filtering of N(t) at f = 0 
516 
7.3.6 
Noncoherent Early-Late Gate I-Q Code Loop Tracking Error 
Variance with Channel Filtering 
519 
7.3.7 
Noncoherent Early-Late Gate Code I-Q Tracking Error  
Variance with Thermal Noise and Without Channel Filtering 
521 

 
                                         Contents 
 
 
        xiii 
7.3.8 
Noncoherent Early-Late Gate I-Q Code-Tracking Error 
Variance with Channel Filtering in White Gaussian Noise with 
 NRZ Symbols 
522 
7.3.9 
Noncoherent Early-Late Gate I-Q Code-Tracking Performance  
with Narrowband Gaussian Interference Plus White Gaussian 
Noise with NRZ Symbols and No Channel Filtering 
523 
7.4 Time-Shared Noncoherent Code-Tracking Loops 
527 
7.5 Performance of a Noncoherent RF Implemented Time Gated Early-Late Gate 
Bandpass Code-Tracking Loop 
536 
7.6 Steady State Error of Code-Tracking Loops Without Noise 
542 
 
7.6.1 
First-Order Noncoherent I-Q Early-Late Gate Code-Tracking Loop 542 
7.6.2 
Second-Order Ideal Noncoherent I-Q Early-Late Gate  
Code-Tracking Loop 
544 
7.7 Early-Late Gate Noncoherent I-Q Code-Tracking Loop Pull-In Without Noise 
545 
7.8 Multipath Effects 
548 
7.8.1 
Multipath Effects on Filtered Noncoherent Code-Tracking Loops 
548 
7.8.2 
Multipath Effects on Baseband Coherent I-Q Code-Tracking Loops 554 
7.8.3 
The Multipath Error Plots Are the Same for Coherent and 
Noncoherent Code-Tracking Loops 
555 
7.9 Mean Time to Lose Lock for a First-Order Early-Late Gate RF Code-Tracking 
Loop 
556 
7.9.1 
Model for the Analysis of the Mean Slip Time Performance of the  
Early-Late Gate Code-Tracking Loop with RF Implementation 
558 
7.9.2 
Mean Slip Time Comparison of Theory and Simulation for the 
 Early-Late Gate Code-Tracking Loop with RF Implementation 
559 
7.10 Wideband Jamming Effects on Tracking and Mean Time to Lose Lock for 
the Early-Late Gate Code-Tracking Loop with RF Implementation 
560 
7.11 Cramer-Rao Bound on Code-Tracking Error 
562 
7.12 Phase Rotation and Heterodyning for Receiver Use 
565 
7.12.1 
Heterodyning the Signal to Near Baseband 
565 
7.12.2 
Phase Rotation or Single Sideband Translation 
566 
7.13 Pulsing and Blanking in a Baseband Early-Late Code-Tracking Loop 
568 
7.13.1 
Baseband Signal and Code Loop Model for a Baseband 
 Early-Late Gate I-Q Code-Tracking Loop with Pulsing 
569 
7.13.2 
Full Correlation in the Coherent Baseband I-Q Code-Tracking 
Loop When the Signal Is Pulsed 
570 
7.13.3 
Synchronous Blanking of the Noise When the Signal Is Pulsed Off 574 
7.14 Summary 
577 
                 References 
577 
                 Selected Bibliography 
579 
                   Problems 
579 
                 Appendix 7A Mean Time to Lose Lock for a First-Order Early-Late Gate Code- 
                                  Tracking Loop with Either Bandpass Arm Filters or Baseband Arm Filters 582 
 
Chapter 8 Tracking of Frequency-Hopped Signals 
591 
8.0 Introduction 
591 
8.1 Dataless Frequency-Hopped Time Tracking Loop Model 
591 
8.1.1 
Loop Model for the Frequency-Hopping Loop Without Data 
597 
8.1.2 
Evaluation of the Spectral Density of the Noise Terms 
598 
8.1.3 
Closed Loop Tracking Loop Performance 
600 
8.2 Frequency-Hopping Tracking with BPSK and DPSK Data Modulation 
601 
8.3 Summary 
602 
                  References 
602 

 xiv                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
                  Problem 
602 
 
Chapter 9 Multiple Access Methods for Digital Wireless Cellular Communications 
603 
9.0 Introduction 
603 
9.1 Brief History of Cellular Systems 
603 
9.2 Cellular Communications 
604 
9.2.1 
Cellular System Architecture 
604 
9.2.2 
Mobile Cells 
604 
9.2.3 
Mobile Clusters 
605 
9.2.4 
Frequency Reuse in a Cellular System 
605 
9.2.5 
Cell Splitting 
606 
9.2.6 
Handoff 
606 
9.2.7 
More on Cell Structure 
607 
9.2.8 
Assignment Strategies for Channelization 
609 
9.3 Multiple Access Techniques for Wireless Communications 
609 
9.3.1 
A Brief Introduction to Multiple Access 
610 
9.3.2 
Frequency Division Multiple Access 
611 
9.4 Time Division Multiple Access 
612 
9.4.1 
The Efficiency of TDMA Systems 
613 
9.4.2 
The Number of Available Channels in a TDMA System 
614 
9.5 Spread Spectrum Multiple Access 
615 
9.5.1 
Frequency-Hopped Multiple Access 
615 
9.5.2 
Code Division Multiple Access 
615 
9.5.3 
Hybrid Techniques for Spread Spectrum Signals 
617 
9.6 Space Division Multiple Access 
619 
9.7 The Capacity of Cellular CDMA of a Single Cell 
619 
9.8 Packet Radio Access Techniques 
624 
9.8.1 
ALOHA Channel 
624 
9.8.2 
The Slotted ALOHA Channel 
626 
9.9 Carrier Sense Multiple Access Protocols 
629 
9.9.1 
1-Persistent CSMA 
629 
9.9.2 
Nonpersistent CSMA 
630 
9.9.3 
p-Persistent CSMA 
630 
9.9.4 
Conceptual Comparison of the Multiple Access Methods 
630 
9.10 Multiuser Detection Concepts 
631 
9.10.1 
The Matched Filter for CDMA Signals 
632 
9.10.2 
Conventional Single User Detector in the Synchronous Case 
635 
9.10.3 
Decorrelating Detector 
636 
9.10.4 
Minimum Mean Square Error Estimator 
639 
9.10.5 
Additional Types of Multiuser Detector Systems 
642 
9.10.6 
Successive Interference Cancellation 
642 
9.10.7 
Multistage Interference Cancellation 
643 
9.10.8 
Bit Error Rate Performance Estimates of the Detectors 
644 
9.11 An Example of a CDMA System: cdma2000 
646 
9.11.1 
cdma2000 Layering Structure Overview 
648 
9.11.2 
Forward Link and Reverse Link Channels Overview 
648 
9.11.3 
Physical Layer of cdma2000 
649 
9.11.4 
Forward Link Physical Channels 
650 
9.11.5 
cdma2000 Reverse Physical Channels 
661 
9.11.6 
Data Services in cdma2000 
668 
9.12 WCDMA 
668 
9.12.1 
WCDMA Radio Frequency Protocol Architecture 
668 
9.12.2 
WCDMA Channels 
669 

 
                                         Contents 
 
 
        xv 
9.12.3 
WCDMA Physical Layer 
669 
9.12.4 
WCDMA Channel Coding 
672 
9.12.5 
WCDMA Power Control 
673 
9.12.6 
WCDMA Random Access 
674 
9.12.7 
WCDMA Initial Cell Search 
674 
9.12.8 
WCDMA Handover 
674 
9.12.9 
WCDMA Packet Data Services 
674 
9.13 Summary 
676 
                  References 
676 
                  Problems 
678 
 
Chapter 10 An Introduction to Fading Channels 
679 
10.0 
Introduction 
679 
10.1 
An Introduction to Radio Propagation 
679 
10.2 
Outdoor Models for Large-Scale Effects 
680 
10.2.1 
Free Space Path Loss Model 
680 
10.2.2 
Received Signal Power and the Electric Field Strength 
682 
10.2.3 
Plane Earth Propagation Path Loss Model 
683 
10.2.4 
Egli’s Path Loss Model 
684 
10.2.5 
Okumura-Hata Path Loss Model 
685 
10.2.6 
COST-231 Hata Path Loss Model 
685 
10.2.7 
ECC-33 Path Loss Model 
686 
10.2.8 
Microcell Propagation Models 
687 
10.3 
Large-Scale Effects for Indoor Models 
689 
10.3.1 
Log-Normal Path Loss Model for Indoors 
689 
10.3.2 
Floor Attenuation Factor Path Loss Model 
690 
10.4 
Small-Scale Effects Multipath Fading 
691 
10.4.1 
Rayleigh and Rician Fading Models 
693 
10.4.2 
Small-Scale Fading Types 
695 
10.4.3 
Multipath Time Delay Spread Fading 
695 
10.4.4 
Fading Effects of Multipath Doppler Spread 
698 
10.5 
Characterization of Wideband Channels 
700 
10.5.1 
Deterministic Models 
700 
10.5.2 
Stochastic Time-Variant Linear Channels 
703 
10.5.3 
The Wide-Sense Stationary Channels 
706 
10.5.4 
The Uncorrelated Scattering Channel 
708 
10.5.5 
The Wide-Sense Stationary Uncorrelated Scattering Channel 
709 
10.6 
The Effects of a Rayleigh Fading Channel on the Bit Error Rate 
711 
10.6.1 
The Effects of a Rayleigh Fading Channel on the BPSK Bit Error  
Rate 
711 
10.6.2 
The Effects of a Rayleigh Fading Channel on the DPSK Bit Error  
 
Rate 
713 
10.6.3 
The Effects of a Rayleigh Fading Channel on Noncoherent  
Orthogonal BFSK Bit Error Rate 
714 
10.6.4 
Nakagami Fading Channel Model 
714 
10.7 
Mitigation Methods for Multipath Effects 
715 
10.7.1 
Diversity for Multipath Improvement 
716 
10.7.2 
Combining Methods for Fading Mitigation 
716 
10.8 
Equalization for Multipath Improvement 
723 
10.8.1 
Baseband Transversal Symbol Rate Equalizer 
723 
10.8.2 
Baseband Adaptive Equalization 
726 
10.8.3 
Baseband Decision Feedback Equalizers 
730 
10.9 
Diversity Techniques for Multipath Improvement 
732 

 xvi                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
10.9.1 
Multipath Performance Improvement Via Diversity Techniques for 
Binary Channels 
732 
10.10 
The RAKE Receiver 
739 
10.10.1 The Tapped Delay Line Channel Model for a Frequency Selective 
Slowly Fading Channel 
739 
10.10.2 The RAKE Receiver 
740 
10.10.3 Performance of the RAKE Receiver 
742 
10.11 
Binary Coded Chernoff BER Bounds for Fading Channels 
743 
10.11.1 Chernoff Bound for Binary Linear Block Codes 
743 
10.11.2 Coded Orthogonal FSK Signal Model for Fading Channels 
745 
10.11.3 BER of Soft-Decision Decoding and FSK Modulation with 
Linear Binary Block Codes over Rayleigh Fading Channels 
746 
10.11.4 BER of Hard-Decision Decoding and FSK Modulation with 
Linear Binary Block Codes over Rayleigh Fading Channels 
748 
10.11.5 Chernoff Bounds for the BER of Convolutional Codes over 
Rayleigh Fading Channels with Soft and Hard Decisions and 
Binary FSK Modulation 
750 
10.12 
Smart Antenna Systems for Wireless Systems 
752 
10.12.1 Smart Antenna Systems 
752 
10.12.2 Adaptive Array Smart Antennas 
752 
10.12.3 Adaptive Array Spatial Processing  
757 
10.12.4 Forming Smart Antennas with Switched Beams 
757 
10.12.5 MIMO Systems 
758 
10.13 
Summary 
759 
References 
760 
Problems 
762 
 
Chapter 11 Low Probability of Detection Systems 
765 
11.0 
Introduction 
765 
11.1 
Low Probability of Intercept (LPI) 
766 
11.1.1 
Covert Communications 
766 
11.1.2 
The LPI Scenario 
766 
11.1.3 
Brief Signal Propagation Summary 
768 
11.2 
An Introduction to Radiometric Detectors 
769 
11.2.1 
The Radiometer 
770 
11.2.2 
Limitations of the Radiometer Performance Results 
772 
11.2.3 
Low-Pass Filter Radiometer 
775 
11.2.4 
The Correlation Radiometer 
777 
11.2.5 
Relationship of the Output SNR and the Deflection 
779 
11.2.6 
The Optimum Detector for Frequency-Hopped Waveforms 
780 
11.2.7 
The Filter Bank Combiner 
781 
11.3 
Spectrum Analyzers 
784 
11.3.1 
Narrowband Signal Spectrum Analyzer Performance 
786 
11.3.2 
Wideband Signal Spectrum Analyzer Performance 
787 
11.4 
Second-Order Cyclostationary Feature Detection 
788 
11.4.1 
Cyclostationary Processes 
788 
11.4.2 
The Baseband and Carrier Cyclostationarity 
788 
11.4.3 
BPSK Through a Filter and Squarer Circuit 
789 
11.4.4 
Balanced QPSK Through a Filter and Squarer Circuit 
796 
11.4.5 
Balanced OQPSK Through a Filter and Squarer Circuit 
797 
11.4.6 
MSK Through a Filter and Squarer Circuit 
798 
11.4.7 
Frequency-Hopped Signals with MFSK Through a Filter and  
Squarer Circuit 
800 

 
                                         Contents 
 
 
        xvii 
11.4.8 
Slow Frequency-Hopped Signals with DPSK Data Modulation 
Through a Filter and Squarer Circuit 
802 
11.4.9 
Delay and Multiply Chip Rate Detectors with Balanced QPSK 
804 
11.5 
Performance of a Chip Rate Detector for BPSK 
806 
11.6 
Frequency Estimation of an Unmodulated Tone with a Limiter 
Discriminator 
810 
11.7 
Summary 
812 
References 
813 
Selected Bibliography 
814 
Problems 
814 
Appendix 11A Samples from a Bandpass Filtered Gaussian Random Process 
816 
 
Chapter 12 Lock Detector Theory and Absorbing Markov Chains 
819 
12.0 
Introduction 
819 
12.1 
Absorbing Markov Chains 
819 
12.2 
The Fundamental Matrix 
822 
12.3 
Mean and Variance of the Number of Times a Process Is in a Transient 
State 
823 
12.4 
Mean and Variance of the Number of Times a Process Is in a Transient 
State—General Case 
827 
12.5 
The Probability of Starting in a Transient State and Ending in a Persistent 
State 
832 
12.6 
Lock Detector Performance 
834 
12.7 
Lock Detector System Models 
838 
12.7.1 
Residual Carrier Loop Lock Detector Block Diagram Model 
838 
12.7.2 
Suppressed Carrier Lock Detector 
840 
12.7.3 
PN Code Acquisition Lock Detector  
841 
12.7.4 
A Frequency-Hopping Lock Detector for SFH/DPSK 
841 
12.8 
Summary 
843 
References 
843 
Selected Bibliography 
843 
Problems 
843 
 
About the Author 
847 
 
Index 
849 
 
 


 
                             1 
CHAPTER 1 
An Introduction to Spread Spectrum Systems 
 
 
1.0 INTRODUCTION 
 
 
A spread spectrum communications system is a communication system that purposely spreads the spectrum 
of the signal (considerably) beyond the required bandwidth needed for the information content of the 
message. Spread spectrum signals are transmitted by electromagnetic waves in free space with applications to 
both nonmilitary and military systems. There are at least six reasons that one would consider using spread 
spectrum signals. The first reason is that these signals reject hostile jamming as well as unintentional 
interference, so information can be communicated effectively. A second reason is that spread spectrum 
signals have a low probability of intercept (LPI), because the signal is spread over a large bandwidth. This 
makes detectability more difficult than for a nonspread signal, since oftentimes the signal lies below the 
noise. The third reason for using spread spectrum signals is that an unauthorized listener who lacks 
knowledge of the spreading code and precise timing cannot readily demodulate these signals and thus spread 
spectrum signaling has inherent message privacy. The fourth reason that spread spectrum signaling is used is 
that it provides good rejection of multipath signals (although not complete rejection). A high degree of 
ranging precision can be obtained with direct sequence spread spectrum signaling and is the fifth reason for 
using spread spectrum signals. The sixth reason for using spread spectrum signaling is its compatibility with 
code division multiple access capability, which allows simultaneous signaling on the same frequency.  
The Milstar military communication system is an example of a system in use now that was designed 
for jamming protection (first reason). Another example of an existing system that uses spread spectrum 
signals for ranging (fifth reason) is the Global Positioning System (GPS). In addition, GPS spread spectrum 
signaling provides jamming protection (first reason), multipath protection (fourth reason), and a high degree 
of range precision (fifth reason). 
 
In today’s world, there are probably more applications on the commercial side than on the military 
side, which is a considerable change from the 1970s and 1980s when the primary applications were to 
military systems with many of the attributes indicated earlier. Milstar was mentioned as an example of a 
military spread spectrum system, which was (originally) based on six geosynchronous satellites that provide 
voice and data communications from virtually any location on the Earth to any other location on Earth. 
Milstar utilizes frequency-hopping spread spectrum communications over a very large bandwidth, providing 
a considerable jamming immunity from unfriendly (jamming) signals. 
 
Consider now some examples of commercial (actually some have military applications as well) 
systems that have launched or will be launched shortly. GPS utilizes direct sequence spread spectrum 
modulation and has a constellation of 24 satellites (with three spares) located at about one half the altitude of 
a geostationary satellite. Two direct sequence signals at L1 frequency (L-band) include a clear access (C/A) 
code and a precision (P(Y)) code. In addition, a new military code (M-code) and some additional civilian 
signals are in the process of being added. Another (P(Y)) code is located at L2 (a somewhat lower frequency 
in the L-band). Also a new C/A like code has been added to L2 and a new civil signal L5 has been added. 
Any four GPS satellites in view enable a commercial user (e.g., a soldier, an airplane, a hiker, a boat, an auto) 
to determine its location with an accuracy less than 50 feet in each dimension, although it is possible to 
obtain a much higher accuracy if desired. GPS has demonstrated that it can automate airplane landings with a 
very high degree of accuracy using a form of differential GPS. 

 2                                            Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
OmniTRACS is a mobile satellite communications system providing two-way messaging, paging 
and position location/reporting operating in the United States. It is owned and operated by QUALCOMM, 
Inc. Typical users are long-haul transportation, utilities, construction, and agriculture. In order to minimize 
interference with other satellite users, the signals use a hybrid direct sequence and frequency-hopping scheme 
with frequency shift keying (FSK) modulation. User location is obtained by ranging through both satellites, 
and the location is sent to the operator. 
 
GLOBALSTAR is an example of a mobile satellite service (MSS). This system is a proposed low 
Earth orbit MSS operating in L-band and S-band utilizing 48 satellites in eight different orbital planes 700 
miles above Earth. This system offers voice and data service, facsimile, worldwide paging, and messaging. 
GLOBALSTAR utilizes code division multiple access (CDMA) spread spectrum techniques and can provide 
its own position location capability with an accuracy of about 30 meters. A unique feature of the 
GLOBALSTAR system is its use of the CDMA digital cellular standard IS-95 developed by QUALCOMM, 
which, along with Loral, are principals of GLOBALSTAR. 
 
Cellular radio is another example in which at least one firm (QUALCOMM) is using CDMA spread 
spectrum techniques to provide superior performance in an interference environment and to provide more 
capacity for cellular radio. Competitors include the European system known as the Global System for Mobile 
Communications (GSM), which is a time division multiple access (TDMA) system, and IS-54, which is also 
a TDMA system and is a North American standard. 
 
The common codeless phone utilizes spread spectrum technology to provide a telephonic 
interference-rejecting communication link. Both direct sequence and frequency hopping (FH) SS schemes are 
used in cordless telephones in the 900-MHz and 2.4-GHz bands. Within the FH phones, both narrowband and 
wideband hopping schemes are used. Direct sequence phones have 20 channels to select from (usually 
automatically) so that hopefully one channel will have good reception.  
 
In addition to these applications, spread spectrum communication methods have been considered an 
alternative to hard wiring for indoor private branch offices, laboratories, or factories where the transmission 
medium involves severe multipath fading. Spread spectrum methods have also been proposed for 
improvement of the throughput performance in packet radio networks. A home security system using spread 
spectrum techniques imposed on the AC power line has been used in Japan. It appears that the applications of 
spread spectrum techniques to nonmilitary applications are virtually limitless! 
 
 
1.1 A VERY BRIEF HISTORY OF SPREAD SPECTRUM COMMUNICATIONS 
 
It is not easy to state what the first spread spectrum system was, but it is possible to outline some of the more 
important ones. Perhaps Hedy Lamarr and George Antheil made one of the most interesting patents filed in 
mid-1941. This was after Hedy had immigrated to the United States of America, from her native Austria. 
Hedy later became a well-known movie star. George was a volatile symphony conductor whom Hedy met in 
this country. 
 
Basically they conceived of a frequency-hopping guidance system for controlling a torpedo to its 
target [1], even though neither one had electrical engineering backgrounds! The transmitted carrier would 
change frequency according to a randomized nonrepeating code. Hedy and George thought that this 
technique had applications to guided missiles also; however, the American government wasn’t very 
interested. 
 
One of the earlier uses of direct sequence signals occurred for the purpose of ranging for the 
tracking-range radar system at the Jet Propulsion Laboratory (JPL) for use in the Corporal guidance system 
link [2]. Frank Lehan of JPL noted that radar signal correlation function was of prime importance in 
determining the accuracy of the range estimate. The term “pseudonoise” with its abbreviation PN was 
consistently used at JPL from 1953 onward in relation to the spread spectrum signals used in a direct 
sequence system [2]. 
 
The pseudonoise codes (actually m-sequences) were investigated starting around the early 1950s. 
One of the earliest works started with Gilbert [3] at Bell Labs. However his report had limited circulation. 
The work of Golomb [4] and Zierler [5, 6] appeared slightly later. Around this time period Birdsall and 
Ristenbatt [7] released their work while at the University of Michigan. 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             3 
 
One of the earliest coherent spread spectrum systems was constructed and designed by Magnavox, 
and the codes used for spreading in the spread spectrum system were Gold codes [2], named after the 
inventor Dr. Robert Gold. This was probably the first used of Gold codes in a spread spectrum system. This 
project was instrumental in making Magnavox one of the early leaders in spread spectrum technology. One 
of the earliest reports of a tutorial nature was written by Dr. Charlie Cahn and published by Magnavox [8] on 
the subject of spread spectrum systems. 
 
 
1.2 A DIGITAL SPREAD SPECTRUM COMMUNICATION SYSTEMS MODEL 
 
In a spread spectrum system, the system designer has to be concerned with a number of factors in the design 
of the system. One important factor is interference, either intentional as in military systems, or unintentional, 
which is encountered in commercial systems. The system designer must build into the design a resistance to 
interference so as to mitigate the effects of interference. This also occurs in code division multiple access 
systems where all signals, except the desired one, act as a noise-like signal that interferes with the desired 
signal. One important factor in the design of spread spectrum systems is the ratio of spread bandwidth to the 
data bandwidth. The larger this factor is, the better the rejection of narrowband interference. Typically the 
bandwidth is spread by a pseudorandom code sequence that modulates the frequency or phase so as to 
increase the bandwidth over what is needed to send just the data modulation. 
 
The basic elements of a spread spectrum system are shown in Figure 1.2-1. A communication 
channel is any medium over which information can be transmitted. Communication channel examples 
include free space, ionospheric propagation, fiber optic cables, microwave waveguides, and coaxial cables. In 
general these media accept signals and deliver them to their destination. A channel may attenuate, distort, 
corrupt with additive noise or multiplicative effects, and in general make the reception of the signal a 
challenge. Channel encoding and decoding are typical in communication systems, and in spread spectrum 
systems the modulation process provides both data modulation as well as a form of spectrum widening 
modulation. Both the modulator and the demodulator contain a pseudorandom sequence generator, which is 
used to spread the transmitted signal spectrum and to despread it at the demodulator. Typically the spread 
spectrum process is removed first at the demodulator and then the data is demodulated and then decoded. 
 
Channel
encoder
Modulator
Channel
Demodulator
Pseudorandom
sequence
generator
Acquisition
and tracking
circuits for
timing and the
pseudorandom
sequence
generator
Channel
decoder
Demodulated
data
Input
data
Transmitter
Receiver
Channel
encoder
Modulator
Channel
Demodulator
Pseudorandom
sequence
generator
Pseudorandom
sequence
generator
Acquisition
and tracking
circuits for
timing and the
pseudorandom
sequence
generator
Channel
decoder
Demodulated
data
Input
data
Transmitter
Receiver
 
 
Figure 1.2-1  Model of a spread spectrum system. 
 
 
 
A major requirement for the process to work is that the receiver be synchronized with the received 
signal. Acquisition circuits, which will be addressed later in the book, search the time and frequency 
uncertainty regions to obtain time and frequency (and sometimes phase) synchronization. After acquisition is 
accomplished, tracking is provided to maintain synchronization of the pseudorandom generator. The 
despread signal then can be data demodulated and decoded. Both the demodulation process and the decoding 
process require timing information. The demodulation process may need phase or frequency information as 
well. 

 4                                            Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
Interference is introduced in the transmission of the spread spectrum signal through the effects of 
the channel. Various types of interference can be observed, such as other information bearing signals, pulse 
interferers, narrowband interferers, and broadband interferers. In this context, broadband means on the order 
of the bandwidth of the spread signal spectrum, and narrowband means narrow compared to the spread signal 
spectrum. Other forms of interference can occur also, such as in CDMA systems, in which all the other 
signals in the same frequency band produce a controlled noise-like interference to the desired signal. The 
despreading process collapses the signal, but it also changes narrowband interference to broadband 
interference to the data and thus has a reduced effect on the data demodulation. This phenomenon of 
spreading the interference results in a processing gain of the receiver against the narrowband interferer, and it 
will be discussed in more detail later in this chapter. 
 
 
1.3 NARROWBAND SIGNALS  
 
In dealing with spread spectrum signals, it is often advantageous to use complex envelopes to describe the 
signal when it is narrowband. Then filtering operations can be described by operations on the complex 
envelope only, rather than the complete signal.  At this point a short discussion of complex signals will be 
presented and then applied to the various modulations including frequency hopping and direct sequence 
signals.   
 
 
1.3.1 Narrowband Processes Via the Complex Envelope 
 
Let the received signal plus noise be denoted by x(t). Then the received signal can be written as 
 
 
 
 
 
 
{
}
0
( )
Re
( )
 
i
t
x t
v t e ω
=
 
 
 
 
(1.3.1-1) 
 
where Re{ }denotes the “real part” of quantity in braces, v(t) is the complex envelope of x(t) [9, 10], and  0 is 
the angular carrier frequency. For a complex variable z, it is true that 
 
 
 
 
 
 
{ }
*
1
1
Re
 
2
2
z
z
z
=
+
 
 
 
 
(1.3.1-2) 
 
where the asterisk denotes the complex conjugate. From (1.3.1-1) it follows that  
 
 
 
 
 
x t
v t e
v t e
i
t
i
t
( )
( )
( )
*
=
+
−
1
2
1
2
0
0
ω
ω  
 
 
 
(1.3.1-3) 
 
Let V(f) denote the Fourier transform of v(t); then the Fourier transform of the second term produces  
 
(
) (
)
*
*
*
*
( )
( )
( )
(
) 
j t
j t
v t
v t e
dt
v t e
dt
V
f
ω
ω
∞
∞
−
−∞
−∞
⎡
⎤=
=
=
−
⎣
⎦
∫
∫
F
 
 
(1.3.1-4) 
 
where V*(–f) is the Fourier transform of v*(t). Hence it follows that the Fourier transform of x(t), from 
(1.3.1-4), is written as 
 
 
 
 
{
}
*
0
0
1
1
( )
( )
(
)
(
) 
2
2
X f
x t
V f
f
V
f
f
=
=
−
+
−
−
F
 
 
 
(1.3.1-5) 
 
If v t( )  is real, then 
( )
(
)
*
V
f =V
f
−
 and then (1.3.1-5) can be simplified to  
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             5 
 
 
 
{
}
0
0
1
1
( )
( )
(
)
(
) 
2
2
X f
x t
V f
f
V f
f
=
=
−
+
+
F
 
 
 
(1.3.1-6) 
 
For a narrowband signal (one in which the bandwidth is small compared to the center frequency) it is true 
that 
 
 
 
 
V f
f
B
B
f
( )
/
/
≅
>>
<<
0
2
2
0
   for     
  and   
 
 
              (1.3.1-7) 
 
where B is the nominal bandwidth of the signal x(t), and B/2 is the nominal bandwidth of the complex 
envelope of the signal v(t); both of which are the positive frequency bandwidths. 
 
 
1.3.2 Narrowband Signals Through Narrowband Systems  
Equation Section (Next) 
Consider now the result when a narrowband signal is passed through a linear narrowband system. Let the 
linear narrowband system under consideration have a transfer function H(f) and impulse response h(t). A 
system is a narrowband system when the transfer function can be written as  
 
 
 
 
 
H f
H
f
f
H
f
f
L
L
( )
(
)
(
)
*
 
  
 
 
(1.3.2-1) 
 
with  
 
 
 
 
H f
f
W
W
f
( )
/
/
≅
>>
<<
0
2
2
0
      for   
  and  
  
 
(1.3.2-2) 
 
with W the system radio frequency bandwidth and HL(f) the baseband (or low pass) equivalent transfer 
function (having bandwidth W/2). The impulse response of the narrowband system is given by 
 
 
 
 
*
2
0
0
( )
(
)
(
)
 
i
ft
L
L
h t
H
f
f
H
f
f
e
df
π
∞
−∞⎡
⎤
=
−
+
−
−
⎣
⎦
∫
 
 
 
(1.3.2-3) 
 
Changing the variables in the two integrals produces 
 
0
0
2
2
2
*
2
( )
( )
( )
 
i
f t
i
f t
i
ft
i
ft
L
L
h t
e
H
f e
df
e
H
f e
df
π
π
π
π
∞
∞
−
−
−∞
−∞
=
+
∫
∫
 
 
(1.3.2-4) 
 
or 
 
 
 
 
 
h t
h
t e
h
t e
L
i
f t
L
i
f t
( )
( )
( )
*
 
  
 
 
 
(1.3.2-5) 
 
where hL(t) is the low pass equivalent impulse response. Using (1.3.1-2) it follows that  
 
 
 
 
 
          
0
2
( )
2Re
( )
i
f t
L
h t
h t e
π
⎡
⎤
=
⎣
⎦ 
 
 
 
(1.3.2-6) 
 
where hL(t) is the Fourier transform of HL(f), thus 
 
 
 
 
 
[
]
1
2
( )
( )
( )
i
ft
L
L
L
h t
H
f
H
f e
df
π
∞
−
−∞
=
= ∫
F
 
 
 
(1.3.2-7) 
 
where F –1(g(t)) is the inverse transform of g(t). In problem 1 it is shown that the input complex envelope is 
related to the output complex envelope, by what one would perhaps expect: 
 

 6                                            Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
 
 
     
0( )
( )
(
)
 
i
L
v t
v u h t
u du
∞
−∞
=
−
∫
 
 
 
 
(1.3.2-8) 
 
And in addition, the Fourier transform of the output spectrum is related to the input spectrum by 
 
 
 
 
 
 
V
f
V
f H
f
i
L
0( )
( )
( )
=
 
 
 
 
(1.3.2-9) 
 
where  
 
 
 
 
 
 
   V
f
F v t
V f
F v t
i
i
0
0
( )
( )
( )
( )
=
=
 
 
 
 
(1.3.2-10) 
 
Figure 1.3-1 illustrates the signals and their transforms, along with the complex envelope and its transform. 
 
Example 1 Consider a simple resonant circuit as shown in Figure 1.3-2. It can be shown that the transfer 
function is given by 
 
 
 
 
 
    
0
0
1
( )
 
1
H f
f
f
iQ
f
f
=
⎛
⎞
+
−
⎜
⎟
⎝
⎠
 
 
where the system is narrowband if Q >> 1. The transfer can be written approximately as 
 
 
 
 
0
0
0
0
1
1
( )
 
1
2
1
2
H f
f
f
f
f
i Q
i Q
f
f
≅
+
⎛
⎞
⎛
⎞
−
−
−
+
−
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
 
so that one can conclude from (1.3.2-1) that  
 
 
 
 
 
   
0
1
( )
 
1
2
L
H
f
f
i Q
f
=
⎛
⎞
+
⎜
⎟
⎝
⎠
 
 
and hence the baseband equivalent transfer function has been determined. Note that a second-order bandpass 
transfer function produced a first-order baseband equivalent transfer function. 
To complete our characterization of bandpass signals, one more point is of interest. That is the 
power spectral density of the radio frequency signal. It may be obtained from the complex envelope power 
spectral density from the fact that when the complex envelope is a wide sense stationary random process then 
the autocorrelation function of the radio frequency signal x(t) is given by 
 
 
{
}
0
( )
Re
( )
i
x
v
R
R
e
ω τ
τ
τ
=
 
(1.3.2-11) 
 
It then follows that the power spectral density of the radio frequency signal is given by 
 
 
0
0
1
1
( )
(
)
(
)
2
2
x
v
v
S
f
S
f
f
S
f
f
=
−
+
−
−
 
(1.3.2-12) 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             7 
where Sv(f) is the power spectral density of the complex envelope and Sx(f) is the power spectral density of 
the radio frequency signal. Note that the result of converting from the complex envelope of the radio 
frequency signal is to shift ½ of the spectrum up to f0 and ½ of the spectrum down to –f0. 
 
Vi(f)
Vo(f)
vi(t)
Xi(f)
Xo(f)
v0(t)
HL(f)
H(f)
hL(t)
h(t)
xi(t)
xo(t)
Complex Envelope
Actual Signal
Vi(f)
Vo(f)
vi(t)
Xi(f)
Xo(f)
v0(t)
HL(f)
H(f)
hL(t)
h(t)
xi(t)
xo(t)
Complex Envelope
Actual Signal
 
 
Figure 1.3-1 Relationship of the actual and complex envelope of a signal. 
 
 
L
R
C
L
R
C
 
 
Figure 1.3-2  A simple resonant LCR (inductance, capacitance, and resistance) circuit. 
 
 
1.3.3 Complex Envelope Characterization for Direct Sequence and Frequency-Hopping Signals 
 
In the following sections the concept of the complex envelope will be applied to various forms of direct 
sequence and frequency-hopping signals [10, 11]. As mentioned in Section 1.3.1, the actual transmitted 
signal will be assumed to be of the form 
 
 
 
 
 
 
{
}
0
( )
Re
( )
 
i
t
s t
v t e
ω
=
 
 
 
 
(1.3.3-1) 
 
where v t( )  is the complex envelope of the code and data modulation. Thus any narrowband digital 
modulation process s(t) can represented in this manner for any digital data and code modulation used. 
 
In the following sections pT(t), will denote a unit rectangular pulse of duration T seconds. In 
addition, it will be assumed that the chip rate is much higher than the data rate. It will also be assumed for 
direct sequence signals that when data is present, an integer number of direct sequence chips will fit exactly 
into one data bit. 
 
 
 
 

 8                                            Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
1.4 DIRECT SEQUENCE SPREAD SPECTRUM SYSTEMS  
 
There are three primary ways to spread the spectrum of a signal. The first is direct sequence spread spectrum 
techniques, the second is frequency hopping, and the third is time hopping. The first two are much more 
common in practice than time hopping. In addition to these three techniques, any combination of the three 
types can be used in a hybrid scheme. There are various forms of direct sequence spreading, and they will be 
elaborated on in the following sections, followed by frequency hopping and time hopping. 
 
 
1.4.1 Direct Sequence Spreading with Binary Phase Shift Keying (BPSK)  
 
For BPSK chip (PN code) modulation, the complex envelope has the form 
 
 
 
 
 
    ( )
2
(
) 
k
T
k
v t
P
a p
t
kT
=
−
∑
 
 
 
 
(1.4.1-1) 
 
where PT(t) is a unit amplitude pulse of duration T seconds, starting at t = 0 and finishing at t = T seconds. It 
is seen that v(t) is real. In (1.4.1-1), P denotes the spread spectrum signal power, and the summation 
represents the direct sequence chip sequence in which the coefficients take on the values 
 
 
 
 
 
 
    
{
}
1, 1  
ka ∈
−
     
 
 
 
(1.4.1-2) 
 
For convenience it will sometimes be useful to denote the chip sequence by the notation PN(t), so that 
 
 
 
 
 
      
( )
(
) 
k
T
k
PN t
a p
t
kT
=
−
∑
 
 
 
 
(1.4.1-3) 
 
In addition it will be convenient to define the data sequence d(t) as 
 
 
 
 
 
    ( )
(
) 
j
MT
j
d t
d p
t
jMT
=
−
∑
 
 
 
 
(1.4.1-4) 
 
where pMT(t) is a pulse of amplitude 1 and duration of MT seconds, when time is within the time period 0 to 
MT seconds, and is zero otherwise. Thus it is assumed that there are exactly M chips per bit or coded bit. The 
sequence dj are the individual data symbols, which take on the values of either 1 or –1. In our modeling it 
will be assumed that data bits take on the value of 1 or –1 with the probability of 1/2, and each symbol is 
assumed to be statistically independent of each other. When BPSK data modulation is employed with BPSK 
chip modulation, the complex envelope can be written in terms of the two series as 
 
 
 
 
( )
2
(
)
(
) 
j
MT
k
T
j
k
v t
P
d p
t
jMT
a p t
kT
=
−
−
∑
∑
 
 
 
(1.4.1-5) 
 
where it is assumed that there are exactly M PN chips per data bit (or coded symbol), where M is an integer. 
Alternatively the complex envelope can be written compactly as 
 
 
 
 
 
      ( )
2
( )
( ) 
v t
Pd t PN t
=
 
 
 
 
(1.4.1-6) 
 
Thus, from (1.3.3-1) and (1.4.1-5), the BPSK direct sequence modulated, BPSK data modulated, spread 
spectrum signal is of the form: 
 
   
 
 
  
0
( )
2
(
)
(
)cos(
) 
j
MT
k
T
j
k
s t
P
d p
t
jMT
a p t
kT
t
ω
=
−
−
∑
∑
 
 
(1.4.1-7) 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             9 
 
This can alternatively be written more compactly as  
 
0
( )
2
( )
( )cos(
) 
s t
Pd t PN t
t
ω
=
 
 
 
 
(1.4.1-8) 
 
 
Let us define a random sequence to be a sequence in which each symbol value outcome is 
statistically independent from all other symbol outcomes, and the probability of a “1” or a “–1” is one half. 
The power spectral density of the complex envelope of a BPSK chip and data modulated direct sequence 
signal, when the sequence and the data can be modeled as a random sequence, is given by 
 
 
 
 
 
 
2
( )
sinc (
)
S f
PT
fT
=
 
 
 
 
(1.4.1-9) 
 
where P is the power of the baseband waveform, T is the chip duration, and  
 
 
 
 
 
 
(
)
sin(
)
sinc( )
 
x
x
x
π
π
=
 
 
 
 
(1.4.1-10) 
 
Notice in this special case the spectral density is not dependent on the bit duration as long as M is 
greater than 1 and an integer. For narrowband processes that can be modeled as a wide-sense stationary 
random process, the power spectral density of the complex envelope of a signal and that of the radio 
frequency version of the signal is essentially the same, except for the shift in frequency. That is, the radio 
frequency power spectral density of a PN chip and data modulated BPSK signal, modulated by random chip 
and data sequences, is given by 
 
 
 
 
 
2
2
0
0
( )
sinc ((
) )
sinc ((
) ) 
2
2
PT
PT
S f
f
f T
f
f T
=
−
+
+
 
 
(1.4.1-11) 
 
This translation from baseband to bandpass at frequency f0 with half the power located at f0 and half 
the power at –f0 will be assumed to apply to all the modulations to follow, with the appropriate complex 
envelope power spectral density inserted. If the chip sequence cannot be modeled as a random sequence, then 
these expressions do not apply exactly but may approximate the spectral envelope. All finite length codes 
will have a discrete line structure; however, long maximal length code spectral densities can be well 
approximated by (1.4.1-9). Short codes, especially nonmaximal length codes, may still roughly follow the 
envelope of the spectral density expression of (1.4.1-9), but will have a discrete line spectrum structure. If the 
continuous spectral density of (1.4.1-11) is not a good approximation, then the actual spectral density would 
have to be used to obtain a more accurate spectral density representation. 
 
Figure 1.4-1 illustrates an example of a transmitter for a BPSK DSSS system. Mathematically the 
multiplication operations can be interchanged; the goal is to produce the signal indicated at the output of the 
last multiplier. Example 2 discusses the waveforms at various places in the signal path. 
 
Example 2 Figure 1.4-2(a) illustrates a baseband nonreturn to zero (NRZ) bit sequence in which there are 
three data bits “1, –1,1.” Figure 1.4-2(b) illustrates a PN sequence composed of six chips taking on the values 
“–1,1,1, –1,1, –1,” over the duration of three data bits; hence the processing gain (see Section 1.4.1.1) is 2 in 
this example. When the direct sequence code or pseudonoise code waveform PN(t) is phase shift keyed onto 
the carrier, the effect of the modulation can again be expressed as a multiplicative factor so that the data and 
pseudonoise coded signal, when BPSK modulation is used for both, can be simply expressed by 
 
 
0
( )
( )
( )cos(
) 
s t
d t PN t
t
ω
=
 
(1.4.1-12) 

 10                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
2
0
cos(
)
ω t
PN t( )
d(t)
2
0
d t
t
( ) cos(
)
ω
g
P
=
0
( )
2
( )
( )cos(
)
s t
Pd t PN t
t
ω
=
Transmitter
2
0
cos(
)
ω t
PN t( )
d(t)
2
0
d t
t
( ) cos(
)
ω
g
P
=
0
( )
2
( )
( )cos(
)
s t
Pd t PN t
t
ω
=
Transmitter
 
 
Figure 1.4-1  Direct sequence spread spectrum BPSK transmitter. 
 
 
where the power is 1/2, since the amplitude is unity. The code symbols (chips) are of duration T = 0.5. The 
cosine wave (cos(2 5t)) is illustrated in Figure 1.4-2(c), and the resulting signal s(t) (P =1/2) is shown in 
Figure 1.4-2(d). Notice that whenever the product d(t)PN(t) changes algebraic sign, the phase of the carrier is 
flipped (the phase changes by   radians), as shown in the Figure 1.4-2(d) by the four inner vertical lines in 
the figure. There are in fact four phase changes of magnitude   radians in Figure 1.4-2(d). The noise has been 
neglected in these plots to clarify the signal operations.  
 
0
1
2
3
1.5
1
0.5
0
0.5
1
1.5
t
(a)
(b)
0
1
2
3
1.5
1
0.5
0
0.5
1
1.5
d(t)
PN(t)
(c)
0
1
2
3
1
0
1
Cos(2π5t)
t
0
1
2
3
1.5
1
0.5
0
0.5
1
1.5
t
(a)
(b)
0
1
2
3
1.5
1
0.5
0
0.5
1
1.5
d(t)
PN(t)
(c)
0
1
2
3
1
0
1
Cos(2π5t)
(c)
0
1
2
3
1
0
1
Cos(2π5t)
t
 
 
 
 
 
Figure 1.4-2 (a–f) An example of a BPSK data and PN modulated signal. 
 
 
(e)
0
1
2
3
1
0
1
ws(t)
(d)
0
1
2
3
1
0
1
t
s(t)
t
(f)
0
1
2
3
0
us(t)
t
(e)
0
1
2
3
1
0
1
ws(t)
(d)
0
1
2
3
1
0
1
t
s(t)
(d)
0
1
2
3
1
0
1
t
s(t)
t
(f)
0
1
2
3
0
us(t)
t
(f)
0
1
2
3
0
us(t)
t

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             11 
Figure 1.4-3 illustrates a model of a DSSS receiver and Figure 1.4-2(d–f) applies to the receiver 
processing. After despreading (multiplying by the receiver code PN(t) at the proper timing), the code is 
removed, as shown in Figure 1.4-2(e) (again the noise has been neglected). Finally after coherent 
demodulation, the carrier is removed from the bit stream and the data is recovered in the data demodulator 
shown in Figure 1.3-2(f) (actually an estimate is obtained, ˆ( )
d t ). 
 
BPF
Code acquisition & 
tracking subsystems
BPSK data
demodulator
Carrier acq.
and tracking
subsystems
Bit synch.
(Demodulated
data)
y(t)
ws(t)
us(t)
 ( )
d t
BPF
Code acquisition & 
tracking subsystems
BPSK data
demodulator
Carrier acq.
and tracking
subsystems
Bit synch.
(Demodulated
data)
y(t)
ws(t)
us(t)
 ( )
d t
 
 
Figure 1.4-3 Direct sequence spread spectrum BPSK receiver. 
 
 
 
For the transmitter depicted in Figure 1.4-1, the primary spectral lobe of the transmitted signal is 
about 2/T Hz wide, where T is the chip time in the pseudonoise code sequence. If a pseudonoise code for 
spreading were not used with the data, so that only the data were transmitted, then the bandwidth would only 
be about 2/Td Hz, where Td is the data (or symbol if coded) duration. This is true if one takes the bandwidth 
as the mainlobe frequency width (of the signal spectral density). Thus the spread spectrum modulation 
increases the bandwidth considerably if Td/T >> 1. The ratio PG =Td/T for BPSK modulation is called the 
processing gain. In this discussion it was assumed that both the data and the spread spectrum modulation 
were BPSK. However it is not necessary that the data also be BPSK; it could be any type of phase 
modulation in general, such as DPSK, but most commonly BPSK is found in applications for both the data 
and the spreading process. If the data modulation process is not BPSK, the transmitted signal can be written 
as 
 
 
 
 
 
0
( )
2
( )cos(
( )) 
t
d
s t
P PN t
t
t
ω
θ
=
+
  
 
 
(1.4.1-13) 
 
where  d(t) represents the data phase modulation and Pt is the transmitted power. Clearly if the phase 
modulation is DPSK or BPSK, then the data can be factored out as expressed in (1.4.1-12). 
 
Returning to the case that the data and code are BPSK modulated, it will be assumed that the 
transmission process attenuates the signal strength and causes a carrier phase delay as well as a time delay to 
the data and the spreading sequence. Then the received signal can be written as   
 
      
 
0
( )
2
(
)
(
)cos(
)
( )
( ) 
p
p
y t
Pd t
T
PN t
T
t
n t
J t
ω
θ
=
−
−
+
+
+
 
 
 
(1.4.1-14) 
 
where P<<Pt is the received (attenuated) signal amplitude and the delay is Tp > 0 seconds, the carrier phase   
is modeled as a uniform random variable, uniformly distributed between 0 and 2  radians, and the last two 
terms are the naturally occurring receiver noise n(t) and any interference J(t), including jamming that may be 
present at the pass band of the receiver front end. For now, only the signal plus thermal noise n(t) will be 
considered in what follows. 
 
The receiver for BPSK modulated signals must be able to obtain both time synchronization and 
phase synchronization with the received signal. As noted earlier, Figure 1.4-3 illustrates a model of a BPSK 
receiver. The first function of the receiver is to align the receiver timing with the received code. This process 
is called code acquisition. When the code of the receiver is aligned in time with the received signal code, 
then the receiver timing must be continually maintained with the code tracking circuit. This process of 
maintaining the receiver time aligned with the received code is called code tracking. In the tracking mode, 
the code is removed from the received signal by the mathematical process of multiplying the local code with 

 12                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
the received waveform. Thus the despread signal waveform (neglecting the noise and interference terms for 
now) is of the form 
 
0
ˆ
ˆ
( )
2
(
)
(
)cos(
)
(
)
(
) ( )
p
p
p
p
w t
Pd t
T
PN t
T
t
PN t
T
PN t
T n t
ω
θ
=
−
−
+
−
+
−
 
(1.4.1-15) 
 
Let ws(t) denote the signal part of the despread waveform w(t), which is the first term in (1.4.1-15). The 
parameter ˆ
p
T  is the receiver estimate of the signal code delay Tp from the transmitter. 
The locally generated estimate 
ˆ
(
) 
p
PN t
T
−
 is identical to PN(t–Tp) when 
ˆ  
p
p
T
T
=
 if the 
transmitter and receiver filtering is neglected. Since PN(t) takes on the values of +1 or –1 the product of  
PN(t– ˆ
p
T )  PN(t–Tp) is exactly 1 when 
ˆ
p
p
T
T
=
 and there is no appreciable filtering on the received signal. 
Thus in this case of perfect synchronization (1.4.1-15) can be written as 
 
 
 
 
 
'
0
( )
2
(
)cos(
)
( ) 
p
w t
Pd t
T
t
n t
ω
θ
=
−
+
+
 
 
 
(1.4.1-16) 
 
where 
( )
n t
′
 is the product of n(t) and PN(t– ˆ
p
T ). Figure 1.4-2(e) illustrates the signal part of w(t), which we 
shall call ws(t), with the delay suppressed for drawing convenience. Note that the transitions only occur at the 
data transitions. At this point the signal portion of the received waveform is a despread (the spreading is 
removed) signal containing only the BPSK data modulated signal. 
To demodulate BPSK data, it is necessary to provide a local carrier in phase synchronism with the 
received carrier. This entails acquiring the carrier phase, tracking the carrier phase, and using the regenerated 
carrier to demodulate the data. The product of the locally generated unit power carrier and the despread 
signal produces 
 
'
0
0
ˆ
( )
2 cos(
)
2
(
)cos(
)
( )  
p
u t
t
Pd t
T
t
n t
ω
θ
ω
θ
⎡
⎤
=
+
−
+
+
⎣
⎦  
(1.4.1-17) 
 
When 
ˆ
θ
θ
=
 (that is, when the receiver phase is the same as the received carrier phase), the signal is reduced 
to a delayed and attenuated version of d(t), as shown in Figure 1.4-2(f), plus a noise term; however, the noise 
is not shown for clarification purposes. It has been assumed that the term at 2 o has been neglected, since it 
would normally be negligible due to the filter action of the detector filter or a filter would be used in the 
design to attenuate the 2 0 term. Equation (1.4.1-16) yields the result of the coherent demodulation 
 
 
 
 
 
'
0
ˆ
( )
(
)
2 cos(
) ( ) 
p
u t
Pd t
T
t
n t
ω
θ
=
−
+
+
  
 
(1.4.1-18) 
 
where the first term of u(t) is denoted as us(t).  
After carrier acquisition and tracking are completed, a bit synchronizer is used to obtain data bit 
timing; the data detector, with this timing, then detects the data sequence, outputting a (delayed) data 
estimate of the transmitted data. 
 
It is instructive to view the same process in the frequency domain, since it provides additional 
insight into the whole process. From (1.4.1-12) it is possible to approximate the spectral density of the 
waveform under some reasonable conditions. First it will be assumed that the PN code has a long period and 
is a random sequence in its generation of ones and minus ones. If the data operates at a submultiple of the 
chip rate and has synchronous time epochs, then the power spectral density of the BPSK modulated spread 
spectrum signal of (1.4.1-12) is given by 
 
[
]
[
]
2
2
0
0
( )
sinc
(
)
sinc
(
)
 
2
2
PN
PT
PT
S
f
f
f T
f
f T
=
−
+
+
 
 
(1.4.1-19) 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             13 
where T is the chip duration, P is the received power, and the sinc(x) function is defined by (1.4.1-10). The 
spectral density of the despread signal, having only data modulated onto the carrier, is given by 
 
    
 
 
 
[
]
[
]
2
2
0
0
( )
sinc
(
)
sinc
(
)
 
2
2
d
d
d
d
d
PT
PT
S
f
f
f T
f
f T
=
−
+
+
 
 
(1.4.1-20) 
 
in which Td is the bit duration in seconds. 
Both power spectral densities are sketched in Figure 1.4-4. Notice that the spectral density is located 
about both f0 and –f0 frequencies in both cases. The spectral width of the spread signal mainlobe is 2/T Hz, or 
twice the chip rate. The spectral density of the demodulated data is illustrated in the bottom of Figure 1.4-4. 
The data spectral density is centered at baseband and has a spectral width of the mainlobe, of 2/Td. The power 
spectral density of the spread signal is PT/2 at the peaks’ (
0f
±
) spectral level for the spread signal and PTd 
for the despread signal. Furthermore, when Td >> T then the bandwidth of the spread signal is much greater 
than the bandwidth of the despread signal. 
 
-f0
(a) RF spread spectrum power
spectral density
SPN(f)
0
2/Td
f
(b) Carrier demodulated data
power spectral density
0
PTd
Sd(f)
PT
2/T
f
2/T
f0
L
L
L
L
L
L
-f0
(a) RF spread spectrum power
spectral density
SPN(f)
0
2/Td
f
(b) Carrier demodulated data
power spectral density
0
PTd
Sd(f)
PT
2/T
f
2/T
f0
f
2/T
f0
L
L
L
L
L
L
 
 
Figure 1.4-4 (a, b) A sketch of a BPSK spread spectrum signal before and after despreading. 
 
1.4.1.1 Processing Gain for a BPSK Spread Spectrum Signal  
 
It is convenient at this point to discuss the concept of processing gain of a BPSK direct sequence spread 
spectrum system for an uncoded communication system. Processing gain is a commonly used term for spread 
spectrum systems because it is a measure of how effective the spread spectrum system design is against a 
jammer. For a BPSK direct sequence system, the processing gain is defined as the ratio of the chip rate to the 
bit rate, which is the processing gain, and is given by 
 
 
 
 
 
 
c
b
b
c
T
T
R
R
PG
=
=
  
 
 
 
(1.4.1.1-1) 
 
as mentioned earlier. 
Consider the coherent receiver for BPSK direct sequence signaling in Figure 1.4-5(a). Figure 1.4-
5(b) will be discussed in the problem set. The input, y(t), is a direct sequence spread spectrum BPSK signal 
with a tone jammer at the same frequency having power PJ. Hence the received waveform can be written as  
 

 14                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
(
)
(
)
0
0
( )
2
( )
( )sin
2
sin
 
s
J
J
y t
Pd t PN t
t
P
t
ω
θ
ω
θ
=
+
+
+
 
 
(1.4.1.1-2) 
 
where P is the signal power, PJ is the jammer power,  s and  J are the signal and jammer carrier phases, 
respectively, PN(t) is the spread code, and d(t) ( 1
± ) is the bit sequence. The tilde over the PN(t) term denotes 
filtering by the front end of the receiver. However we will neglect this filtering until Problem 4. 
 
0 (.)
  
b
T
dt
∫
PN t( )
SNRA
0
0
2
( )
( )sin(
)
2
sin(
)
J
J
Pd t PN t
t
P
t
ω
ω
θ
+
+
0
2 sin(
)t
ω
SNRB
( )
PN t
0
2 sin(
)t
ω
0 (.)
  
b
T
dt
∫
0
0
2
( )
( )sin(
)
2
sin(
)
J
J
Pd t PN t
t
P
t
ω
ω
θ
+
+
(a)
(b)
0 (.)
  
b
T
dt
∫
PN t( )
SNRA
0
0
2
( )
( )sin(
)
2
sin(
)
J
J
Pd t PN t
t
P
t
ω
ω
θ
+
+
0
2 sin(
)t
ω
SNRB
( )
PN t
0
2 sin(
)t
ω
0 (.)
  
b
T
dt
∫
0
0
2
( )
( )sin(
)
2
sin(
)
J
J
Pd t PN t
t
P
t
ω
ω
θ
+
+
(a)
(b)
 
 
Figure 1.4-5 (a, b) Two possible ways to despread the received waveform. 
 
 
 
Now consider the signal-to-noise performance of the model just described. Assuming that the 
receiver code generator is in synchronization with the received code, the signal, after the code despreading 
operation, is of the form 
 
0
0
( )
( )
( )
( )
2
( )sin(
)
2
( )sin(
)
s
n
S
J
J
W t
W t
y t PN t
Pd t
t
P PN t
t
ω
θ
ω
θ
+
=
=
+
+
+
  
(1.4.1.1-3) 
 
where the despread signal term is Ws(t) and the despread jammer term is Wn(t). 
It is to be noticed that the desired signal is despread (spectrally speaking) down to the data 
bandwidth, and in addition the tone jammer is spread out to the original bandwidth (since it is multiplied by 
the PN code). Thus the despreading operation has spread the undesired jammer and collapsed the desired 
signal. It should be clear that the “spread” jammer power would have less effect on the data detector than a 
narrowband jammer, since much of the jammer power is spread out beyond the detector data bandwidth. The 
carrier is demodulated down to baseband by multiplication by a coherent reference of the form 
 
 
 
 
 
 
0
( )
2 sin(
) 
r
c t
t
ω
θ
=
+
 
 
 
 
(1.4.1.1-4) 
 
The result is given by  
 
0
( )
( )cos(
)
( )cos(
)
(2
)
i
S
r
J
J
r
e t
Pd t
P PN t
O
t
θ
θ
θ
θ
ω
=
−
+
−
+
                    (1.4.1.1-5) 
 
where the O(2 0t) term denotes a term that is of the order of 2 0t and will be filtered out by the bit detector 
or a combination of a low pass filter plus the bit detector. Now in order to continue, it is necessary to make 
some assumptions on the phases. It will be assumed that the receiver is coherent with the incoming signal so 
that  S =  r. In addition it will be assumed that the jammer is coherent with the signal since that is the most 
advantageous phase relationship for the jammer. Thus with these assumptions one obtains 
 
0
( )
( )
( )
(2
)
i
J
e t
Pd t
P PN t
O
t
ω
=
+
+
 
 
 
 
(1.4.1.1-6) 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             15 
Now let us compute the SNR out of the integrate-and-dump bit detector. First consider the signal 
part. Thus, as the signal output, at the end of a bit time, neglecting the 
0
(2
)
O
t
ω
 term since it will be filtered 
out at the output of the data detector, one has  
 
 
 
 
 
{
}
(
)
(
)
o
b
b
b
E e T
Pd T T
=
  
 
 
(1.4.1.1-7) 
 
with d(Tb) denoting the bit value during the time from zero to Tb, and E{x} denoting the ensemble average of 
x. The 
0
(2
)
O
t
ω
 will integrate to a value dependent on the inverse of (2 0) and consequently is negligible. 
Now the variance of the output is due to the despread jammer, which will be modeled as a random PN code, 
given by the product of the power spectral density at f = 0 and the noise bandwidth; thus 
 
             
{
}
{
}
(
)
{
}
2
0
0
0
(
)
(
)
(
)
 
b
b
b
J
c
Var e T
E
e T
E e T
P T NBW
=
−
=
 
              (1.4.1.1-8) 
 
The term PJTc is the two-sided power spectral density of a random waveform PN code having symbol 
duration of Tc seconds and having amplitude 1 or –1 (a good approximate model for a long PN code) at f = 0, 
and NBW is the noise bandwidth of the integrate-and-dump filter. The two-sided noise bandwidth of the 
integrate-and-dump filter can be calculated as 
 
 
 
 
2
2
2
2
sin(
)
( )
 
(
)
b
b
b
b
fT
NBW
H f
df
T
df
T
fT
π
π
∞
∞
−∞
−∞
=
=
=
∫
∫
  
 
(1.4.1.1-9) 
 
since the transfer function of an integrating filter is given by [12]  
 
 
 
 
 
/ 2
sin(
)
( )
 
(
)
b
j T
b
b
b
fT
H f
T
e
fT
ω
π
π
−
=
 
 
  
           (1.4.1.1-10) 
 
Thus the variance can be written as 
 
 
 
 
 
        
{
}
0(
)
 
b
J
c
b
Var e T
P T T
=
 
 
 
            (1.4.1.1-11) 
 
The signal to noise ratio is defined to be the mean signal squared divided by the variance of the noise, so that 
 
 
 
 
 
b
c
J
c
J
b
J
T
R
P
P
P
SNR
PG
P T
P R
P
=
=
=
 
 
 
            (1.4.1.1-12) 
 
where Rb = 1/Tb is the bit rate and Rc = 1/Tc is the chip rate, and PG = Rc/Rb. In this case it is seen that the 
output signal to noise ratio is the signal to jammer power times the ratio Rc/Rb, which is the processing gain 
for a direct sequence BPSK SS and BPSK data modulated spread spectrum system when the system is 
uncoded. The processing gain is the reduction in the jammer power due to the spreading action on the 
narrowband jammer, which spreads the jammer out to a wideband process, that is much wider than the data 
bandwidth. The processing gain is an approximate measure of how effective the spread spectrum system is in 
the environment of a narrowband jammer. 
 
It should be cautioned that when coding is employed in this same SS system, it is tempting to argue 
that the processing gain is diminished by the act of coding since the code rate is greater than the bit rate (for 
example, by 3 dB for rate ½ convolutional coding). Following this logic, one would conclude that therefore if 
the coding gain did not yield more gain than the code rate loss, coding would not be beneficial! This 
argument is fallacious [13] and in fact coding does improve the performance of spread spectrum systems, and 
it should be emphasized that the processing gain is defined to be the ratio of the chip rate to bit rate (and not 

 16                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
the coded bit rate). Since Rc/Rb is usually much bigger than unity, the output SNR is enhanced by the 
processing gain. 
The actual bit error rate (BER) performance of the communication system depends upon the actual 
code, its length, and the bandwidths involved. Short codes that have spectral lines that are relatively wide 
apart can have more or less effect on the detector than estimated from the processing gain, depending on 
where the lines fall in relationship to the detector passband. Codes that are very long, so that code length in 
time is large compared to the bit time, can be approximated by continuous spectra. Hence for long codes the 
continuous interference spectra may be used (the processing gain is a reasonable estimate of the 
improvement), whereas the discrete line nature of the spectra must be taken into account for short codes and 
will thus affect the effective processing gain. 
It is also important to note that a wideband (relative to the data bandwidth) jammer, having a 
bandwidth equal to the PN code, is not reduced by the processing gain, since it is already of the PN code 
bandwidth. In other words the processing gain in a direct sequence system comes about from the spreading of 
a narrowband interference signal. And if it is already at least as wide as the direct sequence signal, spreading 
will, to first order, not appreciably reduce its spectral density in the data bandwidth, although there will be 
some reduction due to the convolution of the receiver code and the input jammer spectral density yields a 
lower spectral density at band center than the original spectral density at band center. 
 
 
1.4.1.2 Correlation Loss of a RF Filtered BPSK Direct Sequence Signal 
 
In this section an expression will be derived for the cross correlation that one obtains when the input signal is 
filtered and correlated with the local unfiltered code. Figure 1.4-6 illustrates the model that will be used. This 
discussion follows [8, 14]. This result will be useful to determine the loss in a correlated signal and the effect 
of a bandpass filter on the discriminator curve in code tracking analysis. In addition the effect of notch filters, 
as well as other chip symbols, such as Manchester symbols, can be readily investigated with these results. 
The received BPSK modulated direct sequence signal may be modeled as 
 
 
 
 
0
0
( )
2
Re
( )
2
( )cos(
) 
j
t
s t
P
PN t e
PPN t
t
ω
ω
⎡
⎤
=
=
⎣
⎦
 
 
(1.4.1.2-1) 
 
where the signal power is P, and PN(t) is the baseband direct sequence spread spectrum signal, with the 
carrier centered at  0, radians/second. The term Re[z] denotes the real part of the complex number z. Initially 
the PN sequence will be truncated to length 2TI seconds. It will be assumed that the PN sequence can be 
approximated by a sequence in which each chip is randomly picked with probability of 0.5, and each chip is 
statistically independent from each other. From (1.4.1.2-1) (data has been neglected), the finite time duration 
signal, in terms of the Fourier transform, produces  
 
    
2
1
( )
2
Re
(
)
 
2
o
j
t
j t
TI
s t
P
e
A
j
e
d
ω
ω
ω
ω
π
∞
−∞
⎡
⎤
=
⎢
⎥
⎣
⎦
∫
 
 
 
(1.4.1.2-2) 
 
where A2TI( ) denotes the 2TI second segment Fourier transform of PN(t) for (
)
t
TI
≤
.  
After filtering by the bandpass filter centered at  0, and denoting the low pass equivalent filter of the 
bandpass filter H( ) as HL( ), one can write for the low pass equivalent filter (see (1.3.2-1))  
 
 
 
0
(
)
( )   
0 
                            0           
0
L
H
H
ω
ω
ω
ω
ω
−
=
>
≤
 
     (1.4.1.2-3) 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             17 
BPF
H(ω)
LPF
PN(t-τ)
2 cos(
)
ω
φ
ct −
x(t)
y(t)
BPF
H(ω)
LPF
PN(t-τ)
2 cos(
)
ω
φ
ct −
x(t)
y(t)
 
 
Figure 1.4-6 System model for the filtered correlation function. 
 
 
It therefore follows from (1.3.2-9) that the response of a bandpass system to a bandpass signal can be 
obtained from the input complex envelope, which is real in this case (i.e., PN(t)) and the low-pass equivalent 
filter transfer function via  
 
      
 
 
     
 
 
0
2
2
1
( )
2
Re
(
)
( )
 
2
j
t
j
t
TI
TI
L
y
t
P
e
A
j
H
e
d
ω
ω
ω
ω
ω
π
∞
−∞
⎡
⎤
=
⎢
⎥
⎣
⎦
∫
  
(1.4.1.2-4) 
 
In general the reference signal, composed of the code and the carrier, will be shifted in time and RF phase 
from s(t) so that it will be modeled as 
 
 
 
 
 
0
( )
2 Re
(
)
 
j
t
j
r t
PN t
e
ω
φ
τ
−
⎡
⎤
=
−
⎣
⎦  
 
 
(1.4.1.2-5) 
 
With    the PN code time shift, and   the RF carrier phase difference, the 2TI second portion of r(t) may be 
written as 
 
   
 
 
0
(
)
2
2
1
( )
2 Re
(
)
 
2
j
t
j
j
t
TI
TI
r
t
e
A
j
e
d
ω
φ
ω
τ
ω
ω
π
∞
−
−
−∞
⎡
⎤
=
⎢
⎥
⎣
⎦
∫
 
 
(1.4.1.2-6) 
 
Now define the cross correlation function between the two random functions 
2 ( )
TI
y
t  and r2TI(t) by 
 
 
 
 
      
{
}
2
2
1
( , )
lim
( )
( )
 
2
TI
TI
TI
R
E
y
t r
t dt
TI
τ φ
∞
−∞
→∞
=
∫
 
 
 
(1.4.1.2-7) 
 
where E{x} denotes the ensemble average of the random variable x. It will be assumed that the PN sequence 
can be modeled as a random sequence. Using the fact that 
 
 
 
     
       
{ }
{ }
{
}
{
}
1
2
1
2
1
2
1
1
Re
Re
Re
Re
 
2
2
z
z
z z
z z∗
=
+
 
 
 
(1.4.1.2-8) 
 
and letting z1 denote r2TI(t) and z2 denote y2TI(t), and keeping only the baseband term (neglecting the term at 
2 0) one obtains the result 
 
 
'(
)
2
2
( , )
1
1
1
lim
Re
(
)
( )
(
')
'
 
2
2
2
TI
TI
j
j t
j
t
TI
L
TI
TI
TI
T
R
E e
A
j
H
e
d
A
j
e
d
TI
P
φ
ω
ω
τ
τ φ
ω
ω
ω
ω
ω
π
π
∗
−
−
−
−
→∞
⎧
⎫
⎡
⎤⎡
⎤
=
⎨
⎬
⎢
⎥⎢
⎥
⎣
⎦⎣
⎦
⎩
⎭
∫
∫
 (1.4.1.2-9) 
 
Now using the fact that 

 18                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
 
 
 
 
 
(
')
1
(
') 
2
j
t
e
dt
ω ω
δ ω
ω
π
∞
−
−∞
=
−
∫
 
 
  
           (1.4.1.2-10) 
 
It is well known that the power spectral density [14] of an ergodic random process is given by 
 
 
     
 
    
2
2
(
)
(
)
( )
lim
 
2
TI
TI
PN
TI
A
j
A
j
S
f
E
TI
ω
ω
∗
→∞
⎧
⎫
⎡
⎤
⎪
⎪
=
⎨
⎬
⎢
⎥
⎪
⎪
⎣
⎦
⎩
⎭
                  
            (1.4.1.2-11) 
 
Using (1.4.1.2-11) and (1.4.1.2-10) in (1.4.1.2-9) produces the basic result 
 
    
(
)
1
( , )
max
Re
( )
( )
 
2
j
PN
L
R
P
S
H
e
d
ωτ φ
φ
τ φ
ω
ω
ω
π
∞
+
−∞
⎡
⎤
=
⎢
⎥
⎣
⎦
∫
       
            (1.4.1.2-12) 
 
with the maximum taken to account for coherent phase tracking effect. The maximum value of (1.4.1.2-12) 
occurs by searching over  . R( , φ ) is the cross correlation function between the bandpass filtered PN code 
and the local reference code, which is not filtered. It was assumed in this calculation that the correlation time 
was infinite. This calculation also assumed that the PN code could be modeled by a random binary valued 
( 1
± ) sequence. In practice, with an actual PN code, this result is an approximation. However, it is a very 
useful result that can be used to determine the effects of filtering on a spread spectrum direct signal. This 
includes the cross correlation function due to a band-limiting filter and other types of filters such as notch 
filters. In addition it is not limited to continuous spectra; discrete power spectral densities can be used for 
periodic codes, which include all “real” codes.  
Let us consider the value of   that makes R(   ) be a maximum when HL( ) is complex conjugate 
symmetric (that is, the baseband equivalent impulse response is real) and equivalently that 
 
 
 
 
 
( )
(
) 
L
L
H
H
ω
ω
∗
=
−
 
 
 
            (1.4.1.2-13) 
 
Using the fact that for z, a complex number that 
 
 
 
 
 
    
     Re( )
 
2
z
z
z
∗
+
=
 
 
 
           (1.4.1.2-14) 
 
in (1.4.1.2-12) and the fact that SPN( ) is real, produces 
 
     
 
(
)
(
)
( )
( )
( , )
1
( )
 
2
2
j
j
L
L
PN
H
e
H
e
R
S
d
P
ωτ φ
ωτ φ
ω
ω
τ φ
ω
ω
π
+
∗
−
+
∞
−∞
⎡
⎤
+
= ⎢
⎥
⎣
⎦
∫
      
            (1.4.1.2-15) 
 
Since HL( ) is complex conjugate symmetric one obtains, with a change of variable on the second integral of 
(1.4.1.2-15), the result 
 
 
 
 
( , )
( )
( )
cos
 
2
j
PN
L
P
R
S
H
e
d
ωτ
τ φ
ω
ω
φ ω
π
∞
−∞
=
∫
                                    (1.4.1.2-16) 
 
clearly R(   ) is maximized when   = 0, mod 2 . A maximum of R(   ) occurs at   = 0, so that the result for 
the maximum is given by  
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             19 
 
           
 
( , )
( )
( )
 
2
j
PN
L
P
R
S
H
e
d
ωτ
τ φ
ω
ω
ω
π
∞
−∞
=
∫
                   
            (1.4.1.2-17) 
 
Therefore we conclude that when the baseband equivalent filter is complex conjugate symmetric that R(   ) 
is given by (1.4.1.2-16) and the maximum occurs at   = 0 mod 2 .  
In order to obtain a feel for the effects of the filter bandwidth on the cross correlation function 
(actually the cross correlation function between the filtered and unfiltered codes), consider an ideal filter that 
is complex conjugate symmetric and a model for a multipole filter, having an RF bandwidth of B Hz and 
therefore a baseband equivalent bandwidth of B/2 Hz. Let  
 
 
 
 
 
( )
    
2 (
/ 2) 
                  0          
j
L
H
e
B
otherwise
ωα
ω
ω
π
−
=
<
         
 
            (1.4.1.2-18) 
 
where   is the delay of the filter. Assume that the PN code can be modeled by a random sequence. From 
(1.4.1.2-16) it follows that the cross correlation function at   =   is given by  
 
          
 
        
2
sin(
/ 2)
( ,0)
2
(
/ 2)
B
B
P
T
R
T
d
T
π
π
ω
α
ω
π
ω
−
⎡
⎤
=
⎢
⎥
⎣
⎦
∫
  
                        (1.4.1.2-19) 
 
This value is plotted in Figure 1.4-7 showing the unfiltered case (BT = 40), the BT =1 and the BT= 2 cases. It 
is also of interest to obtain a plot of the correlation loss as a function of the BT product. This corresponds to 
the reduction in the maximum correlation value as a function of the BT product. 
As another example of the correlation loss obtained from passing a spread signal through a filter, 
consider an ideal filter bandpass filter (BPF), which approximates a multipole bandpass filter. Figure 1.4-8 
illustrates the correlation loss due a receiver filter having a predetection filter bandwidth B and a PN code of 
chip duration T, with an ideal bandpass front end filter. The loss is plotted in decibels, for various BT values 
from 20 log(L(BT)), where L(∞)=1 is the loss at BT=∞ and is of course 0 dB. 
 
Example 3 Assume that a system designer is going to design a direct sequence spread spectrum system. 
Assume that the requirements are to use a multipole front-end filter and that the specifications only allow 0.5 
dB loss due to this filter. What bandwidth should the designer select? Referring to Figure 1.4-8, it is seen that 
BT needs to be about 3.5 to keep the correlation loss to 0.5 dB. Assuming that the power spectral density is 
given by (1.4.1.2-19), then the RF bandwidth would be such that it would extend slightly less than between 
the second nulls. 
 

 20                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
1.5
1
0.5
0
0.5
1
1.5
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
BT=40
BT=2
BT=1
Relative voltage correlation
Chip delay
1.5
1
0.5
0
0.5
1
1.5
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
BT=40
BT=2
BT=1
Relative voltage correlation
Chip delay
 
 
Figure 1.4-7 Voltage cross-correlation curve for various BT products. 
 
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
8
7.5
7
6.5
6
5.5
5
4.5
4
3.5
3
2.5
2
1.5
1
0.5
0
Loss (dB)
L(
)
BT
BT
Loss (dB)
BT
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
8
7.5
7
6.5
6
5.5
5
4.5
4
3.5
3
2.5
2
1.5
1
0.5
0
Loss (dB)
L(
)
BT
BT
Loss (dB)
BT
Loss (dB)
BT
 
 
Figure 1.4-8 Correlation loss versus the BT product. 
 
 
It should be emphasized that other filter types can be appraised with (1.4.1.2-12). For example, 
notch filters and low-pass filters can be considered for their effect on the correlation function. And the results 
apply to other 
1
±  valued modulation formats besides NRZ, such as Manchester encoded symbols. In 
addition the power spectral density need not be continuous as has been assumed in these calculations; 
however, in this case the integral then collapses to a discrete sum.  
 
 
1.4.1.3 Noise Spectral Density Reduction for the BPSK Despreading Process 
 
In accessing the performance of a BPSK direct sequence spread spectrum system, it is noted that the 
despread spectral density of the noise is lower at the carrier frequency than without despreading. This 
calculation relates to code acquisition and data detection. Consider the model illustrated in Figure 1.4-9. 
Band-limited bandpass white noise (WGN) may be represented by  
 
 
 
 
 
0
0
( )
2
( )cos(
)
2
( )sin(
) 
c
s
n t
n t
t
n t
t
ω
ω
=
+
  
 
(1.4.1.3-1) 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             21 
where  0 is the center angular frequency and nc(t) and ns(t) are two baseband, statistically independent, band-
limited white Gaussian random noise processes. The despread noise process, which is denoted by '( )
n t , and 
is indicated in the figure, is given by 
 
 
 
 
 
 
'( )
( )
( )
n t
n t PN t
=
 
 
 
 
(1.4.1.3-2) 
 
BPF
(BW=B)
PN(t)
(Despread Noise)
n t
'( )
( )
n t
BPF
(BW=B)
PN(t)
(Despread Noise)
n t
'( )
( )
n t
 
 
Figure 1.4-9 Despread noise model. 
 
 
If the epoch time of the PN sequence is randomized to make it stationary, then the autocorrelation 
function of '( )
n t  is given by 
 
'
0
0
( )
( )
( )cos(
)
( )
( )cos(
) 
c
s
n
PN
n
PN
n
R
R
R
R
R
τ
τ
τ
ω τ
τ
τ
ω τ
=
+
 
 
(1.4.1.3-3) 
 
The power spectral density at   is given by  
 
 
 
 
         
'
0
( )
2
( )
( )cos(
)
 
c
j
n
PN
n
S
R
R
e
d
ωτ
ω
τ
τ
ω τ
τ
∞
−
−∞
= ∫
 
 
 
(1.4.1.3-4) 
 
The two quadrature noise correlation functions are identical. Now the cosine function can be expanded into 
the sum of two exponentials to yield 
 
 
 
 
 
0
0
'( )
( )
( )
 
c
j
j
j
n
PN
n
S
R
R
e
e
e
d
ω τ
ω τ
ωτ
ω
τ
τ
τ
∞
−
−
−∞
⎡
⎤
=
+
⎣
⎦
∫
 
 
(1.4.1.3-5) 
 
Since the only nonnegligible component occurs at  0, one has 
 
 
 
 
 
 
'
0
(
)
( )
( )
 
c
n
PN
n
S
R
R
d
ω
τ
τ
τ
∞
−∞
= ∫
 
 
 
(1.4.1.3-6) 
 
By Parseval’s theorem the integral of the product of the autocorrelation functions is equal to the integral of 
the product of the corresponding power spectral densities, so that 
 
 
 
 
 
         
'
0
1
(
)
( )
( )
 
2
c
n
PN
n
S
S
S
d
ω
ω
ω
ω
π
∞
−∞
=
∫
 
 
 
(1.4.1.3-7) 
 
Again, using the assumption of a random binary sequence valued PN code model, the spectral density of the 
random chip code model is given by 
 
 
 
 
 
                
2
sin
( )
 
c
PN
c
c
fT
S
f
T
fT
π
π
⎛
⎞
=
⎜
⎟
⎝
⎠
 
 
 
(1.4.1.3-8) 
 
where Tc is the chip duration in seconds. Changing the variable to f from   in (1.4.1.3-7) produces our result  
 

 22                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
 
 
 
 
2
2
0
'
0
sin
(
)
( )
 
2
c
n
c
L
c
N
fT
S
f
T
H
f
df
fT
π
π
∞
−∞
⎛
⎞
=
⎜
⎟
⎝
⎠
∫
 
 
(1.4.1.3-9) 
 
where HL(f) is the low-pass (or baseband) equivalent transfer function of the bandpass filter transfer function. 
To obtain a feel of the values associated with the bandwidth of the filter let us again assume that the filter is 
an ideal BPF with bandwidth B. It follows from (1.4.1.3-9), with a change of variable to f from x, and where 
x = fTc, that  
 
 
 
 
 
2
/ 2
0
'
0
/ 2
sin(
)
(
)
 
2
c
c
BT
n
BT
N
x
S
f
dx
x
π
π
−
⎛
⎞
=
⎜
⎟
⎝
⎠
∫
 
                         (1.4.1.3-10) 
 
Figure 1.4-10 illustrates the noise power spectral density loss as a function of normalized bandwidth (BTc). 
Note that this power spectral density loss is one half that for the signal loss with an ideal bandpass filter, in 
decibels. The reason is that the signal voltage loss is equal to the noise power spectral density loss squared.  
 
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
4
3.75
3.5
3.25
3
2.75
2.5
2.25
2
1.75
1.5
1.25
1
0.75
0.5
0.25
0
BTc
Noise PSD loss (dB)
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
4
3.75
3.5
3.25
3
2.75
2.5
2.25
2
1.75
1.5
1.25
1
0.75
0.5
0.25
0
BTc
Noise PSD loss (dB)
 
 
Figure 1.4-10 Noise spectral density decrease by despreading for various BTc values. 
 
 
 
At this point it is possible to account for the loss in C/N0 as a function of the filtering of the spread 
signal and the spreading of the noise spectral density from despreading process by combining (1.4.1.3-10) 
and (1.4.1.2-12) in the form 
 
2
2
0
0
1
max Re
( )
( )
2
 
( )
( )
/(2 )
j
PN
L
filtered
unfiltered
PN
L
S
H
e
d
C
C
N
N
S
H
d
ωτ φ
φ
ω
ω
ω
π
ω
ω
ω
π
∞
+
−∞
∞
−∞
⎧
⎫
⎡
⎤
⎨
⎬
⎢
⎥
⎛
⎞
⎛
⎞
⎣
⎦
⎩
⎭
=
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
∫
∫
           (1.4.1.3-11) 
 
where in many cases the assumption of the random binary valued NRZ waveform can be used for the power 
spectral density, so that 
 
 
 
 
 
 
2
sin(
/ 2)
( )
 
(
/ 2)
c
PN
c
c
T
S
T
T
ω
ω
ω
⎛
⎞
=
⎜
⎟
⎝
⎠
 
 
            (1.4.1.3-12) 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             23 
with Tc being the chip duration. Thus, (1.4.1.3-11) accounts for the loss in signal and the loss in the noise 
spectral density, and therefore is an overall loss. It should be noted, however, that other code chip shapes 
besides NRZ symbols (such as Manchester symbols) could be used in this equation for the power spectral 
density. Further, there is no requirement to limit the spectral density to continuous ones; discrete spectral 
densities, derived from known period PN sequences, could be used as well. 
 
 
1.4.2 Quadriphase Direct Sequence Spread Spectrum Systems 
 
Generally quadriphase phase shift keyed (QPSK) data modulation is used for bandwidth efficiency since it 
takes one half the bandwidth of BPSK modulation. However for spread spectrum applications, bandwidth 
efficiency of the spread spectrum signal is not normally a concern, but the advantages in low probability of 
detection and less sensitivity to some types of jamming do offer advantages over BPSK modulated spread 
spectrum systems. 
 
Two types of quadriphase SS modulators and demodulators will be discussed in this section: one 
with BPSK data modulation, and one with QPSK data modulation. 
 
1.4.2.1 BPSK Data with QPSK SS Modulation  
 
In this scheme BPSK data is multiplied (BPSK modulated) by an in-phase and quadrature carrier (the 90º 
hybrid provides the BPSK modulation on two carriers that are 90º apart), each of which is multiplied with a 
spreading code which is quasi orthogonal. Figure 1.4-11 illustrates the transmitter and the receiver for this 
scheme. The resulting transmitted complex envelope signal for QPSK spread spectrum modulation with 
BPSK data modulation (QPSK/BPSK) is given by 
 
1
(
)
( )
(
)
(
)
c
c
c
k
T
c
t
j
MT
c
j
k
k
T
c
a p
t
kT
v t
P
d p
t
jMT
ib p
t
kT
−
⎡
⎤
=
−
⎢
⎥
+
−
⎢
⎥
⎣
⎦
∑
∑
 
 
   (1.4.2-1) 
 
where 
{
}
 
  
and 
1, 1
k
k
a
b ∈
−
 and are the in-phase and quadrature code sequences that have chip duration of Tc. 
seconds. The data sequence is unit valued also so that 
{
}
1, 1
j
d ∈
−
. Also recall that 
( )
c
Tp
t  is a unit amplitude 
pulse starting at t = 0 and lasting for Tc seconds. Using (1.3.3-1) and denoting the two spreading sequences as 
PN1(t) and PN2(t) and the data sequence by d(t) as 
 
 
 
 
 
( )
(
)
c
j
MT
c
j
d t
a p
t
jMT
=
−
∑
 
 
 
 
(1.4.2-2) 
 
 
 
 
 
1( )
(
)
c
k
T
c
k
PN t
a p
t
kT
=
−
∑
 
 
 
 
(1.4.2-3) 
 
2( )
(
)
c
k
T
c
k
PN t
b p
t
kT
=
−
∑
 
 
 
 
(1.4.2-4) 
 
The transmitted QPSK SS signal can be written as  
 
[
]
1
0
2
0
( )
( )
( )cos(
)
( )sin(
)  
t
s t
P d t
PN t
t
PN t
t
ω
ω
=
−
  
              (1.4.2-5) 
 
where 
tP  is the transmitted power,  0 is the radian carrier frequency, and PNi(t) (i = 1, 2) are the two 
spreading codes for the SS modulation. The received power in this waveform is Pt since each component 
contributes Pt/2 of the power, and the sine and cosine are orthogonal. Sometimes offset QPSK (OQPSK) is 
used instead of QPSK since when OQPSK is filtered and amplified in a nonlinear amplifier, the spectral 

 24                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
sidelobes don’t have as much regrowth, as with QPSK. This is normally a very desirable feature since 
significant spectral power outside ones allocated frequency band is not allowed. The resulting complex 
envelope transmitted signal for OQPSK spread spectrum modulation is given by 
 
   
 
 
2
(
)
( )
(
)
(
/ 2)
c
c
k
T
c
t
j
MT
c
j
k
k
T
c
c
a p
t
kT
v t
P
d p
t
jMT
ib p t
kT
T
−
⎡
⎤
=
−
⎢
⎥
+
−
−
⎣
⎦
∑
∑
      
 
 (1.4.2-6) 
 
where again 
{
}
 and 
1, 1
k
k
a
b ∈
−
 and 
{
}
1, 1
j
d ∈
−
. Again the total power is Pt. Using (1.3.3-1) and 
denoting the two spreading sequences by PN1(t) and PN2(t–Tc /2) and the data sequence by d(t), one has for 
the received OQPSK signal  
 
[
]
1
0
2
0
( )
( )
( )cos(
)
(
/ 2)sin(
)
t
c
s t
P d t
PN t
t
PN t
T
t
ω
ω
=
−
−
 
 
(1.4.2-7) 
 
d(t)
2
0
A
t
co s(
)
ω
900 Hybrid
+
PN1(t)
PN2(t): QPSK
(a) Transmitter
(b) Receiver
s(t)
PN2(t-Tc/2): OQPSK
Power
splitter
s(t- Tp)
2
0
cos (
)
ω
ω
+
IF t
2
0
sin (
)
ω
ω
+
IF t
Bandpass
filter
BPSK
data
demodulator
 ( )
d t
s1(t)
s2(t)
y(t)
PN
t
Tp
1(
 )
−
2
2
ˆ
(
) :
ˆ
(
/ 2) :
p
p
c
PN
t
T
QPSK
PN
t
T
T
OQPSK
−
−
−
+
-
-
d(t)
2
0
A
t
co s(
)
ω
900 Hybrid
+
PN1(t)
PN2(t): QPSK
(a) Transmitter
(b) Receiver
s(t)
PN2(t-Tc/2): OQPSK
Power
splitter
s(t- Tp)
2
0
cos (
)
ω
ω
+
IF t
2
0
sin (
)
ω
ω
+
IF t
Bandpass
filter
BPSK
data
demodulator
BPSK
data
demodulator
 ( )
d t
s1(t)
s2(t)
y(t)
PN
t
Tp
1(
 )
−
2
2
ˆ
(
) :
ˆ
(
/ 2) :
p
p
c
PN
t
T
QPSK
PN
t
T
T
OQPSK
−
−
−
+
-
-
 
 
Figure 1.4-11 (a, b) BPSK data modulation with QPSK modulation. 
 
 
where again 
2
tP  is the peak voltage, and  0 is the radian carrier frequency. The power in this waveform is 
again Pt, since each component contributes Pt/2 of the power, and the sine and cosine are orthogonal, so that 
the powers add. 
Continuing now with the QPSK spread spectrum modulation; the received signal will have been 
attenuated and delayed, so that the received signal is of the form 
 
1
0
2
0
(
)cos(
)
( )
(
)
 
(
)sin(
)
p
p
p
PN t
T
t
s t
Pd t
T
PN t
T
t
ω
θ
ω
θ
−
+
⎡
⎤
=
−
⎢
⎥
−
−
+
⎢
⎥
⎣
⎦
        
 
   (1.4.2-8) 
 
where ˆ
p
T  is the propagation time delay estimate between the transmitter and the receiver, and where 
p
T  is 
the propagation time delay between the transmitter and the receiver, 
2P  is the received peak signal voltage, 
the received power is P, and   is the carrier time delay expressed as a phase. The receiver is shown in part (b) 
of Figure 1.4-11. To demodulate the signal it is necessary to despread both phases of the quadriphase signal 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             25 
and then coherently demodulate the signal to baseband. The resulting signals entering into the summer are 
given by 
 
1
1
1
2
1
ˆ
( )
(
)
(
)
(
)cos(
)
2
ˆ
       
(
)
(
)
(
)sin(
) 
2
p
p
p
IF
p
p
p
IF
P
s t
d t
T
PN t
T
PN t
T
t
P d t
T
PN t
T
PN t
T
t
ω
θ
ω
θ
=
−
−
−
−
+
−
−
−
−
 
 
(1.4.2-9) 
 
2
2
2
1
2
ˆ
( )
(
)
(
)
(
)cos(
)
2
ˆ
        
(
)
(
)
(
)sin(
) 
2
p
p
p
IF
p
p
p
IF
P
s t
d t
T
PN t
T
PN t
T
t
P d t
T
PN t
T
PN t
T
t
ω
θ
ω
θ
= −
−
−
−
−
+
−
−
−
−
       
(1.4.2-10) 
 
For OQPSK spread spectrum modulation in the receiver PN2(t– ˆ
p
T  ) is replaced with PN2(t– ˆ
p
T –Tc/2) and the 
transmitted signal has PN2(t) replaced with PN2(t–Tc/2), see Figure 1.4-11. Therefore s1(t) and s2(t), for 
OQPSK, become  
 
1
1
1
2
1
ˆ
( )
(
)
(
)
(
)cos(
)
2
ˆ
       
(
)
(
/ 2)
(
)sin(
)
2
p
p
p
IF
p
p
c
p
IF
P
s t
d t
T
PN t
T
PN t
T
t
P d t
T
PN t
T
T
PN t
T
t
ω
θ
ω
θ
=
−
−
−
−
+
−
−
−
−
−
 
(1.4.2-11) 
 
   
 
  
2
2
2
1
2
ˆ
( )
(
)
(
/ 2)
(
/ 2)cos(
)
2
ˆ
        
(
)
(
)
(
/ 2)sin(
)
2
p
p
c
p
c
IF
p
p
p
c
IF
P
s t
d t
T
PN t
T
T
PN t
T
T
t
P d t
T
PN t
T
PN t
T
T
t
ω
θ
ω
θ
= −
−
−
−
−
−
−
+
−
−
−
−
−
      (1.4.2-12) 
 
 
When the codes are aligned in time, the like-code terms will equal one whereas the cross code 
products will appear as spread interference noise across the code bandwidth and can often be neglected. After 
filtering by the bandpass filter and neglecting the cross code terms and summing, one obtains, for either the 
QPSK or OQPSK spread spectrum modulation, the result 
 
 
 
 
 
   ( )
2
(
)cos(
) 
p
IF
y t
Pd t
T
t
ω
θ
=
−
−
 
 
 
(1.4.2-13) 
 
Thus after the SS signal processing, the resulting signal is the original BPSK (data) modulated signal, 
centered at the IF frequency. A BPSK data demodulator can demodulate this BPSK signal. 
 
 
1.4.2.2 QPSK Data with QPSK Spread Spectrum Modulation 
 
This form of QPSK allows two independent data streams to be modulated on the SS modulation.  
Figure 1.4-12 illustrates the transmitter and receiver for QPSK data and QPSK SS modulation. Each data 
stream is modulated on one of the (two) orthogonal carriers and then modulated by the respective PN 
sequences. Then the two components are summed to form the QPSK data and QPSK SS modulated signal 
(QPSK/QPSK). The resulting complex envelope signal can be represented by 
 

 26                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
1
2
( )
(
)
(
)
      
(
)
(
)
c
c
c
c
j
MT
c
l
T
c
j
l
m
MT
c
k
T
c
m
k
v t
A
d p
t
jMT
a p
t
lT
iA
c p
t
mMT
b p
t
kT
⎡
⎤
=
−
−
⎢
⎥
⎣
⎦
⎡
⎤
+
−
−
⎢
⎥
⎣
⎦
∑
∑
∑
∑
   
 
 
 (1.4.2-14) 
where dj is the inphase data stream and cm is the quadrature data stream and both have unit amplitude (i.e., 
{
}
 and 
1, 
1
j
m
d
c ∈
−
). The coefficients al and bk are the inphase and quadrature code sequences, respectively, 
and A1 and A2 are the respective inphase and quadrature peak signal voltages. If the SS signal employs 
OQPSK modulation instead, then the corresponding complex envelope is changed to  
 
1
2
( )
(
)
(
)
      
(
)
(
/ 2)
c
c
c
j
MT
c
l
T
c
j
l
m
MT
c
k
T
c
c
m
k
v t
A
d p
t
jMT
a p
t
lT
iA
c p
t
mMT
ib p t
kT
T
⎡
⎤
=
−
−
⎢
⎥
⎣
⎦
⎡
⎤
+
−
−
−
⎢
⎥
⎣
⎦
∑
∑
∑
∑
 
 
(1.4.2-15) 
 
+
s(t)
PN1(t)
PN2(t):QPSK   or  PN2(t-Tc/2):OQPSK
d1(t)
d2(t)
2
1
0
A
t
cos(
)
ω
2
2
0
A
t
sin(
)
ω
s(t-Tp)
Power
Splitter
Bandpass
Filter
Bandpass
Filter
(
)
0
2 cos
 
IF
t
t
ω
ω
+
(
)
0
2 sin
 
IF
t
t
ω
ω
+
BPSK
Demodulator
BPSK
Demodulator
Ch. 1
Data
Ch. 2
Data
PN t
Tp
1(
 )
−
s1(t)
s2(t)
–1
2
2
ˆ
:
(
)
ˆ
:
(
/ 2)
p
p
c
QPSK
PN
t
T
OQPSK
PN
t
T
T
−
−
−
for
+
s(t)
PN1(t)
PN2(t):QPSK   or  PN2(t-Tc/2):OQPSK
d1(t)
d2(t)
2
1
0
A
t
cos(
)
ω
2
2
0
A
t
sin(
)
ω
s(t-Tp)
Power
Splitter
Bandpass
Filter
Bandpass
Filter
Bandpass
Filter
Bandpass
Filter
(
)
0
2 cos
 
IF
t
t
ω
ω
+
(
)
0
2 sin
 
IF
t
t
ω
ω
+
BPSK
Demodulator
BPSK
Demodulator
BPSK
Demodulator
BPSK
Demodulator
Ch. 1
Data
Ch. 2
Data
PN t
Tp
1(
 )
−
s1(t)
s2(t)
–1
2
2
ˆ
:
(
)
ˆ
:
(
/ 2)
p
p
c
QPSK
PN
t
T
OQPSK
PN
t
T
T
−
−
−
for
2
2
ˆ
:
(
)
ˆ
:
(
/ 2)
p
p
c
QPSK
PN
t
T
OQPSK
PN
t
T
T
−
−
−
for
 
 
Figure 1.4-12 QPSK data modulation with QPSK SS modulation: (a) the transmitter and (b) the receiver. 
 
 
The resulting received signal for QPSK or OQPSK is given by  
 
       
 
     
1
1
1
0
2
2
2
0
( )
( )
( )cos(
)
( )
( )sin(
) 
s t
A d t PN t
t
A d t PN t
t
ω
ω
=
−
  
 
(1.4.2-16) 
 
where the index 1 refers to the cosine (or inphase) carrier and the index 2 refers to the sine (or quadrature) 
carrier, and the data summations and the sequence summations have been written in concise notation. The 
propagation delays and signal reduction have been neglected for convenience in (1.4.2-16). The total 
received carrier power in this case is given by 
 
 
 
 
 
 
2
2
1
2
2
2
A
A
P =
+
 
 
 
 
 
(1.4.2-17) 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             27 
and they may not be equal, although they often are in practice. If they are equal and A1=A2=A, then the power 
P = A2. At the receiver, the transmitted signal is given by a delayed and attenuated version  
 
1
1
1
0
2
2
2
0
( )
(
)
(
)cos(
)
      
(
)
(
)sin(
)
p
p
p
p
s t
Ad t
T
PN t
T
t
A d t
T
PN t
T
t
ω
θ
ω
θ
=
−
−
+
−
−
−
+
     
 
(1.4.2-18) 
 
where the 
2 / 2 
i
i
P
A
=
 (i = 1 or 2) are the component received signal powers, Tp is the propagation delay, and 
  is the phase equivalent to the carrier time delay. After the receiver PN codes and carrier multiplications are 
completed in the receiver, the received signals become 
 
  
 
 
 
1
1
1
1
1
2
2
2
1
ˆ
( )
(
)
(
)
(
)cos(
)
2
ˆ
       
(
)
(
)
(
)sin(
) 
2
p
p
p
IF
p
p
p
IF
A
s t
d t
T
PN t
T
PN t
T
t
A d t
T
PN t
T
PN t
T
t
ω
θ
ω
θ
=
−
−
−
−
−
−
−
−
           
(1.4.2-19) 
 
   
 
2
2
2
2
2
1
1
1
2
ˆ
( )
(
)
(
)
(
)cos(
)
2
ˆ
        
(
)
(
)
(
)sin(
) 
2
p
p
p
IF
p
p
p
IF
A
s t
d t
T
PN t
T
PN t
T
t
A d t
T
PN t
T
PN t
T
t
ω
θ
ω
θ
= −
−
−
−
−
+
−
−
−
−
 
 
 (1.4.2-20) 
 
If offset QPSK SS modulation was used instead of regular QPSK SS modulation, then PN2(t) would be 
delayed one half of a PN chip. Continuing with QPSK, assuming the receiver codes are aligned with the 
received codes and additionally assuming that the two codes, PN1(t) and PN2(t), are essentially orthogonal 
(that is, the product of the two PN codes will integrate to almost zero at the end of a bit time), the result is 
given by  
 
 
 
 
 
   
1
1
1
( )
(
)cos(
) 
2
p
IF
A
s t
d t
T
t
ω
θ
≅
−
−
 
 
 
(1.4.2-21) 
 
2
2
2
( )
(
)cos(
)
2
p
IF
A
s t
d t
T
t
ω
θ
≅−
−
−
 
 
 
(1.4.2-22) 
 
These two signals can be demodulated with BPSK demodulators (after s2(t) is inverted in sign) to obtain the 
estimates of a delayed version of d1(t) and d2(t). 
 
It is worth noting that the data can be modulated onto the carrier by other modulation means also. 
One other common form of modulation is differential phase shift keying (DPSK) that can be used with QPSK 
SS modulation. In fact in Section 1.4.2.1 and one could replace BPSK with DPSK as the modulation, and 
replace the BPSK demodulators with DPSK demodulators in the receivers. 
 
The processing gain for equal chip rate QPSK or OQPSK SS systems with equal data rates in the 
case of QPSK modulated data is in analogy with BPSK SS systems, given by 
 
 
 
 
 
 
 
c
b
R
PG
R
=
 
 
 
 
(1.4.2-23) 
 
where Rc is the chip rate on either phase of the QPSK SS signal, and Rb is the bit rate on either arm. 
If the two code sequences are of the same chip rate and can be modeled as two statistically 
independent random sequences, with each chip taking on the values 1 or –1 with equal probability, and with 
the number of chips per bit period being an integer number and with the assumption that the data bits form 
statistically independent sequences, the power spectral density of a QPSK or a OQPSK signal is given by  
 

 28                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
 
 
          
0
0
( )
sinc((
)
)
sinc((
)
)
2
2
c
c
c
c
PT
PT
S f
f
f T
f
f T
=
−
+
+
 
 
 
(1.4.2-24) 
 
where Tc is the time duration of either chip, and P is defined in (1.4.2-14) and is the total power of the QPSK 
or OQPSK signal. Note that when the same chip rate on each phase of the QPSK or OQPSK signal is the 
same as a BPSK chip modulated signal, the power spectral density will be the same also. 
Very commonly OQPSK (instead of QPSK) is used to limit the amount of spectral regrowth that 
occurs when a filtered QPSK (or OQPSK) signal is transmitted through a nonlinear power amplifier such as a 
TWTA. 
 
 
1.4.3 Minimum Shift Keying (MSK) 
 
Another method of SS modulation for direct sequence applications involves the use of minimum-shift keying 
(MSK). One advantage of MSK is based on the fact that the modulated spectral density of pure MSK has 
sidebands that drop off much faster than BPSK modulation. Also, MSK is more difficult to detect in a low 
probability of intercept (LPI) environment. An MSK modulator is similar to a QPSK modulator.  
Figure 1.4-13 illustrates an SS system with BPSK data modulation and MSK SS modulation.  
 
s(t)
d(t)
2
0
A
t
cos(
)
ω
900 Hybrid
PN1(t)
PN2(t)
2
0
cos(
)
ω
ω
+
IF t
2
0
sin(
)
ω
ω
+
IF t
Bandpass
Filter
BPSK
data
Demodulator
 ( )
d t
+
s1(t)
s2(t)
z(t)
Power
Splitter
PN
t
Tp
1(
 )
−
PN
t
Tp
2(
 )
−
+
s(t)
cos
 
c
t
T
π
⎛
⎞
⎜
⎟
⎝
⎠
sin
 
c
t
T
π
⎛
⎞
⎜
⎟
⎝
⎠
(
)
ˆ
2 cos
 
p
c
t
T
T
π
⎡
⎤
−
⎢
⎥
⎣
⎦
(
)
ˆ
2 sin
 
p
c
t
T
T
π
⎡
⎤
−
⎢
⎥
⎣
⎦
s(t)
d(t)
2
0
A
t
cos(
)
ω
900 Hybrid
PN1(t)
PN2(t)
2
0
cos(
)
ω
ω
+
IF t
2
0
sin(
)
ω
ω
+
IF t
Bandpass
Filter
BPSK
data
Demodulator
BPSK
data
Demodulator
 ( )
d t
+
s1(t)
s2(t)
z(t)
Power
Splitter
PN
t
Tp
1(
 )
−
PN
t
Tp
2(
 )
−
+
s(t)
cos
 
c
t
T
π
⎛
⎞
⎜
⎟
⎝
⎠
sin
 
c
t
T
π
⎛
⎞
⎜
⎟
⎝
⎠
(
)
ˆ
2 cos
 
p
c
t
T
T
π
⎡
⎤
−
⎢
⎥
⎣
⎦
(
)
ˆ
2 sin
 
p
c
t
T
T
π
⎡
⎤
−
⎢
⎥
⎣
⎦
 
 
Figure 1.4-13 BPSK data modulation with MSK modulation: (a) the transmitter and (b) the receiver. 
 
 
The transmitter complex envelope is given by  
 
      
 
(
)cos(
/
)
( )
2
(
)
(
)sin(
/
)
c
k
T
c
c
j
MT
c
j
k
k
T
c
c
a p t
kT
t T
v t
P
d p
t
jMT
ib p t
kT
t T
π
π
−
⎡
⎤
=
−
⎢
⎥
−
−
⎣
⎦
∑
∑
 
 
   (1.4.3-1) 
 
Again denoting the two PN sequences ak and bk by PN1(t) and PN2(t), respectively, and the data by 
the first series in (1.4.3-1), the transmitted signal can be described by 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             29 
  
 
 
 
1
0
2
0
( )cos
cos(
)
( )
2
( )
 
( )sin
sin(
)
c
t
c
PN t
t
t
T
s t
Pd t
PN t
t
t
T
π
ω
π
ω
⎡
⎤
⎛
⎞
⎢
⎥
⎜
⎟
⎝
⎠
⎢
⎥
=
⎢
⎥
⎛
⎞
⎢
⎥
+
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
 
 
 
  (1.4.3-2) 
 
where PN1(t) and PN2(t) are unit valued PN sequences for which 
{
}
( )
1, 1
i
PN t ∈
−
 for i = 1, 2. Note that the 
code sequence functions for MSK are not rectangular pulses, but rather are half period sinusoids whose 
epoch times are aligned with the rectangular chip sequences PN1(t) and PN2(t). Since the phase is not 
changed abruptly, the spectral density for MSK is narrower than either BPSK or QPSK in terms of the 99% 
power containment bandwidth. If the data can be modeled as a random sequence, and the same is true for the 
two statistically independent PN codes, and all the sequences are mutually and individually statistically 
independent, and the data period is an integer multiple of the chip period, then the power spectral density 
[15] for the transmitted carrier is given by  
 
 
2
2
0
0
2
2
2
2
2
2
2
0
0
8
cos (2 (
)
)
cos (2 (
)
)
( )
 
(1 16(
)
)
(1 16(
)
)
c
c
c
c
c
PT
f
f T
f
f T
S f
f
f
T
f
f
T
π
π
π
⎡
⎤
−
+
=
+
⎢
⎥
−
−
−
+
⎣
⎦
  
   (1.4.3-3) 
 
where P is the total power, and Tc is the chip duration. It should be noted that the power spectral density falls 
off asymptotically with frequency as f -4 whereas QPSK and BPSK fall off asymptotically as f -2, and thus 
even though it has a wider main-lobe, it is more narrowband overall. 
At the receiver, the signal is assumed to be attenuated and delayed by the propagation delay, which 
is denoted by Tp. Hence the received signal can be written as 
 
       
 
(
)
(
)
1
0
2
0
(
)cos
cos(
)
( )
2
(
)
 
(
)sin
sin(
)
p
p
c
p
p
p
c
PN t
T
t
T
t
T
s t
Pd t
T
PN t
T
t
T
t
T
π
ω
θ
π
ω
θ
⎡
⎤
⎛
⎞
−
−
+
⎢
⎥
⎜
⎟
⎝
⎠
⎢
⎥
=
−
⎢
⎥
⎛
⎞
⎢
⎥
+
−
−
+
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
 
 
(1.4.3-4) 
 
with P denoting the received signal power now, and    denoting the negative of the frequency delay product,  
  = – 0Tp. To see how the data is obtained from the receiver model of Figure 1.4-13, consider the product of 
the first code and the received signal.  
 
     
 
(
)
(
)
1
1
0
1
1
2
0
ˆ
(
)
(
)
cos
cos(
)
ˆ
(
) ( )
2
(
)
 
ˆ
(
)
(
)
sin
sin(
)
p
p
p
c
p
p
p
p
p
c
PN t
T
PN t
T
t
T
t
T
PN t
T
s t
Pd t
T
PN t
T
PN t
T
t
T
t
T
π
ω
θ
π
ω
θ
⎡
⎤
−
−
⎢
⎥
⎢
⎥
⎛
⎞
×
−
+
⎜
⎟
⎢
⎥
⎝
⎠
⎢
⎥
−
=
−
⎢
⎥
+
−
−
⎢
⎥
⎢
⎥
⎛
⎞
⎢
⎥
×
−
+
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
 
 
(1.4.3-5) 
 
Assuming that ˆ
p
p
T
T
=
 and noting that the product of the different codes produce a broad spectral 
component somewhat similar to each original code spectra, they will be in large part removed by the 
bandpass filter that occurs after the summation. Assuming that the product of different codes is neglected, 
one has  
 

 30                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
     
(
)
1
0
ˆ
(
) ( )
2
(
) cos
cos(
)  
p
p
p
c
PN t
T
s t
Pd t
T
t
T
t
T
π
ω
θ
⎡
⎤
⎛
⎞
−
≅
−
−
+
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
 
 
(1.4.3-6) 
 
After multiplying by the cosine tone with the assumption that ˆ
p
p
T
T
=
, one obtains  
 
1
0
ˆ
2 cos
(
)
(
) ( )
(
)cos(
) 
p
p
p
c
t
T
PN t
T
s t
Pd t
T
t
T
π
ω
θ
⎡
⎤
−
−
=
−
+
⎢
⎥
⎣
⎦
 
(1.4.3-7) 
 
after neglecting the sum term, which will be filtered out. Now multiplying by the tone at the frequency  
 0 +  IF, one obtains the result 
 
     
 
 
 
1( )
(
)cos(
) 
2
p
IF
P
s t
d t
T
t
ω
θ
=
−
−
 
 
 
  (1.4.3-8) 
 
Doing the corresponding processing on the lower part of Figure 1.4-13(b) produces 
 
2( )
(
)cos(
) 
2
p
IF
P
s t
d t
T
t
ω
θ
=
−
−
  
   
 
   (1.4.3-9) 
 
Adding the two signals s1(t) and s2(t), and assuming that the bandpass filter has a negligible effect on the 
data, one obtains 
 
 
 
 
 
( )
(
)cos(
) 
p
IF
z t
Pd t
T
t
ω
θ
=
−
−
  
 
 
(1.4.3-10) 
 
And thus the resulting BPSK signal can be demodulated with a BPSK modulator. It should be pointed out 
that MSK modulation can be implemented in a simpler way involving a frequency offset carrier with a MSK 
conversion filter. Details can be found in [10]. As a final note it is shown in Problem 10 that the processing 
gain of a BPSK bit modulated and MSK chip modulated communication system is about 2.1 dB less than 
when BPSK chip modulation is used. However, it is also true that the bandwidth is less. 
 
 
1.5 FREQUENCY-HOPPED SPREAD SPECTRUM SYSTEMS 
 
Frequency hopping is a spread spectrum technique in which the center frequency of transmission is changed 
periodically according to some pseudonoise sequence. The data modulation can be almost any type of 
modulation including noncoherent and coherent types. Noncoherent types include multiple frequency shift 
keying (MFSK) and differential phase shift keying (DPSK). Milstar MDR (medium data rate) would be an 
example of a noncoherent system in existence, and the crosslink of GPS would be an example of a coherent 
frequency-hopping link. In frequency hopping, when MFSK is employed two or more frequency offsets are 
possible at each hop time. In slow frequency-hopping DPSK a fixed number of symbols are placed on each 
hop, with one or more reference symbols preceding the data symbols.  
Coherent modulation on a frequency-hopped system is commonly done with the use of a known 
sync word (or words) placed in the hop to provide a phase and timing estimate. This scheme typically 
requires two passes (a two-pass scheme): the first pass obtains the phase, timing, and possibly frequency, and 
the second pass demodulates the data. 
The hopping frequencies are finite, and the difference of the highest to the lowest carrier frequencies 
defines the hopping range. The bandwidth of the channel needed to pass the whole range of hopping 
frequencies is the hopping bandwidth denoted by W. The bandwidth of the modulation, on a given hop, is 
denoted by BWb. After the receiver has synchronized its hop pattern with the received signal and multiplies 
its reference signal with the received signal, it is referred to as the dehopped signal. The ratio of the hopped 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             31 
bandwidth to the data bit bandwidth is defined to be the processing gain for frequency hopped signals, which 
is compatible with the definition for direct sequence spread spectrum systems; that is, the processing gain for 
a frequency-hopped SS system is given by 
 
 
 
 
 
 
b
W
PG
BW
=
 
 
 
 
     (1.5-1) 
 
where W usually is taken as the first null to first null bandwidth and BWb is taken as twice the bit rate. 
When only one hopping carrier is operating over the bandwidth, it is called single channel frequency 
hopping modulation. If more than one carrier operates over the bandwidth simultaneously, then it is called 
multiple channel frequency-hopping modulation. Figure 1.5-1(a) illustrates the transmitter and Figure  
1.5-1(b) shows the receiver for operating a single frequency hopping system. The data modulates the carrier, 
and that in turn is frequency hopped according to the frequency hopping PN code used in the system design. 
At the receiver the signal is filtered with a bandpass filter to bandwidth W that passes the hopped signal. 
Then the signal is synchronized with the input signal and dehopped so that it is a fixed frequency feeding into 
the bandpass filter and demodulator. The bandpass filter eliminates the sum frequency term from the 
dehopping operation. The demodulator demodulates the dehopped signal to produce the estimate of the input 
data stream. 
 
PN
code
generator
Code
clock
Data
modulator
d(t)
2
0
cos(
)
ω t
BPF
Frequency
synthesizer
 
Frequency hopped signal
PN
code
generator
Code
clock
Data
modulator
d(t)
2
0
cos(
)
ω t
BPF
Frequency
synthesizer
 
Frequency hopped signal
 
 
Figure 1.5-1 (a) A single channel frequency hopping modulation transmitter. 
 
There are two types of frequency hopping. Fast frequency-hopping occurs when there is one or 
more (normally an integer number) frequency hops for each transmitted symbol (or, if uncoded, the 
transmitted bit). Slow frequency-hopping occurs when there are two or more symbols per frequency hop time 
Th. Many frequency-hopped systems use noncoherent or differentially coherent modulation, since it is 
difficult to maintain phase coherence in the synthesis of the hopping frequencies over the hopping band, 
especially if it is very wide. However, a number of new systems are considering using coherent modulation 
on a frequency hopped signal. Only noncoherent frequency hopping will be considered here along with 
noncoherent, differentially coherent, and coherent data modulation. 
Another important parameter in frequency-hopping systems is the frequency-hopping rate. This 
parameter is very significant when considering the frequency-follower jamming. A frequency-follower 
jammer is a jamming device that intercepts the hopping signal, amplifies it, and retransmits the signal to the 
receiver with the intention of jamming the receiver. It is important that the jamming signal reach the target 
receiver within the same hop, or else it will be quite ineffective. Therefore, it is clear that the higher the hop 
rate, the more resistant a receiver is to a frequency-follower jammer. 
 

 32                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
Wideband
BPF
BPF
Frequency
synthesizer
Signal 
derived
synchronization
Data
demodulator
 
PN
code
generator
Detected
bits
Frequency
hopped
signal
Wideband
BPF
BPF
Frequency
synthesizer
Signal 
derived
synchronization
Data
demodulator
 
PN
code
generator
Detected
bits
Frequency
hopped
signal
 
 
Figure 1.5-1 (b) A single channel modulation receiver. 
 
Figure 1.5-2 illustrates the frequency-follower jammer scenario. The transmitter transmits to the 
receiver but is also observed by the frequency-follower jammer, which repeats the signal that must traverse 
both the distance x2 plus x3, as well as suffer the delay in amplifying the jammer. To be effective in  
jamming, the jammer must be at the same hop frequency and not delayed more than say, one half of a hop. It 
follows that to be effective as a follower jammer that 
 
 
 
 
 
2
3
1
proc
h
x
x
x
T
T
c
c
α
+
+
≤
+
  
 
 
      (1.5-2) 
 
where the xi (i = 1, 2, 3) are the distances involved, c is the speed of light, Th is the hop duration, Tproc is the 
amplifier processing delay, and   is the fraction of a hop that is not hit (so that (1– ) Tproc is hit (overlaps)), 
but the jammer can still be effective in the jamming process. Rearranging (1.5-2) produces 
 
 
 
 
 
 
2
3
1
(
) 
h
proc
x
x
x
c
T
T
α
+
≤
+
−
 
 
 
     (1.5-3) 
 
If the inequality is changed to an equality, and it is assumed that the right-hand side is constant, one 
sees that the region of permissible operation is defined by being inside the ellipse with the location of the 
receiver and transmitter being the two foci. Rotating the ellipse about the x1 line will produce an ellipsoid. 
Thus in three dimensions an ellipsoid of revolution is defined as the boundary in which being inside allows 
the jamming equation to be satisfied, and outside the boundary the jamming equation cannot be satisfied. 
Clearly as the hop rate increases, the hop time decreases, and the volume of the ellipsoid decreases. 
Therefore a high hop rate is desirable to guard against a follower jammer. 
 
Transmitter
Receiver
Follower jammer
x1
x2
x3
•
•
•
Transmitter
Receiver
Follower jammer
x1
x2
x3
•
•
•
 
 
Figure 1.5-2 Geometry of a frequency-follower jammer. 
 
 
 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             33 
1.5.1 Noncoherent Slow Frequency-Hopped Systems with MFSK Data Modulation 
 
Consider now a slow frequency-hopping signal that has multiple frequency shift keying modulation 
(SFH/MFSK). Let the Fi be the modulation frequency at the ith modulation tone time and modeled to be 
chosen randomly from the M modulation frequencies (tones), and let fi be the i-th hopping frequency at time 
i, determined from the spread spectrum code used for the frequency-hopping signal and assumed to have Mh 
frequencies where Mh=2k, and k is the number of bits needed to specify the frequency synthesizer. 
The hopping frequencies are almost always equally spaced across the hopping band. Assume that 
the hop frequency separation is  f, so that the RF bandwidth is approximately W = Mh f. Further let 
 
iθ
denote the statistically independent random variable that takes on a value in the range {
}
  ,    
π π
−
 during 
every modulation tone and changes from modulation tone to modulation tone. This random phase variable 
iθ  
is statistically independent of both fi and Fi. The random phase is associated with the hopping signal and the 
frequency modulation process. The complex envelope of a slow frequency-hopped signal, with MFSK data 
modulation, is given by 
 
(2
)
2
( )
2
(
)
(
) 
j
j
k
h
s
i
F t
i
f t
T
h
T
s
k
j
v t
A
e
p
t
kT
e
p
t
jT
π
θ
π
+
=
−
−
∑
∑
 
 
   (1.5.1-1) 
 
where pT(t) denotes a rectangular pulse of unit height and duration T seconds that starts at time t = 0, and  
A2 = P, the power. The RF signal is given by 
 
0
2
(2
)
2
(
)
( )
Re
 
(
)
k
h
j
j
s
i
f t
T
h
k
i
F t
i
t
T
s
j
A
e
p
t
kT
x t
e
p
t
jT e
π
π
θ
ω
+
⎧
⎫
−
⎪
⎪
=
⎨
⎬
×
−
⎪
⎪
⎩
⎭
∑
∑
  
 
   (1.5.1-2) 
 
This can be simplified somewhat to 
 
(
)
0
( )
2
(
)
(
)
                 
cos
2
2
 
h
s
T
h
T
s
k
j
k
j
j
x t
A
p
t
kT
p
t
jT
f
F
t
π
π
ω
θ
=
−
−
⎡
⎤
×
+
+
+
⎣
⎦
∑
∑
 
 
   (1.5.1-3) 
 
The power during every tone is P = A2. The hop duration is Th, the frequency shift keyed modulation 
(tone modulation) time duration is Ts, and the channel bit time duration is TCB. Note that the complex 
envelope of the waveform is the product of the hopping complex envelope and the modulation complex 
envelope, and in general each complex envelope would have a random phase associated with it. However, in 
this case only one random phase is needed, since the sum of two independent random phases is again a 
random phase over {
}
  ,   
π π
−
. In the case of slow frequency-hopping Th > Ts, and it will be assumed here that 
Th/Ts = N, an integer greater than one; in other words, there are N MFSK tone symbols per hop (N >1).  
 
For the case of an M-ary FSK modulation system, one of M tones is transmitted every Ts seconds, 
where Ts is the channel symbol (tone) duration. The input data stream is composed of channel bits, which 
have time duration TCB and Ts = TCB log2M. If the channel is not encoded, a bit time would equal a channel-bit 
time. Normally, the modulation tones are spaced far enough apart so that they are orthogonal. Thus the 
spacing of the tones would be 1/( TCBlog2M) = 1/Ts Hz apart. The corresponding modulation bandwidth is 
therefore approximately BWb = M/(TCB log2M) = M/Ts Hz. Now after each Th seconds a new hop frequency is 
transmitted, and after each Ts seconds a new modulation frequency is transmitted. Normally the hop and 
modulation tones start at the same clock time and the hop frequency changes every NTs = Th seconds. The 
frequency separation of adjacent hopping frequencies can be on the order of a few Hz or less, or they can be 
separated as far apart as the modulation bandwidth. 

 34                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
 
At the receiver the dehopping synthesizer is used to dehop the incoming signal, which leaves the 
modulation frequencies (possibly offset by an IF) available to demodulate, thereby producing the original 
data bit sequence (impacted by the noise). It is useful at this point to view the hopping/modulation process 
pictorially in an example. 
 
Example 4 Now consider Figure 1.5-3, which illustrates a simple example of a 4FSK data modulation 
scheme with slow hopping. In this example M = 4, so that Ts =log2(4)TCB =2 TCB. Further it will be assumed 
for simplicity that there are eight hopping frequencies, and it will be assumed that the hopping frequencies 
are spaced apart by the modulation bandwidth. Therefore the total bandwidth is about W = (8)(4)/(Ts) = 32/Ts 
Hz. In this example it would take three bits to specify each one of eight synthesizer frequencies, and two 
channel bits at a time are used to specify the 4FSK modulation tones. It will also be assumed that N = 2, so 
that there are two 4FSK tone symbols per hop time. The figure shows a particular modulation frequency each 
symbol time and a particular hop frequency each hop time. Also the corresponding input channel bit 
sequence is shown at the bottom of the figure. 
At the receiver the dehopping synthesizer is used to dehop the incoming signal that leaves the 
modulation frequencies (possibly offset by an IF) available to demodulate, thereby producing the original 
data bit sequence (at least without noise). This process is shown in Figure 1.5-4. The dehopped 4FSK 
modulation is shown in the figure, and the demodulated channel bits are shown below the figure in the case 
of no noise.  
 
 
1.5.2 Noncoherent Fast Frequency-Hopped Systems with MFSK Data Modulation 
 
In contrast to slow frequency hopping, fast frequency-hopping has one or more hops per data symbol 
(FFH/MFSK). Thus at least one hop, and often more than one hop, occurs during one transmitted data 
symbol. One major advantage of fast frequency hopping is the fact that it produces frequency diversity on 
each symbol, which is very advantageous when operating in the environment of a partial band jammer. 
 
The complex envelope of a fast frequency-hopped signal with MFSK data modulation is given by  
 
       
 
 
(2
)
(2
)
( )
2
(
)
(
)
j
k
k
h
i
F t
i
f t
T
h
T s
s
k
j
v t
A
e
p
t
kT
e
p
t
jT
π
π
θ
+
=
−
−
∑
∑
 
 
   (1.5.2-1) 
 
where Ts is the duration of the data frequency modulation (MFSK) with frequencies Fj (assumed to be M 
equally spaced frequencies), P = A2 is the power, and Th is the duration of the frequency hops with N 
frequency hops per one data modulation frequency period (note that the N defined here is the inverse of that 
defined in Section 1.5.1). It is assumed that the Mh hop frequencies fk, are pseudorandom variables that are 
constant from hop to hop, statistically independent from hop to hop, and uniformly distributed over 0 to 2 . 
The random variables  k are statistically independent random variables that are constant from hop to hop, 
statistically independent from hop to hop, and uniformly distributed over 0 to 2 . In the case of fast 
frequency hopping, Th ≤ Ts. 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             35 
Th
W
B
Ts
t
Frequency
TCB
Channel bits   1       1        0     1       0       0        0
0         0       0      1      1        0       0      0      1
Th
W
B
Ts
t
Frequency
TCB
Channel bits   1       1        0     1       0       0        0
0         0       0      1      1        0       0      0      1
 
 
Figure 1.5-3 Slow frequency-hopping transmitter with MFSK modulation. 
 
 
1       1       0     1       0       0        0        0     0       0      1      1        0       0        0      1
B
Demodulated channel bits
t
Modulation
frequency
1       1       0     1       0       0        0        0     0       0      1      1        0       0        0      1
B
Demodulated channel bits
t
Modulation
frequency
 
 
Figure 1.5-4 Slow frequency-hopping receiver with 4FSK modulation showing the dehopped waveform. 
 
 
The RF signal associated with the indicated complex envelope is given by 
 
      
 
0
(2
)
(2
)
( )
Re
2
(
)
(
)
 
j
k
k
h
i
F t
i
f t
i
t
T
h
T s
s
k
j
x t
A
e
p
t
kT
e
p
t
jT e
π
π
θ
ω
+
⎧
⎫
=
−
−
⎨
⎬
⎩
⎭
∑
∑
 
 
  (1.5.2-2) 
 
or simplifying somewhat 
 
  
 
 
 
 
(
)
0
( )
2
(
)
(
)
            
cos
2
2
 
h
T
h
T s
s
k
j
k
j
k
x t
A
p
t
kT
p
t
jT
f
F
t
π
π
ω
θ
=
−
−
⎡
⎤
×
+
+
+
⎣
⎦
∑
∑
 
 
  (1.5.2-3) 
 
       It will be assumed again that MFSK modulation is used, so that the channel bit time TCB is related to the 
tone time in the same way as in slow hopping; that is, Ts = log2(M) TCB. The approximate required bandwidth 
for MFSK modulation is BWb = M/Th, and the total channel bandwidth W = 2kBWb, where k is number of bits 
needed to specify the hop frequency, if essentially no overlapping of the modulation bandwidth BWb is 
desired. Certainly this is not a requirement and can differ in that the number of hopping frequencies can be a 
much greater value.  
 

 36                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
W
B
TCB
Th
TS
t
f
W
B
TCB
Th
TCB
Th
TS
TS
t
f
 
 
Figure 1.5-5 Fast frequency-hopping transmitter with MFSK modulation.  
 
 
Example 5 Now consider a very simple example in which a 4FSK modulation system is hopped with four 
hop frequencies in such a way that the hopping frequencies are spaced apart by the modulation bandwidth. 
The approximate bandwidth for the four-tone modulation is in this case, BWb ≅ 4/Th. Since it will be 
assumed that there are four different hopping frequencies, spaced apart by the bandwidth BWb, the total 
hopped bandwidth is about W ≅ (4/ Th)4 = 16/ Th. It will also be assumed that N = 2, that is there are two 
hops per 4-ary modulation tone. Figure 1.5-5 illustrates the transmitter frequencies and Figure 1.5-6 
illustrates the receiver frequencies. As can be seen from the figures, the hops occur twice per information 
tone. Also since there are two bits per each 4-ary tone, a channel bit is of the same duration as a hop time. 
 
B
TS
TCB
Th
t
f
B
TS
TS
TCB
Th
t
f
 
 
Figure 1.5-6 Fast frequency-hopping receiver with 4FSK modulation showing the dehopped waveform. 
 
 
1.5.3 Noncoherent Slow Frequency-Hopped Signals with DPSK Data Modulation  
 
The other common data modulation used with slow frequency-hopped signals is differential phase shift 
keying (SFH/DPSK). On each hop a burst of DPSK channel bits is transmitted, with the first one or more 
used for the reference bit and the rest used for data. The complex envelope of the frequency hopped signal 
with DPSK data modulation is given by 
 
(2
)
( )
2
(
)
(
) 
k
k
h
d
i
f t
T
h
j
T
d
k
j
v t
A
e
p
t
kT
d p
t
jT
π
θ
+
=
−
−
∑
∑
  
 
   (1.5.3-1) 
 
where fk are the hop frequencies, Td is the DPSK data symbol duration, P = A2 is the power, and Th is the 
frequency-hop duration. The random phase variables  k are assumed to be uniform random phase variables, 
and independent from hop to hop. In addition the dj represent the data sequence and are assumed to have 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             37 
equally likely random variables, taking on the value of +1 or –1 with equal probability. It is also assumed that 
the data, phase, and frequencies are statistically independent. Thus for each hop there are  
 
 
 
 
 
 
/
h
d
N
T
T
=
 
 
 
 
 
   (1.5.3-2) 
 
DPSK channel bits per hop time. The signal corresponding to the complex envelope is given by 
 
0
(2
)
( )
Re
2
(
)
(
)
 
k
k
h
d
i
f t
i
t
T
h
j
T
d
k
j
x t
A
e
p
t
kT
d p
t
jT e
π
θ
ω
+
⎧
⎫
=
−
−
⎨
⎬
⎩
⎭
∑
∑
  
  (1.5.3-3) 
 
which can be somewhat simplified to 
 
     
 
 
  
(
)
0
( )
2
(
)
(
)
                   
cos
2
 
h
d
T
h
j
T
d
k
j
k
k
x t
A
p
t
kT
d p
t
jT
f
t
π
ω
θ
=
−
−
×
+
+
⎡
⎤
⎣
⎦
∑
∑
 
 
 
  (1.5.3-4) 
 
Figure 1.5-7 illustrates a picture of the hop with the data chips placed on the hop. Note that the first channel 
bit is reserved for the reference bit (actually it could be more than one), and the remainder is used for the 
data. The overhead of one bit causes a loss of efficiency of (N–1)/N, when there are N data symbols per hop, 
which is small when N is large. 
 
Hop time
1 Ref. Channel bit
Data channel bits
(N channel bits)
(N– 1 channel data bits)
Hop time
1 Ref. Channel bit
Data channel bits
(N channel bits)
(N– 1 channel data bits)
 
 
Figure 1.5-7 Hop time showing the reference bit and the data bits. 
 
The spectral density of the resulting waveform can be approximated in the case that N is reasonably 
large. Note that if the complex envelope, v(t), is viewed as a random process, the RF version of the process, 
say, n(t), can be written at RF as 
 
 
 
 
 
0
( )
Re
( )
 
i
t
n t
v t e ω
⎡
⎤
=
⎣
⎦ 
 
 
 
   (1.5.3-5) 
 
The auto correlation function of v(t) is given by [9] 
 
 
 
 
 
    
{
}
1
( )
( ) (
)  
2
v
R
E v t v t
τ
τ
∗
=
+
 
 
 
 
   (1.5.3-6) 
 
so that the autocorrelation function of the process n(t) is given by 
 
 
 
 
 
      
0
( )
Re
( )
 
i
n
v
R
R
e
ω τ
τ
τ
⎡
⎤
=
⎣
⎦ 
 
 
 
   (1.5.3-7) 
 
and the power spectral density is given by 
 

 38                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
 
 
 
      
[
]
0
0
1
( )
(
)
(
)  
2
n
v
v
S
f
S
f
f
S
f
f
=
−
+
+
 
 
 
 
   (1.5.3-8) 
 
In order to obtain the power spectral density of v(t), it is necessary to first take the ensemble average and then 
the time average, since the hopping process is not a stationary random process. Let Rv(  ,t) denote the 
ensemble averaged but not time averaged autocorrelation function. From (1.5.3-1) one can write for Rv(   t)  
 
(
)
(
(
)
)
2
(
)
(
)
1
( , )
 
2
2
(
)
(
)
k
k
h
d
l
l
h
d
i
t
T
h
j
T
d
k
j
v
i
t
T
h
m
T
d
l
m
P
e
p
t
kT
d p
t
jT
R
t
E
P
e
p
t
lT
d p
t
mT
ω
θ
ω
τ
θ
τ
τ
τ
−
+
+
+
+
⎧
⎫
−
−
×
⎪
⎪
=
⎨
⎬
+
−
+
−
⎪
⎪
⎩
⎭
∑
∑
∑
∑
 
  (1.5.3-9) 
 
Since the phase values are independent from hop to hop, this expression can be simplified to  
 
        
( , )
(
)
(
)
(
)
(
)  
k
h
h
d
d
i
v
T
h
T
h
j
T
d
m
T
d
k
j
m
R
t
E P
e
p
t
kT
p
t
kT
d p
t
jT
d p
t
mT
ω τ
τ
τ
τ
⎧
⎫
=
−
+
−
−
+
−
⎨
⎬
⎩
⎭
∑
∑
∑
    (1.5.3-10) 
 
Approximating the time average by neglecting the hop pulses and only accounting for the data chip pulses, 
one obtains 
 
 
 
 
 
2
1
( )
1
       
 
h
k
M
i
f
v
d
k
h
d
P
R
e
T
M
T
π
τ
τ
τ
τ
=
⎡
⎤
=
−
≤
⎢
⎥
⎣
⎦
∑
  
 
 (1.5.3-11) 
 
and is zero otherwise. It follows from (1.5.3-8), after grouping the exponentials together along with the 
triangular function, that the resulting power spectral density is given by 
 
(
)
(
)
{
}
2
2
0
0
1
( )
sinc((
)
sinc((
)
 
2
h
M
d
k
d
k
d
k
h
PT
S f
f
f
f T
f
f
f T
M
=
≅
−
−
+
+
+
∑
 
 
(1.5.3-12) 
 
This result assumes that each frequency has the same weighting, 1/Mh; when the weighting is not the same 
for each frequency, the spectral density changes to  
 
   
 
(
)
(
)
{
}
2
2
0
0
1
( )
sinc((
)
sinc((
)
 
2
h
M
d
k
k
d
k
d
k
PT
S f
W
f
f
f T
f
f
f T
=
≅
−
−
+
+
+
∑
 
(1.5.3-13) 
 
where Wk is the relative weighting for each frequency. 
 
Example 6 Consider a simplified example of a system that illustrates the spectral density derived in (1.5.3-
11). For simplicity let Mh = 8, and the frequencies in GHz to be {fk}= {0.2,0.4,0.6,0.8,1,1.2,1.4,1.6}, and let 
the center frequency be f0 =1 GHz. The resulting spectral density is illustrated in Figure 1.5-8. Note that the 
spectral density fills the bandwidth from a little greater than 1.2 to 2.6 GHz. 
 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             39 
0.5
1
1.5
2
2.5
3
3.5
0
0.02
0.04
0.06
0.08
S( )f
f (GHz)
f (GHz)
S(f )
0.5
1
1.5
2
2.5
3
3.5
0
0.02
0.04
0.06
0.08
S( )f
f (GHz)
f (GHz)
S(f )
(GHz)
(GHz)
f (GHz)
S(f )
 
 
Figure 1.5-8 Power spectral density for a DPSK FH signal. 
 
 
1.5.4 Noncoherent Slow Frequency-Hopped Signals with BPSK Data Modulation 
 
The other common data modulation used with frequency-hopped signals is coherent phase binary shift 
keying (SFH/BPSK). On each hop a burst of BPSK channel bits are transmitted along with a group of 
channel sync bits. The function of the channel sync bits is to provide both phase and channel bit timing 
necessary to demodulate the data bits. The complex envelope of the frequency hopped signal with BPSK data 
modulation is given by 
 
(2
)
( )
2
(
)
(
) 
k
k
h
d
i
f t
T
h
j
T
d
k
j
v t
A
e
p
t
kT
d p
t
jT
π
θ
+
=
−
−
∑
∑
 
 
   (1.5.4-1) 
 
where fk are the hop frequencies, Td is the BPSK data symbol duration, A2 = P is the power, and Th is the 
frequency hop duration. The  k are assumed to be uniform random phase variables, independent from hop to 
hop. In addition the dj are assumed to be equally likely random variables representing the data and taking on 
the value of +1 or –1 with equal likelihood. It is also assumed that the data, phase, and frequencies are 
mutually statistically independent. The transmitted signal is given by 
 
0
(2
)
( )
Re
2
(
)
(
)
 
k
k
h
d
i
f t
i
t
T
h
j
T
d
k
j
x t
A
e
p
t
kT
d p
t
jT e
π
θ
ω
+
⎧
⎫
=
−
−
⎨
⎬
⎩
⎭
∑
∑
  
   (1.5.4-2) 
 
which can be simplified somewhat to 
 
(
)
0
( )
2
(
)
(
)
            
cos
2
 
h
d
T
h
j
T
d
k
j
k
k
x t
A
p
t
kT
d p
t
jT
f
t
π
ω
θ
=
−
−
×
+
+
⎡
⎤
⎣
⎦
∑
∑
 
   
   (1.5.4-3) 
 
It follows that on each hop there are  
 
 
 
 
 
 
 
/
 
h
d
N
T
T
=
 
 
 
 
   (1.5.4-4) 
 
BPSK channel bits per hop time. Figure 1.5-9 illustrates a picture of the hop with the data channel bits and 
the sync words placed on the hop. If selective pulse jamming is not a concern then the first sync word could 
be placed at the beginning of the hop and the next one near the end so as to obtain a good estimate of the 
phase and the phase rate (or frequency). Conversely if selective pulse jamming is a concern then the location 

 40                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
of the sync words would have to be located pseudorandomly in the hop. The sync words have to be of 
sufficient length so as to produce a reasonable estimate of phase and timing. Whether one or more sync 
words are needed depends on the dynamic environment and the available signal-to-noise ratio. If there are L 
sync channel bits in the hop, then the relative efficiency is (N–L)/N.  
 
Data channel bits
(N– L data channel bits)
Sync words
(L channel bits)
Hop (N total channel bits)
Data channel bits
(N– L data channel bits)
Sync words
(L channel bits)
Hop (N total channel bits)
Hop (N total channel bits)
 
 
Figure 1.5-9 Hop time showing the sync words and the data bits for noncoherent frequency hopping with BPSK data. 
 
 
1.6 HYBRID SPREAD SPECTRUM SYSTEMS 
 
In this section the hybrid combination of direct sequence spread spectrum modulation in combination with 
frequency hopping will be considered. Other possibilities are also possible, of course. 
 
 
1.6.1 Hybrid DS with Slow Frequency Hopping with BPSK Data 
 
Hybrid spread spectrum direct sequence frequency-hopped systems have some of the advantages of 
frequency hopping and direct sequence (DS) systems. A hybrid spread spectrum modulation process spreads 
the signal much more than just frequency hopping does. Each hop, BPSK data, and a BPSK direct sequence 
signal are imposed on it, so that at any given time the frequency is hopped to an essentially random 
frequency, and each hop has a spread spectrum sequence spreading that hop. Let Th denote the hop duration, 
let Td denote the data duration, and let Tc denote the chip duration for the direct sequence on the hop. Let the 
number of channel bits per hop be given by N, where  
 
 
 
 
 
 
 
h
d
T
N
T
=
  
 
 
 
(1.6.1-1) 
 
Let M denote the number of direct sequence chips per hop, so that  
 
 
 
 
 
 
 
h
c
T
M
T
=
 
 
 
 
(1.6.1-2) 
 
where typically M >>N, that is  
 
 
 
 
 
 
 
d
c
T
T
>>
 
 
 
 
(1.6.1-3) 
 
with the further assumption that the ratio M/N is an integer. Figure 1.6-1 illustrates the relationship between 
the chips, hops, and data bits, with N data channel bits and M chips per hop. The complex envelope of the 
hybrid signal is given by 
 
 
        
(2
)
( )
2
(
)
(
)
(
) 
k
k
h
d
c
i
f t
T
h
j
T
d
m
T
c
k
j
m
v t
A
e
p
t
kT
d p
t
jT
a p
t
mT
π
θ
+
=
−
−
−
∑
∑
∑
      
 (1.6.1-4) 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             41 
where A2 = P is the signal power, fk are the hop frequencies which are assumed to be randomly chosen from 
hop to hop, dj is the j-th data channel bit that takes on the values 1 and –1, and am is the m-th chip in the 
direct sequence spreading code, which also takes on the values of 1 and –1 with probability of 1/2 and the 
chips are assumed to be statistically independent. The corresponding RF signal is given by 
 
 
0
(2
)
( )
Re
2
(
)
(
)
(
)
 
k
k
h
d
c
i
f t
i
t
T
h
j
T
d
m
T
c
k
j
m
x t
A
e
p
t
kT
d p
t
jT
a p
t
mT e
π
θ
ω
+
⎧
⎫
=
−
−
−
⎨
⎬
⎩
⎭
∑
∑
∑
  
  (1.6.1-5) 
 
which can be somewhat simplified to 
 
(
)
0
( )
2
(
)
(
)
(
)cos
2
 
h
d
c
T
h
j
T
d
m
T
c
k
k
k
j
m
x t
A
p
t
kT
d p
t
jT
a p
t
mT
f
t
π
ω
θ
=
−
−
−
+
+
⎡
⎤
⎣
⎦
∑
∑
∑
  
 (1.6.1-6) 
 
One channel bit
First chip
One hop
N-th channel bit
M-th chip
One channel bit
First chip
One hop
N-th channel bit
M-th chip
 
 
Figure 1.6-1 A hybrid direct sequence frequency-hopped system. 
 
 
When the hopping bandwidth is not as great as to cause the chip delay to vary significantly from 
hop to hop, then time tracking can be accomplished by code tracking the direct sequence signal from hop to 
hop using a noncoherent code tracking loop. If this is not the case, then it is necessary to track the code and 
data from hop to hop. This could be accomplished by reserving one or more words in the hop to be used for 
phase (and possibly phase rate) as well as the timing estimates. In this case it may be necessary to store the 
data, derive the time and phase estimates, and demodulate the data in nonreal time. 
 
The processing gain for hybrid FH/DS SS systems is given by a similar equation as for FH SS 
systems; that is 
 
 
 
 
 
 
2
h
c
b
W
R
PG
BW
+
=
 
 
 
 
(1.6.1-7) 
 
where usually Wh is the hopped bandwidth and Rc is the chip rate, with BWb taken as twice the data bit rate. 
The numerator is the hopping frequency range plus twice the chip rate, which accounts for the direct 
sequence spectral first nulls on each end of the hopping range. 
 
 
1.6.2 Hybrid OQPSK DS with SFH with BPSK Data  
 
In addition to BPSK direct sequence spreading modulation, one can also consider (offset or not offset) 
quadriphase direct sequence spreading with frequency hopping. Although either offset or standard QPSK 
could be used, typically staggered QPSK is used since it has less spectral regrowth when passed through a 
nonlinear amplifier such as a solid state or TWT amplifier. In this section we will assume that the data is 
applied as BPSK modulation (DS-SFH/BPSK). The complex envelope of this waveform is given by 
 
(2
)
( )
(
)
(
)
(
)
(
/ 2)  
k
k
h
d
c
c
i
f t
T
h
j
T
d
m
T
c
n
T
c
c
k
j
m
n
v t
P
e
p
t
kT
d p
t
jT
a p
t
mT
i
b p
t
nT
T
π
θ
+
⎡
⎤
=
−
−
−
+
−
−
⎢
⎥
⎣
⎦
∑
∑
∑
∑
 
 
 
 
 
 
 
 
 
 
 
 
(1.6.2-1) 

 42                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
 
where now am and bn are the m-th and n-th elements of the two quadrature sequences used in the spreading 
process, and P is the signal power. If the data sequence is denoted by d(t) and the two PN sequences are 
denoted by PN1(t) and PN2(t), respectively, then the RF signal is described by 
 
[
]
0
(2
)
1
2
( )
Re
(
) ( )
( )
( )
 
k
k
h
i
f t
i
t
T
h
k
x t
P
e
p
t
kT d t
PN t
iPN t
e
π
θ
ω
+
⎧
⎫
=
−
+
⎨
⎬
⎩
⎭
∑
 
 
(1.6.2-2) 
 
This can be simplified somewhat to 
 
(
)
(
)
1
0
2
0
( )
(
) ( )
( )cos
2
 
       
(
) ( )
( )sin
2
h
h
T
h
k
k
k
T
h
k
k
k
x t
P
p
t
kT d t PN t
f
t
P
p
t
kT d t PN t
f
t
π
ω
θ
π
ω
θ
=
−
+
+
⎡
⎤
⎣
⎦
−
−
+
+
⎡
⎤
⎣
⎦
∑
∑
     
(1.6.2-3) 
 
Figure 1.6-2 illustrates the baseband chip and data periods along with the two codes. Note that they are offset 
from each other by 1/2 of a code chip. The processing gain for OQPSK spreading with frequency hopping 
and BPSK data is given by  
 
 
 
 
 
2
h
c
b
W
R
PG
BW
+
=
 
 
 
 
 
(1.6.2-4) 
 
where Wh is the hopped bandwidth and Rc is the chip rate with BWb taken as twice the data bit rate. The 
numerator is the hopping frequency range plus twice the chip rate, which accounts for the direct sequence 
spectral first nulls on each end of the hopping range, as discussed in the previous section. 
 
One channel bit
First chip
One hop
N-th channel
bit
M-th chip
One half chip offset
PN1(t)-sequence
PN2(t)-sequence (delayed one half of a chip)
One channel bit
One channel bit
First chip
One hop
N-th channel
bit
M-th chip
One half chip offset
PN1(t)-sequence
PN2(t)-sequence (delayed one half of a chip)
PN2(t)-sequence (delayed one half of a chip)
 
 
Figure 1.6-2 A hybrid offset quadriphase direct sequence frequency-hopped system. 
 
 
1.7 TIME HOPPING SPREAD SPECTRUM SIGNALS 
 
Although time hopping is not concurrently used very much, a short discussion of this type of spread spectrum 
technique will be briefly presented. A time hopping spread spectrum waveform is shown in Figure 1.7-1. 
Time is broken into M time slots where M satisfies  
 
 
 
 
 
 
 
2  
m
M =
 
 
 
 
      (1.7-1) 
 
During each frame only one time slot will be modulated with a message by any compatible modulation 
method. A pseudorandom code generator chooses the particular time slot that is chosen for a given frame. All 
of the channel bits accumulated during the last frame are “burst” into the selected transmitted burst slot. Let 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             43 
Tf denote the frame duration in seconds, k is the number of channel bits in one frame and is transmitted in one 
burst of duration, Tf /M, Tb is the duration of one channel bit (nonburst duration), and therefore  
 
 
 
 
 
 
 
f
b
T
kT
=
 
 
 
 
      (1.7-2) 
 
Now the width of each time slot for the k channel bits is Tf /M. Since there are k channel bits in each 
burst, the burst channel bit time is given by  
 
 
 
 
 
 
/(
)
/
 
bBURST
f
b
T
T
kM
T
M
=
=
 
 
 
      (1.7-3) 
 
Thus the transmitted bandwidth is M times the message channel bit bandwidth, so that the 
processing gain is M, that is 
 
 
 
 
 
 
 
PG
M
=
 
 
 
 
    (1.7-4) 
 
In the case of time hopping, the processing gain comes from the fact that time is compressed by a 
factor of M and then expanded, whereas in frequency hopping or direct sequence SS systems it is the 
frequency that is expanded and then compressed to produce the processing gain. 
A time hopping receiver [16] is illustrated in Figure 1.7-2. The receiver accepts the time hopped 
signal plus noise and is switched via the gate controlled by the PN code generator to pass the correct burst in 
the particular frame. The demodulator demodulates the signal and with the help of the bit synchronizer the 
demodulated data is sent to storage and reclocked out at the unburst rate. The bit synchronizer controls the 
PN code generator to maintain synchronization with the receiver signal. 
 
One frame
t
Transmitted bursts
One frame
t
Transmitted bursts
 
 
Figure 1.7-1 A time hopping spread spectrum system. 
 
 
Electronically
Controllable
Switch
AND
gate
Demodulator
Bit
synchronizer
PN code
generator
...
Timing
VCO
Data
storage
and 
reclocking
Received
signal
plus
noise
m bits
data out
Electronically
Controllable
Switch
AND
gate
Demodulator
Bit
synchronizer
PN code
generator
...
Timing
VCO
Data
storage
and 
reclocking
Received
signal
plus
noise
m bits
data out
 
 
Figure 1.7-2 A time hopping spread spectrum receiver. 

 44                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
 
1.8 AN INTRODUCTION TO OFDM  
Equation Section (Next) 
Orthogonal frequency division multiplexing (OFDM) is a communication technique in which a large number 
of modulated carriers are closely spaced in frequency and are selected so that the carriers are orthogonal. To 
avoid a large number of modulators and filters at the modulator and a similar number of receiver filters and 
demodulators at the receiver, fast Fourier transform techniques are utilized.  
 
OFDM is utilized in communications for the following reasons [17]. (1) It is an efficient method of 
combating multipath. For a given delay spread, the implementation complexity is considerably lower 
compared to a single carrier system with an equalizer. (2) In slow time varying channels, it is possible to 
considerably increase the capacity by adapting the data rate of each channel according to the signal-to-noise 
ratio of that carrier (sometimes called a subcarrier) signal. (3) Since narrowband interference affects only a 
few carriers, OFDM is robust against narrowband interference. OFDM has some disadvantages also. (1) 
OFDM is more sensitive to frequency offset error and phase noise induced errors. (2) Due to the fact that the 
sum of the carriers is not constant envelope, the efficiency is reduced compared to a single carrier signal with 
constant envelope if it is utilized without mitigation.  
 
The basic idea of OFDM is to break the existing bandwidth W Hz into Ns subchannels of bandwidth 
 W Hz, so that W =Ns  W. Consequently different information symbols can be transmitted on the different 
subchannels. Thus the data is transmitted via frequency division multiplex (FDM). Each subchannel is 
associated with a subcarrier signal, at frequency fn, of the form [18]  
 
                        
( )
sin(2
)    
0,1,2...
1
sc
n
s
s
t
f t
n
N
π
=
=
−      
 
  (1.8-1) 
 
and fn is the center frequency of the n-th  W Hz bandwidth. By distributing the data from one channel to Ns 
channels, the effective symbol rate is reduced to 1/ Ns of what a single channel would have, if they all have 
equal rates. For OFDM the symbol rate (1/T) of each subchannel is selected to be equal to the separation of 
adjacent subcarrier channel frequencies. Thus the subcarrier symbols have duration T seconds, and if the 
subcarrier spacing is set to be  W = 1/T, the subcarriers will be orthogonal, and we shall see. Consider two 
subcarriers at frequencies fn = n/T and fm = m/T, and let 
and 
0
n
m
θ
θ
θ
=
=
 (for computational convenience), 
then 
 
0
0
1
(
)
1
(
)
sin(2
)sin(2
)
sin 2
sin 2
2
2
T
T
T
n
n
m
m
o
n
m
n
m
f t
f t
dt
t
t
T
T
π
θ
π
θ
π
θ
π
θ
⎡
−
⎤
⎡
+
⎤
⎛
⎞
⎛
⎞
+
+
=
+
+
+
⎜
⎟
⎜
⎟
⎢
⎥
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
⎣
⎦
∫
 
(1.8-2) 
 
Evaluating this integral we find that 
 
 
0
sin(2
)sin(2
)
0,   when 
T
n
n
m
m
f t
f t
dt
n
m
π
θ
π
θ
+
+
=
≠
∫
 
(1.8-3) 
 
And therefore distinct subcarriers are orthogonal, irrespective of their phases. If we let Ts be the symbol 
period of a single carrier system, then the symbol period of the individual subcarriers is given by 
 
 
s
s
T
N T
=
 
(1.8-4) 
 
This large symbol duration greatly diminishes the intersymbol interference in OFDM.  
The modulator and demodulator for OFDM can be constructed from discrete Fourier transform 
(DFT) processing. When a sufficient number of subcarriers are utilized, the fast Fourier transform (FFT) can 
be utilized to efficiently modulate and demodulate OFDM. One problem in transmitting a large number of 
subcarriers is the fact that the envelope is not constant. This can be mitigated somewhat by randomizing the 
phases of each subcarrier [19] or by clipping the peak power [20]. Without some form of mitigation it is 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             45 
required to back off the input drive level of the transmitter, to minimize the distortion causing power 
inefficiencies. Lawrey [20] found that OFDM could be heavily clipped with little effect on the receiver BER. 
As a point of reference, digital TV has somewhere between 2,000–8,000 subcarriers and Hiperlan 2 has about 
48 subcarriers [19]. 
 
 
1.8.1 OFDM Communication System Implemented Via the FFT 
Equation Section (Next) 
OFDM often utilizes quadrature amplitude modulation (QAM) or QPSK modulation [17]. We will assume 
that QAM or QPSK is the modulation used for OFDM. Figure 1.8-1 illustrates the block diagram of the 
OFDM transmitter and receiver.  
The serial to parallel converter subdivides the input data into frames of Nf bits. The Nf bits in each 
frame are assigned to Ns groups in which the j-th group is assigned nj bits. The total sum of all the bits in 
each subcarrier group must be equal to the total number of bits, thus  
 
 
 
                              
           
1
s
N
j
f
j
n
N
=
=
∑
 
                                         (1.8.1-1) 
 
We can view the multicarrier scheme as generating Ns independent QAM subcarriers for which the 
subcarrier symbol rate is 1/T, and therefore the number of bits per symbol may be different if the nj are not all 
identical. It follows that the number of signal points, Mj, in the jth subcarrier channel is given by  
 
Serial to
parallel
converter
Multicarrier
modulator
(IDFT)
Cyclic prefix
and
parallel to serial
conversion
D/A
converter
& LPF
Transmitter
Serial
data bits
Receiver
front end
LPF & 
A/D
converter
Remove cyclic prefix
and
parallel to serial
conversion
Multicarrier
demodulator
(DFT)
Multicarrier
detector
Parallel to
serial
converter
Detected
data bits
Serial to
parallel
converter
Serial to
parallel
converter
Multicarrier
modulator
(IDFT)
Multicarrier
modulator
(IDFT)
Cyclic prefix
and
parallel to serial
conversion
Cyclic prefix
and
parallel to serial
conversion
D/A
converter
& LPF
D/A
converter
& LPF
Transmitter
Serial
data bits
Receiver
front end
Receiver
front end
LPF & 
A/D
converter
LPF & 
A/D
converter
Remove cyclic prefix
and
parallel to serial
conversion
Multicarrier
demodulator
(DFT)
Multicarrier
detector
Parallel to
serial
converter
Parallel to
serial
converter
Parallel to
serial
converter
Detected
data bits
 
 
Figure 1.8-1 Block diagram of an OFDM transmitter and receiver. 
 
 
2
j
n
j
M =
 
(1.8.1-2) 
 
 
Let dn (
n
n
n
d
a
jb
=
+
) denote the complex valued signal points on the nth subcarrier channel, where 
0,1,2...
1
s
n
N
=
−. These data information symbols represent the values of the discrete Fourier transform 
(DFT) of a multicarrier OFDM signal s(t) for which the data modulation is QAM or QPSK. Hence the Ns 
point inverse DFT (IDFT) produces the complex valued envelope sequence 
 
 
1
2
/(
)
0
1
   
0,1,2,...
1
s
s
N
j
nk
N
n
k
s
k
s
v
d e
n
N
N
π
−
=
=
=
−
∑
 
(1.8.1-3) 
 
The resulting IDFT sequence, vn (n = 0,1,2…Ns–1), corresponds to samples of the OFDM signal complex 
envelope, v(t), consisting of Ns subcarriers, and can be written as 
 
 
1
2
/
0
1
( )
s
N
j
kt T
k
k
s
v t
d e
N
π
−
=
=
∑
 
(1.8.1-4) 
 

 46                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
in which T is the signal symbol duration and 
(
)
/(
)
n
s
v
v nT
N
=
 for n = 0,1,2,…Ns–1. The subcarrier 
frequencies are specified by fk = k/T for k = 0,1,2,…Ns–1. The samples are passed through the D/A with a 
low pass filter and converted to the continuous OFDM signal complex envelope of the form of (1.8.1-4). The 
transmitted signal can be obtained from the relationship 
 
 
{
}
2
( )
Re
( )
c
j
f t
s t
v t e
π
=
 
(1.8.1-5) 
 
This can be expanded to the form 
 
          
(
)
(
)
1
0
1
( )
cos 2 (
/
)
sin 2 (
/
)
   
0,1,2,...
s
N
k
c
k
c
s
k
s
s t
a
f
k T t
b
f
k T t
k
N
N
π
π
−
=
=
+
−
+
=
⎡
⎤
⎣
⎦
∑
           (1.8.1-6) 
 
Thus the transmitter places the modulation on the inphase and quadrature carriers and amplifies the 
signal and transmits it.  
 
 
1.8.2 OFDM Intersymbol Interference Reduction Techniques 
Equation Section (Next) 
We have not addressed the cyclic prefix shown in Figure 1.8-1. This is a technique used to prevent 
intersymbol interference (ISI). Assume that the channel impulse response lasts for M + 1 samples and assume 
that M << Ns. The cyclic prefix is accomplished by appending the last samples to the beginning of the block 
[18].  
Therefore, the appended (new) M block sequence consist of the samples 
 
                       
     
1
2
1
,
,
,...
s
s
s
s
N
M
N
M
N
M
N
d
d
d
d
−
−
+
−
+
− 
                            (1.8.2-1) 
 
These are appended to the beginning of the old block sequence. As a consequence the transmitted sequence is 
Ns+M samples long, with n = –M to Ns–1, so that the first M samples constitute the cyclic prefix. The 
meaning of cyclic is now clear, since the first M and the last M samples are the same [17]. The ISI from the 
previous symbol will expire before the actual (data carrying) samples occur. 
An alternative method of preventing ISI is to provide a time guard in between the actual the data 
samples so that ISI can be avoided on the symbols. This is achieved by appending extra (dummy) samples to 
each block of Ns signal samples. Then a guard time of MT/(Ns) seconds are appended at the beginning of the 
block, so that the channel response is negligible when the actual data samples start.  
 
The receiver does the inverse processing on the received signal. First the I and Q components of the 
transmitted signal are separated and then two components are low pass filtered and analog to digital 
converted. The cyclic prefix is removed (if it was appended at the transmitter) and the DFT is used to 
perform the multicarrier detection. Finally the parallel to serial converter puts the data estimates in serial 
form.  
 
A few comments are in order regarding this discussion. This discussion was intended to be an 
introduction to how OFDM works in principle, but has not discussed some important issues, such as 
synchronization. If the synchronization in time or frequency is in error ISI occurs. It is possible to use OFDM 
training symbols for which the receiver knows the data sequence [17]. Obviously both time and carrier 
frequency must be obtained by the receiver to demodulate the OFDM signal. 
 
 
1.8.3 OFDM Power Spectral Density  
Equation Section (Next) 
In order to obtain the power spectral density (PSD) of the OFDM signal we will assume that all orthogonal 
carriers are modulated by the same rate data with rectangular pulse shapes (not rounded to minimize the 
sidelobes). Since each subcarrier has a sin2(2 fT)/(2 fT)2  spectral shape, it is assumed that all the subcarriers 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             47 
have statistically independent data (based on the serial input data being statistically independent) so that the 
PSD is of the form [21] 
 
                        
 
2
1
0
sin( (
)
( )
( (
)
s
N
n
OFDM
k
n
f
f T
S
f
C
f
f T
π
π
−
=
−
=
−
∑
              
         (1.8.3-1) 
 
and fn = n/T. A plot of the relative PSD (maximum at 0 dB) for the case that Ns =16 is shown in Figure 1.8-2. 
It can be seen that the bandwidth is about (N+1)/T or 
 
                               
1
1
1
s
s
s
s
N
N
BW
R
T
N T
T
+
+
≅
=
≅
=
 
                         (1.8.3-2) 
 
This is the symbol rate of the original single carrier system and is also the approximate bandwidth. Hence 
from the bandwidth point of view, OFDM offers no advantage or disadvantage.  
 
The spectral shape of OFDM is nearly flat out to last subcarrier (the fifteenth in the figure) and has 
sidelobes that diminish in amplitude as frequency increases.  
 
 
0
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
50
40
30
20
10
0
Normalized frequency fT
S(f) (dB)
0
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
50
40
30
20
10
0
Normalized frequency fT
S(f) (dB)
 
 
 
Figure 1.8-2  PSD of the complex envelope of an OFDM signal with Ns = 16. 
 
 
1.9 AN INTRODUCTION TO ULTRAWIDEBAND COMMUNICATIONS 
Equation Section (Next) 
In this section we will present an introduction to ultrawideband (UWB) communications. The term 
ultrawideband has come to denote a group of equivalent terms such as: impulse, carrier-free, baseband, non-
sinusoidal, time domain, orthogonal function, and large-relative-bandwidth radio/radar signals [22]. The 
actual term “ultra wideband” was apparently used by the United States Department of Defense circa 1989. In 
this section we will introduce the two distinct types of UWB communications. 
 
 
1.9.1 A Brief Early History of UWB Communications 
 
It may be fair to state that the first application of UWB occurred when Guglielmo Marconi, in 1901, 
transmitted Morse code across the Atlantic Ocean using a spark gap type radio transmitter. The modern 
development of what is now known as UWB started around the late 1960s with the pioneering work of H. F. 

 48                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
Harmuth at the Catholic University of America, G. F. Ross and K. W. Robbins at the Sperry Rand 
Corporation, and P. Van Etten at the United States Air Force’s Rome Air Development Center.  
 
The papers and books by Harmuth published in the period of 1969–1984 provide the basic design 
approach for UWB receivers and transmitters. Independently and at about the same time period (1972–1987), 
Ross and Robbins pioneered the use of UWB in a number of applications including both communications 
and radar. An early patent by Ross [23] was a landmark patent in UWB transmitters and receivers. Both 
Harmuth, and Ross and Robbins applied the principle of matched filtering to UWB systems. The work of 
Van Etten’s testing of UWB radar systems allowed the development of antenna and system design concepts 
in UWB [24]. R. Morey designed a UWB radar system that could penetrate the Earth, which later became a 
success in the field of geophysical survey systems in 1974 [25]. 
 
In 1978 C. L. Bennett and G. F. Ross [26] published the pulse generation methods known to date. 
Both industrial and academic research continued unabated. Then in 1990 Los Alamos National Laboratory 
(LANL) produced a conference that provided a forum for the many developments in the field of UWB 
systems. Then in 1994 T. E. McEwan [27] invented the micropower impulse radar (MIR), a motion sensor, 
that provided a practical UWB system that operated at ultra low power and was inexpensive and very 
compact in size. Barrett [22] has a rather complete history of UWB work, and covers much more than has 
been covered here.  
 
Many conferences have been successfully done on UWB and at least 14 books have been published 
on the subject of UWB [28]. In fact a very useful resource on UWB is given in [28]. Currently there are two 
UWB factions. One led by Intel, Nokia, Texas Instruments, and many others (130 in 2004) are proponents of 
The Multiband OFDM Alliance (MBOA), which is a multiband UWB approach. The other group, led by 
Freescale, Motorola, Time Domain, and others (40 in 2004), champion the direct sequence UWB approach. 
Both sides feel their approach is superior; however, in the end only one will probably survive. 
 
 
1.9.2 Description of UWB Signals  
 
The area of UWB has developed two distinct forms of signaling: (1) one is based on transmitting very short 
duration pulses (impulse radio) to carry information, and (2) the other approach is based on the multiple 
simultaneous transmission of carriers. The Defense Advanced Research Project Agency (DARPA) in 1990 
concluded that in order to be considered a UWB signal the fractional bandwidth must be at least 25%, 
regardless of the center frequency or the signal time-bandwidth product. The fractional bandwidth is defined 
by (as a fraction) 
 
                        
    
(
)
(
)
(
)
FBW
/ 2
u
l
u
l
f
f
f
f
−
=
+
 
                                       (1.9.2-1) 
 
in which fu is the upper bandwidth limit and fl is the lower bandwidth limit. Another bandwidth used in UWB 
work is the relative bandwidth [29, 30], defined as 
 
                           
      
(
)
(
)
RBW
u
l
u
l
f
f
f
f
−
=
+
 
                                    (1.9.2-2) 
 
The upper and lower limits are presumed to define the bandwidth to say, 95% or 99%.  
 
Unlike classic communications, pure impulse radio does not utilize a modulated carrier to carry the 
information. Rather the signal is a series of pulses that are extremely short in time duration (nanosecond or 
less) and the transmit bandwidth is in the gigahertz range, and the FBW is at least 25%.  
 
The propagated impulse radio signal can be represented as 
 
                          
   ( )
( ) (
)
i
f
k
s t
A t p t
kT
∞
=−∞
=
−
∑
 
                                   (1.9.2-3) 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             49 
 
in which Ai(t) is the amplitude of the pulse and is equal to 
p
± E  according to the sign of the pulse and 
p
E  is 
the pulse energy. In addition Tf is the repetition time duration, with the knowledge that the frame contains 
one pulse per frame. The received signal is modified by the channel, and as well by both the transmitter and 
receiver antenna responses. 
 
The use of multicarrier communications first started in the late 1950s to early 1960s in order to 
provide greater data rate, high frequency (HF), military communications. The modulation, known as OFDM, 
has evolved as a densely packed set of subcarriers with overlapping power spectral densities, as was 
discussed in the previous section. This approach was patented in 1970 [31]. Multicarrier OFDM (MC-
OFDM) is quite different from impulse UWB (I-UWB), in that the complex envelope (baseband) model of 
the modulation is of the form [32]  
 
                    
             
2
( /
)
1
( )
( )
s
N
j
k t T
k
k
s t
d
t e
π
=
= ∑
                                    (1.9.2-4) 
 
where N is the number of carriers (sometimes referred to as subcarriers) in the waveform, Tb is the bit 
duration, and Ts is the symbol duration and is given by  
 
                    
                 
s
b
T
NT
=
                                               (1.9.2-5) 
 
The dk(t) is the symbol stream modulating the kth carrier. Both of these UWB modulations will be discussed 
in more detail in the following two sections. 
 
 
1.9.2.1 I-UWB Signal Modeling 
 
Recall that (1.9.2-3) is the propagated signal model (not the envelope) of the impulse UWB (I-UWB) signal. 
It is to be noted that it is not necessarily true that this model represents the transmitter waveform, since the 
transmit antenna can distort the pulse shape. The most common pulse shapes for I-UWB work are the 
Gaussian pulse and its derivatives, since they are easy to describe and work with. The Gaussian pulse is 
described analytically by 
 
                                  
2
2
( )
2
2
( )
2
t
A
p t
e
σ
πσ
⎛
⎞
−⎜
⎟
⎜
⎟
⎝
⎠
=
 
                            (1.9.2-6) 
 
where 
2
σ  is the variance parameter. The pulse width is given by the expression  
 
                                       
2
p
T
πσ
=
 
                                              (1.9.2-7) 
 
which defines 99.8% of the pulse area. Another pulse model is the first derivative of the Gaussian pulse. This 
is used as a model since a UWB antenna may have the effect on the signal to be equivalent to differentiating 
the pulse with respect to the time variable. Letting the mean value be zero, the first derivative is given by  
[32, 33]  
 
                             
2
2
2
(1)
3
( )
2
t
At
p
t
te
σ
πσ
⎛
⎞
−
⎜
⎟
⎜
⎟
⎝
⎠
⎛
⎞
= −⎜
⎟
⎝
⎠
 
                               (1.9.2-8) 
 

 50                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
Where the superscript (n) denotes the n-th derivative. A third model is based on the second derivative of the 
Gaussian pulse and is given by [32, 34]  
 
                                                 
2
2
( )
2
(2)
2
5
3
1
( )
2
2
t
t
p
t
A
e
σ
πσ
πσ
−
⎛
⎞
=
−
⎜
⎟
⎝
⎠
                                 (1.9.2-9) 
 
And again the parameter   determines the pulse width. Figure 1.9-1 illustrates all three pulse types, with 
amplitude factors changed to make them appear to be of the same peak amplitude with σ  = 1. By changing 
the value ofσ , any time scale can be achieved. The pulses typically exist for a fraction of a nanosecond. 
 
Currently the FCC rules make UWB operation most practical in the 3.1–10.6-GHz frequency band. 
Consequently the three preceding pulses may not be useful for commercial systems [35]. Thus, another pulse 
shape has been suggested; it is called the Gaussian modulated sinusoidal pulse. The actual pulse shape is 
given by 
 
 
(
)
2
2
2
1/ 4
(
)
2
8
1
( )
cos 2
1
c
kt
c
f
k
k
p t
e
f t
e
π
π
π
−
⎛
⎞
⎜
⎟
⎜
⎟
⎝
⎠
⎛
⎞
= ⎜
⎟
⎝
⎠
+
 
(1.9.2-10) 
 
where the center frequency is denoted fc and k is again a spreading parameter. The pulse shape is plotted in 
Figure 1.9-2.  
 
Gaussian pulse
first derivative
Gaussian pulse
(or monocycle)
Second derivative
Gaussian pulse
4
3
2
1
0
1
2
3
4
4
3
2
1
0
1
2
3
4
Gaussian pulse
first derivative
Gaussian pulse
(or monocycle)
Second derivative
Gaussian pulse
4
3
2
1
0
1
2
3
4
4
3
2
1
0
1
2
3
4
 
 
Figure 1.9-1 Gaussian and the first and second derivates of a Gaussian pulse. 
 
 
10
8
6
4
2
0
2
4
6
8
10
2
1
0
1
2
Time in 10-10 seconds
Relative amplitude
10
8
6
4
2
0
2
4
6
8
10
2
1
0
1
2
Time in 10-10 seconds
Relative amplitude
 
 
Figure 1.9-2 A plot of the Gaussian modulated sinusoidal pulse with k =3*109 and fc = 5*109. 
 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             51 
As can be seen in the figure, the sine wave is amplitude modulated by a Gaussian shape.  
 
Now consider the power spectral density of some of the derivatives of Gaussian I-UWB signals. 
Assuming that the probability of a “+1” or a “–1” is 0.5 and the sequence has no memory, then the power 
spectral density is given by  
 
                                         
2
( )
( )
p
n
f
E
S f
X
f
T
=
 
                            (1.9.2-11) 
 
where Xn(f) is the Fourier transform of the n-th derivative of the pulse. The Fourier transform of the n-th 
derivative of a Gaussian pulse is given by [34]  
 
                                              
(
)
(
)
2
2
( )
2
exp
2
n
n
f
X
f
j
f
π σ
π
⎛
⎞
=
−
⎜
⎟
⎜
⎟
⎝
⎠
                       
(1.9.2-12) 
 
So that the amplitude spectrum is given by 
 
                                               
(
)
(
)
2
2
( )
2
exp
2
n
n
f
X
f
f
π σ
π
⎛
⎞
=
−
⎜
⎟
⎜
⎟
⎝
⎠
                    
(1.9.2-13) 
 
The power spectral density of a few pulse cases is shown in Figure 1.9-3.  
 
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
50
45
40
35
30
25
20
15
10
5
0
n = 1
n = 2
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
50
45
40
35
30
25
20
15
10
5
0
n = 1
n = 2
 
 
Figure 1.9-3 The power spectral density of the first and second derivative of a Gaussian pulse. 
 
 
 
Now let us briefly review a few modulation schemes that are compatible with I-UWB. One is pulse 
amplitude modulation (PAM). In PAM the transmit signal is given by 
 
                                
( )
( ) (
)
k
f
k
s t
Ad t p t
kT
∞
=−∞
=
−
∑
 
                           (1.9.2-14) 
 
where dk(t) represents the k-th amplitude of the pulse and depends on the data and the specific amplitude 
modulation scheme, and A is the peak amplitude of the pulse when the max (p(t)) normalized to unity. For 
the pulse position modulation scheme, the transmit signal is given by 
 
                                                  ( )
(
( ))
f
k
k
s t
Ap t
kT
d
t
∞
=−∞
=
−
−Δ
∑
                        
(1.9.2-15) 

 52                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
where dk(t) is the time modulation based on the data and   is the time base time offset. On-off keying (OOK) 
is also used in I-UWB and is similar to (1.9.2-14) except now the value of dk(t) is either on or off (1 or 0). 
 
Now let us consider some multiple access methods for I-USB. Multiple access implies that there is 
more than one signal available at the receiver in the same frequency band. If we let the impulse response 
between the kth user and the receiver be h(k)(t), then the received complex envelope signal can be represented 
by  
 
                                 
     
( )
( )
1
( )
( )
( )
( )
K
k
k
k
r t
s
t h
t
n t
=
=
+
∑
                          
     (1.9.2-16) 
 
when there are K users. Of course, the actual bandpass received signal is given by 
 
                                  
2
( )
Re
( )
c
j
f t
BP
r
t
r t e
π
⎡
⎤
=
⎣
⎦ 
                               (1.9.2-17) 
 
 
First consider CDMA. The k-th signal can be represented as [32] 
 
                           
       
( )
( )
/
( )
(
)
s
k
k
n
f
n N
n
s
t
PN d
p t
nT
∞
⎢
⎥
⎣
⎦
=−∞
=
−
∑
                         
  (1.9.2-18) 
 
in which PNn is the pseudorandom code sequence for the n-th pulse, Ns is the number of pseudonoise chips 
per data symbol, and 
( )
k
id
 is the i-th data symbol for the k-th user. The floor function (greatest integer 
function) satisfies, for example, 4.5
4
=
⎢
⎥
⎣
⎦
 and 
4.5
5
−
= −
⎢
⎥
⎣
⎦
, and x
⎢⎥
⎣⎦ denotes the greatest integer less than x. 
The code can have a period of one data symbol or can be much longer than one data symbol. For the case of 
one period of the pseudorandom code it is equal to the data symbol 
.
s
n
n N
PN
PN +
=
 
 
PPM can also be utilized as a multiple access method with pseudorandom codes. The transmit signal 
(before the effects of the channel or antennas) can be modeled as 
 
                                       
(
)
( )
/
( )
s
k
f
k
c
k N
k
s
t
Ap t
kT
PN T
d
∞
⎢
⎥
⎣
⎦
=−∞
=
−
−
−Δ
∑
                                 (1.9.2-19) 
 
in which the time hopping is accomplished with the sequence PNk, and Tc is the hopping offset time or 
granularity.  
 
 
1.9.2.2 Multicarrier UWB Signals 
 
Now consider the multicarrier UWB signal (MC-UWB). This UWB signal is also called the frequency 
domain UWB. Recently this approach has received considerable attention. The transmit signal of MC-UWB 
has the following complex envelope form 
 
                         
  
0
2
(
)
1
( )
(
)
p
N
j
nf
t kT
k
n
p
k
n
v t
A
a p t
kT e
π
∞
−
=−∞
=
=
−
∑∑
                   
 (1.9.2-20) 
 
For N carriers, 
k
na  is the symbol that is transmitted in the k-th transmission interval over the n-th subcarrier. 
Also A is the parameter that determines the transmitted power spectral density as well as the energy per bit 
[32]. The frequency parameter is given by f0 = 1/Tp.  
 
In the multiband OFDM-UWB approach, the available spectrum of 7.5 GHz is divided into multiple 
528-MHz bands. In this setup selective band implementation can be utilized while leaving other portions of 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             53 
the spectrum unused. The MBOA proposal has five channels that are, in turn, broken down into 14 bands. 
Figure 1.9-4 illustrates the MultiBand OFDM Alliance frequency band plan, and the band center frequency is 
noted under each band. Each band has 128 QPSK modulated OFDM carriers.  
 
Channel 1
Channel 2
Channel 3
Channel 4
Channel 5
3432    3960   4488   5016   5544   6072    6600   7128   7656 8184   8712    9240   9769  10296
Bd 1    Bd 2  Bd 3    Bd 4    Bd 5    Bd 6   Bd 7   Bd 8    Bd 9  Bd 10 Bd 11 Bd 12 Bd 13  Bd 14
Channel 1
Channel 2
Channel 3
Channel 4
Channel 5
3432    3960   4488   5016   5544   6072    6600   7128   7656 8184   8712    9240   9769  10296
Channel 1
Channel 2
Channel 3
Channel 4
Channel 5
3432    3960   4488   5016   5544   6072    6600   7128   7656 8184   8712    9240   9769  10296
Bd 1    Bd 2  Bd 3    Bd 4    Bd 5    Bd 6   Bd 7   Bd 8    Bd 9  Bd 10 Bd 11 Bd 12 Bd 13  Bd 14
 
 
Figure 1.9-4  The frequency plan of the MultiBand OFDM Alliance. 
 
 
 
At the time of this writing, bands 1–3 (Bd k denotes band k) are used for Mode 1 (a mandatory 
mode), but the other four modes are optional. There are up to four time-frequency codes per channel, so that 
there are a maximum of 20 piconets1 with the current proposal. Each time frequency code (TFC) corresponds 
to a logic channel. Logic channels enable simultaneously operating piconets (SOPS). Four SOPS are enabled 
on band group 1. In the event that interference from 802.11a causes reception problems in channel 2, it may 
be avoided by not using channel 2.  
 
Orthogonal frequency division multiplex (OFDM) [32] is a multicarrier signaling scheme that 
allows carriers to overlap in frequency without causing self-interference, thereby improving spectral 
efficiency. Assigning each user a group of carriers can accommodate multiple users. OFDM-UWB has been 
proposed as a physical layer for high bit rate, short-range communication networks. The scheme transmits 
multiple data streams in parallel on separate carriers. As mentioned earlier, it is not necessary to have 
contiguous carriers operating on the same channel.  
 
 
1.9.3 Regulatory Constraints and Spectral Masks for Various UWB Applications 
 
Based on a notice of inquiry issued on September 1, 1998, by May 2000 over a thousand documents were 
received by the Federal Communications Commission (FCC) with the aim of assisting the FCC in developing 
an appropriate set of specifications for UWB operation. In February 2002 the FCC issued a first report and 
order [35] that classified UWB operation into three distinct categories [32]: (1) communication and 
measurement systems; (2) vehicular radar systems; and (3) imaging systems including ground penetrating 
radar, through-the-wall imaging and surveillance systems, and medical imaging. A summary is provided in 
Table 1.9-1 [35]. 
 
Each category has a unique spectral mask as shown in Figures 1.9-4(a) through 1.9-4(e). The break 
point frequencies and the emission limits are shown on the five plots. Outside of the United States of 
America other countries are following a similar approach to licensing UWB technology.  
 
 
1.9.4 Impact of the Transmit Antenna on the Transmitted Signal 
 
We have alluded to the fact that the antenna can affect the response of the UWB signals, in particular for 
pulsed UWB systems. I-UWB requires an antenna that covers multioctave bandwidths in order to transmit 
pulses on the order of a nanosecond in duration, while allowing minimal distortion. It is desired that the 
                                                          
1 A piconet is a network of devices connected through Bluetooth technology. It is formed when at least two devices, such as a portable 
PC and cellular phone, connect. In a piconet one device acts as the master and the other as a slave. Up to eight devices may be connected 
in a piconet. 

 54                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
antenna pattern will provide a voltage standing wave ratio (VSWR) of no more that 2:1 over the entire 
frequency band and provide a radiation field that has constant magnitude and linear phase with frequency. An 
important concept that is applicable to UWB antenna response is the following: The transmitting transient 
response of an antenna is proportional to the time derivative of the receiving transient response of the same 
antenna [36, 37]. An antenna that meets the condition on linear phase, constant magnitude, and constant 
VSWR with frequency will radiate a signal that is the time derivative of the input signal.  
 
 
Table 1.9-1  FCC Restrictions on UWB Operations  
 
Law enforcement, fire and 
rescue, public utilities, and 
industry
1.99–10.6 GHz
Surveillance systems for intrusion 
detection
Medical personnel
3.1–10.6 GHz
Medical systems for imaging inside 
people and animals
Law enforcement, fire and rescue
1.99–10.6 GHz and below 960 
MHz
Through-the-wall imaging systems 
to detect location or movement of 
objects located on the other side of 
the wall
Law enforcement, fire and 
rescue, mining, construction
3.1–10.6 GHz and below 960 
MHz
Wall imaging systems to detect 
objects contained in walls
Law enforcement, fire and 
rescue, research institutes, 
mining, construction
3.1–10.6 GHz and below 960 
MHz
Ground penetrating radar to see or 
detect buried objects
None
24–29 GHz
Vehicular radar for collision 
avoidance, airbag activation, and 
suspension system control
None
3.1–10.6 GHz (separate 
emission levels for indoor and 
outdoor)
Communications and measurement 
systems (sensors)
User Restrictions
Frequency Band for 
Operation at Part 15 
Limits
Application
Law enforcement, fire and 
rescue, public utilities, and 
industry
1.99–10.6 GHz
Surveillance systems for intrusion 
detection
Medical personnel
3.1–10.6 GHz
Medical systems for imaging inside 
people and animals
Law enforcement, fire and rescue
1.99–10.6 GHz and below 960 
MHz
Through-the-wall imaging systems 
to detect location or movement of 
objects located on the other side of 
the wall
Law enforcement, fire and 
rescue, mining, construction
3.1–10.6 GHz and below 960 
MHz
Wall imaging systems to detect 
objects contained in walls
Law enforcement, fire and 
rescue, research institutes, 
mining, construction
3.1–10.6 GHz and below 960 
MHz
Ground penetrating radar to see or 
detect buried objects
None
24–29 GHz
Vehicular radar for collision 
avoidance, airbag activation, and 
suspension system control
None
3.1–10.6 GHz (separate 
emission levels for indoor and 
outdoor)
Communications and measurement 
systems (sensors)
User Restrictions
Frequency Band for 
Operation at Part 15 
Limits
Application
 
 
 
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0           2          4          6          8         10       12       14
Emission limits (dBm/MHz)
-41.3
Frequency (GHz)
-61.3
Outdoor
limits
Indoor 
limits
-63.3
-61.3
Part 15 limits
-51.3
-53.3
1.61
1.99
3.1
10.6
-75.3
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0           2          4          6          8         10       12       14
Emission limits (dBm/MHz)
-41.3
Frequency (GHz)
-61.3
Outdoor
limits
Indoor 
limits
-63.3
-61.3
Part 15 limits
-51.3
-53.3
1.61
1.99
3.1
10.6
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0           2          4          6          8         10       12       14
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0           2          4          6          8         10       12       14
Emission limits (dBm/MHz)
-41.3
Frequency (GHz)
-61.3
Outdoor
limits
Indoor 
limits
-63.3
-61.3
Part 15 limits
-51.3
-53.3
1.61
1.99
3.1
10.6
-75.3
 
 
Figure 1.9-4 (a) Indoor UWB communication systems emission limits. 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             55 
 
 
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0            5         10         15        20         25      30       35
Emission limits (dBm/MHz)
Frequency (GHz)
-61.3
-41.3
-51.3
-61.3
1.61
22
29
31
Part 15 limits
UWB
limits
-75.3
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0            5         10         15        20         25      30       35
Emission limits (dBm/MHz)
Frequency (GHz)
-61.3
-41.3
-51.3
-61.3
1.61
22
29
31
Part 15 limits
UWB
limits
-75.3
 
 
Figure 1.9-4 (b) Vehicular radar emission limits. 
 
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0         0.5          1        1.5        2         2.5        3
Emission limits (dBm/MHz)
Frequency (GHz)
-41.3
-65.3
-53.3
-51.3
0.96
1.61
1.99
Part 15 limits
UWB limits
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0         0.5          1        1.5        2         2.5        3
Emission limits (dBm/MHz)
Frequency (GHz)
-41.3
-65.3
-53.3
-51.3
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0         0.5          1        1.5        2         2.5        3
Emission limits (dBm/MHz)
Frequency (GHz)
-41.3
-65.3
-53.3
-51.3
0.96
1.61
1.99
Part 15 limits
UWB limits
 
 
Figure 1.9-4 (c) Low-frequency imaging emission limits. 
 
 
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0            2           4          6          8         10     12
Emission limits (dBm/MHz)
Frequency (GHz)
-53.3
-51.3
1.61
1.99
-51.3
-41.3
10.6
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0            2           4          6          8         10     12
Emission limits (dBm/MHz)
Frequency (GHz)
-53.3
-51.3
1.61
1.99
-51.3
-41.3
10.6
 
 
Figure 1.9-4 (d) Mid-frequency imaging emission limits.  
 

 56                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
 
1.9.5 The Advantages and the Disadvantages of Impulse Versus Multicarrier UWB 
 
The issue of which approach to UWB should be used has been debated for some time. We will attempt to 
point out some relative issues, but we will not draw a conclusion as to which is superior. MC-UWB is well 
suited for avoiding narrowband interference because the carrier frequencies can be chosen to avoid 
narrowband interference. I-UWB requires fast switching time for the transmitter and receiver and very 
accurate synchronization. Simple I-UWB systems can be constructed very inexpensively. Alternatively 
designing and building a MC-UWB front end can be quite challenging due to the continuous variations in 
power over a very wide bandwidth. When OFDM with a large number of signals is utilized, high-speed FFT 
processing is needed, leading to significant processing power.  
 
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0         2          4           6          8         10        12        14
Emission limits (dBm/MHz)
Frequency (GHz)
-41.3
-51.3
-51.3
-53.3
-65.3
10.6
3.1
1.99
1.61
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
-35
-40
-45
-50
-55
-60
-65
-70
-75
-80
0         2          4           6          8         10        12        14
Emission limits (dBm/MHz)
Frequency (GHz)
-41.3
-51.3
-51.3
-53.3
-65.3
10.6
3.1
1.99
1.61
 
 
Figure 1.9-4 (e) High-frequency imaging emission limits. 
 
 
1.9.6 Advantages of UWB Systems 
 
Some of the advantages to UWB are indicated here. (1) High channel capacity achievable by virtue of the 
large bandwidth, (2) UWB only requires low power and can be manufactured with low cost due to the fact 
that UWB can directly modulate a baseband pulse, and it can be made nearly all digital with low transmit 
power levels, and (3) UWB has fading robustness since UWB has a pulse duration of around 1 ns, so only 
very short multipath delays have any effect. 
 
1.9.7 Applications of UWB 
 
Many new applications of UWB techniques are appearing. Some of the applications include [37]: (1) location 
of buried objects, (2) location of wooden or steel studs in a wall and steel in concrete, (3) search and rescue 
under ruble, (4) measurement of explosive velocities up to 3,800 m/s, (5) cargo container intrusion sensing, 
(6) bridge deck inspection, (7) perimeter security for both military and civilian applications, (8) microwave 
impulse radar (MIR), (9) wireless home networks, and (10) roadside markers for informing passing cars of 
weather advisories, road conditions, and road construction. 
 
Obviously we have only presented a very brief summary of the UWB communications. More details 
can be found in the references.  
 
 
 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             57 
1.10 THE NEAR-FAR PROBLEM 
 
The near-far problem in spread spectrum systems comes about when the received power from each 
transmitter is not the same at the receiver. One case in which can occur is when equal powered transmitters 
are at different distances from the receiver. In other words the receiver is closer to some transmitters than 
others. The closer signals are received at a much higher power level than the signals from the transmitters 
that are farther away. As a consequence the closer signals mask the farther-away-signals and make them 
more difficult to detect and process. All the signals except the one that is being tracked add what is 
sometimes called CDMA noise to the tracked signal. When the tracked signal transmitter is far away from 
the receiver, it is degraded more by the CDMA noise than are closer transmitted signals. In CDMA systems, 
capacity is maximized if all the signals are at a similar received power level. In fact, in one commercial 
CDMA system, received power is maintained to about ± 0.2 dB, when is it is feasible.  
A frequency-hop system is much less susceptible to the near-far problem since normally collisions, 
and therefore interference, would not be allowed (except occasionally) to occur and therefore interference 
would not be a significant problem. This is true for single channel or multiple channel frequency-hopped 
signals. Interference to the desired signal occurs when a collision occurs, and the power of the interference 
doesn’t matter much, as long as the interference signal is stronger. 
 
Another advantage of frequency-hopped systems is the fact that acquisition can be accomplished 
much quicker that direct sequence systems. This is true since the hop time is normally of much longer 
duration than the direct sequence chip time, and therefore the number of states needed to search the initial 
time uncertainty, to obtain acquisition, is much less. 
 
At one time it was believed that a disadvantage to frequency-hopped systems was the fact that it was 
not considered to be feasible to use coherent modulation for frequency-hopped systems. However there has 
been considerable recent work showing that coherent demodulation is feasible if one is willing to provide 
synchronization words or aids in each hop at the expense of some overhead. Noncoherent demodulation is 
inferior to coherent demodulation in bit error rate performance, so that it is desirable to utilize coherent 
modulation and demodulation whenever possible. Naturally there is a trade-off to be made for each system 
design on whether to use coherent or noncoherent data modulation techniques. 
 
1.11 LOW PROBABILITY OF INTERCEPTION 
 
Before concluding this chapter it is worthwhile to discuss one of the advantages of spread spectrum systems 
that has not been discussed yet, and that is the low probability of interception (LPI) capability. Since SS 
signals are difficult to detect, special types of detectors in the hands of unfriendly users are needed to detect 
these signals. There are basically three types of LPI detectors that are used in practice. The first is classified 
as a transform detector, the second is a radiometer, and the third is the rate line detector. An example of the 
first class is a spectrum analyzer that displays the power spectral density of the received signal to the 
operator. The second class is based on the use of a wideband power detector that measures signal and noise 
power in a given bandwidth. Finally, an example of the third class of detector is based on detecting the chip 
rate of a direct sequence SS system. These methods will be discussed in more detail in Chapter 11, on LPI 
detection systems. 
Figure 1.11-1 illustrates an example of a radiometer that is designed for detecting SS signals. A 
bandpass filter limits the spectral range to be searched. The detector detects any signals or noise present in 
the bandwidth under investigation. The integrator or low-pass filter smoothes the detected output and is 
compared to a threshold. If the detected signal is above the threshold it is declared detected, otherwise it is 
not detected. 
 
 
 
 
 
 

 58                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
Bandpass
filter
Square law
detector
Integrator or 
Low-pass
filter
Comparison
to threshold
Threshold
estimator
Declare
detection
Received
signal plus
noise
Bandpass
filter
Square law
detector
Integrator or 
Low-pass
filter
Comparison
to threshold
Threshold
estimator
Declare
detection
Received
signal plus
noise
 
 
Figure 1.11-1 A classic radiometer for detecting spread spectrum signals. 
 
 
Many of the topics discussed only briefly in this chapter will be presented in more detail in the 
following chapters.  
1.12 SUMMARY 
This chapter introduced the basic concepts of spread spectrum (SS) systems. A very brief introduction to the 
history of SS systems was presented. A important tool in analyzing these signals is the concept of 
narrowband signal, which was introduced in this chapter. Direct sequence (DS) systems were presented along 
with the correlation loss of a signal when filtered. In addition the noise despreading reduction in the 
despreading process was developed along with the loss in C/N0 value for a BPSK modulated DS SS system.  
 
Next the various SS narrowband signal models were presented including slow and fast frequency 
hopping, along with hybrid DS and FH systems, and minimum shift keying systems. Examples of slow and 
fast frequency hopping were illustrated. This was followed by a discussion of OFDM. Then a brief 
discussion of UWB was presented. Finally the near-far problem was introduced, followed by a brief 
discussion of the concept of designing low probability of interception signals.  
 
 
References 
 
[1] R. Price, “Further Notes and Anecdotes on Spread-Spectrum Origins,” IEEE Trans. on Communications, Vol. COM-31, No. 1,  
      January 1983. 
 
[2] M. K. Simon, J. K. Omura, R. A. Scholtz, and B. K. Levitt, Spread Spectrum Communications, Vol. 1, Rockville, MD: Computer  
      Science Press, 1985. 
 
[3] E. N. Gilbert, “Quasi-Random Binary Sequences,” Bell Telephone Laboratories Memorandum MM-53-1400-42, November 27,  
      1953. 
 
[4] S. W. Golomb, “Sequences with Randomness Properties,” Terminal Progress Report under Contract Req. No. 639498, Martin Co.  
      Maryland, June 1955. 
 
[5] N. Zierler,” “Several Binary-Sequence Generators,” Tech. Report No. 95, Lincoln Labs., MIT, September 12, 1955. 
 
[6] N. Zierler, “Linear Recurring Sequences,” J. Soc. Industrial and Applied Math., Vol. 7, March 1959, pp. 31–48. 
 
[7] T. G. Birdsall and M. P. Ristenbatt, “Introduction to Linear Shift-Register Generalized Sequences,” University of Michigan  
      Research Institute, Dept. of Elect. Eng. Tech. Report No. 90, October 1958. 
 
[8] C. R. Cahn, “Applications and State-of-the Art Equipments,” Paper No. 5, AGARD-NATO Lecture Series, Vol. 58 on “Spread  
      Spectrum Communications,” May 28–June 6, 1973. 
 
[9] J. G. Proakis, Digital Communications, Section 3.3, New York: McGraw-Hill, 1983. 
 
[10] R. E. Ziemer and R. L. Peterson, Digital Communications and Spread Spectrum Systems, New York: Macmillan,  
        1985. 
 
[11] R. A. Scholtz, “The Spread Spectrum Concept,” IEEE Trans. on Communications, Vol. COM-25, No. 8, August 1977. 
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             59 
[12] A. B. Carlson, Communication Systems: An Introduction to Signals and Noise in Electrical Communication, New York: Mc Graw- 
        Hill, 1968. 
 
[13] A. J. Viterbi, “Spread Spectrum Communications―Myths and Realities,” IEEE Communication Magazine, No. 3, May  
        1979, pp. 11–18. 
 
[14] J. K. Holmes, Coherent Spread Spectrum Systems, New York: Wiley-Interscience, 1982 (also published by Krieger Publishing  
        Company, Malibar FL, 1990). 
 
[15] S. A. Gronemeyer and A. L. McBride, “MSK and Offset QPSK Modulation,” IEEE Trans. on Communications, Vol. COM-24, 
August  
       1976, pp. 809–820. 
 
[16] G. R. Cooper and C. D. McGillem, Modern Communications and Spread Spectrum, New York: McGraw-Hill, 1986.  
 
[17] R. Van Nee and R. Prasad, OFDM For Wireless Multimedia Communications, Norwood, MA: Artech House, 2000. 
 
[18] J. Proakis and M. Salehi, Fundamentals of Communication Systems, Englewood Cliffs, NJ: Prentice Hall, 2001. 
 
[19] J. Armstrong, “OFDM–Orthogonal Frequency Division Multiplexing,” a La Trobe University Electronic Engineering PowerPoint  
        presentation, circa 2000. 
 
[20] E. Lawrey, B.S. thesis, “The Suitability of OFDM as a Modulation Technique for Wireless Telecommunications, with a  
        CDMA Comparison,” Computer Systems Engineering at James Cook University, 1997. 
 
[21] L. Couch III, Digital and Analog Communications Systems, 6th ed., Englewood Cliffs, NJ: Prentice Hall, 2001. 
 
[22] T. W. Barrett, “History of Ultra Wideband (UWB) Radar & Communications: Pioneers and Innovators,” Progress in  
          Electromagnetics Symposium 2000 (PIERS2000), Cambridge, MA, July 2000. 
 
[23] G. F. Ross, “Transmission and Reception System for Generating and Receiving Base-Band Duration Pulse Signals for Short Base- 
        Band Pulse Communication System,” U. S. patent 3,750,025, April 17, 1973. 
 
[24] P. Van Etten, “The Present Technology of Impulse Radars,” International Radar Conference Proc., October 1977, pp. 535–539. 
 
[25] R. N. Morey, “Geophysical Survey System Employing Electromagnetic Impulses,” U.S. patent 3,806,795, April 1974.  
 
[26] C. L. Bennett and G. F. Ross, “Time-Domain Electromagnetics and Its Application,” Proc. IEEE, No. 66, 1978, pp. 299–318. 
 
[27] T. E. McEwan, ”Ultra-Wideband Radar Motion Sensor,” U.S. patent 5,361,070, November 1, 1994. 
 
[28] Spread Spectrum Scene, UWB page 2: Ultra Wideband Resource Information, located at http://www.sss-mag.com/uwbp2.html. 
 
[29] http://www.aetherwire.com/CDROM/General/papers.html. 
 
[30] J. Taylor, editor, Ultra Wideband Radar Systems, Boca Raton, FL: CRC Press, 1994. 
 
[31] R. W. Chang, “Orthogonal Frequency Division Multiplexing,” U.S. patent 3,488,445, January 6, 1970. 
 
[32] J. Reed, An Introduction to Ultra Wideband Communications Systems, Upper Saddle River, NJ: Prentice Hall, 2004. 
 
[33] R. Poisel, Modern Communication Jamming Principles and Techniques, Norwood, MA: Artech House, 2004. 
 
[34] H. Sheng, P. Orlik, A. Haimovich, L. Cimini Jr., and J. Zhang, “On the Spectral and Power Requirements for Ultra-Wideband  
        Transmission,” Mitsubishi Research Labs., TR2003-66, December 2003. 
 
[35] FCC document entitled “Revision of Part 15 of the Commission’s Rules Regarding Ultra-Wideband Transmission Systems,” First  
        note and order, Federal Communication Commission, ET-Docket 98-153, adopted February 14, 2002, released April 22, 2002. 
 
[36] K. Motohisa, “Time-Domain Sensors & Radiators,” Chapter 5 in E. K. Miller, editor, Time-Domain Measurements in  
         Electromagnetics, New York: Van Nostrand Reinhold, 1986. 
 
[37] A. Azevedo, “Exploring the Ultrawideband,” September 2004, Lawrence Livermore National Laboratory Magazine S & RT. 
 
 
 

 60                                            Spread Spectrum Systems for GNSS and Wireless Communications  
            
Problems 
 
1. Show that complex envelopes satisfy the same relationships as the actual signals themselves; that is show 
that 
 
 
 
 
 
      (1)   
( )
( )*
( )   and
(2)    
( )
( )
( )
o
i
L
o
i
L
v t
v t
h t
V
f
V f H
f
=
=
  
 
 
     (P1-1) 
 
     where Vo(f) and Vi(f) are defined in (1.3.2-9) and (1.3.2-10). 
 
2. Using the fact that 
{
}
( )
(1/ 2)
(
)
( )  
z
R
E z t
z t
τ
τ
∗
=
+
 is the definition of the autocorrelation function of a  
     complex process z(t), (a) show that the auto correlation function of the radio frequency process can be  
     expressed as 
{
}
0
( )
Re
( )
i
x
v
R
R
e ω τ
τ
τ
=
and (b) show that the radio frequency power spectral density is given  
     by  
 
0
0
1
1
( )
(
)
(
)
2
2
x
v
v
S
f
S
f
f
S
f
f
=
−
+
−
−
 
 
 
 
       (P1-2) 
 
3. Assume that is it required to send recorded voice which is band limited to 3 kHz. Assuming the voice is  
     transmitted at the Nyquist rate (6 kHz) with a quantization of 256 levels, find the chip rate required to  
     achieve a processing gain of 20 dB. 
 
4. Show that the despreading PN code should be filtered in order to maximize the matched filter output  
    signal-to-noise ratio at the data detector output in a BPSK direct sequence spread spectrum system. The  
    SNR isdefined to be the square of the mean output signal divided by the variance of the noise. The system  
    model is shown in Figure 1.4-5, showing both the unfiltered case and the filtered case. Hint:  
    Use the Schwartz inequality in the time domain to show that using a filtered PN code to despread the  
    signal is better than using an unfiltered one in the sense that it has a higher SNR. That is show that  
 
 
 
 
 
 
       
A
B
SNR
SNR
≤
 
 
 
 
(P1-3) 
 
   or in other words show that 
 
 
         
(
)
{
}
(
)
{
}
2
2
0
0
0
0
0
0
( )
( )
( )
( )
'( ) '( )
( )
( )
'( ) '( )
( )
( )
d
d
d
d
d
d
T
T
T
T
T
T
PN t PN t dt
PN t PN t dt
E
n t n u PN t PN u dt
E
n t n u PN t PN u dt
⎡
⎤
⎡
⎤
⎢
⎥
⎢
⎥
≤
⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
∫
∫
∫∫
∫∫
 
(P1-4) 
 
    where 
( )
PN t  is the filtered version of 
( )
PN t . Assume that the product of the carrier and the white noise  
    input is a white Gaussian baseband noise, 
'( )
n t , with the same spectral density as the RF process. Also  
    assume, as shown in Figure 1.4-5, that the filtered product of the data and the PN code is essentially the  
    data times the filtered PN code. Let N0 denote the one-sided noise spectral density, and Td denote the data  
    bit time. 
 
5. A designer has chosen to use Manchester symbols, rather than NRZ symbols, for his PN code since he is  
    concerned about narrowband interference at the carrier frequency. Assume that the PN code is a random  
    sequence. Show that the correlation function of the filtered signal can be written as  
 

 
                                        An Introduction to Spread Spectrum Systems 
 
 
             61 
 
 
                 
4
(
)
2
1
sin(
/ 4)
( , )
Re
( )
2
(
/ 4)
j
L
T
R
P
T
H
e
d
T
ωτ φ
ω
τ φ
ω
ω
π
ω
∞
+
−∞
⎧
⎫
=
⎨
⎬
⎩
⎭
∫
 
 
(P1-5) 
 
6. Show that the total power in the MSK waveform, represented in (1.4.3-2), is given by P. 
 
7. Consider a slow frequency-hopped communication system with 8FSK modulation that uses 10 bits to  
    specify the hopping frequency. Let the hop rate be 12,000 hops per second and let the hopping frequency  
    range be from 20.4 GHz to 21.0 GHz. Assume that there are 40 tones per hop and the synthesizer settling  
    time is 3.333  s. Determine the channel symbol rate that this design is capable of and the approximate  
    bandwidth needed based on the first null of the spectral sidelobes. Assume that the channel bits are derived  
    from a random sequence. 
 
8. Suppose you are asked to design a frequency-hopped SS communication system and are told to use either  
    DPSK or BPSK. What factors should be considered in making the choice of modulation. Consider BER  
    efficiency first and then any other relevant factors. Hint: Consider the fact that BPSK is more efficient than  
    DPSK and the fact that the overhead channel bits required for BPSK phase ambiguity resolution will be  
    greater than for DPSK, which tends to offset the advantage of BPSK. 
 
9. Consider a hybrid PN/FH communication system that is uncoded and has BPSK PN modulation and  
     DPSK data modulation. The data rate is 4,200 bits per second, and there are eight channel bits per hop. At  
     the first of each hop there is one reference bit, used to demodulate the remaining seven data bits. The chip  
     rate is 148,800 chips per second. Also assume that the hops are spaced apart by the chip rate. There are  
     2,047 hop frequencies, all of which are equally spaced across the bandwidth. (a) Determine the RF  
     bandwidth. (b) Determine the processing gain. 
 
10. By assuming long spreading codes and comparing the spectral densities at f = f0 show that MSK chip  
     modulation with BPSK bit modulation provides 2.1 dB less processing gain than BPSK chip modulation  
     with BPSK bit modulation. Assume the BPSK chip rate is the same as either the I or Q chip rate of the  
     MSK chip modulation. Note that the required transmission bandwidth is reduced also. 
 


CHAPTER 2Equation Chapter 1 Section 1 
Binary Shift Register Codes for Spread Spectrum 
Systems 
 
 
2.0 INTRODUCTION 
 
This chapter will cover the essentials of the theory of binary shift register codes. Most of the theory will be 
directed toward linear codes, which will be defined shortly. Applications of shift register sequences (or 
codes) include many areas such as code division multiple access applications, ranging, radar systems, 
spectral spreading, privacy encoding, low probability of detection transmission, interference mitigation, 
random bit generation, synchronization, and other applications. 
 
Before we delve into the theory of binary shift register codes it is appropriate to mention some of 
the original work. The first work in the area of maximal length sequences started around the early to  
mid-1950s. Possibly the earliest work was done by Gilbert [1] at Bell Labs. However his report had limited 
circulation. The work of Golomb [2] and Zierler [3, 4] appeared slightly later. L. Welch was also active in 
this area around this time. Slightly later Birdsall and Ristenbatt [5] published their work while at the 
University of Michigan. Golomb [6] credits the original theory of mod p addition to Lagrange in the 
eighteenth century, along with a modern mathematical exposition by Hall in 1937. And finally the paper by 
Sarwate and Pursley [7] provides a good summary up to 1980 and is probably one of the better complete 
introductions to the subject of linear binary sequences to date. 
 
 
2.1 FINITE FIELD ARITHMETIC 
 
In order to multiply, divide, add, subtract, and otherwise manipulate the code sequences introduced later in 
this chapter, it is necessary to have a rudimentary understanding of finite field arithmetic. These 
manipulations can easily be done if we require the coefficients to be elements of a finite field. Two good 
references that cover the theory of modern algebra are Birkhoff and MacLane [8] and at a more advanced 
level Van Der Waerden [9]. In addition, the book by Lin and Costello [10] on coding has a complete 
introductory treatment. 
 
A finite field, also called a Galois Field and denoted by GF(q), has a set of q elements, which follow 
some special rules of algebra. All finite fields possess the following nine properties. In what follows it is 
assumed that a, b, and c are elements in the field: 
I 
There are two operations that are defined for combining the elements, and they are addition and 
multiplication. 
II 
Adding or multiplying any two elements in the field results in the sum or product being in the field. 
III The field always contains th additive identity “0” that has the property that if a is in the field then 
a+0 = a. 
IV The field always contains the multiplicative identity element “1” and 1 a
a


. 
V 
For every element a there is an additive inverse element (– a) such that a + (– a) = 0.  
VI For every element a there is a multiplicative inverse element 
 such that
, and the 
inverse of “0” is not defined. 
1
(
)
a
1
1
a a


       Note that V and VI allow one to use the customary notions of subtraction and division. 
        
63

 64                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
VII The associative law applies, that is, a + (b + c) = (a + b) + c, and in addition the following is true 
. 
(
)
(
)
a
b c
a b
c





VIII The commutative law applies, that is, a + b = b + a anda b
b a



. 
IX The distributive law applies, that is, 
(
)
a
b
c
a b
a c






. 
 
Not all values of q, the number of elements in the field, result in a finite field. In general, finite 
fields exist when q is a prime number, or an integer power of a prime number. When q is prime, the field is 
called a prime field. When there are qN elements and N is an integer, the field is called an extension field over 
the prime field. 
 
For each value of q there is one and only one unique field. In other words there is only one way to 
construct the field using the rules for addition and multiplication so that all nine properties are satisfied. If q 
is a prime number then the field elements are the numbers {0, 1, 2,...q–1}. Multiplication in this field is 
ordinary multiplication, and addition is modulo q. At this point it is worth while considering some examples. 
 
Example 1 Consider GF(5). The field elements are {0, 1, 2, 3, 4}. The addition and multiplicative tables are 
shown below.   
 
Addition Table for GF(5) 
 
+ 
0 
1 
2 
3 
4 
0 
0 
1 
2 
3 
4 
1 
1 
2 
3 
4 
0 
2 
2 
3 
4 
0 
1 
3 
3 
4 
0 
1 
2 
4 
4 
0 
1 
2 
3 
 
Multiplication Table for GF(5) 
 
 
0 
1 
2 
3 
4 
0 
0 
0 
0 
0 
0 
1 
0 
1 
2 
3 
4 
2 
0 
2 
4 
1 
3 
3 
0 
3 
1 
4 
2 
4 
0 
4 
3 
2 
1 
 
For example, using the addition table, consider 4 + 4 = 8. When 8 is reduced by 5, it equals 3. As an 
example of the multiplication table, consider multiplying 2 times 3, which produces 6, and when reduced by 
5 we get 1, as seen in the multiplication table. Thus, it is seen that all sums and products are reduced by 
multiples of 5, so that the result is always in the set {0, 1, 2, 3, 4}. 
 
Example 2 The smallest field is GF(2). It has the elements {0, 1}. The addition and multiplication tables are 
shown next. 
 
Addition and Multiplication Tables for GF(2) 
 
+ 
0 
1 
 
 
0 
1 
0 
0 
1 
 
0 
0 
0 
1 
1 
0 
 
1 
0 
1 
 
Note that 1+1 = 2 and when reduced by 2 the sum equals zero as shown in the sum table for addition. 
 
 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         65 
2.1.1 Polynomial Arithmetic 
 
Next we shall consider the arithmetic of polynomials in which the coefficients are from the binary field 
GF(2). A polynomial f(x) of the variable x, of the form 
 
 
 
 
 
2
0
1
2
( )
 
n
n
f x
f
f x
f x
f x



L
  
 
 
   (2.1.1-1) 
 
with coefficients from GF(2) (i.e., fi is an element of GF(2)), is of n-th degree if the largest nonzero 
coefficient is fn. In the literature the term a polynomial over GF(2) means “a polynomial with coefficients in 
GF(2).” Polynomials over GF(2) can be added, subtracted, multiplied, and divided in a similar manner as 
polynomials with real coefficients except that the coefficients are in GF(2). For example, when adding two 
polynomials, one of degree n and one of degree m with m<n, one has the result 
 
   
 
 
1
0
0
1
1
1
( )
( )
(
)
(
)
(
)
 
m
m
m
m
m
n
n
f x
g x
f
g
f
g x
f
g
x
f
x
f x











L
L
0
 
   (2.1.1-2) 
 
where fi + gi is combined with modulo-2 addition. When multiplying f(x) with g(x) one obtains the result 
 
 
 
 
  
 
 
   (2.1.1-3) 
2
0
1
2
( ) ( )
 
n m
n m
f x g x
a
a x
a x
a
x 




L
 
where the coefficients are given by  
 
 
 
 
 
 
 
 
   (2.1.1-4) 
0
0
0
1
0
1
1
0
2
0
2
1
1
2
0
0
1
1
2
2
                
                 
i
i
i
i
i
n m
n
m
a
f g
a
f g
f g
a
f g
f g
f g
a
f g
f g
f g
f g
a
f g














M
L
M
 
and the multiplication and addition of the coefficients are in the field GF(2). It is not difficult to show that 
polynomials over GF(2) are commutative, associative, and distributive. 
 
When f(x) is divided by g(x) (assumed to be not equal to zero), a unique pair of polynomials over 
GF(2) is obtained, the quotient q(x), and the remainder r(x), such that 
 
 
 
 
 
( )
( ) ( )
( ) 
f x
q x g x
r x


  
 
 
 
   (2.1.1-5) 
 
with the degree of r(x) is less than g(x). This is known as Euclid’s division algorithm. Consider an example 
of Euclid’s division algorithm. 
 
Example 3 Let g(x) = 1 + x + x4 and f(x) = x6 + 1. Then using long division one has 
 
 
 
 
2
4
6
6
3
2
3
2
                   
    (quotient)
1    
1
                   
                          
1   (remainder) 
x
x
x
x
x
x
x
x
x







2
4
6
6
3
2
3
2
                   
    (quotient)
1    
1
                   
                          
1   (remainder) 
x
x
x
x
x
x
x
x
x







 
 

 66                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
It therefore follows that x6 + 1 = x2 (x4 +x +1) + x3 + x2 +1, when the addition of the coefficients is modulo-
2. 
If f(x) is divided by g(x) and has a remainder of zero, we say that g(x) divides f(x). If f(x) is divisible 
by x–a, then it is true that f(a) = 0. In other words, polynomials over GF(2) have roots and can be factored. It 
should be pointed out that, in general, the roots of polynomials over GF(2) are not necessarily in GF(2), or 
even real. A polynomial over GF(2) of degree n is said to be irreducible over GF(2) if f(x) is not divisible by 
any polynomial over GF(2) of degree less than n, but greater than zero. Now consider a polynomial that is 
factorable over GF(2). 
 
Example 4 As an example of a factorable polynomial over GF(2), consider f(x) = x6 + 1. Since f(1) = 0 we 
know that (x–1) is a root, and therefore so is (x+1). To verify this note that 
 
 
 
 
 
 
 
2
4
4
3
3
3
2
2
2
          
1 
1  
1
         
                 
1
                 
                        
1
                        
                               
1
                       
3x
x
x
x
x
x
x
x
x
x
x
x
x
x











        
1
                                    0
x 
 
2
4
4
3
3
3
2
2
2
          
1 
1  
1
         
                 
1
                 
                        
1
                        
                               
1
                       
3x
x
x
x
x
x
x
x
x
x
x
x
x
x











        
1
                                    0
x 
 
 
and thus x–1 is a root of x4+1. 
 
 
When we discuss m-sequences, we will encounter primitive polynomials which are always irreducible. 
 
 
2.2 SHIFT REGISTER SEQUENCES  
 
In this section we will consider some different types of shift registers and their corresponding output 
sequences. When referring to a shift register sequence we shall mean (unless stated otherwise) the resulting 
sequence of “ones” and “zeros” that emanates from the shift register. Figure 2.2-1 illustrates an output 
sequence of zeros and ones and its corresponding time waveform, which has values of +1 and –1.  
 
-1
1
0
0
1
0
1
1
0
Sequence
Time waveform
t
1
0
Tc
2Tc
3Tc 
4Tc
5Tc 
6Tc
7Tc
8Tc
-1
1
0
0
1
0
1
1
0
Sequence
1
0
0
1
0
1
1
0
Sequence
Time waveform
t
1
0
Tc
2Tc
3Tc 
4Tc
5Tc 
6Tc
7Tc
8Tc
 
 
Figure 2.2-1 The PN sequence and the associated time waveform. 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         67 
 
The sequence takes on the values of “0s” and “1s” from the code generator. The time waveform is the 
continuous time signal associated with the sequence that takes on amplitudes according to the following rule. 
A binary “1” in the sequence maps to “–1” chip at the waveform level, and a binary “0” in the sequence maps 
to a “1” chip at the waveform level. The time waveform has a possible change of level every Tc seconds, 
where Tc is the chip duration. Mathematically the relationship is given by 
 
 
1
(
( )
2
)
PN t
a t


    
 
 
 
     (2.2-1) 
 
where a(t) takes on the values in {0, 1} and PN(t) takes on the values 1
, In other words “0” +1 and “1” 
–1. The double arrow denotes “maps to each other.” This is the only mapping that preserves the 
multiplication property on the numbers
 with modulo 2 addition of “0” and “1.”   

1

 
Consider a simple shift register generator (SSRG). In an SSRG all the feedback signals are returned 
to a single point. A SSRG contains a shift register for storage (and setting the initial conditions) and shifting 
its contents, a modulo-2 adder, and a feedback line. An example of an SSRG, in Fibonacci form, is illustrated 
in Figure 2.2-2 showing two common means of depicting the same SSRG.  
By a Fibonacci form we mean an SSRG in which the feedback is fed back to the first cell only. 
Implicit in each version is a clock signal that clocks the register and thereby sets the chip rate. Later we will 
consider an equivalent form to the SSRG, called the Galois form, which has the advantage of operating at 
greater speed than the Fibonacci form and produces the same output but has multiple feedback points.  
 
Now consider the operation of a simple shift register. Number the shift register cells 1 through 6 in 
Figures 2.2-2(a) and 2.2-2(b) and note that each cell contains either a “1” or a “0.” When a clock pulse 
arrives the value stored in cell number 1 transfers to cell number 2, the value that was stored in cell number 2 
transfers to cell number 3, and so forth. Finally the values of cells 5 and 6 are added modulo 2 to form the 
new value for cell number 1. Thus a shift register is a device that shifts its stored contents one position to the 
right for each shift of the clock pulse applied to the shift register. The shift register sequence is normally 
defined to be the output value of the last cell, which changes after each clock pulse. However the output of 
the first cell may be used as the output also; the difference in the sequence at the first cell and the last cell is 
just the time delay between the input and output cells. 
 
+
1
2
3
4
5
6
Initial conditions
Output
sequence
Alternative output
(a) Common shift register depiction
+
1                           2                              3    
4                            5            
6
(b) Alternative shift register depiction
Initial conditions
+
1
2
3
4
5
6
Initial conditions
Output
sequence
Alternative output
(a) Common shift register depiction
+
1
2
3
4
5
6
Initial conditions
Output
sequence
Alternative output
(a) Common shift register depiction
+
1                           2                              3    
4                            5            
6
(b) Alternative shift register depiction
Initial conditions
 
 
Figure 2.2-2 (a, b) A simple shift register generator in Fibonacci form. 
 

 68                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
 
Assume that the initial content of the shift register is 000001, which means all the cells are set to 
zero except the sixth one. After the first clock pulse it is clear that the register will contain the value 100,000, 
and the first output value will be “1.” The “one” in cell number 1 is the result of the mod 2 sum of the fifth 
cell a “zero,” and the sixth cell a “one.” The resulting shift register sequence will be given by 
 
 
  100000100001100010100111101000111001001011011101100110101011111   
      (2.2-2) 
 
 
This sequence has a period of 63 chips (or bits) in it, and the same sequence will reappear again and 
again. This sequence is an example of a maximal length sequence and is also called an m-sequence, for 
which the length (period) N =2n–1, where n is the number of cells in the SSRG. This is an example of a 
Fibonacci shift register, since all the feedback signals are returned to the first cell. 
 
Another type of shift register generator is known as a multiple return shift register generator 
(MRSRG), which has adder outputs to two or more input stages. Figure 2.2-3 illustrates a MRSRG of length 
6. Birdsall and Ristenbatt [5] have shown that every multiple return generator that has no transients possesses 
an equivalent SSRG. As a consequence most of the remaining discussion will deal with SSRGs.  
 
+
+
+
1
2
3
4
5
Output
sequence
+
+
+
1
2
3
4
5
Output
sequence
 
 
Figure 2.2-3 An example of an MRSRG. 
 
 
 
If an SSRG produces a sequence that goes through a transient series of digits before settling into a 
periodic sequence, then that generator is said to possess transients. Figure 2.2-4 illustrates two examples of 
transient generators and their output sequences. In the (a) portion of the figure the sequence is of length 7 and 
repeats every seven symbols after an initial “0” is introduced into the sequence. In the (b) portion of the 
figure the same periodic output occurs with a different configuration but produces the same transient output. 
The transient symbol is underlined in both output sequences. 
 
(a)
+
Sequence A with initial condition 1000:   000101110010111
+
+
Output
1
2
3
4
1
2
3
4
Sequence B  with initial condition 1000:   000101110010111
Output
(b)
(a)
+
Sequence A with initial condition 1000:   000101110010111
+
+
Output
1
2
3
4
1
2
3
4
Sequence B  with initial condition 1000:   000101110010111
Output
(b)
 
 
Figure 2.2-4 (a, b) Two examples of transient generators. 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         69 
 
Denote the contents of each cell in an SSRG by xi, with the i-th cell number; then we can say that 
the shift register is linear if the feedback function can be expressed as a modulo 2 sum of the variables xi; that 
is, if it can be expressed in the form 
 
 
 
 
1
2
3
1 1
2
2
3
3
( ,
,
,...
)
...
 
n
n
n
f x x x
x
c x
c x
c x
c x




 
 
 
(2.2-3) 
 
where the ci are either one or zero, and the symbol “+” denotes modulo-2 addition. Figure 2.2-5 illustrates a 
general shift register generator in Fibonacci form, and if the feedback function satisfies (2.2-3), then it is a 
linear SSRG. 
 
1
2
3
4
5
6
7
n
...
8
f(x1,x2,x3...xn)
x1
x2
xn
x3
x4
x5
x6
x7
x8
...
Output
1
2
3
4
5
6
7
n
...
8
f(x1,x2,x3...xn)
x1
x2
xn
x3
x4
x5
x6
x7
x8
x1
x2
xn
x3
x4
x5
x6
x7
x8
...
Output
 
 
Figure 2.2-5 A general shift register generator. 
 
 
 
Consider an example of a nonlinear shift register generator illustrated in Figure 2.2-6. In part (a) of 
the figure the SSRG is shown and in part (b) the corresponding state diagram is shown. Starting in state 110 
(cell 1 contains a “1,” cell 2 contains a “1,” and cell 3 contains a “0”) we see that x2 x3 = 0, so that the new 
state becomes 011. This process continues until the state 000 is reached. From then on the SSRG remains in 
state 000. If the SSRG is loaded with the values 111, then it remains in that state from that time on. Another 
observation can be made about this SSRG. That is, the state 010 can be reached from two distinct 
predecessors, 101 and 100. Golomb [2] has shown that for linear shift register generators every state has 
exactly one predecessor. 
 
f(x1,x2,x3) = x2x3
Output
(a) Nonlinear SRG
(b) Corresponding 
state diagram
000
001
010
100
101
111
011
110
1
2
3
f(x1,x2,x3) = x2x3
Output
(a) Nonlinear SRG
(b) Corresponding 
state diagram
000
000
001
010
100
101
111
011
110
1
2
3
 
 
Figure 2.2-6 (a, b) An example of a nonlinear SSRG. 
 

 70                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
Consider the SSRG in Figure 2.2-7(a) with its tap coefficients {ci} and the n state contents  
{ak-1, ak-2...ak–n}, when reading from left to right on the shift register cells.  
 


+
+
+
+

Output
x1(k)
x2(k)
x3(k)
xn(k)
+
+
+
+
+
(cn = 1)

c1
c2
c3
ak
ak-1
ak-2
ak-3
ak-n+1
ak-n
Output
(a) Fibonacci form (showing the code sequence in the SSRG)
(b) Galois form (showing the shift register states as a function of time (k))
cn-1
cn-2

c1
cn-3
cn-2
cn-1
Alternate output



(cn = 1)









+
+
+
+

Output
x1(k)
x2(k)
x3(k)
xn(k)
+
+
+
+
+
(cn = 1)

c1
c2
c3
ak
ak-1
ak-2
ak-3
ak-n+1
ak-n
Output
(a) Fibonacci form (showing the code sequence in the SSRG)
(b) Galois form (showing the shift register states as a function of time (k))
cn-1
cn-2

c1
cn-3
cn-2
cn-1
Alternate output



(cn = 1)







 
 
Figure 2.2-7 (a, b) Linear SSRG models. 
 
 
The linear recursion that linear SSRGs satisfy is given directly by 
 
 
 
 
 
 
  
 
 
 
(2.2-4) 
1
 
n
k
i
k
i
a
c a 


i
 
where the ci take on the value “1” if the feedback connection is connected and takes on the value of “0” if it 
is open and the sequence {ak} is in GF(2). The summation in (2.2-4) is modulo 2. Note that this is a 
relationship between the existing state contents, the tap coefficients and the next new state value, which is 
shifted into the left cell after the clock signal. Note that the all-zeros state corresponds to the initial conditions 
 and has a period of one. In general the initial conditions are given by a–1, a–2,...a–n and 
are not normally all-zero. The output sequence after the initial conditions have evolved, when taken as the 
output of the rightmost cell, will be a0, a1, a2,.... In other words, the output taken from the rightmost cell 
including the initial conditions will be a–n, a–n+1, a–n+2, ... a–1, a0, a1, a2, .... If instead, the output is taken from 
the leftmost cell, which is the alternate output, the output would be a0, a1, a2, .... That is the initial conditions 
will not appear on this output. 
1
2...
0
n
a
a
a






 
 
2.2.1 Equivalence of the Fibonacci and Galois Forms of a Linear SRG 
 
The Fibonacci and Galois forms of a linear SRG are illustrated in Figures 2.2-7(a) and 2.2-7(b). Now it will 
be shown that the Fibonacci form and the Galois form of linear SRGs are equivalent, in that they produce the 
same output sequence. Consider Figure 2.2-7(b), which is a shift register in Galois form, with the states xi(j), 
where i is the index of the state when counting from the left, and j is the index of time. We will show that the 
linear recursion of (2.2-4) is satisfied for both implementations of Figure 2.2-7 [11, 12]. The SRG in Galois 
form also has n states, with the tap coefficients ci, now numbered from right to left, which is just the opposite 
of the Fibonacci form indicated in Figure 2.2-7(a). 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         71 
By inspection of the output of the Galois SRG form of Figure 2.2-7(b), it is clear that the following 
is true, 
 
    
  
 
      (2.2-5) 
1
2
1
1
( )
(
1)
(
2)
(
1)
(
1)   
1 
n
n
n
n
n
x k
c x k
c x k
c
x k
n
x k
n
k
n













L
 
This follows since the output state xn(k) is composed of the sum of the previous (one unit earlier) output state 
xn(k–1) weighted by c1 plus xn(k–2) (the output state two units earlier) weighted by c2, and so on until the first 
cell x1(k) is reached. The first register cell x1(k) is delayed by n–1 units and is added to the sum to yield  
(2.2-5). This result can be written in summation form as 
 
 
 
 
 
 
 
      (2.2-6) 
1
1
1
( )
(
)
(
1)    ,
1 
n
n
i
n
i
x k
c x k
i
x k
n
k
n










 
It is clear from the Figure 2.2-7(b) that the following is true 
 
 
 
 
 
  
1( )
(
1)
n
x k
x k


 
 
 
 
 
      (2.2-7) 
 
Define 
. Inserting the term in (2.2-7) and the definition into (2.2-6) and defining cn = 1, produces 
the result 
( )
k
n
a
x k

 
 
 
 
1
1
1
n
n
k
i
k i
k n
i
k
i
i
a
c a
a
c a

i










  
 
 
      (2.2-8) 
since 
 
 
 
 
 
 
      (2.2-9) 
1(
1)
(
1
1)
(
)
n
n
x k
n
x k
n
x k
n
a 








 
k n
n
Thus 
 
 
 
 
 
1
    ,
 
n
k
i
k i
i
a
c a
k





  
 
 
    (2.2-10) 
We see that the sequence defined by either shift register form produces the same result (2.2-4) and  
(2.2-10), and thus the two forms are equivalent in that they produce the same sequence. The initial conditions 
will not be the same for the Fibonacci SRG (FSRG) and the Galois SRG (GSRG) in general, and the states 
that the two generators move through will not be the same either. Now consider an example that illustrates 
the two shift register forms.  
 
Example 5 Consider the two shifts registers in the Fibonacci and Galois forms depicted in the figure. Note 
that the tap connections are just reversed, as indicated in Figure 2.2-7. In part (a) of the figure the output has 
been determined for the Fibonacci form for both the rightmost cell output and the leftmost cell input. Note 
that the rightmost cell outputs the initial conditions first and then the sequence, whereas the input to the 
leftmost cell outputs the sequence directly. In reality there is just a time delay (or phase delay) between the 
two outputs. In part (b) the Galois form produces the same output as the input to the leftmost cell of the 
Fibonacci shift register. 
One useful parameter in measuring the complexity of the sequence structure is the linear span. The 
minimum number of memory elements, LS, needed to construct a Fibonacci generator for the sequence ak is 
the degree of the minimum-degree recursion that generates the sequence ak. This number LS is called the 

 72                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
linear span of the sequence ak. As an example of this definition the sequence of example 5 has a period of 7 
and a linear span of 3, since the smallest linear Fibonacci generator to generate that sequence has three 
storage elements. 
 
 
2.3 MATHEMATICAL CHARACTERIZATION OF SRGS  
 
In this section the matrix point of view will be exploited to develop the mathematical basis of SSRGSs  
[4, 5, 13] and to develop the contents of an SSRG as a function of time.  
 
(a) Fibonacci form
+
Alternate output
0
0
1
(b) Galois form
Output sequence                  10010111001011100...
Alternate output sequence  10111001011100...
Output    10111001011100...
Output
Output
0
0
1
+
(a) Fibonacci form
+
Alternate output
0
0
1
(b) Galois form
Output sequence                  10010111001011100...
Alternate output sequence  10111001011100...
Output    10111001011100...
Output
Output
0
0
1
+
 
 
Example 5 figure showing the Fibonacci and Galois forms for the same code generator. 
 
 
2.3.1 The Shift Register Matrix 
 
The n 
 n shift register matrix (SRM), when multiplied by the n 

 1 column vector X(j) representing the 
present contents at time j of the SSRG, will produce the contents of the SSRG, in Fibonacci form, in the next 
state after one clock shift of the SSRG. The SRM, which will be denoted by A, is an n  n matrix of the form 
 
 
 
 
 
1
2
3
1
 
 
 1
1  0   0      0   0
0  1   0      0   0
  
  
0  0   1      0   0
               
0   0   0  ... 1  0
n-
c c c  ... c
A
n
n




















M M M
M M

 
 
 
 
(2.3.1-1) 
 
with the n-th register output always connected to the mod 2 adder (hence cn = 1). The notation n  n denotes 
the fact that the matrix is of dimensions n by n. Let the column state vector X(j) denote the contents of the 
shift register at time j, with the first (top) component denoting the first storage element (left side of the 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         73 
SSRG) and the second element being represented by the second component of the column vector, and so 
forth. Thus the column state vector X(j) can be represented by 
 
 
 
 
 
 
1
2
3
( )
( )
( )
( )
  
 1 
   
x ( )
n
x
j
x
j
X j
x
j
n
j




















M
  
 
 
(2.3.1-2) 
 
This notation is the same as that used in the last section on Galois SRGs. The contents of the SSRG, at time 
j+1, is given by 
 
 
 
 
 
 
(
1) = A
 
X j
X(j)

 
(n 1)  
 
(2.3.1-3) 
 
It follows that to obtain the contents of the register after m shifts of the SSRG, one merely has to evaluate 
 
 
 
 
 
 
 
 
 
 
(2.3.1-4) 
(
1) = 
( ) 
m
X j
A X j

 
Clearly if the shift register is maximal length then 
 
 
 
 
 
 
 
N
A
I

 
 
 
 
(2.3.1-5) 
 
where N is the length of the maximal sequence (N = 2n–1, with n the number of shift register cells in the 
SSRG), and I is the n × n identity matrix. 
 
Example 6 Consider the following example illustrated in the figure. The A matrix is given by (2.3.1-1), and 
produces, in this example by inspection, the matrix and vector 
 
 
 
 
1
2
3
( )
1 0 1
1 0 0  and ( )
( )  
0 1 0
( )
x
j
A
X j
x
j
x
j





















 
 
After one shift of the SSRG, the output can be determined by (2.3.1-3) to yield 
 
 
 
 
 
1
1
3
2
1
3
2
(
1)
( )
( )
(
1)
( )
(
1)
( )
 
x
j
x
j
x
x
j
x
j
x
j
x
j
j







 
 
Thus the state of the SRG can be determined at any number of shifts of the SRG by repeatedly applying 
(2.3.1-3). 
 
Thus it is seen that shift register sequences can be studied by utilizing matrix theory. 
 
 
2.3.2 The Characteristic Equation and Characteristic Polynomial 
 
For any n 
 n matrix A the characteristic equation is formed by evaluating the determinant of the matrix  
[A–I] (where I is an n × n unit matrix and is a parameter), and which we denote by 


 74                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
+
1
2
3
Output
+
1
2
3
Output
 
 
Figure for example 6 illustrating a Fibonacci SSRG. 
 
 
 
 
 
 
 
 
( )= 
 
F
A
I



 
 
 
 
(2.3.2-1) 
 
Example 7 As an example of the determination of the characteristic equation consider the following A 
matrix 
 
 
 
 
 
 
1
2 
3 1
1 0  0   0
0  1   0   0
0  0   1   0
c c c
  
A














 
 
Then the characteristic equation becomes 
 
 
 
 
1
2
3
1
1
0
( )
 
0
1
0
0
0
1
c
c
c
F
A
I





0








 
 
Expanding by minors along the first row one obtains the result 
 
 
 
 
 
4
3
2
1
2
3
( )
1 
F
c
c
c










 
 
Now consider the characteristic equation in the general case of an n  n matrix A. The characteristic 
equation F() is given by 
 
 
 
 
     
1
2
3
4
1
1
0
0
0
1
0
( )
 
0
1
0
0
0
0
1
c
c
c
c
F



0
0





L
L
L
L
M
M
M
M
M
M
L
 
 
 
(2.3.2-2) 
 
which can be evaluated by expansion of minors to yield the characteristic equation: 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         75 
 
 
 
 
 
 
 
(2.3.2-3) 
0
( )
    with 
 = 1 
n
n k
k
0
k
F
c
c  = c




n
 
Thus it is possible to write down the characteristic equation directly for a given Fibonacci SSRG via 
(2.3.2-3). 
 
The characteristic polynomial is defined by1 
 
     
 
 
 
          (2.3.2-4) 
0
( )
     
 
 
 1 
n
k
k
0
n
k
f
c
c
c






=
 
with each connection corresponding to ck = 1, and each nonconnection corresponding to ck = 0. 
 
Example 8 As an example, suppose that the SSRG under consideration is a six-stage SSRG with connections 
at the first, third, and sixth cells as shown in the following figure. Then, using (2.3.2.-3), one obtains the 
result for the characteristic equation 
 
 
 
 
 
6
5
3
( )
1 
F 







 
 
The characteristic polynomial is given by (2.3.2-4)  
 
 
 
 
 
3
6
( )
1
 
f 






 
 
 
 
 
 
+
Output
+
Output
 
 
Figure for example 8, illustrating how to determine the characteristic equation and polynomial. 
 
 
Figure 2.3-1 summarizes both the characteristic equation and the characteristic polynomial in relationship to 
the SSRG. 
 
 
2.4 THE GENERATING FUNCTION  
 
A powerful tool in the analysis and characterization of the output sequence is the generating function. Denote 
the output of an SSRG sequence by  
 
 
 
 
 



0
1
2
,
,
...  
m
a
a a a

 
 
 
 
                   (2.4-1) 
 
                                                          
1 Although some authors use this definition, others use
0
( )
n
n k
k
k
f
c




. 

 76                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
where the index m indicates time; that is, a0 occurs initially, then a1, then a2, and so forth. Note that the initial 
conditions are not present in this output, since it starts after the initial conditions have been shifted out of the 
shift register. 
 
Characteristic equation
Characteristic polynomial:
0
0
( )
   with 
1
n
n k
k
n
k
F
c
c
c







0
0
( )
   with 
1
n
k
k
n
k
f
c
c
c







cn=1
+
cn-1
+
cn–2
+
c3
+
c1
×
+
c2
Output
×
×
×
×
Characteristic equation
Characteristic polynomial:
0
0
( )
   with 
1
n
n k
k
n
k
F
c
c
c







0
0
( )
   with 
1
n
k
k
n
k
f
c
c
c







cn=1
+
cn-1
+
cn–2
+
c3
+
c1
×
+
c2
Output
×
×
×
×
 
 
Figure 2.3-1 The characteristic polynomial and equation for a Fibonacci SSRG. 
 
 
Then the generating function of the output sequence is given by 
 
 
 
 
 
 
  
 
 
 
      (2.4-2) 
0
( )
 
k
k
k
G x
a x



 
where x is a real variable. The initial state of the register (reading from left to right) is defined as a–1, a–2, a–3, 
..., a–n+1, a–n for an n-stage shift register. Then the output sequence a0, a1, a2, ... is defined by the linear 
recursion relation; see (2.2-3) 
 
 
 
 
 
 
   
1
n
m
i
m
i
a
c a
i



 m = 0, 1, 2,... 
 
 
      (2.4-3) 
 
So that the sequence is defined after all of the initial conditions are clocked out of the register.  
Using (2.4-3) with (2.4-2) produces 
 
 
 
 
 
     
  
 
 
 
      (2.4-4) 
0
1
( )
 
n
k
i
k i
k
i
G x
c a
x





 
Changing the order of summation yields 
 
 
 
 
 
   
1
0
( )
 
n
i
k
i
k i
i
k
G x
c x
a
x

i






 
 
 
 
      (2.4-5) 
 
or 
 
 
 
 
 
 
      (2.4-6) 
1
1
1
1
1
0
( )
...
 
n
i
i
i
k
i
i
i
k
i
i
G x
c x
a x
a
x
a x
a x



















 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         77 
 
The last term on the right of (2.4-6) is just G(x), so solving for G(x) produces 
 
 
 
 
     
1
1
1
1
1
1
( )
 
1
n
i
i
i
i
i
i
i
n
i
i
i
c x
a x
a
x
a x
G x
c x



















L
  
 
      (2.4-7) 
 
Now since the denominator is equal to 
 when the coefficients are in GF(2), one finally obtains one 
of our main results 
0
n
i
i
i
c x

 
 
 
 
1
1
1
1
1
0
( )
( )
 
( )
n
i
i
i
i
i
i
i
n
i
i
i
c x
a x
a
x
a x
g x
G x
f x
c x


















L

 
 
      (2.4-8) 
 
in which c0 is assumed to be one (there is no “zeroth” tap of course) and “normally” cn is one. Thus G(x) can 
be expressed in terms of the initial state a–1, a–2, ..., a–n in the numerator, and the characteristic polynomial in 
the denominator, via the feedback taps c1, c2, ..., cn. 
 
Note that when we perform long division of (2.4-8) we obtain the series  
 
 
 
 
 
 
 
 
 
      (2.4-9) 
2
0
1
2
( )
 
G x
a
a x
a x



L
 
so that the coefficient of xm is the (m+1)-th term in the output sequence. Note that when  
a–1 = a–2 = … a1–n = 0 and a–n = 1, G(x) reduces to (cn = 1) 
 
 
 
 
 
      
1
( )
 
( )
G x
f x

 
 
 
 
 
    (2.4-10) 
 
Therefore this condition occurs when the initial conditions of a “1” in the last cell (right most) and “0s” 
in the n–1 remaining cells occur located on the left of the “1.”  
 
Example 9 Consider the example indicated in the figure, which is a SSRG with three stages with feedback 
taps on the first and third cells. Using (2.4-8), the function G(x) is given by  
 
1
2
2
1
3
3
2
1
1
1
2
2
1
3
3
2
1
3
(
)
(
)
(
( )
 
1
c x a x
c x
a x
a x
c x a x
a x
a x
G x
)
x
x





















 
    
    (2.4-11) 
 
Let the initial conditions be given by a–1 = a–2 = 0, and a–3 = 1 so that the numerator is “1” (c3 =1), then the 
division (using the lowest order first in all the polynomials) leads to  
 

 78                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
                                            
 
2
4
7
8
3
4
3
4
                1   1   1  0  1 0 0 1   1 
                1+
1
 1
                1+ +
                      
                      
                            
      
3
3
2
2
x
x
x
x
x
x
x
x x
x+ x
x+ x
x
x
x
x









3
5
5
5
7
                                  (2.4-12)
                            
                                          
                                          
                        
2
4
4
x
x
x
x
x
x
x
x





8
10
10
                                
                                                        
                                                               
                                
7
7
8
x
x
x
x
x
x



9
11
10
11
                               
                                                                      
8
9
x
x
x
x
x
x




 
2
4
7
8
3
4
3
4
                1   1   1  0  1 0 0 1   1 
                1+
1
 1
                1+ +
                      
                      
                            
      
3
3
2
2
x
x
x
x
x
x
x
x x
x+ x
x+ x
x
x
x
x









3
5
5
5
7
                                  (2.4-12)
                            
                                          
                                          
                        
2
4
4
x
x
x
x
x
x
x
x





8
10
10
                                
                                                        
                                                               
                                
7
7
8
x
x
x
x
x
x



9
11
10
11
                               
                                                                      
8
9
x
x
x
x
x
x




 
2
4
7
8
3
4
3
4
                1   1   1  0  1 0 0 1   1 
                1+
1
 1
                1+ +
                      
                      
                            
      
3
3
2
2
x
x
x
x
x
x
x
x x
x+ x
x+ x
x
x
x
x









3
5
5
5
7
                                  (2.4-12)
                            
                                          
                                          
                        
2
4
4
x
x
x
x
x
x
x
x





8
10
10
                                
                                                        
                                                               
                                
7
7
8
x
x
x
x
x
x



9
11
10
11
                               
                                                                      
8
9
x
x
x
x
x
x




                             (2.4-12) 
 
The figure of the SSRG is shown next. 
 
                        
+
1
2
3
Output
1                                      0                     
0
+
1
2
3
Output
1                                      0                     
0
              
 
Figure of example 9, showing the SSRG. 
 
 
By checking the nonzero coefficients of the powers of x one can conclude that the output sequence is given 
by  
 
 
 
 
 
a0 a1 a2 a3 a4 a5 a6 a7 a8 
 
 
 
 
1  1  1   0  1  0   0  1  1 
 
 
 
 
    (2.4-13) 
 
Notice that the first digit of the output sequence is a0, as it should be from the definition of G(x), given by 
(2.4-2). 
 
 
2.5 THE CORRELATION FUNCTION OF SEQUENCES 
 
Before discussing the specific types of codes that are available, some definitions related to the various types 
of correlation functions that are useful when dealing with both sequences and the associated time waveforms 
will be presented. Figure 2.5-1 illustrates various types of correlations and the associated binary codes, which 
can be classified by the type of correlation function for which these codes were designed [14]. 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         79 
Low correlation sequences
Aperiodic
correlation
Periodic
correlation
Maximal
length
Gold
Kasami
Dual
BCH
Gold-
like
Williard
Neuman-Hofman
Barker
Low correlation sequences
Aperiodic
correlation
Aperiodic
correlation
Periodic
correlation
Maximal
length
Maximal
length
Gold
Kasami
Dual
BCH
Gold-
like
Gold
Kasami
Dual
BCH
Gold-
like
Gold
Kasami
Dual
BCH
Gold-
like
Williard
Neuman-Hofman
Barker
Barker
Barker
 
 
Figure 2.5-1 Correlation function classification of binary codes. 
 
 
Low correlation sequences (i.e., low autocorrelation and low cross-correlation sequences) can be 
broken down into different classes of correlations. The first class is that of a periodic correlation. This 
involves the correlation of two codes over the complete code period, with the assumption that each code has 
the same period. This correlation is very important in code division multiple access (CDMA) applications. 
 
Aperiodic correlation functions typically relate to the correlation over an incomplete period of one 
code against another code, in which data is often located before and after the code word. Aperiodic 
correlation functions thus find applications in synchronization schemes. 
 
Within these types of correlations one can further break down the class into autocorrelation and 
cross-correlation processes. And within these two classes of correlations one can break them down even 
further into binary and q-ary sequences. These two classes can further be broken down into the individual 
codes. Only binary codes will be treated here. 
 
It is appropriate and useful at this point to indicate the relationship between the periodic, auto-, and 
cross-correlation functions of the waveform and the discrete periodic auto- and cross-correlation functions of 
the sequence. Let the code sequence from a code generator be the sequence {am} {0,1} and let the sequence 
{
} {–1,1} be related by  
m
a
 
 
 
 
 
 
 
 
 
 
 
      (2.5-1) 
1 2
 
m
a 
'
m
a
c
 
so that a “zero” value of am maps to “one” for 
, and a “one” value for am maps to a “minus one” value for 
. The baseband waveform u(t) is written in terms of the {
} as  
'
m
a
'
m
a
'
m
a
 
 
 
 
 
  
 
 
 
      (2.5-2) 
'
( )
(
) 
m
m
u t
a p t
mT





 
where Tc is the chip time or duration of each pulse, and p(t) is a unit amplitude rectangular pulse starting at 
time zero and ending at time Tc seconds, so that u(t) is the binary valued waveform corresponding to the code 
{0,1} sequence {am}. The time autocorrelation function of u(t) is given by  
 
 
 
 
 
0
1
( )
( ) (
)
 
T
u
R
u t u t
T





dt  
 
 
 
      (2.5-3) 
 
where T = NTc is the code length, and N is the number of chips in the period. Now consider two different 
binary valued waveforms u(t) and v(t), each with the same chip rate 1/Tc and period T. The time cross-
correlation function is given by 

 80                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
 
 
 
 
0
1
( )
( ) (
)
 
T
uv
R
v t u t
T



dt

c
nb
 
 
 
 
(2.5-4) 
 
where v(t) is given by 
 
 
 
 
 
  
  
 
 
 
(2.5-5) 
( )
' (
) 
n
n
v t
b p t
nT





 
and where 
 {–1,1} and bn {0,1} and bn is the code sequence and 
 is the mapping from {0,1} to {–1,1} 
through 
'
nb
'
nb
 
 
 
 
 
 
 
 
 
 
 
(2.5-6) 
'
1 2
 
nb 
 
In general the notation xn will denote elements in {0,1} and the primed version will denote elements in  
{–1,1}. Putting the definitions of u(t) and v(t) into (2.5-4) produces 
 
 
 
 
'
'
0
1
( )
(
) (
)
 
T
uv
m
n
c
c
n
m
R
a b
p t
mT p t
T










nT dt

  
 
(2.5-7) 
 
Note that the integral is zero when the two pulse functions don’t overlap. Now let  be given by  
 
 
 
 
  ,    0
 ,    an  integer 
c
lT
T
l






 
 
 
(2.5-8) 
 
the integral in (2.5-7) produces a pulse overlap when n = l+m and when n = l+m+1, and it can be broken up 
into two integrals of the form 
 
 
 
 
1
'
0
0
1
'
1
0
1
1
( ,
)
( ) (
)
 
1
1
             
( ) (
)
c
c
c
T
N
uv
m
m l
m
c
T
N
m
m l
c
m
c T
R
l
a b
p x p x
dx
N
T
a b
p x p x
T
dx
N
T

























 
 
(2.5-9) 
 
where the substitution x = t–mTc has been used in this equation. The discrete normalized periodic 
autocorrelation function and the discrete normalized periodic cross-correlation function are defined, 
respectively, by  
 
 
 
 
 
1
'
'
0
1
'
'
0
1
ˆ ( )
 
1
ˆ ( )
N
a
n
n
N
ab
n
n l
n
l
a a
N
l
a
N



n l
b









 
 
 
 
 
(2.5-10) 
 
The normalization comes from the division by N. The corresponding unnormalized versions follow from 
(2.5-10) without the division by N, so that 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         81 
 
 
 
 
1
'
'
0
1
'
'
0
( )
 
( )
N
a
n
n
N
ab
n
n l
n
l
a a
l
a b






n l






 
 
 
 
 
(2.5-11) 
 
From (2.5-9) it is seen that, in order to analyze the time waveforms it is necessary to analyze the discrete auto 
and cross-correlation functions. Thus, from (2.5-9) and (2.5-10), one can write (since  is positive) 
 
 
    
 
ˆ
ˆ
( ,
)
1
( )
(
1) 
uv
ab
ab
c
c
R
l
T
T



















l
  
 
 
(2.5-12) 
 
 
and when  = 0, one has 
 
 
 
 
 
( )
( ) 
uv
ab
R
l
l


  
 
 
 
(2.5-13) 
 
 
It is useful at this point to define the two parameters that measure the peak correlation values for the 
cross- and autocorrelation functions. Define the peak periodic cross-correlation function magnitude by 
 
 
 
 


max
( ) such that 0
1, 
c
ab l
l
N




a
b


 
 
 
(2.5-14) 
 
In a similar manner one can define the peak periodic out-of-phase autocorrelation function magnitude by  
 
 
 
 


max
( ) such that 1
1  
a
a l
l
N





 
 
 
 
(2.5-15) 
 
and finally the maximum of the two correlation parameters by 
 
 
 
 
 


max
max
,
 
a
c



 
 
 
 
 
(2.5-16) 
 
Notice that the range of l in 
c
 differs from the range of l in 
a
, that is 
c
 includes l = 0. 
Henceforth in this chapter we will drop the primes in (2.5-10) and (2.5-11) with the understanding 
that the cross-correlation and the autocorrelation functions are based on the sequences with coefficients 
having the values 
 which is related to the 0, 1 sequence through (2.5-1). 
1

 
 
2.5.1 Periodic Correlation Functions for Sequences 
 
In this section a few relationships for periodic correlation functions will be presented. Reference [7] was 
utilized in this development. The discussion will be limited to sequence symbols that are  GF(2). We define 
the shift register generated sequence a, as 
 
 
 
 
 
 
 
(2.5.1-1) 
3
2
1
0
1
2
1
1
...,
,
,
,
,
,
,...
,
,
,... 
N
N
N
a
a
a
a
a a a
a
a
a






 
with the period being N. If b is also an SSRG generated sequence of period N, it is easy to show that2  
 
 
 
 
 
 
( )
(
) 
l
l
N




ab
ab
 
 
 
 
(2.5.1-2) 
It is also easy to verify that  
                                                          
2 The bold representation of a and b are based on the definition of a and b that are N element vectors, which will be defined shortly. 

 82                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
 
 
 
 
 
          
(
)
( ) 
l
l




ab
ab
  
 
 
 
(2.5.1-3) 
 
Denote the N component row vector a, whose components are GF(2) as the first N sequence values of an 
SSRG, that is,  
 
 
 
 
 
 
0
1
1
,
,
 
N
a a
a


L
a
 
 
 
 
(2.5.1-4) 
 
and define b in a similar manner. Define the inner product of two vectors a and b by  
 
 
 
 
 
 
  
 
 
 
(2.5.1-5) 
1
0
,
N
i
i
i
a b




a b
 
 
where, as was mentioned earlier, all components in every summation used for an inner product or discrete 
correlation function have value 
 The norm of a is given by  
1.

 
 
 
 
 
 
1
2
0
N
i
i
a



a
 
 
 
 
 
(2.5.1-6) 
 
The Cauchy Inequality is given by 
 
 
 
 
 
 
,
 


a b
a
b   
 
 
 
(2.5.1-7) 
 
Using the Cauchy Inequality for binary valued periodic sequences of period N, one has 
 
 
 
 
 
1
1
2
0
0
N
N
N
i i l
i
i
i
i
i
a b
a
b











1
2
0
l
 
 
 
 
(2.5.1-8) 
 
since the norm of b does not depend on where the summation begins, as long as the sequence is periodic.  
 
When b = a, the autocorrelation function has the same properties as the cross-correlation function in 
the sense that  
 
 
 
 
 
( )
(
) and 
(
)
( ) 
l
l
N
l








a
a
a
a
 
 
 
(2.5.1-9) 
 
From the results of problem 5 it follows that 
 
 
 
 
1
1
1
1
2
2
2
0
0
0
0
(0) 
N
N
N
N
i
i l
i
i
i
a
i
i
i
i
a a
a
a
a

















  
 
 
(2.5.1-10) 
 
If we let Ta denote the left cyclic shift operator that shifts the vector cyclically to the left by one place, so that 
if a is as in (2.5.1-4), then  
 
 
 
 
 
         
1
2
1
0
,
,
,
 
N
T
a a
a
a


L
a
 
 
 
 
(2.5.1-11) 
 
It is easy to show, using the first equation in (2.5-10), that 
 
 
 
 
 
 
( )
(
) 
k
T
l
l
k




ab
a
b
 
 
 
 
(2.5.1-12) 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         83 
It is also clear that the following is true  
 
 
 
 
 
      
( )
(
) 
i
j
T
T
l
l
j
i





ab
a
b
 
 
 
 
 (2.5.1-13) 
 
and letting a = b and i = j that 
 
 
 
 
 
 
    
( )
( ) 
k
T
l
l



a
a
 
 
 
 
 (2.5.1-14) 
 
Two sequences a and b are said to be uncorrelated if  
 
 
 
 
 
 
( )
0    for all     
l
l


ab
 
 
 
 
 (2.5.1-15) 
 
A sequence is said to have a two-valued autocorrelation function if 
( )l
a
equals some constant other than 
(0)
a
 for all 
, with N the period. 
0 Mod 
l 
N
 
 
2.5.2 Aperiodic Correlation Functions for Sequences 
 
Now consider the case of aperiodic correlation functions for real valued sequences. These functions are very 
important in synchronization problems (e.g., where a short sequence is placed within a data stream and is 
used to obtain and maintain time synchronization). When the timing is not aligned, and a time error of say a 
few code chips exists, a periodic correlation will produce a value that has two parts. The first will depend on 
the portion of the local reference code that overlaps the received code, and the second part will depend on the 
correlation of the few chips of local code that correlates with the data. Thus, the only part of the correlation 
that is reliable (since the data pattern has an assumed random symbol sequence) is the overlap portion, which 
is an aperiodic correlation.   
 
Again let the sequence values be GF(2), with the understanding that when sums or correlations are 
used the values of the components are {1}. Thus for binary valued real sequences a and b we define the 
discrete aperiodic cross-correlation function [7] as 
 
 
1
0
1
1
0
                  0
1
( )
 1-
0  
0                                  
N
l
i
i l
i
N
l
N
i l
i
k
k l
i
k
l
a b
l
N
C
l
a b
a b
N
l
l
N



























ab

 
 
 
   (2.5.2-1) 
 
and we see that the number of symbols that are correlated in (2.5.2-1) is N– l . The discrete aperiodic 
autocorrelation function is obtained from (2.5.2-1) with a = b. 
 
Now let us consider some properties of the aperiodic correlation function. First note that 
 
 
 
 
 
       
 
 
 
 
   (2.5.2-2) 
1
0
(0)
(0) 
N
i
i
i
C
a b






ab
ab
 
Clearly if b = a then one has 
 
 
 
 
 
 
(0)
(0) 
C


a
a
  
 
 
 
   (2.5.2-3) 
 

 84                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
where Caa(l) = Ca(l). It can also be shown that  
 
 
 
 
 
 
(
)
( ) 
C
l
C
l


ab
ab
 
 
 
 
   (2.5.2-4) 
 
This is analogous to the periodic cross-correlation result given in (2.5.1-3). Now if a = b then it follows from 
(2.5.2-4) that  
 
 
 
 
 
 
(
)
( ) 
C
l
C l


a
a
  
 
 
 
   (2.5.2-5) 
 
Figure 2.5-1 illustrates the different correlation criteria and the resulting codes that were designed to 
satisfy that criteria [14]. More will be said about these criteria later in the chapter. 
 
 
2.6 CODES FOR SPREAD SPECTRUM MULTIPLE ACCESS APPLICATIONS 
 
In this section we will discuss some codes that are designed for multiple access usage in the sense that they 
have low periodic cross-correlation and periodic out-of-phase-autocorrelation values. In code division 
multiple access (CDMA) systems a common carrier frequency is used along with a unique code for each 
user. The user receiver is able to separate the desired code from all the others that are received by the antenna 
by a correlation process. This correlation process has the property that only the desired code has full 
correlation, and the other signals have a very low cross correlation and therefore appear as noise to the 
desired code receiver. 
 
 
2.6.1 Binary Maximal Length Sequences 
 
Before we present some properties of binary maximal length sequences (m-sequences), recall that the 
characteristic polynomial is obtained from a linear feedback shift register having n cells, by evaluating the 
equation  
 
 
 
 
 
0
( )
   with 
1 
n
n
n
0
n
k
f x
c x
c
c





  
 
 
(2.6.1-1) 
 
with ci being 1 only if the connection is made at the i-th cell (and is zero otherwise) when counting from left 
to right. Now consider the conditions for a maximal length sequence. A maximal length sequence is one in 
which the sequence period is N = 2n–1. Recall from Section 2.1.1 that the phrase “a polynomial over GF(2)” 
means a “polynomial with coefficients from GF(2).” A polynomial over GF(2) is called irreducible if it 
cannot be factored, that is, divided by another polynomial of degree less than n (other than the polynomial 
“1”). 
 
An irreducible polynomial of degree n is called primitive if and only if it divides xm+1 for no m less 
than 2n–1. Theorem 1 establishes the fact that primitive polynomials generate maximal length codes. 
 
 
Theorem 1  If 2n–1 is prime, every irreducible polynomial of degree n corresponds to a shift register 
sequence of maximal length. However, if one requires a maximal length sequence for every n, we must 
restrict our characteristic polynomials to be primitive [6]. 
 
We now consider some properties of maximal length sequences. 
 
Property I:  The period of a maximal length sequence is N = 2n–1, where n is the length of the shift register 
generating the sequence. 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         85 
Proof  Follows from Theorem 1. A table of primitive polynomials is discussed in Section 2.6.1.1 and given 
in Table 2A-1. 
 
Property II: There is one more “one” in the sequence than “zeros.”3 
 
Proof:  Since a maximal length sequence contains all possible sequences except the all zeros sequence, there 
is clearly one more “one” than “zeros.” Note, translated to the symbols {1, –1}, the property reads: there is 
one more “–1” than “+1”s. 
 
Property III: The modulo two sum of an m-sequence and a time shifted version of the m-sequence, is itself 
another time shift of the same m-sequence. 
 
Proof: From  (2.4-8) it follows that the modulo two sum of two versions of the same m-sequence is given by 
 
 
 
 
 
 
1
2
( )
( )
( ) 
G x
G x
G x


 
 
 
 
  (2.6.1-2) 
 
where  
 
 
 
 
 
1
1
1
1
1
1
0
...
( )
 
n
i
i
i
i
i
i
i
n
i
i
i
c x
a x
a
x
a x
G x
c x
















 
 
  (2.6.1-3) 
 
 
 
 
         
1
1
1
1
1
2
0
...
( )
 
n
i
i
i
i
i
i
i
n
i
i
i
c x
b x
b
x
b x
G x
c x
















  
 
   (2.6.1-4) 
 
It follows that the sum of the two generating functions, which we can call G(x) is given by 
 
     
 
1
1
1
1
1
1
1
0
(
)
(
)
...(
)
( )
 
n
i
i
i
i
i
i
i
i
i
n
i
i
i
c x
a
b
x
a
b
x
a
b
x
G x
c x






















  
   (2.6.1-5) 
 
Clearly the modulo two sum of the respective a and b sequences are either “1” or “0.”  This is 
equivalent to a new initial condition in the shift register, which implies that the output sequence is simply a 
shifted version of the same sequence. Note that the normalized autocorrelation function is defined in  
(2.5-10). 
 
Property IV:  The normalized discrete periodic autocorrelation function of an m-sequence has only two 
values, namely 
 
 
 
 
   
 
1
ˆ ( )
    
0 modulo 
 
ˆ ( )
1         = 0 modulo 
 
l
l
N
l
l
-





a
a
N
N
                                                          
 
 
 
 
   (2.6.1-6) 
 
 
3 Recall when we speak of the sequence we will assume that the symbols are {0,1}, whereas when we speak of the correlation 
properties we will be dealing with symbols that are {1, –1}. 

 86                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
Proof It follows that when l 
 0 (modulo N) the normalized autocorrelation function is the value of the 
symbol by symbol product of an m-sequence and a shifted version of the m-sequence. The symbol by symbol 
product of two m-sequences in the {1,–1} format is equivalent to the modulo two sum of the same two  
m-sequences in {0,1} format.  Therefore it follows from property III that since there is one more “–1” than 
“+1” in the “new” m-sequence, the value of the normalized correlation function is given by 
.  
When l = 0 it is clear that the normalized correlation function is given by 

ˆ ( )
1/
 
l
N


a
ˆ ( )
1
l


a
. 
 
Denote a run of length q, a subsequence of the m-sequence of q consecutive symbols of the same 
type. A run of q ones denotes q consecutive “ones” in the subsequence, and no more. A run of q zeros is 
defined in a similar manner. 
 
Property V:  For every m-sequence generated from a shift register of length n there is one run of 1s of length 
n, one run of 0s of length n–1 with relative frequency 2n-1. All the rest of the runs of length r = n–1 or less 
have relative frequency 2-r. It is not possible to have run lengths greater than n, of course. 
 
Proof For a shift register of length n there are 2n–1 symbols in one period, which includes all the possibilities 
except the all zeros sequence, which is not included in the output sequence and has a period 1. Of all the 2n 
binary vectors of length n, exactly half are even (have a zero in the right most bit) and half are odd (have a 
one in the right most bit).  Since the all zeros vector is not included shift register output, the balance is offset 
by 1 out of 2n. Thus there are 2n–1 odd sequences and 2n–1–1 even sequences. 
 
Now consider r + 2 successive cells of the shift register generator where r  n–2. Consider the cell 
contents in the two forms 
 
 
 
 
0
 
1
2
1
2
,
,
,
,0   and   1,
,
,
,1
r
r
y y
y
y y
y
L
L
 
There are 2r possibilities in each case and there will be just one that has a run length of exactly r; the all-ones 
of length r for the left sequence and the all-zeros of length r in the second sequence. Therefore for the  
(2)2r = 2r
 +1 possibilities for both cases considered together, exactly two have a run length of r. It follows that 
a fraction 2–r have run length r for 1
2 .  
r
n



 
Consider now the case of run lengths of n–1. If this occurs then the contents of the cells in the shift 
register at some point must be either 
 
 
 
 
0
 
,0,
0,1       or      1,1,
1,0
L
L
 
 
 
n–1 zeros 
        n–1 ones  
 
In either case, since all n cells of the shift register are specified there can only be one possible input to the 
leftmost cell. For the sequence on the left it must be a one, since otherwise the register would hold all zeros, 
which can’t happen. For the sequence on the right, the next bit that enters on the left must also be a one, since 
this is the only way the all-ones can occur. In addition the next bit after this one must be a zero, or else the 
all-ones state would occur indefinitely with a period of one. 
See also [6, 11, 15] for more discussion of this proof. There are more properties of m-sequences and 
the interested reader should consult [6, 7, 15]. See also property VI in Section 2.6.3. 
 
 
2.6.1.1 A List of m-Sequence Generators 
 
In order to design a shift register sequence generator it is convenient to look up a primitive polynomial and 
not have to exhaustively search for it, since that can be quite time consuming. Fortunately a number of 
authors have compiled irreducible polynomials in which primitive polynomials are indicated (in list form) 
which makes for easy access to them. Peterson and Weldon [16] have a rather complete tabular list (see 
Table 2A-1). Before we discuss Table 2A-1 and its use, we first consider the reciprocal polynomial. Define 
the reciprocal polynomial of degree n, denoted by f R(x), of any polynomial of degree n ( f(x)), by 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         87 
 
 
 
 
 
( )
(1/ ) 
R
n
f
x
x f
x

 
 
 
 
(2.6.1.1-1) 
 
As an example consider  
 
 
 
 
 
 
4
( )
1 
f x
x
x



 
 
 
 
(2.6.1.1-2) 
 
using (2.6.1.1-1) one obtains the result 
 
 
 
 
     
  
 
 
(2.6.1.1-3) 
4
4
1
4
3
( )
(
1)
1 
R
f
x
x
x
x
x
x








 
It is to be noted that the reciprocal of a primitive polynomial is itself primitive, and the reciprocal of a 
irreducible polynomial is itself irreducible. The reciprocal of a primitive polynomial generates the reverse 
sequence. 
 
Table 2A-1 illustrates the octal representation of primitive characteristic polynomials, all of which 
are listed up to degree 7. Above degree 7 only a partial list is provided. The table entries that have an asterisk 
after the entry have only two feedback connections. This is advantageous for high-speed circuits. Consider 
the entry [1021]* for n = 9. Since the entry is in octal it is necessary to convert the octal numbers into binary. 
This translates as 
 
 
 
 
 
 
  
 
 
 
(2.6.1.1-4) 
}}} }
0
1
2
001000010001
1
 
Reading from the right, with the first coefficient (in this case 1) being the coefficient of x0, the second 
coefficient (in this case 0) the coefficient of x1, the third coefficient the coefficient of x2, and so on. Thus the 
characteristic polynomial is given by 
 
 
 
 
 
        
4
9
( )
1
 
f x
x
x


  
 
 
 
(2.6.1.1-5) 
 
The corresponding shift register is shown in Figure 2.6-1.  
 
+
f(x)=1+ x4 + x9
Output
+
f(x)=1+ x4 + x9
Output  
 
Figure 2.6-1 Shift register generator for f(x) = 1+x4+x9. 
 
 
Note the x4 term is represented by the fourth cell from the left, connected to the adder and the x9 
term is represented by the ninth cell from the left connected to the adder. It is seen that there are only two 
feedback taps, as indicated by the asterisk. It follows that the linear recursion relationship is given by  
(2.4-2). 
 
 
 
 
 
 
 
 
(2.6.1.1-6) 
4
9  
0, 1, 2, 3,...
m
m
m
a
a
a
m





 
can be used to generate a maximal length sequence. 
 
 
 

 88                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
2.6.1.2 Decimation of m-Sequences 
 
Now consider decimating an m-sequence. Let Z denote the set of all integers and let q be a positive integer.  
The sequence b is said to be a decimation of a when b is formed by taking every q-th bit of a (i.e., bi = aqi for 
all i  Z), and b will be denoted by a[q]. Denote the greatest common divisor of N and M by gcd(M,N). For 
example gcd(6,3) = 3. A proper decimation of b will result in a maximal length period sequence. It is shown 
in the paper by Sarwate and Pursley [7] that a proper decimation of b will occur and have period N =2n–1 if 
and only if gcd(N,q) = 1, with N being the period of the sequence. In general the period of the decimation 
sequence will be N/gcd(N,q). It is to be noted that not all decimations will result in another m-sequence. 
 
Example 10 As an example consider the case for a sequence of length N = 63. From [16] in Appendix C, the 
entry for the 6th degree (26–1 = 63) polynomials is as follows: 
DEGREE 6 
1 103 F 3 127 B 5 147 H 7 111 A 
 
 
9 015  
 
11 155 E 
21 007 
 
The letters E, F, G, H following the numbers indicate, among other things, that polynomials 103, 
147, and 155 are primitive polynomials, and A, B, C, and D following the numbers indicate that the 
polynomials are nonprimitive. Table 2A-1, at the end of the chapter, also has the same primitive polynomials 
but no non-primitive polynomials. Let us assume that the polynomial 1 103 F represents our m-sequence 
under consideration. It is a primitive polynomial so that N = 63. The first integer of the codes indicates the 
decimation value. Now a[3] (taking every third sample of the sequence) is generated by the polynomial 3 127 
B, a[5] is generated by the polynomial 5 147 H, and so forth. 
 
First consider the second polynomial 3 127 B. We note that it is not primitive (it has the letter B 
following it) and has period 63/gcd(63,3) = 21, so that it will not be of maximal length. It is true, however, 
that the polynomial 5 147 H is primitive and therefore has a period of 63/gcd(63,5) =63, so that sampling 
every fifth bit out of the shift register will produce an m-sequence. Only primitive polynomials are indicated 
in Table 2A-1. 
 
 
 
The characteristic phase4 of the m-sequence a, denoted by a%, is defined as the sequence that 
satisfies the condition 
 
 
 
 
 
 
2  for all 
 
i
i
a
a
i

Z
%
%
 
 
 
 
(2.6.1.2-1) 
 
In other words the characteristic phase is generated when the initial conditions of the shift register are such 
that taking every second symbol in the output stream of the m-sequence produces the original sequence 
again. 
 
Example 11 As an example of finding the characteristic phase of an m-sequence, consider the case that n = 3.  
From Table 2A-1 we see that the only primitive polynomial is given by [13]. Thus  
 
 
 
 
 
 
3
( )
1
 
f x
x
x


 
 
 
 
(2.6.1.2-2) 
 
Evaluating the recursion 
 
 
 
 
 
 
1
k
k
k
a
a
a

3


  
 
 
 
(2.6.1.2-3) 
 
produces the sequence for three periods (the period is N = 7) 
        
100111010011101001110  
 
 
 
(2.6.1.2-4) 
 
                                                          
4 Sometimes this is called the characteristic m-sequence. 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         89 
Trying the first sequence and comparing it to the sequence formed from every other chip produces the 
two sequences 
 
 
 
 
 
 
10
 
 
 
 
 
(2.6.1.2-5) 
01110 
1010011
 
and they are obviously not the same. However trying the fourth chip as the initial chip, and recording the 
fourth through the tenth chip and comparing that sequence with the one obtained by starting at the fourth chip 
and recording every second one, produces the result 
 
 
 
 
 
 
11
 
 
 
 
 
(2.6.1.2-6) 
10100 
1110100
 
which is indicated by the short vertical lines above the sequence in (2.6.1.2-4). 
 
 
2.6.1.3 The Power Spectral Density of m-Sequences  
 
Before discussing Gold codes and the other codes used for CDMA it is useful to develop the power spectral 
density of an m-sequence [13]. The baseband waveform of an m-sequence is given by (2.5-2) 
 
 
 
 
 
  
 
 
 
(2.6.1.3-1) 
( )
(
) 
m
m
u t
a p t
mT





c
 
where Tc is the chip duration, p(t) is a rectangular pulse of unit amplitude starting at time zero and ending at 
time Tc, the period is assumed to be NTc seconds long, and 
{ 1,1}
m
a 
 and is the value of the m-sequence 
chips. The time autocorrelation function is given by (2.5-3) 
 
 
 
 
 
0
1
( )
( ) (
)
 
c
NT
u
c
R
u t u t
NT


dt


 
 
 
 
(2.6.1.3-2) 
 
For  such that –Tc <  <Tc it is clear that the value of the autocorrelation function is a linear combination of 
the autocorrelation for  = 0 and = Tc. For example, if the time displacement is one half chip (see Figure 
2.6-2) one half of the product will have a correlation value of 1 (shaded area) and one-half of the product will 
have a correlation value of –1/N.  
Figure 2.6-2 illustrates an example of a length 7 m-sequence. Furthermore, when 
  and   
cT



c
NT

, one half of the correlation value will be –1/N and the other half will be –1/N. The 
resulting weighted sum is therefore –1/N. It is concluded that the autocorrelation function will be composed 
of straight-line segments as shown in Figure 2.6-3. 
To obtain the power spectral density, the Fourier transform of the autocorrelation must be obtained. 
First define the triangle function (Tc) as  
 
 
1
     
( /
)
 
0            elsewhere
c
c
c
T
T
T









 
(2.6.3.1-3) 
 

 90                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
u(t)
u(t-Tc/2)
t
t
u(t)
u(t-Tc/2)
t
t
 
Figure 2.6-2 The m-sequence waveform for computing the autocorrelation function. 
 
 

Ru()
1
0
Tc
-Tc
-1/N
-(N-1)Tc
(N-1)Tc
NTc
-NTc
...
...
(N+1)Tc
-(N+1)Tc

Ru()
1
0
Tc
-Tc
-1/N
-(N-1)Tc
(N-1)Tc
NTc
-NTc
...
...
(N+1)Tc
-(N+1)Tc
 
Figure 2.6-3 The m-sequence waveform autocorrelation function. 
 
 
The Fourier transform of (Tc) is given by [17, 18]  
 
 
 
 
 


2
( /
)
sinc(
)  
c
c
c
T
T
fT



F
 
 
 
 
(2.6.1.3-4) 
where 
 
 
 
 
 
    
sin(
)
sinc( )
 
x
x
x



 
 
 
 
 
(2.6.1.3-5) 
 
Since Ru) is periodic it can be expressed as the sum of a dc term (–1/N) and an infinite series of triangle 
functions of amplitude (N+1)/N, separated by the period NTc seconds. Thus 
 
 
 
 
1
1
( )
( /
)*
(
) 
u
c
m
N
R
T
N
N











c
mNT
 
 
 
(2.6.1.3-6) 
 
where the “*” denotes the convolution operation. Using the result [17]  
 
 
 
 
1
(
)
c
m
n
c
c
n
mNT
f
NT
NT





















F
 
 
 
 
(2.6.1.3-7) 
 
The power spectral density becomes 
 
 
 
        


2
2
0
1
1
( )
( )
sinc
 
u
c
n
c
n
N
S
f
f
fT
f
N
N
NT














n 
  
 
(2.6.1.3-8) 
Combining the terms at dc produces 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         91 
 
 
 
2
2
2
0
1
1
( )
sinc
 
u
n
c
n
N
n
S
f
f
N
N
N
NT



















n 
 
 
 
(2.6.1.3-9) 
 
A sketch of this spectral density is shown in Figure 2.6-4 for nonnegative frequencies only.  
 
1/Tc
2/Tc
1/N 2
f
(Envelope of the spectra)
Power
2
2
1sinc (
) 
c
N
fT
N

0
1/Tc
2/Tc
1/N 2
f
(Envelope of the spectra)
Power
2
2
1sinc (
) 
c
N
fT
N

0
 
 
Figure 2.6-4 The m-sequence power spectral density with chip duration Tc and period NTc (shown for N = 7 and positive frequencies). 
 
 
The spectral lines are symmetric about f = 0. Thus it is seen that the spectral lines are spaced 1/(NTc) 
Hz apart, the nulls are spaced 1/Tc apart, and the envelope of the spectral lines varies with frequency as  
 
 
 
 
 
 
2
2
1sinc (
) 
c
N
fT
N

 
 
 
           (2.6.1.3-10) 
 
The spectral density of the baseband sequence is centered at f = 0. If an m-sequence u(t) is biphase modulated 
onto a carrier and if the carrier and code are not coherent, the resulting signal can be modeled as  
 
 
 
 
 
( )
2
( )cos(2
) 
c
o
u t
Pu t
f t
o




  
 
            (2.6.1.3-11) 
 
where P is the average signal power and o is a random phase uniformly distributed over (0,2). The 
modulated power spectral density is given by [13] 
 
 
 
 
( )
(
)
(
) 
2
2
c
u
u
o
u
P
P
S
f
S
f
f
S
f
f




o
 
 
 
            (2.6.1.3-12) 
 
Therefore the biphase modulated m-sequence power spectral density is the sum of two baseband versions of 
the m-sequence spectra with one centered at +fo and one at –fo, with each one weighted by P/2. 
 
 
2.6.1.4 Power Spectral Density of a Despread m-Sequence 
 
In the process of despreading a received spread spectrum signal, spread with an m-sequence, the decorrelated 
signal, when the receiver code and the received code are aligned, is just a constant. However when the two 

 92                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
signals are not aligned, many spectral components are generated. This spectral density is useful in analyzing 
the performance of acquisition, tracking, and detection. Figure 2.6-5 illustrates a baseband model of a 
despreader which includes the product of the received code delayed by T seconds and the local code 
reference which is delayed by 
.  
ˆT
 
c(t-T)
z(t,)
ˆ
(
)
c t
T

c(t-T)
z(t,)
ˆ
(
)
c t
T

 
 
Figure 2.6-5 Baseband model of a despread signal. 
 
 
The product is denoted by z(t,), where  
 





 = T –
 
 
 
 
                    (2.6.1.4-1) 
ˆT
 
The spectral density of z(t,) has been derived by Gill [19], Gill and Spilker [20], and Holmes [13]. We 
present the results here and refer the interested reader to [13] for the derivation.  
 
    
2
2
0
2
2
2
0
1
1
( , )
1
( )
sin c
 
1
             
sin c
           0
z
m
c
c
c
m
c
m
c
c
c
m
N
N
m
S
f
f
f
T
N
N
T
T
T
N
m
m
f
T
N
T
NT
T





































































c
m

                 (2.6.1.4-2) 
 
Thus it is seen that there is a dc term having decorrelation voltage (for reasonable values of N) of 
essentially 1–(|/Tc)2. In addition to the dc term there are two spectra components, one with the line spectra 
spaced apart by 1/Tc Hz, and one spaced apart by 1/(NTc) Hz. Figure 2.6-6 illustrates the power spectral 
densities for the case when = 0, Tc/10, Tc/2, and Tc and N = 7.  
Note that the power spectral density shape changes according to the size of the timing error. When 
the timing error reaches Tc seconds then the spectral density is the same as the original power spectral 
density, since the product of an m-sequence and a shifted version of itself is itself a different phase of the 
original m-sequence with the same power spectral density. 
 
 
2.6.1.5 Determination of the Generator Taps from the m-Sequence Output  
 
Spread spectrum systems that use m-sequences for their spreading code should note that they are not very 
secure in the sense that they can be “read” and the shift register sequence can be determined by solving the 
resulting linear equations specified by the linear recursion of the sequence generator (2.2-3). Once the shift 
register taps of the transmitter are known, it becomes an easy task for the uninvited listener to detect the 
information modulated on the spread spectrum sequence. One of the main functions of a spread spectrum 
system is to minimize the vulnerability to being jammed and to preclude the uninvited listener from decoding 
the messages that the transmitter has sent. Consider the following result.  
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         93 
( )
a   
f
1
( )
/
b
Tc
  

 
2
2
1 1
sinc
 
10
10
c
f T
N
N













 
2
2
2
1 1
sinc
 
10
10
c
f T
N
N













f
1/NTc
0
1/Tc
2/Tc
3/Tc
4/Tc
5/Tc
6/Tc
7/Tc
8/Tc
9/Tc
10/Tc
2
1
1
1
 
10
N
N














( )
a   
f
1
( )
/
b
Tc
  

 
2
2
1 1
sinc
 
10
10
c
f T
N
N













 
2
2
2
1 1
sinc
 
10
10
c
f T
N
N













f
1/NTc
0
1/Tc
2/Tc
3/Tc
4/Tc
5/Tc
6/Tc
7/Tc
8/Tc
9/Tc
10/Tc
2
1
1
1
 
10
N
N














 
 
Figure 2.6-6 (a, b) Decorrelated spectra for one tenth chip error (not to scale). 
 
 
0
1/Tc
2/Tc
3/Tc
4/Tc
( )
/ 2
c
c
T

1/NTc
2
1
1
1
 
2
N
N














2
2
1 1
sinc
 
2
2
c
fT
N
N













2
2
2
1 1
sinc
 
2
2
c
fT
N
N













( )  
c
d
ε
T

1/Tc
1/Tc
1/N2


2
2
1sinc
 
c
N
fT
N

f
f
0
1/Tc
2/Tc
3/Tc
4/Tc
( )
/ 2
c
c
T

1/NTc
2
1
1
1
 
2
N
N














2
2
1 1
sinc
 
2
2
c
fT
N
N













2
2
2
1 1
sinc
 
2
2
c
fT
N
N













( )  
c
d
ε
T

1/Tc
1/Tc
1/N2


2
2
1sinc
 
c
N
fT
N

f
f
 
 
Figure 2.6-6 (c, d) Decorrelated spectra for one half and one chip error (not to amplitude scale). 
 
 
Result: An m-sequence obtained from a shift register of known length n can be determined from the errorless 
observation of 2n chips. 
 
The proof is based on the fact that from (2.2-3), one can write 
 
 
 
 
 
 
1
n
k
i
k
i
a
c a
i



 
 
 
 
 
(2.6.1.5-1) 
 
Setting k = n, n+1, n+2,…, 2n–1, n equations in n variables can be displayed in the form 
 

 94                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
 
 
 
 
 
1
1
1
2
1
2
1
1
n
n
i
n i
i
n
n
i
n
i
n
n
i
n
i
a
c a
a
c a
a
c a





1 i
i










M
 
 
 
 
(2.6.1.5-2) 
 
In this case the observables are a0 through a2n–1 and the variables are c1 through cn. This solution has 
been simplified in the sense that it has been assumed that the sequence was observed at baseband and noise 
free. If the observer is close to the transmitter, then all the chips will be detected essentially error free, or if 
the signal is tracked by a high gain antenna, the same result will occur. Additionally, if the chips are detected 
with a suppressed carrier loop, then it will be necessary to resolve the inherent phase ambiguity of the data. 
That is, the sequence or the opposite of the sequence would be observed. Fortunately the opposite sequence 
will not satisfy these equations if it is observed error free, so that the ambiguity can easily be resolved. 
Consider a simple example to illustrate the idea. 
 
Example 12 Consider a simple length 3 SSRG illustrated in example 5. If 001 is the contents of the register 
initially, then the first seven output chips (one period) will be 1001011 with a0 = 1, a1 = 0, a2 = 0, a3 = 1, 
a4 = 0, and a5 = 1. From (2.4-3) one has  
 
3
1
k
i
i
a
c ak i



 
 
 
 
 
(2.6.1.5-3) 
 
in which we wish to solve for the ci. Equation (2.6.1.5-2), written for a3, a4, and a5, becomes 
 
 
 
 
 
 
3
1
2
4
1
2
5
1
2
1
0
0
1  
0
1
0
0
1
0
1
0
a
c
c
a
c
c
a
c
c
3
3
3
c
c
c










 
 
 
 
(2.6.1.5-4) 
 
Solving these equations, the first equation produces c3 =1, the second equation produces c1 =0, and the third 
equation produces c2 =1. If one would assume that n = 4 or n = 2 and try to obtain a solution, it would be 
determined that no solution exists. 
 
Massey [18] has developed an efficient procedure for solving these general equations, and the reader 
is referred to that work for the details. 
 
 
2.6.2 Gold Codes 
 
Gold codes were developed by Dr. Robert Gold to provide the capability of code division multiple access 
(CDMA), which is an alternative to time division multiple access (TDMA), and frequency division multiple 
access (FDMA). Gold codes are one important class of periodic sequences, which provide reasonably large 
sets of codes with good periodic cross-correlation and autocorrelation properties. Gold codes have a code 
period of N = 2n–1 chips and have N+2 codes in the set. These codes are constructed from selected  
m-sequences in a manner that will be described next. This section follows [7, 21]. 
 
The set of cross-correlation values, together with the number of integers 
 for which 
ab(l) = c for each c in this set, is called the cross-correlation spectrum for the pair of sequences a and b. The 
cross-correlation of two m-sequences of length N =2n–1 can have three, four, or possibly more values of c. 
 (0
)
l
l
N


 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         95 
Certain pairs of m-sequences have cross-correlation values that are three valued, and those three values are 
given by [7] 
 
 
 
 
 
 
      
( )  
1
( )
2
t n
t n



 
 
 
 
                 (2.6.2-1) 
(
1)/2
where  ( )
1
2
  odd
n
t n
n


(
2)/2
and ( )
1
2
  even and
0 mod 4.
n
t n
n



 These pairs are called preferred 
pairs of m-sequences. It is to be pointed out that c = a = t(n) for Gold codes [7]. 
 
It is necessary to find preferred pairs of m-sequences to construct Gold codes. The following 
conditions are sufficient to construct a preferred pair, a and b, of m-sequences of length N = 2n–1:  
 
 
 
             
 
 
   (
2
1. 
0 mod 4; that is to say,  is odd or 
2mod 4
2. 
[ ] where  s odd and either has the value
2
1   or   
2
2
1 
1  for  odd
3. gcd( , )
2 for 
2mod 4 
k
k
k
n
n
b
a q
q i
q
q
n
n k
n












n
2.6.2-2) 
 
 
Consider a preferred pair of m-sequences a and b of period N = 2n–1 that are generated by the 
associated characteristic polynomials f1(x) and f2(x), respectively. If g denotes a nonzero sequence generated 
by the product f1(x)f2(x), then it is true that  
 
 
 
 
 
                
    
or            
or            
i
j
i
j
g
T a
g
T b
g
T a
T b




  
 
 
 
(2.6.2-3) 
 
for 
, where 
 denotes the modulo-2 sum, whose k-th element is given by 
. It 
therefore follows that g is some phase of some sequence in the set G(a,b) specified by 
0
,i j
N


1
j

i
T a
T b

i k
j k
a
b

 
 
 


2
3
1
( , )
, ,
,
,
,
,...
N
G a b
a b a
b a
Tb a
T b a
T b
a
T
b







 
 
 
(2.6.2-4) 
 
where, recall Tia denotes the operator that produces the sequence whose k-th element is given by ak+i. We see 
that there are N + 2 = 2n + 1 sequences in the code set, all with period N. This leads us to theorem 2.  
 
Theorem 2 Let a and b be a preferred pair of m-sequences of period N = 2n –1 generated by primitive binary 
polynomials f1(x) and f2(x), which have no common factors where n  0 mod 4 (i.e., n is odd or n = 2 mod 
4). The set of sequences (or codes) defined in (2.6.2-4) is called a set of Gold codes. For any sequence in g1 
and g2G(a,b), 
 
 
 
 
 


1 2 ( )
1,
( ), ( )
2  
g g l
t n t n



 
 
 
 
(2.6.2-5) 
 
for all integers l, and 
 
 
 
 
 
1( )
{ 1,
( ), ( )
2} 
g l
t n t n



 
 
 
 
(2.6.2-6) 
 
 

 96                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
for all integers l
 Recall that 
0 mod
.
N

1 1
1
( )
( )
g g
g
l
l



. Every sequence in G(a,b) can be generated by 
h(x)=f1(x)f2(x) [7]. 
 
To summarize the Gold code results, we conclude that the Gold codes have the following cross 
correlation values and approximate frequency of occurrence indicated in Table 2.6-1. 
 
Table 2.6-1 Three-Level Gold Code Auto- and Cross-Correlation Values and Their Frequency 
n Register Length 
Code Length 
Normalized 
Correlation Value 
Frequency 
of Occurrence 
n Odd 
N=2n – 1 
–1/N 
–(2(n+1)/2 + 1)/N 
(2(n+1)/2 – 1)/N 
0.5
;
 
0.25
;
 
0.25
;
 
n even and n
0 mod 4 

N=2n – 1 
–1/N 
–(2(n+2)/2 + 1)/N 
(2(n+2)/2 – 1)/N 
0.75
;
 
0.25
;
 
0.25
;
 
 
 
Here N = 2n–1. The approximate frequency of occurrences is valid for n > 4. Note for Gold codes with n = 0 
mod 4, see [7]. The autocorrelation function at zero offset has a normalized correlation value of one. 
 
Example 13 Now let us consider an example of forming a Gold code of length 25–1 = 31 chips. The Gold 
sequence set of codes will total 33 (31+2). We need to find a preferred pair of m-sequences for n = 5. From 
[16] in Appendix C for irreducible polynomials, we see that the entry for n = 5 is given by 
 
 
 
 
 
 
 
5:   1 45 ,   3 75 ,   5 67
 
Degree
E
G
H
 
Alternatively, Table 2A-1 has the same three codes listed as primitive code generators. Hence if  
we pick the first polynomial 1 45E, call it a, we need to find b = a[q]. First, from (2.6.2-2), since n = 5 (an 
odd number), we need to find the decimation value q. The parameter q must satisfy the condition 
 
 
 
 
 
 
 
 
 
(2.6.2-7) 
2
2
1  
  
2
2
1 
k
k
q
or q





k
 
Picking k = 1 produces q = 3 in either expression for q. Picking k = 2 produces q = 5 in the first expression 
for q, or 13 in the second expression for q. Clearly a[q] is of maximal length if and only if gcd(N,q)=1. Now 
note that gcd(31,3) = 1, and gcd(31,5) = 1, and gcd(31,13) = 1. Therefore, one can select the first code a as 1 
45 E and either 3 75G or 5 67H as the other preferred pair (i.e., b =a[3] or a[5]). Picking 1 45E and 5 67H as 
the two shift register polynomials and computing the product polynomial, we have 
 
 
 
 
 
        
5
2
1
5
4
3
2
2
10
9
8
6
5
( )
1 
( )
1
( )
1
f x
x
x
f
x
x
x
x
x
h x
x
x
x
x
x














 
 
 
(2.6.2-8) 
 
with the length of the sequence being 31. The corresponding normalized cross-correlation values from Table 
2.6-1 are given by 
 
 
 
 
 
 
1 2
1
9
7
ˆ
( )
,
,
31
31 31
g g l



  
 
 
(2.6.2-9)  
 
Figure 2.6-7 illustrates the double and single shift register representation.  
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         97 
(a) Double shift register realization
+
+
+
+
+
(b) Single shift register realization
+
+
+
+
Output
Output
(a) Double shift register realization
+
+
+
+
+
(b) Single shift register realization
+
+
+
+
+
+
+
+
+
+
+
+
Output
Output
 
 
Figure 2.6-7 (a, b) Gold code generator of length 31. 
 
 
Any nonzero initial conditions of the two preferred pairs will suffice. When the initial conditions 
00001 are set in the first register and 00010 is set into the second one, the resulting autocorrelation function 
is shown in Figure 2.6-8.  
 
0
1
2
3
4
5
6
7
8
9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
10
9
8
7
6
5
4
3
2
1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
R( )
k
k
 
 
Figure 2.6-8 Autocorrelation function times 31, shown for the Gold code of example 13. 
 
The autocorrelation function only has meaning on the integers so that only dots are shown in the 
figure. Note that most of the cross-correlation values are at the value of –1/32 in this case, whereas some 

 98                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
correlation values take on the value of +7/32 and –9/32 as Table 2.6-1 indicates (the table relates the 
autocorrelation value). 
 
It should be pointed out that all these autocorrelation values are based on the tacit assumption that 
all the code pairs are chip synchronous (i.e., the chip clock is exactly the same for any two received codes 
that are being cross correlated). In a typical CDMA environment this is not the case since oftentimes the 
signals are transmitted from different sources and therefore from different distances, so that the clocks are not 
synchronous; however, this synchronous assumption serves as a first-order estimate of the interference from 
other CDMA signals. 
 
 
2.6.2.1 Generation of Balanced Codes  
 
Not all Gold codes are balanced, and balanced Gold codes have desirable spectral properties. Gold [21] has 
shown that Gold codes can be broken into three classes of balance. A balanced code is a code in which the 
number of “ones” exceeds the number of “zeros” by one. The other two classes have an excess and 
deficiency of “ones.” For n odd Gold has shown that the number of “ones” and the number of codes with that 
number of “ones” is as shown in Table 2.6-2. 
 
Table 2.6-2 Number of Balanced Codes for n Odd 
 
Class 
Number of “Ones” in  
Code Sequence 
Number of Codes with 
This Number of “Ones” 
1 
2n–1 
2n–1 + 1 
2 
2(n–1) + 2(n–1)/2 
2(n–2) – 2(n–3)/2 
3 
2(n–1) – 2(n–1)/2 
2(n–2) + 2(n–3)/2 
 
 
Note that in the first class there are 2n–1 “ones” in the sequence and therefore 2n–1–1 “zeros,” and 
therefore set 1 is “balanced.” It is clear from the expressions that classes 2 and 3 are not balanced. It should 
be noted that approximately half of all Gold codes are balanced. In order to generate balanced Gold codes, it 
is necessary to select the proper relative phases of the two original maximal length sequences (preferred 
pairs). 
 
We must now determine the characteristic phase of the sequence. Recall that the property of the 
characteristic phase of the m-sequence is that when it is sampled at every other symbol, the same sequence 
results. Let f(x) be the n-th degree characteristic polynomial corresponding to the m-sequence. It has been 
shown earlier (2.4-8) that any phase of the m-sequence can be represented by the ratio G(x) = g(x)/f(x), where 
g(x) is the numerator of the generating function and is of degree less than n. 
 
As we have seen, long division5 of these polynomials results in a formal binary power series whose 
binary coefficients are the symbols of the sequence generated by the shift register. The formula for the 
polynomial g(x) that results in the characteristic phase of the m-sequence has been shown by Gold [22] to be 
given by  
 
 
 
 




( )
( )
,     ( ) of odd degree 
( )
( )
( )
,     ( ) of even degree
d xf x
g x
f x
dx
d xf x
g x
f x
f x
dx



 
 
 
(2.6.2.1-1) 
 
Differentiation is carried out in the usual way, with the coefficients interpreted modulo 2. 
 
 
                                                          
5 The division is based on writing both polynomials in ascending powers in the division operation. 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         99 
Example 14 As a simple example of obtaining the characteristic phase of the sequence, let the characteristic 
polynomial be f(x) = 1 + x2 + x3. Since n is odd in this example, we obtain from the first equation in  
(2.6.2.1-1) 
 
 
 
 
 
3
4
2
( )
1
 
d x
x
x
g x
x
dx








 
 
where the coefficients are taken modulo 2. The characteristic phase of this sequence is obtained from G(x) 
when g(x) = 1+x2. Therefore, evaluating G(x) by long division produces 
 
 
 
 
2
3
4
5
6
2
3
2
2
3
3
3
5
6
5
6
                  1 0
0
0
 
1
  1
                  1
                               
                               
                                      
       
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x














5
7
8
6
7
8
6
8
9
7
                               
                                             
                                             
                                                    
x
x
x
x
x
x
x
x
x
x







9x
 
 
so the initial condition of the register is [001]; that is, a0 =1, a1 = 0, a2= 0. If we observe the output, it will be 
 
 
 
 
 
 
 1 0 0 1 0 1 1, 1 0 0 1 0 1 1,...  
 
where the comma separates the length 7 m-sequence periods. Note that if every second symbol of the 
sequence is sampled then the sequence is repeated as shown here 
 
 
 
 
 
sequ
 
 
ence                1001011,1001011,1
 
sampled sequence  1  0  0  1   0  1  1, 1 0
  
L
L
 
where the first, third, fifth, and so forth samples from the original sequence clearly produce the same 
sequence again, as seen in the sampled sequence output, and thus the characteristic phase for this sequence 
has been found. 
 
 
2.6.2.2 Relative Phase Requirement for Balanced Gold Codes 
 
We shall now describe the relative phase in which the preferred pair of m-sequences must be added in order 
to result in a balanced member of the family. Let a and b be the preferred pair of m-sequences in their 
characteristic phase. When the characteristic polynomial f(x) is of odd degree, it is clear that the generator 
polynomial is of the form  
 
 
 
 
 
1
( )
( )
 
1
( )
c x
G x
d x


  
 
 
 
(2.6.2.2-1) 
 

 100                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
where the degree of d(x) is n and the degree of c(x) is not greater than n–1. By long division it is clear that the 
quotient will be of the form 1+ … so that the initial symbol of the characteristic sequence will be a “one.” 
Now we consider a theorem due to Gold [21] that describes how to generate a balanced Gold code. 
 
Theorem 3 Any relative phase shifts of the sequence a and b, in their characteristic phase, that are obtained 
by shifting the sequence b until its initial “one” corresponds to a “zero” in the sequence a will result in a 
balanced Gold code, when the two sequences are added together modulo 2. 
 
Example 15 As an example of an application of this theorem, consider the following preferred pair of 
sequences for which n = 3 
 
 
 
 
 
 
1110100,1110100,
1001011,1001011,
 
a
b


L
L
L
L  
 
 
(2.6.2.2-2) 
 
We have already shown that sequence b is in its characteristic phase in example 14. Taking the first, third, 
fifth, and so forth samples of sequence a produces the sequence a again so that it too is in its characteristic 
phase. According to Theorem 3 we can shift the sequence b over to the right by three, five, or six positions in 
order that the initial “one” of sequence b  lines up with a “zero” of sequence a. To simplify the presentation, 
we show cyclically shifted sequences in which a is added to b to form the mod 2 sum. 
 
 
 
 
 
 
         
1110100 
    
0111001   
1001101   
3
3
a =
T b =
a +T b =
 
 
 
 
(2.6.2.2-3) 
 
It is clear that the resulting sum sequence is “balanced” in the sense that it has one more “one” than “zero.” 
However, if the first one of the sequence b is not lined up with a zero of a, then the resultant sequence will 
not be balanced. That is  
 
 
 
 
 
 
 
 
 
(2.6.2.2-4) 
         
1110100
    
1100101   
0010001   
1
1
a =
T b = 
a +T b =
This is clearly not balanced. 
 
 
2.6.2.3 Procedure for Generating Balanced Gold Codes 
 
The procedure to generate balanced Gold codes can now be specified. The generic Gold code generator is 
sketched in Figure 2.6-9. 
(1) First select a preferred pair of m-sequences a and b of length N=2n–1, via (2.6.2-2) and [16] (or 
Table 2A-1) with characteristic polynomials f1(x) and f2(x). 
(2) The initial conditions for shift register 2 are those initial conditions of b that determine the 
characteristic phase as specified in (2.6.2.1-1). This is obtained by long division of the ratio g(x)/f(x) 
(g(x) and f(x) are written in ascending order) and taking the first n binary coefficients of the first n 
terms of the quotient. 
(3) The initial conditions for shift register 1 (sequence a) with corresponding characteristic polynomial 
f1(x), are only that the first stage (on the right in our shift register diagrams) of the number 1 shift 
register contain a “zero.” This corresponds to the requirements of Theorem 3. And there should be at 
least one “one” in the register 1 to start with. Note in general there are 
1
2n choices for the 
remaining n–1 shift register cells, so that about half of all the Gold codes can be made balanced. 
(4) The set of Gold codes is formed by modulo-2 addition of the two registers, 1 and 2, as determined 
from (2.6.2-4). 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         101 
n Stages
+
+
Gold
code
Register 2
n Stages
+
Register 1
n Stages
+
+
Gold
code
Register 2
n Stages
+
Register 1
 
 
Figure 2.6-9 Generic Gold code generator configuration. 
 
 
Example 16 Now consider an example construction of a balanced Gold code of register length n = 11, 
having period 211–1. From Appendix C of [16] (or Table 2A-1) it is seen that “1 4005 E” is a primitive 
polynomial, which will be designated the b register (register 2). To find the polynomial for shift register a, 
use (2.6.2-2) and note that q = 3 (k = 1) satisfies all three conditions of (2.6.2-2) so that a = b[3]. The third 
decimation is represented by 3 4445 E, as determined from Appendix C of [16]. Thus the two characteristic 
polynomials are (recall the polynomials are determined by reading from right to left of the binary equivalent 
of the code, with the polynomial going from left to right) 
 
 
 
 
 
2
5
8
1
1
2
11
2
100,100,100,101 
3 4445 E   
1
100,000,000,101
1 4005 E   
1
1
f (x)
x
x
x
x
f (x)
+ x
x






 
 
 
(2.6.2.3-1) 
 
The characteristic sequence generated by the second shift register corresponding to the polynomial 4005 is 
represented by the ratio  
 
 
 
 
 
 
2
11
( )
1
g x
x
x


 
 
 
 
 
(2.6.2.3-2) 
 
where, since n is odd, 
 
 
 
 
 


3
12
( )
1
d
2
g x
x
x
x
dx
x




 
 
 
 
(2.6.2.3-3) 
 
since the derivative of even powers of the variable x are zero. The initial conditions required for register 2, to 
be in its characteristic phase, are found from the quotient  
 
 
 
 
 
2
11
13
2
11
1
( )
1
 
1
x
G x
x
x
x
x






L
 
 
 
(2.6.2.3-4) 
 
The initial conditions for the characteristic phase for register 2 becomes 

 102                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
 
 
 
 


00000000001    
 
 
 
 
(2.6.2.3-5) 
 
with a “1” in the rightmost cell and the rest being “zero.” 
 
The only constraint on the initial conditions of register 1 is that the entry in the first stage (the one 
on the right) must be a “zero.” Therefore our balanced code generator of length 211–1 is as indicated in Figure 
2.6-10. There are about 2(10) codes in this balanced Gold code set (since a zero must be located in the first 
register cell). 
 
+
+
+
Register 1
Register 2
0
X
X
X
X
X
X
X
X
X
X
0
0
0
0
0
0
0
0
0
0
1
Note: X = 1 or 0
f2(x)=1+x2+x11
f1(x)=1+x2+x5+x8+x11
Gold code
of length
N=2n– 1
+
+
+
Register 1
Register 2
0
X
X
X
X
X
X
X
X
X
X
0
0
0
0
0
0
0
0
0
0
1
Note: X = 1 or 0
f2(x)=1+x2+x11
f1(x)=1+x2+x5+x8+x11
Gold code
of length
N=2n– 1
 
 
Figure 2.6-10 Balanced Gold code of length 211–1. 
 
 
2.6.2.4 Optimality of Gold Codes  
 
It is of interest to point out the optimality of Gold codes in the following sense. Let a and b be two binary 
sequences. A bound due to Sidelnikov [23, 24] (Sidelnikov’s bound) for a set of N or more binary sequences 
of period N satisfy the inequality 
 
 
 
 
 
 
     
max
2
2
N


  
 
 
 
(2.6.2.4-1) 
where max is defined in (2.5-16). For all codes of length N = 2n
 –1 it can be shown (2.6.2.4-1) implies that  
 
 
 
 
 
 
 
 
 
(2.6.2.4-2) 
(
1)/2
max
1
2
 
n



 
When n is odd, the right hand side of (2.6.2.4-2) becomes t(n)–2. Since max must be and odd integer, and 
since (2.6.2.4-2) is a strict inequality, it follows that  
 
 
 
 
 
 
   
max
( ) 
t n


 
 
 
 
 
(2.6.2.4-3) 
 
It is noted that from (2.6.2-1) that Gold codes for n odd form an optimal set in the sense of minimizing the 
absolute magnitude of the periodic correlation parameter 
max

in relationship to the Sidelnikov’s bound. 
When n is even, the bound of (2.6.2.4-2) is not an integer, and is smaller than t(n) by approximately the 
factor of 
2  [7]. Hence Gold sequences are not optimal when n is even. Gold codes (sequences) have been 
used in a number of systems including the Global Positioning Satellite system (GPS) for the C/A code and 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         103 
the Tracking and Data Relay Satellite System (TDRSS), and in fact both GPS and TDRSS use balanced Gold 
codes. 
 
 
2.6.3 Gold-Like Sequences and Dual BCH Sequences 
 
Now two relatively unknown classes of sequences will be discussed that are related to Gold codes [7]. The 
following construction applies to both classes of sequences. Let n be an even integer and let q be an integer 
such that gcd(q,2n–1)=3. Let a denote an m-sequence of period N = 2n–1 with characteristic polynomial f1(x), 
and let the sequences b(k), k = 0,1,2 denote the result of decimating Tka by q. Consider now a property of 
maximal length sequences. 
 
Property VI of Maximal Length Sequences Let a[q] be not be identically zero. Then a[q] has period 
N/gcd(N,q) and is generated by polynomial f2(x) which is the q-th decimation of the sequence of a [7]. 
 
 
From property VI it is clear that the b(k) are sequences having period N'= N/3 which are generated 
by the polynomial f2(x), which is the q-th decimation of the sequence a. It is known that from linear shift 
register theory that if c denotes a (nonzero) sequence generated by h(x) = f1(x)f2(x), then it is true that either  
 
 
 
 
 
 
 
 
 
 
 
 
(2.6.3-1) 
i
T

c
a
or 
 
 
 
        
 
 
 
 
 
(2.6.3-2) 
( )
                   
 
j
k
T

c
b
or 
 
 
          
 
 
 
 
 
(2.6.3-3) 
( )
                         
i
j
T
T


c
a
b k
2
T
where  
 
 
 
 
0
1
 
, 0
' 1, 
 0
i
N
j
N
and
k







 
Noting that sequences of the form (2.6.3-2) have period N/3, it is seen that any sequence of period N 
generated by h(x) is some phase of some sequence in the set Hq(a) defined by [7] 
 
 
 
 
 
 
 
(2.6.3-4) 
(0)
(0)
' 1
(0)
(1)
(1)
' 1
(1)
(2)
(2)
' 1
(2)
( )
{ ,
,
,
,
, 
                
,
,
,
,
                
,
,
,
}
N
q
N
N
H
T
T
T
T
T













L
L
L
a
a a
b
a
b
a
b
a
b
a
b
a
b
a
b
a
b
a
b
 
It is to be noted that Hq(a) contains N + 1 = 2n  sequences of period N. 
 
 
2.6.3.1 Gold-Like Sequences  
 
Now consider the Gold-like sequences [7]. Let a be a m-sequence of period N of period 2n
 –1 with 
characteristic function f1(x). According to property VI of m-sequences the t(n)-th decimation of a, is 
generated by f2(x) where b = a[t(n)]. For n  0 mod 4, gcd(t(n),2n–1) = 3 and (2.6.3-1) through (2.6.3-4) 
define the code set. When q = t(n) the set Ht(n)(a) is called the set of Gold-like sequences and contains 2n 
code words. The correlation values belonging to the set of Gold-like sequences take on five values in the set 
{–1, –t(n), t(n)–2, –s(n), s(n)–2}, where for n even only, s(n) is defined by  
 
 
 
 
 

/ 2
1
( )
1
2
( ) 1  
2
n
s n
t n


 
 
 
 
(2.6.3.1-1) 
 
 

 104                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
2.6.3.2 Dual BCH Sequences 
 
Dual BCH sequences, so named because the dual BCH sequence generator polynomial is the dual (see [16]) 
to a double error correcting BCH code [25] and is generated by the code generator polynomial h(x) = 
f1(x)f2(x) where a is generated from f1(x) and b = a[3] is generated from f2(x) [7]. When n is odd, f2(x) is a 
primitive polynomial and (2.6.2-3) and (2.6.2-4) define the code set. Therefore the set G(a,a[3]) thus 
obtained is a set of Gold sequences because decimation by 3 is a preferred decimation when n is odd. In the 
case when n is even gcd(3,2n–1) = 3 and consequently (2.6.3-1) to (2.6.3-4) apply. For the set H3(a) the 
maximum correlation value is max = t(n), and the correlation values take on the values contained in the 
following set [26] 
 
 
 
 
 
{–1, –t(n), t(n)–2, –s(n), s(n)–2} 
 
 
 
(2.6.3.2-1) 
 
These sequences can be generalized to the dual of a t-error correcting BCH code, then a set of (2n –1) t-1 or 
more sequences can be constructed for which 
 
 
 
 
 
  
 
 
 
(2.6.3.2-2) 
(
2)/2
max
1 (
1)2
 
n
t




 
Additional details can be found in [24, 27, 28]. The code set size is 2n. 
 
 
2.6.4 Kasami Sequences 
 
Kasami sequences were discovered in the course of evaluating weight enumerators of linear cyclic codes in 
1966 [24]. There are two types of Kasami sequences: the small set of Kasami sequences and the large set of 
Kasami sequences. Both will be considered briefly in what follows. 
 
 
2.6.4.1 Small Set of Kasami Sequences 
 
Let n be even and let a denote an m-sequence of period N=2n–1, with characteristic polynomial f1(x). Let the 
second sequence b be related to a by a decimation of a of the form 
 
 
 
 
 


( /2)
( )
2
1  
n
s n







b
a
a
 
 
 
 
(2.6.4.1-1) 
 
It follows from Property VI of Section 2.6.3 that the period of sequence b is given by  
 
 
 
 
 
/2
/ 2
2
1
2
1
gcd(2
1, 2
1)
n
n
b
n
n
N

 





 
 
 
(2.6.4.1-2) 
 
which is generated by a polynomial f2(x), which is the s(n) decimation of f1(x). Furthermore since f2(x) can be 
shown to be a polynomial of degree n/2, b is an m-sequence of period 2(n/2)–1. The product polynomial 
f1(x)f2(x) that generates the Kasami codes is of degree 3n/2. Any sequence in this set must be one of the 
following forms  
 
 
 
 
/2
, 
, 
, 0
2
1, 0
2
1 
i
j
i
j
n
n
T
T
T
T
i
j






a
b
a
b
 
 
(2.6.4.1-3) 
 
Thus any sequence of period 2n–1 generated by f1(x)f2(x) is some phase of some sequence in the set Ks(a,b) 
defined by 
 
 
 
 


/ 2
2
2
( , )
, 
, 
,
, 
n
s
K
T





L
a b
a a
b a
b
a
b   
T
 
 
(2.6.4.1-4) 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         105 
which is the small set of Kasami sequences. The code set size is 2n/2. Kasami showed that the correlation 
functions take on the following values, which are listed in Table 2.6-3 [7].  
 
 
 
 
Table 2.6-3 Three-Level Small Set Kasami Normalized Correlation* Values 
 
Register length n 
Code Length N 
Normalized Correlation Values 
n even 
N=2n–1 
–1/N 
(–1+2(n/2))/N 
(–1–2(n/2)/N 
*Includes auto- and cross-correlation values, but of course the autocorrelation is one at zero offset. 
 
It is to be noted that none of the compound sequences in the small set of Kasami codes have balanced 
sequences [29]. Clearly the (unnormalized) code correlation values have a value of max =1+2(n/2). Note that 
the value of max for Kasami codes is approximately one half of the Gold codes; however, the number of 
codes in the set are 2(n/2) = (N+1)1/2, or roughly 
N , a much smaller quantity than N+2, which applies to 
Gold codes. Hence the small set of Kasami codes may be a better choice than Gold codes for a design that 
does not need many codes in the set (<2(n/2)). 
 
Welch’s bound [24] is for K sequences of length N and is given by 
 
 
 
 
 
1/2
max
1
1
K
N
NK










 
 
 
 
 
(2.6.4.1-5) 
 
so when K = 2(n/2) and N = 2n–1 (2.6.4.1-5) can be shown to imply [7] 
 
 
 
 
 
  
 
 
 
 
 
(2.6.4.1-6) 
/2
max
1
2
 
n


 
Now for binary sequences and the fact that 
max

 is odd, implies that  
 
 
 
 
 
  
  
 
 
 
 
(2.6.4.1-7) 
/ 2
max
1
2
 
n


 
By comparing the maximum correlation results in Table 2.6-3 and (2.6.4.1-7), it is clear that the small set of 
Kasami sequences are optimal in respect to minimizing the maximum absolute correlation of the bound of 
(2.1.6.4-7). 
 
 
2.6.4.2 Large Set of Kasami Sequences 
 
Let f1(x) and f2(x) be preferred pairs whose characteristic polynomials generate the Gold codes. That is, if a is 
generated from the characteristic polynomial f1(x), then f2(x) is the polynomial that generates the sequence 
a[t(n)] when n 
0 mod 4. If n= 0 mod 4, then f1(x)f2(x) generates the set of Gold-like sequences 
 
Consider all sequences generated by the product h(x)= f1(x)f2(x)f3(x), which can be realized by the modulo 2 
sum  

( )( ).
t n
H
a
 
 
 
 
 
 


a
b
c  
 
 
 
 
(2.6.4.2-1) 
 
where f1(x) generates sequence a, f2(x) generates sequence b, and f3(x) generates sequence c. 
 
Theorem 4 Let n be even and let f1(x) denote a primitive binary polynomial of degree n that generates the  
m-sequence a. Let b = a[s(n)] denote an m-sequence of period 2(n/2)–1 generated by the characteristic 
polynomial f2(x) of degree n/2, and let f3(x) denote the polynomial of degree n that generates a[t(n)]. Then the 

 106                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
set of sequences of period N generated by the characteristic polynomial h(x) = f1(x)f2(x)f3(x) is called the 
large set of Kasami sequences and is denoted by KL(a) where [7] 
(1) If n  2 mod 4, then 
 
 
 
 
 



(
/ 2)
2
2
0
( )
( , )
, )
n
i
L
i
K
a
G a c
T b
G a c











U U
  
 
(2.6.4.2-2) 
 
where c = a[t(n)] and b = a[s(n)], and G(a,b) is defined in (2.6.2-4). 
(2) If n0 mod 4 then 
 
   
    (2.6.4.2-3) 



(
/ 2)
2
2
( )
( / 2)
( )
( )
0
( )
( )
( )
:  0
2, 0
(2
1)/3   
n
i
j
k
n
L
t n
t n
i
K
H
T
H
T
j
k















U
U
U
a
a
b
a
c
b


                                                          
 
where the code sequence c(j) is the result of decimating Tja by t(n) and Ht(n)(a) is given by (2.6.3-4) with 
q = t(n). The correlation functions for KL(a) take on values in the set {–1, –t(n), t(n)–2, –s(n), s(n)–2} from 
which it follows that max = t(n). If n 
2 mod 4, KL(a) contains 2(n/2)(2n + 1) sequences in the set whereas if n 
 0 mod 4, KL(a) contains 2(n/2)(2n + 1)–1 sequences in the set [7]. 


 
It is to be noted that the large set of Kasami sequences contains both the set of Gold (or Gold-like) 
sequences and the small set of Kasami sequences as subsets. 
 
 
2.6.5 Bent Sequences  
 
Bent6 sequences [29–31] are nonlinear binary sequences that achieve Welch’s bound on cross- and auto- 
correlation. The period of the sequence is 2n–1 with n the number of stages in the shift register. This value n 
must be a multiple of 4 (n = 0, mod 4). The number of sequences in the set is 2n/2 and the autocorrelation 
function has three values and max = 2n/2 + 1. The linear span is the minimum number of memory elements 
needed to build a Fibonacci generator to create the same sequence. The equivalent linear span (LS) of Bent 
sequences has the bound 
 
 
 
 
 
 
 
 
 
 
 
(2.6.5-1) 
/ 4
1
 
n
i
n
LS
i






 
The actual span achieved is generally close to the bound [29]. These sequences are balanced. The high 
equivalent linear span makes the likelihood of analysis by a sophisticated enemy less likely than linear codes 
since the linear difference equation satisfied by the sequence can be orders of magnitude larger than the 
number of memory elements in the sequence generator. An example of a Bent sequence is shown in Figure 
2.6-11. Details are contained in the previously cited references. 
 
 
2.6.6 Comparison of CDMA Code Performance 
 
In this section a brief summary of the code parameters for code division multiple access (CDMA) will be 
discussed. Table 2.6-4 [29] indicates the code parameters of interest for the various codes discussed.  
 
 
6 A bent function is a difference set in an elementary Abelian group. 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         107 
+
+
+
Linear transformation  Y = Mx
Bent function
generation logic
Sequence
selection
Sequence
selection 
control
+
(– 1)f
Bent
sequence
+
+
+
Linear transformation  Y = Mx
+
+
+
Linear transformation  Y = Mx
Bent function
generation logic
Sequence
selection
Sequence
selection 
control
+
(– 1)f
Bent
sequence
 
 
Figure 2.6-11 An example of a length 12 Bent sequence. 
 
 
Gold sequences have lower correlation magnitude bounds when n is odd rather than even. They are 
approximately 
2  larger when n is even. The Gold-like and dual BCH codes have essentially the same 
maximum correlation and code set size as the Gold codes that are even and equal to 2 mod 4. For even values 
of n, Gold codes have essentially twice the maximum correlation values as Bent and small set Kasami codes, 
but offer a code set size essentially the square of the latter set size. Bent codes have the edge over small set 
Kasami codes in the sense that they are balanced and since they are nonlinear, they have a much larger linear 
span. 
 
Table 2.6-4 CDMA Code Properties with Period 2n–1 
 
Code Family 
Shift Register  
Length n 
Code Set Size 
max 
Code Balance  
 
Gold 
Odd 
2n +1 
1+2(n+1)/2 
Can be balanced 
Gold 
2 (mod 4) 
2n +1 
1+2(n+2)/2 
Can be balanced 
Gold-Like 
Even 
2n 
1+2(n+2)/2 
Cannot be 
balanced 
Dual-BCH 
Even 
2n 
1+2(n+2)/2 
Cannot be  
balanced 
Kasami 
(small set) 
Even 
2n/2 
1+2n/2 
Cannot be 
balanced 
Kasami* 
(large set) 
Even 
2n/2(2n +1) 
1+2(n+2)/2 
Cannot be 
balanced 
Bent 
0 mod 4 
2n/2 
1+2n/2 
Balanced 
 
* Actually when n 
0 mod 4, the set contains 2n/2(2n + 1)–1 sequences in the set [7]. 

 
 
2.7 SEQUENCES WITH GOOD APERIODIC CORRELATION  
Equation Section (Next) 
Now consider sequences designed to have low aperiodic correlation values. These sequences are very 
important in synchronization problems, with one common application using a short sync sequence placed 
within a data stream and used to obtain and maintain time synchronization. Also it is possible to use the sync 
sequence for phase synchronization (in two pass systems). When the receiver timing is not aligned with the 

 108                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
received transmitter timing and there is a time error of say a few code chips, a periodic correlation of the 
received signal will produce a correlation value that has two parts. The first will depend on the portion of the 
receiver sequence that overlaps the received sequence; however, the second part will contain a value that 
depends on the correlation with the adjacent data bits. Thus the only part of the correlation that is reliable is 
the overlap portion, which is an aperiodic correlation. This topic has been discussed in Section 2.5.2. 
 
Again let the sequence chip values be {0,1}, with the understanding that when sums or correlations 
are used the values of the components are translated into {1,–1}. Recall that the aperiodic cross-correlation 
function for sequences is defined by 
 
    
1
0
1
1
0
                       0 
1
( )=
    1
0
  
0                                    
N- -l
i
i l
i=
N- +l
N
i l
i
k
k+l
i=
k
l
a b
l
N
  
C
l
a b
a b
N
l
l
N






















ab
                              (2.7-1) 
 
It is seen that N–
 
l
symbols are used in this cross-correlation function. The aperiodic autocorrelation 
function for sequences is defined in (2.5.2-1) with a = b. 
 
 
2.7.1 Barker and Williard Sequences 
 
An important sequence designed to achieve the minimum aperiodic correlation values when 
 is known 
as a Barker sequence. These sequences are used primarily for synchronization of data streams, such as frame 
synchronization. A Barker sequence (denoted by a) is characterized by the fact that its aperiodic 
autocorrelation function satisfies 
0
l 
 
 
 
 
 
 
( )
1  
 
0 
C l
for l


a
 
 
 
 
   (2.7.1-1) 
 
In other words as the code shifts by l or more symbols (
1
l ) out-of-sync the magnitude of the 
autocorrelation function never exceeds one in magnitude, in its out of sync position. The only known Barker 
sequences [32] are for lengths of 1, 2, 3, 4, 5, 7, 11, 13. It is to be noted that the reverse and the inverse of a 
Barker sequence is a Barker sequence. 
 
Williard sequences [33] minimize the probability of false synchronization with random data words 
in the overlap region for all values of overlap. Table 2.7-1 illustrates the Barker and Williard sequences up to 
length 13, with each symbol of the sequence being {+1,–1}. 
 
Table 2.7-1 Barker and Williard Sequences to Length 13 
 
Sequence 
Length 
Barker Sequences 
Williard Sequences 
1 
1 
1 
2 
1,1 or 1,–1 
1,–1 
3 
1,1,–1 
1,1,–1 
4 
1,1,1,–1 or 1,1,–1,1 
1,1,–1,–1 
5 
1,1,1,-1,1 
1,1,–1,1,–1 
7 
1,1,1,–1,–1,1,–1 
1,1,1,–1,1,–1,–1 
11 
1,1,1,–1,–1,–1,1,–1,–1,1,–1 
1,1,1,–1,1,1,–1,1,–1,-1,–1 
13 
1,1,1,1,1,–1,–1,1,1,–1,1,–1,1 
1,1,1,1,1,–1,–1,1,–1,1,–1,–1,–1 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         109 
2.7.2 Neuman-Hofman Sequences 
 
Many times it is necessary to use larger sequences to improve the performance of the correctly detected 
synchronization word. Neuman and Hofman [34] have utilized an extensive computer search to determine 
aperiodic synchronization sequences up to length 24. Table 2.7-2 illustrates N-H code sequences up to length 
24. Almost all of the entries have two different sequences to choose from. For convenience of presentation 
the codes have been displayed with the code elements {0,1}. The elements can be converted to values of 1
 
via (2.5-1). It is to be noted that Massey [35] has determined the optimum frame synchronization algorithm, 
and the optimum statistic is based on a correlation term and a correction term. The magnitude of the 
maximum value of the aperiodic correlation value is listed as 
M
R
, clearly the smaller the value the better the 
code in a certain sense. 
 
 
2.7.3 Partial Period Correlation for m-Sequences 
 
It is useful to observe what the aperiodic correlation function will be; in the case that code sequence period is 
large compared to the correlation time. In general, the aperiodic autocorrelation may not be nearly as good as 
the full period autocorrelation function. Let the number of code chips included in the correlation be M, and 
let the number of code chips in the sequence (period) be N (M<N). Results for the mean and the variance of 
the partial period autocorrelation value are presented next [13]. The normalized partial period 
autocorrelation function is given by  
 
 
 
 
 
 
1
0
1
( )
 
M
M
i
i k
i
C
k
a a
M





%
a
 
 
 
 
(2.7.3-1) 
 
Table 2.7-2 Neumann-Hoffman Sequences Up to Length 24 
 
Length
Sync Sequence
Length
Sync Sequence
7
0001101
1
16
0000011001101011
2
8
00011101
2
16
0000111011101101
2
8
00001101
2
17
00001011001110101
4
9
000011101
2
17
00001111011011101
2
9
001111101
2
18
000010101101100111
3
10
0000011010
2
18
001100111110100101
2
10
000011010
2
19
0000111000100010010
2
11
00001011001
2
19
0001110111011011010
2
11
00011101101
1
20
00000100110101001110
2
12
000111101101
4
20
00010001111100101101
4
12
001100000101
2
21
000000101110100111001
2
13
0000001100101
2
21
001101100001000010101
2
13
0000010110011
2
22
0001000111110011011010
3
14
00001100110101
2
23
00000010101100110100111
5
14
00110011111010
2
23
00000011110011001001010
3
15
001111100110101
2
24
000111111001000011001010
9
15
000011001001010
2
24
000001110011101010110110
4
00011101
2
16
0000111011101101
2
8
00001101
2
17
00001011001110101
4
Length
Sync Sequence
Length
Sync Sequence
7
0001101
1
16
0000011001101011
2
8
00011101
2
16
0000111011101101
2
8
00001101
2
17
00001011001110101
4
9
000011101
2
17
00001111011011101
2
9
001111101
2
18
000010101101100111
3
10
0000011010
2
18
001100111110100101
2
10
000011010
2
19
0000111000100010010
2
9
000011101
2
17
00001111011011101
2
9
001111101
2
18
000010101101100111
3
10
0000011010
2
18
001100111110100101
2
10
000011010
2
19
0000111000100010010
2
11
00001011001
2
19
0001110111011011010
2
11
00011101101
1
20
00000100110101001110
2
12
000111101101
4
20
00010001111100101101
4
12
001100000101
2
21
000000101110100111001
2
11
00001011001
2
19
0001110111011011010
2
11
00011101101
1
20
00000100110101001110
2
12
000111101101
4
20
00010001111100101101
4
12
001100000101
2
21
000000101110100111001
2
13
0000001100101
2
21
001101100001000010101
2
13
0000010110011
2
22
0001000111110011011010
3
14
00001100110101
2
23
00000010101100110100111
5
14
13
0000001100101
2
21
001101100001000010101
2
13
0000010110011
2
22
0001000111110011011010
3
14
00001100110101
2
23
00000010101100110100111
5
14
00110011111010
2
23
00000011110011001001010
3
15
001111100110101
2
24
000111111001000011001010
9
15
000011001001010
2
24
000001110011101010110110
4
M
R
M
R
Length
Sync Sequence
Length
Sync Sequence
7
0001101
1
16
0000011001101011
2
8
00011101
2
16
0000111011101101
2
8
00001101
2
17
00001011001110101
4
Length
Sync Sequence
Length
Sync Sequence
7
0001101
1
16
0000011001101011
2
8
00011101
2
16
0000111011101101
2
8
00001101
2
17
00001011001110101
4
9
000011101
2
17
00001111011011101
2
9
001111101
2
18
000010101101100111
3
10
0000011010
2
18
001100111110100101
2
9
000011101
2
17
00001111011011101
2
9
001111101
2
18
000010101101100111
3
10
0000011010
2
18
001100111110100101
2
10
000011010
2
19
0000111000100010010
2
11
00001011001
2
19
0001110111011011010
2
11
00011101101
1
20
00000100110101001110
2
12
000111101101
4
20
10
000011010
2
19
0000111000100010010
2
11
00001011001
2
19
0001110111011011010
2
11
00011101101
1
20
00000100110101001110
2
12
000111101101
4
20
00010001111100101101
4
12
001100000101
2
21
000000101110100111001
2
13
0000001100101
2
21
001101100001000010101
2
13
0000010110011
2
22
0001000111110011011010
3
00010001111100101101
4
12
001100000101
2
21
000000101110100111001
2
13
0000001100101
2
21
001101100001000010101
2
13
0000010110011
2
22
0001000111110011011010
3
14
00001100110101
2
23
00000010101100110100111
5
14
00110011111010
2
23
00000011110011001001010
3
15
001111100110101
2
24
000111111001000011001010
9
15
000011001001010
2
24
000001110011101010110110
4
14
00001100110101
2
23
00000010101100110100111
5
14
00110011111010
2
23
00000011110011001001010
3
15
001111100110101
2
24
000111111001000011001010
9
15
000011001001010
2
24
000001110011101010110110
4
00011101
2
16
0000111011101101
2
8
00001101
2
17
00001011001110101
4
Length
Sync Sequence
Length
Sync Sequence
7
0001101
1
16
0000011001101011
2
00011101
2
16
0000111011101101
2
8
00001101
2
17
00001011001110101
4
Length
Sync Sequence
Length
Sync Sequence
7
0001101
1
16
0000011001101011
2
8
00011101
2
16
0000111011101101
2
8
00001101
2
17
00001011001110101
4
9
000011101
2
17
00001111011011101
2
9
001111101
8
00011101
2
16
0000111011101101
2
8
00001101
2
17
00001011001110101
4
9
000011101
2
17
00001111011011101
2
9
001111101
2
18
000010101101100111
3
10
0000011010
2
18
001100111110100101
2
10
000011010
2
19
0000111000100010010
2
9
000011101
2
17
00001111011011101
2
2
18
000010101101100111
3
10
0000011010
2
18
001100111110100101
2
10
000011010
2
19
0000111000100010010
2
9
000011101
2
17
00001111011011101
2
9
001111101
2
18
000010101101100111
3
10
0000011010
2
18
001100111110100101
2
10
000011010
2
19
0000111000100010010
2
11
9
001111101
2
18
000010101101100111
3
10
0000011010
2
18
001100111110100101
2
10
000011010
2
19
0000111000100010010
2
11
00001011001
2
19
0001110111011011010
2
11
00011101101
1
20
00000100110101001110
2
12
000111101101
4
20
00010001111100101101
4
12
001100000101
2
21
000000101110100111001
2
00001011001
2
19
0001110111011011010
2
11
00011101101
1
20
00000100110101001110
2
12
000111101101
4
20
00010001111100101101
4
12
001100000101
2
21
000000101110100111001
2
11
00001011001
2
19
0001110111011011010
2
11
00011101101
1
20
00000100110101001110
2
12
000111101101
4
20
00010001111100101101
4
12
11
00001011001
2
19
0001110111011011010
2
11
00011101101
1
20
00000100110101001110
2
12
000111101101
4
20
00010001111100101101
4
12
001100000101
2
21
000000101110100111001
2
13
0000001100101
2
21
001101100001000010101
2
13
0000010110011
2
22
0001000111110011011010
3
14
00001100110101
2
23
00000010101100110100111
5
001100000101
2
21
000000101110100111001
2
13
0000001100101
2
21
001101100001000010101
2
13
0000010110011
2
22
0001000111110011011010
3
14
00001100110101
2
23
00000010101100110100111
5
14
13
0000001100101
2
21
001101100001000010101
2
13
0000010110011
2
22
0001000111110011011010
3
14
00001100110101
2
14
13
0000001100101
2
21
001101100001000010101
2
13
0000010110011
2
22
0001000111110011011010
3
14
00001100110101
2
23
00000010101100110100111
5
14
00110011111010
2
23
00000011110011001001010
3
15
001111100110101
2
24
000111111001000011001010
9
15
000011001001010
2
24
000001110011101010110110
4
23
00000010101100110100111
5
14
00110011111010
2
23
00000011110011001001010
3
15
001111100110101
2
24
000111111001000011001010
9
15
000011001001010
2
24
000001110011101010110110
4
M
RM
R
M
RM
R
 
 
 
Theorem 5 Let a be an m-sequence of length N. Then the average value of the normalized aperiodic 
autocorrelation, averaged over all N starting positions, is just the normalized periodic autocorrelation 
function itself. That is, letting E denote the average value, that 
 
 
 
 
1
1
0
0
1
1
( )
( )    
N
M
M
i
j
i
j k
j
i
E C
k
a
a
k
M
N
N
M




















%
a
a

%
  
 
(2.7.3-2) 
 

 110                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
 
where 
is the normalized aperiodic autocorrelation function over M chips, and 
 is the 
normalized periodic autocorrelation function. Note that the wiggly line over the function C(k) or 
( ) 
M
C
k
%
a
( )
k
%
a
(k), 
indicates the normalized version (i.e., 
 = 1 and 
(0)
C%
(0)
1


%
). 
 
Proof   By definition the average over the code period produces 
 
 
 
 
 
1
1
0
0
1
1
( )
 
N
M
M
i
j
i
j k
j
i
E C
k
a
a
N
M


















%
a
 
 
 
(2.7.3-3) 
 
Interchanging the order of the summations produces 
 
 
 
 
1
1
1
0
0
0
1
1
1
( )
 =
( )
( )
M
M
N
M
M
i
j
i
j k
i
j
i
E C
k
a
a
k
k
M
N
























%
%
a
a
%
a
  
(2.7.3-4)  
 
as was to be proven. Therefore the average normalized aperiodic autocorrelation function, when averaged 
over each starting position, is just the normalized periodic autocorrelation function.  
 
Theorem 6 Let a be an m-sequence of length N. Then the variance of the normalized aperiodic 
autocorrelation function for k
0 and M < N is given by 

 
 
 
 
      
1
1
ˆ
( )
1
1
  
M
M
Var C
k
M
N
N















a
 
 
where the average is taken over all N starting positions. 
 
Proof  By definition  
 
 
 
 






2
2
var
( )
( )
( )
M
M
M
C
k
E
C
k
E C
k










%
%
%
a
a
a
 
 
 
(2.7.3-5) 
 
The second term has been computed in Theorem 5, so it is only necessary to consider the first term. The first 
term can be written as 
 
 
 
 


2
1
1
2
0
0
1
1
( )
N
M
M
i
j
i
j k
j
i
E
C
k
a
a
N
M



















%
a
  
 
 
(2.7.3-6) 
 
so that 
 
 
 
 


1
1
1
2
2
0
0
0
1
( )
 
N
M
M
M
i
j
i
j k
l
j
l
j k
j
i
l
E
C
k
a
a
a
a
NM
















%
a
  
 
(2.7.3-7) 
 
Now using the shift and add property this can be written as 
 
 
 
 


1
1
1
2
'
'
2
0
0
0
1
( )
(
) 
i
j k
l
j k
N
M
M
M
j
i
l
E
C
k
a
a
NM














%
a
 
 
 
(2.7.3-8) 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         111 
where 
 is the shifted resultant, based on Property III of Section 2.6.1 for m-sequences. The same property 
applies when the symbols are {1,–1} for multiplication of the code symbols. Now express the inner double 
sum into the diagonal and off-diagonal terms as 
'
m
a
 
 
 
 


1
1
1
1
2
'
'
2
0
0
0
0
  
1
( )
(
) 
i
j k
l
j k
N
M
M
M
M
j
i
i
l
i l
E
C
k
M
a
a
NM



















%
a
  
 
   (2.7.3-9) 
 
or again using Property III for m-sequences one obtains 
 
 
 
 
     

1
1
1
2
"
2
0
0
0
1
1
( )
  
M
M
N
M
i
j l k
i
l
j
i l
E
C
k
a
M
NM






















%
a
  
 
(2.7.3-10) 
 
where 
 is the shifted resultant, based on Property III of Section 2.6.1. Since the last summation is just 
equal to –1, and since there are just M(M–1) off-diagonal terms, one obtains the result 
"
ka
 
 
 
 
            



2
1
1
( )
1   
M
E
C
k
M
M
NM







%
a
 
 
 
(2.7.3-11) 
 
Now from Theorem 5, one has  
 
 
 
 
 


1
( )
      
0,   
1  
M
E
C
k
k
k
N
N








%
a
  
 
(2.7.3-12) 
 
So that the variance becomes 
 
 
 
     
2
1
1
1
1
1
var
( )
1
1
  
M
M
C
k
M
NM
N
M
N
N


























%
a
M
 
 
(2.7.3-13) 
 
which is what was to be shown. Notice that for large N and for N >> M, the variance is well approximated by 
the result 
 
 
 
 
         
1
1
1
var
( )
   
M
C
k
M
N
M












%
a
 
 
 
 
(2.7.3-14) 
 
 
Having the mean and variance of the partial period autocorrelation values allows one to determine 
the random interference that will be observed when the clock time is correct but the code position is not 
aligned with the received code sequence, and the correlation is over a time short compared to the code 
period. 
 
 
2.7.4 Frequency-Hopping Multiple Access Code Generators 
 
In this section asynchronous frequency-hopping (FH) patterns are considered for SS FHMA (or FH/SSMA) 
designs. The frequency hopping synthesizer generates the frequencies that range across the frequency band of 
interest, in a pseudorandom manner, at regular intervals, and with equal spacing between the contiguous hop 
frequencies. 
 
Often data transmission in FH systems is based on either frequency shift keying (FSK) (or MFSK) 
or differential shift keying (DPSK). With FSK the frequency-hopping pattern hops to frequency f0 and then 

 112                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
the data adds f Hz or subtracts f Hz according to whether a mark or space is transmitted. In effect the 
signal occupies a frequency slot which is the FSK band in which the signal is contained within. It is also not 
uncommon in some designs to have more than one hop frequency per data bit, which is known as fast 
frequency hopping (FFH). The complete set of slots defines the hopping bandwidth, assuming that each slot 
is contiguous. In some systems the frequency separation is much less than the data modulation bandwidth. 
 
When DPSK is used, one or more reference bits are transmitted followed by the differentially 
encoded data, all on one frequency hop. Again a slot is the frequency band needed to pass the DPSK signal 
without much distortion. 
 
The multiplexing aspect of FH systems is quite natural, since when one hopping signal is occupying 
one frequency slot, the other signals can occupy the other slots. 
 
The receiver for an FH system consists of basically a frequency dehopper followed by a 
conventional FSK (or MFSK) or DPSK demodulator. It is of course necessary that the frequency hopper 
acquires and follows the receiver-hopping signal in frequency and time. The frequency dehopper functionally 
consists of a multiplier that multiplies the received hopping signal with the locally generated one, which 
produces an output that is fixed (except for the modulation) at an intermediate frequency when it is in 
synchronization. 
 
The multiple access capability of an FH system comes about from the fact that a frequency hopped 
signal only occupies one slot at a given time and therefore other hopping signals can be located at other 
frequency slots without causing a problem to each other. If the hopping signals are all timed with the same 
source and are at the same range from the receiver, this frequency-hopped multiple access (FHMA) scheme 
would be feasible. It is possible to slave the ground terminals to a satellite, which is made the master clock, 
such as in the Milstar system. 
 
In general such time coordination is not always feasible. In general for many systems the 
transmitters are asynchronous, and it is possible that two or more signals will hop to the same frequency slot 
at the same time causing what is known as a hit or collision. The result of this hit is degradation in the link 
performance. Because of this problem, error correction coding is commonly utilized in frequency hopped 
spread spectrum multiple access communication systems.   
 
An asynchronous FH/SSMA system will be assumed in the modeling that follows. Since an 
asynchronous system is assumed, it is to be noted that when a hit occurs the hopping signal that causes the hit 
and arrives at the same frequency hop position as the desired hopping signal may overlap in time some 
fraction of a hop. This caused a partial hit. To simplify the analysis it will be assumed that the time delays 
between the various signals are integer multiples of the duration of a hop, and therefore the hits have total 
overlap in time and the hits are complete.  
 
Let the number of frequency slots be denoted by f1, f2, ... fq with the total number frequency slots 
being q, and the hopping patterns having period N. Let  
 
 
 
 




0
1
1
0
1
1
,
,...
  and    
,
,...
N
X
X
X
Y Y
Y



X
Y
N 
 
 
 
(2.7.4-1) 
 
denote two hopping patterns with  
 
 
 
 
 


1
2
,
,
,...
k
k
q
X
Y
f
f
f

 
 
 
 
(2.7.4-2) 
 
When the two frequency-hop patterns are being hopped according to these patterns, then the Hamming 
correlation [36] is defined by 
 
 
 
 
 
 
 
 
(2.7.4-3) 
1
0
( )
(
,
)    0
 
N
i
i
i
H
h X Y 







XY
N

 
where 
 
 
 
 
 
 
0  if  
( , )
  
1  if  
x
y
h x y
x
y





 
 
 
 
(2.7.4-4) 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         113 
where HXY() denotes the number of hits between the two patterns for a relative delay of  (an integer) with 
the condition that the sum “i+” is taken modulo N. 
 
Let 
(
,
) 
H X Y
 denote the average 
 
 
 
 
 
1
0
1
(
,
)
( ) 
N
XY
H
H
N 





X Y
 
 
 
 
(2.7.4-5) 
 
where 
(
,
)
H X Y  is the average number of hits between the two hopping patterns X and Y. 
 
It can be shown that it is not possible to achieve the ideal of HXY() = 0 for all values of (integer)  
unless the hop patterns X and Y are restricted to disjoint subsets of the available frequency slots [37]. 
 
 
2.7.4.1  m-Sequence Frequency-Hopping Multiple Access Code Generators 
 
Now assume that there are q frequency slots that are to be used in the hop pattern design [37] and the 
sequence length N = 2n – 1 is equal to the number of slots, q.  One simple method of driving a frequency 
hopper with an m-sequence is by using the n bits of the register to control the frequency of a frequency 
synthesizer. Now each nonzero n-tuple occurs exactly once within the period of the m-sequence. Hence each 
of the q slots is used once during the period of the m-sequence.   
 
Note that the longest number of runs of all 1s is n, for a length N = 2n –1 m-sequence. Further any 
m-sequence must go through the following sequence 
 
 
 
 
 
01
  
 
 
(2.7.4.1-1) 
1...111,   111...111,   111...110 
 
where the second sequence has n 1s in direct succession. It is therefore clear that if two distinct m-sequences 
of the same length are used for the two hopping patterns, then as least as many as three hits can occur for 
some time shifts. Sarwate and Purlsey [37] have noted that things can be much worse; a length 31 sequence 
can have as many as five hits for some relative time delays. Let us consider an example to clarify these 
concepts. 
 
Example 17 Assume that two m-sequence generators of length N = 7 are to be used for providing the 
frequencies of the two frequency hoppers. Obviously, the generator length is artificially low in order to 
illustrate the ideas involved. As seen in the figure that SRG1 generates the numeric sequence 4, 6, 7, 3, 5, 2, 
1 by taking the three bits of the register and associating a numeric value equal to the binary value.  
For example, 100 converts to 1×22+0×21+0×20 = 4. Let the output numeric sequence for both SRGs 
be written as a column vector as shown in the figure. X denotes the first generator numeric output (seven 
values). The other seven vectors {Y(k), k =0,1,…6} are the numeric outputs of the second SRG with k cyclic 
shifts. The row of integers below the horizontal line denotes the number of hits that would occur for the k-th 
shift of the Y code generator output. Thus in comparing X row by row with Y(4), it is seen that the second (6), 
third (7), and fourth (3) numeric values (rows) are the same, and thus three hits would occur for this cyclic 
phase shift. In this example it is seen that the largest number of hits is three and the smallest is zero (Y(0), for 
example). 
 
It can be seen from the example that the value of 
(
,
)
1 
H

X Y
 since the sum of the bottom row 
divided by N = 7 is 1. Even though the average was 1, one delay (Y(4)) caused three hits and other delays 
caused no hits.  
 
Clearly this concept can be extended to a higher order (more FH signals) by considering pair-wise 
comparisons. 
 
Other methods of synthesizer sequence design have been discussed in the literature, including Reed-
Solomon codes [37, 38] and higher order m-sequences [39]. 
 

 114                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
+
Register 1
1
0
0
+
Register 2
0
0
1
This register produces the following seven
states:
4,6,7,3,5,2,1
This register produces the following seven
states:
1,4,2,5,6,7,3
001-1
010-2
011-3
100-4
101-5
110-6
111-7
States and freq. number
X
Y(0)
Y(1)
Y(2)
Y(3)
Y(4)
Y(5)
Y(6)
4
1
3
7
6
5
2
4
6
4
1
3
7
6
5
2
7
2
4
1
3
7
6
5
3
5
2
4
1
3
7
6
5
6
5
2
4
1
3
7
2
7
6
5
2
4
1
3
1
3
7
6
5
2
4
1
No. of hits: 0
1
0
1
3
0
2
f(x)=1 + x + x3
f(x)=1+ x2 + x3
+
Register 1
1
0
0
+
Register 2
0
0
1
+
Register 2
0
0
1
This register produces the following seven
states:
4,6,7,3,5,2,1
This register produces the following seven
states:
1,4,2,5,6,7,3
001-1
010-2
011-3
100-4
101-5
110-6
111-7
States and freq. number
X
Y(0)
Y(1)
Y(2)
Y(3)
Y(4)
Y(5)
Y(6)
4
1
3
7
6
5
2
4
6
4
1
3
7
6
5
2
7
2
4
1
3
7
6
5
3
5
2
4
1
3
7
6
5
6
5
2
4
1
3
7
2
7
6
5
2
4
1
3
1
3
7
6
5
2
4
1
No. of hits: 0
1
0
1
3
0
2
f(x)=1 + x + x3
f(x)=1+ x2 + x3
 
 
Figure for Example 17. A simple example of a frequency-hopping generator. 
 
 
2.8 SUMMARY 
 
This chapter presented an introduction to the sequences used in CDMA spread spectrum communications. 
Matrix and polynomial characterizations of the SSRG were developed. Periodic and aperiodic correlation 
functions were presented. The m-sequence was introduced and many properties were presented. The power 
spectral density of an m-sequence was derived. Additionally the power spectral density of a despread m-
sequence was developed. 
 
Many commonly used codes that are employed in spread spectrum communications for periodic 
correlation properties, which include Gold codes, balanced Gold codes, Gold-like and dual BCH codes, both 
the small set and large set of Kasami codes, and Bent sequences were presented. 
 
Codes used for aperiodic correlation applications, such as synchronization of data frames, are then 
presented. This was followed by a brief discussion of frequency-hopping sequences for asynchronous 
FH/SSMA applications. 
 
This chapter did not address the area of nonlinear codes (other than Bent sequences) [29, 40]. In 
addition, polyphase sequences including the work on 4-phase codes have not been addressed here [41–44]. 
 
References  
 
[1] E. N. Gilbert, “Quasi-Random Binary Sequences,” Bell Telephone laboratories Memorandum MM-53-1400-42, November 27, 1953. 
 
[2] S. W. Golomb, “Sequences with Randomness Properties,” Terminal Progress Report under Contract R No. 639498, Martin Co.,  
      Baltimore, MD, June 1955. 
 
[3] N. Zierler, “Several Binary-Sequence Generators,” Tech. Report No. 95, Lincoln Lab., MIT, September 12, 1955. 
 
[4] N. Zierler, “Linear Recurring Sequences,” J. Soc. Industrial and Applied Math, Vol. 7, March 1959, pp. 31–48. 
 
[5] T. G. Birdsall and M. P. Ristenbatt, “Introduction to Linear Shift-Register Generalized Sequences,” Univ. of Michigan Research  
      Institute, Dept. of Elect. Engr. Tech. Report, No. 90, October 1958. 
 
[6] S. W. Golomb, Shift Register Sequences, San Francisco, CA: Holder-Day, 1967. 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         115 
[7] D. V. Sarwate and M. B. Pursley, “Cross-Correlation Properties of Pseudorandom and Related Sequences,” Proceedings of the IEEE,  
     Vol. 68, No. 5, May 1980. 
 
[8] G. Birkhoff and S. MacLane, A Survey of Modern Algebra, rev. ed., New York: Macmillan, 1953. 
 
[9] B. L. Van Der Waerden, Modern Algebra (2 Vols.) Trans. by F. Blum and T. J. Benac, New York: Frederick Ungar, 1950 and 1953. 
 
[10] S. Lin and D. J. Costello, Error Control Coding: Fundamentals and Applications, Englewood Cliffs, NJ: Prentice Hall, 1983. 
 
[11] R. Ziemer and R. Peterson, Digital Communications and Spread Spectrum Systems, New York: Macmillan, 1985. 
 
[12] D. J. Torrieri, Principles of Secure Communication Systems, 2nd ed., Norwood, MA: Artech House, 1992. 
 
[13] J. K. Holmes, Coherent Spread Spectrum Systems, New York: Wiley-Interscience, 1982 (republished by Krieger Press, Malabar,  
        FL 1990). 
 
[14] T. Helleseth and P. V. Kumar in The Mobile Communications Handbook, J.D. Gibson editor, Chapter 8, Boca Raton, FL: CRC  
        Press, 1999. 
 
[15] A. J. Viterbi, CDMA Principles of Spread Spectrum Communication, Reading, MA: Addison-Wesley, 1995. 
 
[16] W. W. Peterson and E. J. Weldon Jr., Error Correcting Codes, 2nd ed., Cambridge, MA: MIT Press, Appendix C, 1972. 
 
[17] A. B. Carlson, Communication Systems, New York: McGraw-Hill, 1968, pp. 43, 52. 
 
[18] J. L. Massey, “Shift-Register Synthesis and BCH Decoding,” IEEE Trans. on Information Theory, Vol. IT-15, No. 1, January 1969. 
 
[19] W. J. Gill, “Effect of Synchronization Error in Pseudorandom Carrier Communications,” First Annual IEEE Comm. Conv. Record,  
        Denver, CO, June 7–9, 1965, pp. 187–191. 
 
[20] W. J. Gill and J. J. Spilker, “An Interesting Decomposition Property for the Self-Products of Random or Pseudorandom Binary  
        Sequences,” IEEE Trans. on Communication Systems, June 1966. 
 
[21] R. Gold Associates, “TDRSS Telecommunication Systems PN Analysis Contract No. NAS 5-22546, Final Report,” August 31,  
       1976. 
 
[22] R. Gold, “Characteristic Linear Sequences and Their Coset Functions,” SIAM J. Appl. Math., Vol. 14, 1966, pp. 980–985. 
 
[23] V. M. Sidelnikov, “On Mutual Correlation of Sequences,” Soviet Math. Dokl., Vol. 12, 1971, pp. 197–201. 
 
[24] L. R. Welch, “Lower Bounds on the Maximum Cross Correlation of Signals,” IEEE Trans. on Information Theory, Vol. IT-20, May  
       1974, pp. 397–399. 
 
[25] E. R. Berlekamp, Algebraic Coding Theory, New York: McGraw-Hill, 1968. 
 
[26] T. Kasami, “Weight Distribution of Bose-Chaudhuri-Hocquenghem Codes,” in Combinatorial Mathematics and Its Applications,  
        Chapel Hill, NC: Univ. of North Carolina Press, 1969. 
 
[27] D. R. Anderson, “A New Class of Cyclic Codes,” SIAM J. Appl. Math., Vol. 16, 1968, pp. 181–197. 
 
[28] F. J. MacWilliams and N. J. A. Slone, The Theory of Error-Correcting Codes, the Netherlands: North-Holland, 1977. 
 
[29] M. Simon, J. K. Omura, R. A. Scholtz, and B. K. Levitt, Spread Spectrum Communications, Vol. I, Chapter 5, Rockville, MD:  
       Computer Science Press, 1985. 
 
[30] J. D. Olsen, R. A. Scholtz, and L. R. Welch, “Bent-Function Sequences,” IEEE Trans. on Information Theory, Vol. IT-28, No. 6,  
       November 1982. 
 
[31] A. Lempel and M. Cohn, “Maximal Families of Bent Sequences,” IEEE Trans. on Information Theory, Vol. IT-28, No. 6,  
        November 1982. 
 
[32] R. H. Barker “Group Synchronization of Binary Digital Systems,” in Communication Theory, W. Jackson, Editor, New York:  
        Academic Press, 1953, pp. 273–287. 
 
[33] M. W. Williard, “Optimum Code Patterns for PCM Synchronization,” 1962 National Telemetry Conference, paper 5-5, 1962. 
 

 116                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
[34] F. Neuman and L. Hofman, “New Pulse Sequences with Desirable Correlation Properties,” Proc. Nat. Telemetry Conf., 1971, pp.  
        272–282. 
 
[35] J. L. Massey, “Optimum Frame Synchronization,” IEEE Trans. on Communications Technology, April 1972, pp. 115–118. 
 
[36] A. Lempel and H. Greenberger, “Families of Sequences with Optimal Correlation Properties,” IEEE Trans. on Information Theory,  
       Vol. 20, 1974, pp. 90–94. 
 
[37] D. V. Sarwate and M. B. Pursley, “Hopping Patterns for Frequency-Hopped Multiple Access Communications,” IEEE ICC, Vol. I,  
        paper no. 7.4.1, 1978. 
 
[38] R. M. Mersereau and T. S. Seay, Multiple Access Frequency Hopping Patterns with Low Ambiguity,” IEEE Trans. on Aero. and  
       Elect. Sys., Vol. AES-17, No. 4, July 1981.  
 
[39] J. J. Komo and S.-C. Liu, “Maximal Length Sequences for Frequency Hopping,” IEEE Journal on Selected Areas in Comm.,  
       Vol. 8, No. 5, June 1990. 
 
[40] E. J. Groth, “Generation of Binary Sequences with Controllable Complexity,” IEEE Trans. on Information Theory, Vol. IT-17, No.  
        3, May 1971. 
 
[41] A. R. Hammons Jr. and P. V. Kumar, “On a Recent 4-Phase Design for CDMA,” IEICE Trans. Communications, Vol. E76-B, No.  
       8, August 1993. 
 
[42] A. R. Hammons et. al. “On the Apparent Duality of the Kerdock and Preparata Codes,” IEEE Int. Symposium on Information  
       Theory, San Antonio, TX, January 1993. 
 
[43] I. Oppermann and B. S. Vucetic, “Complex Pseudo Random Spreading Sequences with a Wide Range of Correlation Properties,”  
       Globecom 94, San Francisco, CA, 1994. 
 
[44] D. C. Chu, “Polyphase Codes with Good Periodic Correlation Properties,” IEEE Trans. on Information Theory, July 1972. 
 
 
Problems 
 
1. (a) Show that A–1, the inverse of A, is equivalent to running the SSRG backwards. 
    (b) Show that A–1, takes the form, in general, of 
 
 
 
 
1
1
2
3
1
0
1
0
0
0
0
0
1
0
0
0
0
0
1
0
   
    
0
0
0
0
0
1
1
n
A
n
n
c
c
c
c
























K
K
K
K
M M
M
M
M
K
  
 
 
      (P2-1) 
 
2. Consider the shift register shown in the figure. Using the results of Problem 1 determine the shift register  
    state one and two shifts previous to the current state. 
 
1
1
1
0
Current state is: 1110
+
 
 
Figure for problem 2. Showing the shift register under study. 
 
3. Determine the mathematical function that allows one to determine the k-th symbol in the output sequence.  
    Hint: Consider the appropriate derivative of the generating function. 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         117 
4. The SSRG shown in the figure has characteristic polynomial f(x) = x5+x4+1. Show that there are four  
     different periods possible, with the actual periods of lengths 1, 3, 7, and 21. Hint: Consider direct  
     enumeration of the sequence with different initial conditions. 
 
+
Characteristic polynomial:  f(x) = 1 + x + x5
Output
+
Characteristic polynomial:  f(x) = 1 + x + x5
Output
 
 
Figure for Problem 4. Showing the shift register under study. 
 
5. Show that the following is true for periodic sequences: 
 
 
 
 
 
 
 
 
 
(P2-2) 
1
1
1
0
0
0
( )
  
N
N
N
ab
i
k
l
i
k
l
a
b

















 
6. Show that an irreducible polynomial must have an odd number of terms. Hint: First note that every  
     polynomial of even order can be factored by at least (x+1). 
 
7. Consider the shift register sequence generator for Example 8, which has a characteristic polynomial given  
     by  
 
 
 
 
 
3
( )
1
 
f x
x
x


 
 
 
 
(P2-3) 
 
   (a) Find the reciprocal polynomial and (b) show that the shift register associated with the reciprocal  
         polynomial generates the reverse sequence. 
 
8. Show that the average of HXY(k), denoted by
(
, )
H X Y , satisfies the following 
 
 
 
 
 
1
0
1
(
, )
( )
1 
N
XY
k
H X Y
H
k
N





 
 
 
 
(P2-4) 
 
9.  Show that for polynomials over GF(2) that for any i greater than 0 that 
 
 
 
 
 
      

2
2
( )
(
) 
i
i
f x
f x

 
 
 
 
 
(P2-5) 
 
10. Construct a balanced Gold code set of length L=210–1 that has 32 codes. What is the maximum cross  
       correlation magnitude between the codes in this set? 
 
11. Design 32 Gold codes of length 19. Use the following codes 
 
2
3
4
5
6
8
9
11
15
1
2
7
8
19
  2105575  1
  2000605  1
9
x
x
x
x
x
x
x
x
x
x
x
x
x
x














a
b
 
 
 
(P2-6) 
 
      Show that G(x) is given by 

 118                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
 
2
8
2
7
8
19
1
( )
1
x
x
G x
x
x
x
x






 
 
 
 
(P2-7) 
 
      By performing the appropriate division, show that the initial conditions for register b are given by 
 
[1100000001010110011]  
 
 
 
(P2-8) 
 
     corresponding to the polynomial 
9
11
13
14
17
18
1
.
x
x
x
x
x
x
x







 Note that the only constraint  
     on the “a” register is that the first entry be zero. One solution is to set stage 1 and k+2 through n to zero,  
     while the remaining 5 be set with different b values so that 32 (=25) codes will be generated. The final  
     generator is shown in the following figure. 
 
2000605
+
+
b
1    1     0    0     1     1     0     1     0     1     0     0    0     0     0     0     0     1     1
2105575
+
a
0    0     0    0     0     0     0     0     0    0     0     0
0                                        0
2000605
+
+
b
1    1     0    0     1     1     0     1     0     1     0     0    0     0     0     0     0     1     1
2105575
+
a
0    0     0    0     0     0     0     0     0    0     0     0
0                                        0
 
 
Figure for Problem 11. A generation of balanced Gold codes of period 219–1. 
 
12. Construct a Kasami small set code generator of shift register length 6 (n = 6). Starting with the primitive  
      polynomial 1 l03F determine the proper decimation of the original shift register. Using the appropriate  
      tables conclude that the polynomial 9 015 is the correct one. Sketch the code generator and state the code  
      period of each component code. What are the correlation values? 
 
 
 

 
                                    Binary Shift Register Codes for Spread Spectrum Systems 
 
 
         119 
 
Table 2A-1  Primitive Polynomials of Degree n  40 or Less (and 61 and 89) 
Degree  Octal Representation (f0 on the Right and fn on the Left) 
2 
[7]* 
3 
[13]* 
4 
[23]* 
5 
[45]*,[75],[67] 
6 
[103],[147],[155] 
7 
[211]*,[217],[235],[367],[277],[325],[203]*,[313],[345] 
8 
[435],[551],[747],[453],[545],[537],[703],[543] 
9 
[1021]*,[1131],[1461],[1423],[1055],[1167],[1541],[1333],[1605],[1751] 
 
[1743],[1617],[1553],[1157] 
10 
[2011]*,[2415],[3771],[2157],[3515],[2773],[2033],[2443],[2461],[3023] 
 
[3543],[2745],[2431],[3177],[3525],[2617] 
11 
[4005]*,[4445],[4215],[4055],[6015],[7413],[4143],[4563],[4053],[5023],[5623] 
 
[4577],[6233],[6673],[7237],[7335],[4505],[5337] 
12 
[10123],[15647],[16533],[16047],[11015],[14127],[17673],[13565],[15341] 
 
[15053],[15621],[15321],[11417],[13505],[13275],[11471],[16237] 
13 
[20033],[23261],[24623],[23517],[30741],[21643],[30171],[21277],[27777] 
 
[35051],[34723],[34047],[32535],[31425],[37505],[36515],[26077] 
14 
[42103],[43333],[51761],[40503],[77141],[62677],[44103],[45145],[76303] 
 
[64457],[57231],[64167],[60153],[55753],[70423],[47153],[53255],[41753] 
15 
[100003]*,[102043],[110013],[102067],[104307],[100317],[177775],[103451] 
 
[110075],[102061],[114725],[103251],[163005],[112611],[120265],[100021]* 
16 
[210013],[234313],[233303],[307107],[307527],[306357],[201735],[272201] 
 
[242413],[270155],[302157],[210205],[305667],[236107],[271055],[313371] 
17 
[400011]*,[400017],[400431],[525251],[410117],[40073],[411335],[600013] 
 
[403555],[525327],[411077],[404525],[401523],[466273][400041]*,[400101]* 
18 
[1000201]*,[1002241],[1703601],[1025711],[1115701],[1002241],[1002441] 
 
[1100045],[1000407],[1003011],[1020121],[1101005],[1000077],[1001361] 
 
[1001567],[1001727],[1002777] 
19 
[2000047],[2020471],[2013211],[2570103],[2561427],[2227023],[2001711] 
 
[2331067],[3146455],[3610353],[2766447],[2000641],[2001441],[2000107] 
 
[2000077],[2000157],[2000175] 
20 
[4000011]*,[4001051],[4004515],[6000031],[4442235] 
21 
[10000005]*,[10040205],[10020045],[10040315],[10000635],[10103075] 
 
[10050335],[10002135],[17000075] 
22 
[20000005]*,[20001043],[2222223],[25200127],[20401207],[20430607] 
 
[20070217] 
23 
[40000041]*,[40404041],[40000063],[40010061],[50000241],[40220151] 
 
[40006341],[40405463],[40103271],[41224445],[40435651] 
24 
[100000207],[125245661],[113763063] 
25 
[200000011]*,[200000017],[204000051],[200010031],[200402017] 
 
[252001251],[201014171],[200010031],[200402017],[252001251],[201014171] 
 
[204204057],[200005535],[200014731] 
26 
[400000107],[],[430216473],[402365755],[426225667] 
 
[510664323],[473167545],[411335571] 
27 
[1000000047],[1001007071],[1020024171],[1102210617] 
 
[1250025757],[1257242631],[1020560103],[1037530241] 
28 
[2000000011]*,[2104210431],[2000025051],[2020006031] 
 
[2002502115],[2001601071] 
29 
[4000000005]*,[4004004005],[4000010205],[4010000045] 
 
[4400000045],[4002200115],[4001040115],[4004204435] 

 120                                      Spread Spectrum Systems for GNSS and Wireless Communications 
 
           
 
[4100060435],[4040003075],[4004064275] 
30 
[10040000007],[10104264207],[10115,131333],[11362212703] 
 
[10343244533] 
31 
[2000,0000,011]*,[2000,0000,017],[2000,0020,411],[2104,2104,211] 
 
[2001,0010,017],[2000,5000,251],[2000,4100,071],[2020,2040,217] 
 
[2000,0200,435],[2006,0140,231],[2104,2107,357] 
32 
[4002,0000,007],[4046,0216,667],[4003,5532,523],[42003247,143] 
 
[4176,0427,607] 
33 
[1000,0002,0001]*,[1000,2002,4001],[1040,0042,0001] 
 
[1000,2022,4401],[1111,0002,1111],[1000,0003,1463] 
 
[1040,2046,6001],[1005,0243,0041],[1006,0143,1001] 
34 
[2010,0000,0007],[2014,7202,4107],[3770,0000,7527] 
 
[2252,1343,3257],[2277,1224,0037],[2511,3251,6577] 
 
[2116,3622,0473] 
35 
[4000,0000,0005]* 
36 
[1000,0000,04001]* 
37 
[2000,0000,12005] 
38 
[4000,0000,00143] 
39 
[1000,0000,0000,21]* 
40 
[2000,0012,0000,05] 
61 
[2000,0000,0000,0000,0004,7] 
89 
[4000,0000,0000,0000,0000,0000,0001,51] 
 
Entries that have an asterisk denote shift registers that have only two feedback connections. The table is 
based on [11, 13, 16]. 
 
 

CHAPTER 3 
Jamming Performance of Uncoded Spread Spectrum 
Systems 
 
 
3.0 INTRODUCTION 
 
In this chapter the effects of jamming on bit error rate (BER) performance will be developed for various 
modulations and jammer types. A spread spectrum system is designed to minimize the effects of an 
intentional jammer, whose goal is to disrupt the communication between the spread spectrum transmitter and 
the spread spectrum receiver. A spread spectrum system is also designed to minimize the effects of 
unintentional interferences on the reception of the signal. The intent of this chapter is to provide results and a 
methodology for predicting the performance of spread spectrum (SS) systems with various data modulations, 
as well as various spread spectrum modulations in the face of various types of jammers or interferences.  
All analyses in this chapter assume that no intermodulation products will develop and no harmonics 
are generated. In other words the receiver is assumed to be ideal. Carrier loop effects, code tracking effects, 
and bit synchronization effects are not considered in this chapter. These effects require additional refinements 
in the theory and are not treated here. This chapter does not address coding and interleaving, which improve 
the performance of the spread spectrum communication system under a jamming environment. Coding and 
interleaving will be addressed in Chapter 4. 
 
It will be seen that the intelligent jammer will be able to cause serious degradation to the bit error 
rate performance. In fact, the intelligent jammer will change the bit error rate that is typically roughly 
negative exponential, in signal-to-noise ratio, to an inverse relationship in the signal-to-noise ratio, which 
requires much more power to overcome the jammer for a given bit error rate. When coding is considered in 
Chapter 4, it will be seen that the use of coding and interleaving recovers a good part of the lost performance 
compared to the case when coding and interleaving are not used. 
 
Figure 3.0-1 illustrates the scenario that is applicable in a spread spectrum system. The spread 
spectrum transmitter sends a signal with transmit power Pt to the spread spectrum receiver with the intention 
of communicating, and the jammer, knowing the location of the receiver, tries to prevent the receiver from 
detecting the data by transmitting a jamming signal of power Jt to the receiver. At the receiver the jammer to 
signal power ratio is J/P, which may be different than Jt/Pt. This is true since the ranges will be different in 
general, and typically the jammer will be closer and therefore have a range advantage. To complicate things 
even further, fading may occur on one or both channels so that the fading losses may differ between links 
also. 
It is useful to describe a general spread spectrum transmitter and receiver model before discussing 
the various types of jammer signals that may be employed by an adversary intent on jamming the 
communication link. Figure 3.0-2 illustrates a general transmitter and receiver, including coding, 
interleaving, and spread spectrum modulation, along with data modulation at the transmitter and the 
corresponding inverse functions at the receiver. 
The data source is assumed to produce statistically independent, equally likely bits that take on the 
value of 0 or 1. The encoder maps the data bits into an Q-ary alphabet that takes on the values 0, 1, …, Q–1. 
In some applications these Q-ary symbols are mapped into another binary symbol stream taking on values 0 
and 1. When the channel input x and channel output y (the input to the channel interleaver and the output 
 
                                         121 

 122                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
from the channel deinterleaver) have a discrete number of states and there is no memory in the channel, then 
the channel is known as a discrete memoryless channel (DMC). 
 
Transmitter
Jammer
Receiver
Power = Pt
Power = Jt
Range1
Range2
Receiver power ratio =  J/P
Transmitter
Jammer
Receiver
Power = Pt
Power = Jt
Range1
Range2
Receiver power ratio =  J/P
 
 
Figure 3.0-1 The transmitter, receiver, and jammer scenario. 
 
 
The encoded symbols are sent through the interleaver, which randomizes the bit stream in such a 
way that at the receiver when a burst of errors enters the deinterleaver, the errors become randomized in time 
at the output. There is a delay due to the interleaving and deinterleaving process; however, the bit error rate 
performance in jamming is greatly improved by the deinterleaving process. After interleaving, the encoded 
symbols are carrier modulated, and then spread by the spreading modulator that is driven by a spreading 
code. Spreading the code creates the spread spectrum process. The signal is then transmitted to the receiver. 
 
Discrete
memoryless
source
Channel
encoder
Channel
interleaver
Data
modulator
Spreading
modulator
+
White
Gaussian
noise
Jamming
signal
+
Spreading
demodulator
Data
demodulator
Deinterleaver
Channel
decoder
Data
User
Discrete memoryless channel
x
y
Discrete
memoryless
source
Channel
encoder
Channel
interleaver
Data
modulator
Spreading
modulator
+
White
Gaussian
noise
Jamming
signal
+
Spreading
demodulator
Data
demodulator
Deinterleaver
Channel
decoder
Data
User
Discrete memoryless channel
x
y
 
 
Figure 3.0-2 A model of a spread spectrum communications system. 
 
 
At the receiver the signal is received along with a possible jamming signal and, of course, the ever-
present receiver noise. The signal, jammer, and noise are despread and the data is demodulated. After 
demodulation the data is deinterleaved and then the data symbols are decoded. The actual performance 
depends on the actual coding scheme, the modulation, interleaver type and size, jammer type, and jammer to 
signal power ratio. Bit error rate performance will be presented in this chapter in the case that coding and 
interleaving are not employed.  
 
 
 
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          123 
3.1 JAMMER TYPES  
Equation Chapter 3 Section 1 
Numerous jammer signals are postulated for performance evaluation in this chapter. Some of these jammers 
are realizable and some are optimal in the sense of causing the maximum degradation to the bit error rate 
performance.  
 
The ever-present thermal noise competes with the signal, even without jamming. We model the 
thermal noise to have one-sided noise spectral density of N0 W/Hz.  
 
Perhaps the least efficient jammer in the sense of causing the least degradation to system 
performance is wideband or barrage jamming. This jammer transmits band-limited Gaussian noise, having 
one-sided noise spectral density of N0J W/Hz over the spread spectrum bandwidth W, as shown in Figure  
3.1-1(a). In addition to the jamming noise, thermal noise is also present, but often the jamming noise is much 
larger, so that in these cases the thermal noise can be neglected.  
 
W
(a) Barrage jammer
PSD
f
f
f
f
N0J
N0J /
W
(b) Partial band jammer
(c)  Tone jammer 
(d) Multitone jammer
PSD
PSD
PSD
PSD
(e) Matched spectral jammer
f
signal
Jammer
W
(a) Barrage jammer
PSD
f
f
f
f
N0J
N0J /
W
(b) Partial band jammer
(c)  Tone jammer 
(d) Multitone jammer
PSD
PSD
PSD
PSD
(e) Matched spectral jammer
f
signal
Jammer
 
 
Figure 3.1-1 (a–e) Five jammer spectral densities types. 
 
 
For a jammer power of J watts, spread over a bandwidth W Hz, the jammer spectral density is 
 
                                                                        N
J
J
0
W

/
                                        
(3.1-1) 
 
 
The second jammer shown in Figure 3.1-1(b) is the partial band jammer, which usually picks the 
bandwidth to maximize the bit error rate. The fractional portion of the bandwidth W that contains the partial 
band noise jammer is denoted by . The jammer spectral density, for the same total power J, is given by 
 
                                                              
0
/(
)
/
J
N
J
W
N

0J




                                
(3.1-2) 
 
over W Hz bandwidth, and is zero over the other (1-)W Hz bandwidth. Therefore the total spread 
bandwidth is W, and J is the total jammer power. 

 124                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
A third type of jammer is the tone jammer that has power J watts and it is illustrated in Figure  
3.1-1(c). Usually a single tone jammer is most effective at the frequency (or frequencies) at which the direct 
sequence spectral density is largest and therefore is the best location for direct sequence systems for BER 
degradation. For frequency hopped systems the placement of the jammer frequency at the frequency (or 
frequencies) at which the spectral density is largest is also the best location; however, there are typically 
many frequencies where the maximum occurs in frequency-hopped systems. 
 
The fourth jammer signal is illustrated in Figure 3.1-1(d) and is the multitone jammer with total 
power J watts. Typically the tones are equally spaced across the hopped bandwidth and the number of tones 
used in the jamming operation depends on the jammer-to-signal ratio. For the case that there are N jammers 
the power in each tone is  
 
 
 
 
 
 
J
J
N i
N
i 

/
,
, ...
   
 
 
1 2
 
 
                   (3.1-3) 
 
This multitone jammer is typically more effective in the jamming process than just one tone 
jammer, especially in light of the fact that as a countermeasure, a receiver could employ a narrowband filter 
that could remove a single tone jammer with only a small degradation in the received signal. 
 
The fifth jammer type is called a matched spectral jammer. It is characterized by the fact that the 
jammer is commonly a Gaussian random process with the jammer spectral density “matched” to the signal 
power spectral density. This jammer is difficult to remove because the power spectral density is the same as 
the signal. 
The sixth type of jammer that can occur by direct design or due to interference effects is a pulsed 
jammer. A pulsed noise jammer is a band-limited noise jammer signal that is pulsed on and off, normally in a 
periodic manner, with a duty factor of . That is, the jammer is on  fraction of the time and is off 1– 
fraction of the time. The corresponding one-sided jammer noise spectral density, when the jamming signal is 
on, is J/(W and is zero otherwise. Normally, the jammer signal spectral density, when in the on-mode, is set 
to be equal to W Hz, which is the spread bandwidth. If the duty factor is  (the jammer is on  fraction of the 
time), then the jammer voltage, during the time that the pulsed noise jammer is on, is 1/
 and is zero when 
it is off. It is assumed that in this type of jammer, for convenience of the analysis, the average power is fixed 
but the peak power is not; however, in practice the peak power will have limits also.  
In the analyses to follow, the peak power will not have a constraint, in order to simplify the 
calculations. In this analysis the action of the automatic gain control (AGC) will be ignored, even though it 
can have a significant effect on real systems. For example, in frequency-hopped systems if one hop is hit 
with interference the next hop may be partially affected due to the AGC response to the previous “hit.” 
However, in the interest of using reasonably simplified models, the effect of the AGC or any other loop, such 
as a bit synchronizer or phased locked loop, will not be considered here. 
 
A seventh type of jammer, not shown in Figure 3.1-1, is called the repeater jammer, or the follower 
jammer. A repeater jammer is a jammer that intercepts the signal, processes it (typically amplifying it), and 
then retransmits it toward the receiver at the same center frequency. In the case of a high chip rate direct 
sequence spread spectrum system, it is unlikely that the jammer can be close enough to receive, amplify, and 
retransmit the received signal within one code chip time. The jammer must be strong enough to capture the 
receiver. However, if the repeated jamming signal is sufficiently strong, it is possible to cause the receiver to 
lock on to an incorrect code phase of the jammer, then capture of the receiver is affected.  
Once capture of the receiver has been accomplished, a slow frequency change, for example, of the 
jammer can cause the receiver to lose lock and force it to reacquire. For frequency hopped systems the 
repeater jammer attempts to have the jammer signal arrive with a delay that is small compared to the hop 
time. If the data modulation is FSK or MFSK then a carrier frequency offset can capture the receiver. The 
higher the hop rate, the closer the jammer has to be to the receiver to be effective in this manner. If the delay 
of the repeater frequency-hopped jammer is more than one hop, it would not be effective in a communication 
mode. However, in frequency-hopping acquisition, it could possibly be effective if the signal was missed, but 
the jammer occurring after the signal, and being stronger, was detected. 
 
In addition to the seven intentional jammers described earlier there are three other types of 
interferences that the receiver has to tolerate. The first form of interference is due to other signals operating 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          125 
in the proximity of the desired signal. Many times in the crowded frequency spectrum most systems have to 
survive with some form of interference from other friendly signals that cause interference to the desired 
signal, whether it is a spread spectrum signal or not. There are international and national agreements as to 
what frequency band or bands a signal can operate in. And each new system must apply for approval in order 
not to cause significant degradation to already existing signals. 
The second form of interference is what is sometimes called CDMA noise, and this is the 
interference caused to the desired signal by the other code division signals (CDMA) sharing the same 
frequency band. Normally they are designed to not cause significant degradation to the other users in the 
same CDMA channel. These systems go to great lengths to maintain the individual signal levels, so as to 
provide minimum interference to the other signals in the system. 
A third type of interference to spread spectrum systems is multipath interference fading. Fading 
comes about from the fact that due to reflections there is more than one path between the transmitter and the 
receiver. These waves combine in the vector sense at the receiver antenna to produce a resultant signal that 
can vary widely in amplitude and phase, depending on the amplitude and phases of the individual component 
signals.  
When the channel has a constant gain and linear phase over a bandwidth that is at least as great as 
the signal bandwidth, then flat fading occurs. When the channel has a constant gain and linear phase over a 
bandwidth that is much less than the signal bandwidth, then frequency selective fading occurs. Both types of 
interference can cause considerable degradation to the bit error rate performance when compared to the non-
fading case. 
 
 
3.2 BIT ERROR RATE PERFORMANCE IN BROADBAND NOISE JAMMING  
Equation Section (Next) 
In this section barrage jamming (broadband noise jamming) will be considered for various spread spectrum 
modulation schemes.  
The following signal naming convention will be followed. The spread spectrum modulation type 
will be given first, followed by a forward slash, and then the data modulation type. For example, a direct 
sequence spread spectrum (SS) modulation used with binary phase shift keying data modulation would be 
denoted by DS/BPSK. The coherent direct sequence modulation DS can be (a) BPSK, (b) QPSK, (c) 
OQPSK, or (d) MSK. In what follows in this chapter DS will denote (a), (b), or (c). MSK will be denoted 
explicitly, by DS(MSK). Noncoherent frequency hopping can be either (a) slow frequency hopping, which 
will have an S prior to the FH designation (SFH) or (b) fast frequency hopping, which will have an F in front 
of FH (FFH). Hybrid modulations will be dashed between the SS modulation, with DS coming first. As an 
example, consider the SS modulation DS-SFH/MFSK. This would indicate a direct sequence using either (a), 
(b), or (c) SS modulation with a slow frequency-hopped SS modulation, used in conjunction with multiple 
frequency shift keying data modulation. The data modulation will be denoted by PSK to mean BPSK, QPSK, 
or OQPSK. 
 
 
3.2.1 DS/PSK in Broadband Noise Jamming 
 
In this section direct sequence (DS) phase modulation spread spectrum systems will be considered for BPSK, 
QPSK or OQPSK chip modulation and BPSK, QPSK, and OQPSK data modulation. Consider a phase 
modulated, direct sequence spread spectrum modulation system which, when received at the receiver, is of 
the form 
 
              
    y t
P
t
t
t
n t
n
t
d
PN
J
( )
cos
( )
( )
( )
( )






2
0




                     (3.2-1) 
 
where P is the received signal power, 0 is the carrier angular frequency in radians/second, d(t) is the binary 
data phase modulation in radians, PN(t) is the chip phase modulation (two or four phase) in radians, and  is 
the carrier phase in radians, which is assumed to be unknown but constant with time. The terms n(t) and nJ(t) 
are the thermal noise and the jammer noise processes, both which are assumed to be limited to W Hz 

 126                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
bandwidth, centered at the carrier frequency f0 (Hz) (
0
/(2 )
o
f



), as shown in Figure 3.2-1(a). The figure 
illustrates the sum of the noise and jammer spectral densiti
 with the simplified receiver model. The 
total two-sided noise spectral density level is represented by (
/ )
'
N0 2 = (N0J + N0)/2 which includes the 
jammer and thermal noise power spectral densities, respectively.  
 
The receiver model is shown in Figure 3.2-1(b). The sign
es along
al is received at the antenna and multiplied 
y a loca
                          
                           
b
l reference frequency that has the spreading modulation on it and is offset from the carrier by the IF 
frequency. After the despreading operation the data is left on the signal, which is denoted by u(t), but is now 
centered at the IF frequency. There is also a sum term, which will be filtered out by the bandpass filter 
following u(t). The bandpass filter removes the sum frequency and leaves just the IF frequency component, 
which is called v(t). It is assumed that the bandpass filter negligibly affects the data. Finally the data is 
coherently detected and demodulated, with the output being the data estimate. The reference signal, assuming 
that the receiver code is synchronized with the received code, is 
 
  
r t
t
t
IF
PN
( )
cos (
)
( )



2
0



                            (3.2-2) 
 
f
S(f)
f0
(a) Jammer and thermal noise
'
0
0
0
2
2
J
N
N
N


W
W/2
(b) Simplified receiver model
r t
t
t
IF
PN
( )
cos (
)
( )



2
0



BPF
(IF)
Coherent
Data
Demodulator
Data Estimate
u(t)
v(t)
BPF
BW=W Hz
0
f
S(f)
f0
(a) Jammer and thermal noise
'
0
0
0
2
2
J
N
N
N


W
W/2
(b) Simplified receiver model
r t
t
t
IF
PN
( )
cos (
)
( )



2
0



BPF
(IF)
BPF
(IF)
Coherent
Data
Demodulator
Data Estimate
u(t)
v(t)
BPF
BW=W Hz
0
 
Figure 3.2-1 (a, b) Jammer and thermal noise interference and the receiver model. 
After multiplying incoming signal by the reference signal, one obtains  
                  
 
 
 





0
0
( )
2 cos
( )
( )
        2(
( )
( ))cos (
)
(
2
IF
d
PN

J
IF
PN
IF
u t
P
t
t
t
n t
n t
t
t
O



















           
(3.2-3) 
 
here O(x) denotes spectral terms that are centered at frequency x. The last term in  (3.2-3) will be neglected 
                              
                    
w
from now on since the bandpass filter, which follows the despreader, will remove it. Since the reference 
signal and noise terms are statistically independent, the reference signal times the jammer plus thermal noise 
term can be written as a convolution of the spread reference signal power spectral density and the band-
limited jammer plus thermal noise spectral density. For BPSK, QPSK, or OQPSK chip spreading, the two-
sided spread reference signal spectral density of  
 
  
2
0
cos (
)
( )





IF
PN
t
t
                               (3.2-4) 
 given by  
 
is

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          127 
 




2
2
0
S ( )
sinc
(
)
sinc
(
)
r
c
IF
c
c
IF
c
          
0
f
T
f
f
f
T
T
f
f
f






T       
(3.2-5) 
ith Tc being the chip duration of the three types of chip modulations. 
igure 3.2-1 for the positive frequency 
and ther
                             
                
 
w
The jammer and thermal noise spectral density are shown in F
e is the corresponding term at –f0. The interference term, which is the second term in (3.2-3), is the 
product of the spread signal and the noise plus jammer. The power spectral density of the product is given by 
the convolution of the two continuous spectral densities Sr(f) (the reference signal spectral density) and SJ(f) 
(the thermal noise plus jammer noise spectral density). The result is given by 
 
S ( )
S (
')S (
')
'
rJ
r
J
f
f
f
f
df





                            
(3.2-6) 
herefore the power spectral density of the product of the spread reference signal and the jammer plus 
                 
 
T
thermal noise, which has a two-sided spectral density of N0 2
' /
, is given by 
 
 






'
/2
2
0
0
/2
2
'
/2
2
0
/2
2
S ( )
{sinc (
'
)
2
                                  
sinc (
'
)
}
'
          
{sinc (
'
)
2
                                
sinc (
o
o
o
o
f
W
c
rJ
IF
c
f
W
o
IF
c
f
W
c
o
IF
c
f
W
N T
f
f
f
f
f
T
f
f
f
f
T
df
N T
f
f
f
f
T
f
























'
)
}
o
IF
c
'
f
f
f
T
df


            
(3.2-7) 
 
 (3.2-7) the second and third terms are essentially zero, since those integrands are centered at around 2f0–fIF 
                   
                      
In
and –2f0+fIF , respectively. Thus we obtain 
 




'
/2
2
0
0
/2
'
/2
2
0
/2
S ( )
sinc (
'
)
'
2
          
sinc (
'
)
'
2
o
o
o
o
f
W
c
rJ
IF
c
f
W
f
W
c
o
IF
c
f
W
N T
f
f
f
f
f
T df
N T
f
f
f
f
T df
















                (3.2-8) 
 
etting
 and 
 x
f
f
f
f IF




'
0
y
f
f
f
f IF




'
0
L
 in the two integrals of (3.2-8) leads to 
    
 




'
'
/2
/2
2
2
0
0
/2
/2
S ( )
sinc
(
)
sinc
(
)
2
2
IF
IF
IF
IF
f W
f
f W
f
c
c
rJ
c
c
f W
f
f W
f
N T
N T
f
xT
dx
yT
dy













   

    
(3.2-9) 
terchanging the upper and lower limits produces 
  
 
In
 




'
'
/2
/2
2
2
0
0
/2
/2
S ( )
sinc
sinc
2
2
IF
IF
IF
IF
f W
f
f W
f
c
c
rJ
c
c
f W
f
f W
f
N T
N T
f
xT dx
yT dy












   
(3.2-10) 
 
 follows from (3.2-10) that the two-sided power spectral density at fIF and –fIF is given by  
                               
              
It
 




'
/ 2
2
0
/2
'
/2
2
0
/ 2
S (
)
sinc
2
S (
)
sinc
2
W
c
rJ
IF
c
W
W
c
rJ
IF
c
W
N T
f
xT dx
N T
f
yT dy







                   
(3.2-11) 

 128                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
s the
e spectral density at both fIF and 
                
Letting z = xTc produce
 two-sided nois
–fIF  
 

2
'
'
 
/ 2
0
0
2
 
/ 2
sin
(
)
(
)
2
2
c
c
WT
rJ
IF
rJ
IF
WT
z
N
N
S
f
S
f
dz
z










             
(3.2-12) 
ading operation. 
e integral produces the values of indicated in Table 3.2-1.  
Table 3.2-1 Parameter  Versus the WTc for BPSK, QPSK, and OQPSK Chip Modulation 
 
here  is the reduction in the two-sided noise spectral density from N ' /
due to the despre
w
0 2
Evaluating th
 
 
WTc
0.5
1
2
4
6
8
10
(WTc)
0.467
0.773
0.903
0.95
0.9
0.974
0.979
66
WTc
WTc
0.5
1
2
4
6
8
10
(WTc)
0.467
0.773
0.903
0.95
0.9
0.974
0.979
66
 
This table is equi
when WTc 
is 2, which corres
d when WTc is 4, 
which corresponds to the second null to second null bandwidth, then  is 0.95 (L = – 0.22 dB). In the limit, as 
W becomes very large,  equals 1 (L = 0 dB). It should be noted that the effective two-sided noise spectral 
density has been determined at the IF; however, the spectral density is very flat around the IF, a
refore it 
is assum
 
valent to the curve in Figure 1.4-10 in Chapter 1, with B =W. Note that 
ponds to the null to null bandwidth, then  is 0.903 (L = – 0.44 dB), an
nd the
ed to be the same value over the modulation bandwidth. Now the signal into the BPSK or QPSK 
data demodulator, from (3.2-6), is given by  
 
                         
v t
P
t
t
n t
IF
d
( )
cos(
( )
)
( )
'




2
1



                      
(3.2-13) 
 
in which n t
1
' ( )  is modeled as a band-limited white jammer plus thermal noise spectral density having two 
sided sp
density N ’/2, where  is evaluated in Ta
0
ble 3.2-1. It follows that the bit error rate for BPSK 
lation with BPSK or QPSK spread spectrum modulat
ectral 
or QPSK data modu
ion is given by  
 
PE
Q
E
N
N
b
b
J


                                    
               
L
NM
QP
2
0
0
(
)
                             
(3.2-14) 
 
O
here the denominator includes the thermal and jammer noise spectral densities. The function Q(x) is 
                    
w
defined by 
 
Q x
e
dy
x
y
( )
/



z
1
2
2 2

 
                                     
                               
(3.2-15) 
.2-14) can be rewritten as  
      
 
Equation (3
 
PE
Q
N R
P
J
P
R
W
b
b
b


L
N
MMM
O
Q
PPP
2
0


 
                              
                             (3.2-16) 
tted in Figu
-2 for various values of Eb/N0 or 
mer Eb/N0J) 
 
                                     
                      
 
Equation (3.2-16) is plo
re 3.2
 f
 = 1, as a function of the power-
bandwidth ratio (or jam
of  
0
(
/
)
b
b
b
J
PR
E
P W
J R
J W
N


  
                             
(3.2-17) 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          129 
which is the common measure used in comparing spread spectrum systems with jamming, in terms of the 
signal to jammer ratio times the jammer bandwidth to data rate ratio. Note that the DS modulation could be 
ither BPSK or QPSK. To allow for  < 1, add 10×log() to the abscissa value to obtain the BER 
on
R plots. 
    
 gain.  
 3.2-2 it is noted that the curves flatten out as the jam er Eb/N0J ratio is increased, since 
mal noise becomes the limiting factor. Thus, for the sa
 chip rate (1/Tc), the performance 
e
performance for the case  < 1 
 the following BE
 
Example 1 Assume a DS/PSK modulation system, in which broadband noise jamming jams the link. Let the 
jamming bandwidth be 20 MHz, the data rate be 7,943 bps, N0 = –202 dBW/Hz, and the received signal 
power be given by P = – 150 dBW. The question is what is the required jamming power needed to drive the 
detected bit error rate up to 10–2? First compute the value of Eb/N0. It follows that 
 
                   
 
0
/
150
202 10log(7,943)
13 dB
b
E
N 



 
 
Now compute the value of (PW)/(JRb) needed for the jammer to force the bit error rate to 10–2. From Figure 
3.2-2, it follows that this value must be 5.5 dB. Solving for J from PW/(JRb) produces 
 
                    
150
39
73
5.5
121.5 dBW
J






  
 
Therefore it follows that the required value of received jammer power needed to impose a bit error rate of  
10-2 is –121.5 dBW. Of course the actual transmitted jammer power depends on the link losses, including the 
ange and the antenna gains of the jammer transmitter and the receiver (victim) antenna
r
In Figure
m
eventually the ther
me
for BPSK, QPSK, and OQPSK, for BPSK data modulation is the same. 
 
0
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
1 10 9
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
1
0.01
0.1
15 dB
13 dB
11 dB
9 dB
7 dB
Eb/N0 =5dB
PEb
 (
)
b
P W
dB
J R
1
0.01
0.1
0
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
1 10 9
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
15 dB
13 dB
11 dB
9 dB
7 dB
Eb/N0 =5dB
PEb
 (
)
b
P W
dB
J R
15 dB
13 dB
11 dB
9 dB
7 dB
Eb/N0 =5dB
PEb
 (
)
b
P W
dB
J R
 
 
Figure 3.2-2 BER for DS/PSK, SFH/PSK, and DS-SFH/PSK with barrage jamming. 
 
 
3.2.2 SFH/DPSK in Broadband Noise Jamming 
 
Consider a slow frequency hopped (SFH) spread spectrum system with binary differential phase shift keyed 
(a) and a block diagram of the optimum 
PSK demodulator used in part (a) is shown in part (b). The received signal is dehopped and bandpass 
dpass filter (bandwidth B) is assumed sufficiently wide to 
data modulation. Figure 3.2-3 illustrates the receiver model in part 
D
filtered to remove the sum frequency term (the ban

 130                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
pass all the hopping frequencies) and fed to the DPSK demodulator. The optimum demodulator heterodynes 
the signal down to baseband components and integrates them over a bit time (symbol time if it is coded) and 
then processes the integrated values, which are hard limited to produce the data estimate.  
The signal can be written from Chapter 1, Section 1.5.3, as 
 
    
 


0
( )
2
(
)
(
)cos
2
 
h
d
T
h
j
T
d
k
k
k
j
x t
A
p
t
kT
d p
t
jT
f
t














    
(3.2-18) 
 
in which A is the rms amplitude, Th is the hop duration, and
( )
h
Tp
t  is a unit amplitude pulse that starts at time 
d lasts for Th seconds and is zero elsewhere. Likewi
 is a random variable rep
nting t
 
differential data and 
0 an
rese
he random
se dj
( )
d
Tp
t
value of ze
 is a pulse of duration Td
ue of one when it is on (for Td 
conds) and the 
ro when it is off. The hoppi
quencies are f , and 
 seconds and takes the val
ng fre
k
0

se
 is the carrier angular 
frequency, and 
k
 is the random phase for each hop that is c
t over each hop. Since, during one hop, the 
binary DPSK signal is the same as the unhopped binary DPSK, the performance is well known [1–3] for a 
white Gaussian noise channel. 
 
onstan
y(t)
Dehopping
synthesizer
Hopping
code
Bandpass
filter
(BW=B)
Binary
DPSK
demodulator
Estimated data
output
(a) SFH/DPSK receiver
(b) Optimum DPSK demodulator
b g
0
TB
dt
z
Timing
I(j)
Timing
Q(j)
   I j I j
Q j Q j
( ) (
)
( ) (
)



1
1
Estimated data
output
2
0
cos 

t 
b
g
2
0
sin 

t 
b
g
y(t)
Hard decision
b g
0
TB
dt
z
y(t)
(a) SFH/DPSK receiver
Bandpass
filter
(BW=B)
Binary
DPSK
demodulator
Estimated data
output
Dehopping
synthesizer
Hopping
code
(b) Optimum DPSK demodulator
b g
0
TB
dt
z
Timing
I(j)
Timing
Q(j)
   I j I j
Q j Q j
( ) (
)
( ) (
)



1
1
2
0
cos 

t 
b
g
Estimated data
output
2
0
sin 

t 
b
g
y(t)
Hard decision
b g
0
TB
dt
z
 
 
Figure 3.2-3 (a, b) Model for a SFH/DPSK receiver. 
 
 
The bit error probability result is given by 
 
         
0
1 exp
2
b
b
E
PE
N








                                      
       
                                 
(3.2-19) 
When barrage noise is present, the thermal noise spectral density N0 is replaced in (3.2-19) with the 
ty
 = 
ich includes both th
se. Follo
1
 w
 divided by the sum
an
 
 the final form for the BER 
 
effective noise spectral densi
N0 + N0J, wh
e thermal and jammer noi
wing 
the argument that led to (3.2-
hich Eb was
 
' = N0 + N0J, (3.2-19) c
 be written
 
'
0
N
6), in
0
N  
in
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          131 
0
1
1
exp
2
b
b
b
PE
N R
R
J
P
P W






                                  
                







                            
(3.2-20) 
This result only applies to the optimal DPSK detector. The suboptimal detector, in which the 
dehopped signal is bandpass filtered and then the product of itself and a one bit delayed version is multiplied 
gether and detected, produces a result that is degraded from (3.2-19) as discussed in Park [4]. 
 
to
The processing gain for frequency-hopped systems was defined in Section 1.5 to be  
 
                                                                         
2
b
b
W
R
W
W
PG 

                                (3.2-21) 
 
r large jammer l
 
dependent on negative product of the signal to jammer ratio and the twice the processing gain. Notice that the 
fect of the processing gain is to reduce the effect of the jammer on the BER performance. This results in 
.2-20) 
Thus it is seen for SFH/DPSK SS modulation fo
evels that the BER is exponentially
ef
(3
are for the optimal DPSK detector jammed by barrage noise. Figure 3.2-4 illustrates the bit error rate 
performance of the SFH/DPSK SS modulation scheme under consideration for various values of Eb/N0, for 
the optimum DPSK demodulator. 
 
0
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
1 10 9
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
7 dB
9 dB
11 dB
13 dB
15 dB
 (
)
b
P W
dB
J R
PEb
Eb/N0=5 dB
1
0
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
1 10 9
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
7 dB
9 dB
11 dB
13 dB
15 dB
 (
)
b
P W
dB
J R
PEb
Eb/N0=5 dB
 
 
Figure 3.2-4 BER for SFH/DPSK and DS-SFH/DPSK with barrage jamming. 
 
 
It is seen by comparing Figure 3.2-2 with Figure 3.2
ance of SFH/DPSK is not quite as 
hase information is not utilized in DPSK 
emodulation. 
0–7. The following conditions apply. The 
-4 that the perform
good as DS/PSK, as would be expected, since carrier p
d
 
Example 2 Consider the following spread spectrum link with SFH/DPSK modulation suffering barrage 
jamming. Suppose it is necessary to achieve a bit error rate of 10–7. Determine what data rate will provide a 
it error rate of 1
0
/
35 dB
H
P N
z


, 
/
20 d
J P 
b
B , and the 
jamming bandwidth is 300 kHz wide. Note that the following equations can be written for the signal-to-noise 
ratio and the effective signal-to-jamming ratio 

 132                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
0
/
(dB)
35 10log(
)
b
b
E
N
R


 
and 
(dB)
20 10log(300,000) 10log(
)
b
b
PW
R
JR



 
          
 
By trial and error
termined that about Rb = 100 bits per second yields a BER of 10–7. Thus, under these 
jamming conditions and with this modulation type, the data rate must be restricted to 100 bps in order to 
achieve the low desired BER. 
nother modulation scheme that has seen use in slow frequency hopped systems is SFH/PSK, in which a 
odulated on the hopped carrier. BPSK modulation, in 
 used on the crosslink of GPS, for example. Figure 3.2-5 
 it is de
 
 
3.2.3 SFH/PSK in Broadband Noise Jamming  
 
A
frequency-hopped SS signal has PSK data m
onjunction with frequency hopping, is currently
c
illustrates the SFH/PSK receiver and the demodulator. The receiver shown in either figure first dehops the 
hopped signal and then bandpass filters the signal to remove the sum frequency. The bandwidth of the 
bandpass filter is assumed large enough to pass the hopping signal. This signal, denoted as y(t), is fed into a 
BPSK, QPSK, or OQPSK demodulator to produce the estimated data. Since the phase after each hop is 
essentially random, carrier synchronization must be accomplished for each hop. Bit timing must also be 
maintained from hop to hop.  
 
There are two basic approaches to obtain phase and time coherence with the received waveform. 
The first method is illustrated in Figure 3.2-5(a). The first portion of the hop, which contains only time and 
phase synchronization bits, is used to acquire frequency and carrier phase and bit timing. The remaining bits 
f the ho
o
p contain data. Phase and time are tracked through the rest of the hop. Since carrier phase changes 
randomly from hop to hop it must be estimated for each hop. Symbol timing is usually maintained from hop 
to hop since normally time is not affected significantly from hop to hop for moderate bit rates. This approach 
is illustrated in Figure 3.2-5(a). This is an example of an active tracking scheme. The current GPS cross-link 
utilizes this approach. 
 
(a) SFH/PSK with an active tracking receiver
(b) SFH/PSK with a two-pass receiver
Estimated
data
output
Matched
filter
Timing
Hop time
delay
Phase and
timing
estimates
Phase
BPSK or
QPSK
demodulator
Estimated data
output
Dehopping
synthesizer
Hopping
code
Bandpass
filter
(BW=B)
y(t)
An
active loop 
Bit
synch.
Matched
filter
Dehopping
synthesizer
Hopping
code
Bandpass
filter
(BW=B)
y(t)
(a) SFH/PSK with an active tracking receiver
(b) SFH/PSK with a two-pass receiver
Estimated
data
output
Matched
filter
Timing
Hop time
delay
Phase and
timing
estimates
Phase
BPSK or
QPSK
demodulator
Estimated data
output
Dehopping
synthesizer
Hopping
code
Bandpass
filter
(BW=B)
y(t)
An
active loop 
Bit
synch.
Matched
filter
Dehopping
synthesizer
Hopping
code
Bandpass
filter
(BW=B)
y(t)
 
 
Figure 3.2-5 (a, b) SFH/PSK spread spectrum receiver model. 
 
 
The second method shown in Figure 3.2-5(b) s to use one pass through the hop to estimate carrier 
sync word or words, and then using a one-hop delayed 
 i
phase and frequency and symbol timing from a 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          133 
version of the signal with the just-obtained carrier phase estimate and timing, and demodulate the signal and 
rovide 
           
p
the symbol timing for the symbol matched filter. The delay is needed since this is a two-pass scheme 
in which the first pass is used for phase and timing estimation, and the second pass is used for the 
demodulation.  
Assuming perfect timing and phase estimation, the BER for coherent BPSK, QPSK, and OQPSK 
modulation is given by  
 
PE
Q
E
b
b

No
L
NM
OP
2
                                      
(3.2-22) 
                              
             
Q
 
eplaced 
 N0 + N0J in the fo
 
For broadband jamming, N0 is r
with N0
' =
rm  
E
N
                                                             
N R
P
J
P
R
b
b
0
0
' 

   
W
b
1
                                      (3.2-23) 
se are present. Note tha
assumed that the bandwidth W is large enough to pass both the signal modulation plus the hopping range. 
ence using  (3.2-23) for the effective signal to noise ratio in (3.2-22) produces the following expression for 
 
for the case that both thermal and jammer noi
t  = 1 in this case (3.2-16) since it is 
H
the bit error rate for SFH/PSK, assuming perfect phase and timing when thermal noise 
 
                                 
                           PE
Q
N R
JR
b 
P
PW
b
b

L
N
MM
OPP
2
                               (3.2-24) 
M
QP
0
re p
the receiver. In (3.2-24) N0
 
spectral density, Rb is the bit rate in bits per second, J is the received jammer power in watts, P is the 
ceived signal power in watts, and W is the hopping bandwidth in Hz, which is assumed to be sufficiently 
 this section slow frequency (SFH) spread spectrum modulation, in conjunction with multiple frequency 
, will be considered with thermal noise and wideband 
er is spread over the hopping bandwidth W Hz. Slow 
 
and a wideband jammer a
resent at the input of 
 is the one-sided thermal noise
re
wide to pass the hopped modulated signal. Figure 3.2-2 illustrates the results for SFH/PSK and also DS/PSK 
when both thermal and broadband jammer noise are present at the input of the receiver. 
 
 
3.2.4 SFH/MFSK in Broadband Noise Jamming 
 
In
shift keyed information modulation (SFH/MFSK)
jamming noise. It will be assumed that the jamm
frequency hopping will be considered in this section, and fast frequency hopping will be considered in the 
next section. Recall from Chapter 1 slow frequency hopping occurs when there are two or more symbols per 
frequency hop time. It will be assumed that orthogonal signaling is used for the MFSK frequency 
modulation; this means that the frequencies of the data modulation are spaced 1/Td Hz apart, or integer 
multiples of 1/Td Hz apart, with Td being the data symbol duration.  
 
The received SFH/MFSK signal, with slow hopping, is represented as 
 
        
    y t
P
p
t
iT
t
t
( )
(
)cos
( )






2


n t
n
t
J
( )
( )



      
(3.2-25) 
T
h
i
d
i
i
h

 

 134                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
where 
ed s
0 and ends
P is the receiv
ignal power, 
is a unit amplitude rectangular pulse that starts at t = 
 
at t = Th seconds, corresponding to the hop time duration Th seconds, i is one of the hopping frequencies, 
hich changes every Th seconds, taken from the set of all the hopping frequencies, which covers the spread 
s not 
p
t
Th ( )
w
bandwidth W. This representation doe
explicitly illustrate the MFSK frequency changes in contrast to 
(3.2-18). It is an alternative expression, however. The phase modulation d(t) represents the MFSK data 
modulation, expressed as a phase process that changes every Td seconds to one of M data modulation 
frequencies. It is assumed that Th/Td is an integer >1. The random phase i represents the carrier phase over 
each hop, which changes randomly every hop time to a value between zero and 2 radians. The noise process 
n(t) is modeled as a bandlimited white Gaussian noise process, and nJ(t) is the barrage jammer noise process, 
which is also modeled as a band-limited white Gaussian noise process; both processes occupy W Hz 
bandwidth. Consequently, at any given time, the hopping frequency is assumed to be the sum of an unhopped 
carrier frequency, plus the particular hop frequency occurring at this particular time, plus the particular data 
modulation frequency occurring at this time.  
 
The receiver and the demodulator are shown in Figure 3.2-6. This illustrates the dehopping 
synthesizer along with a bandpass filter, which has bandwidth B Hz and is sufficiently wide to pass all the 
hopped band and eliminate the sum frequency term, leaving only the dehopped MFSK signal. The MFSK 
signal is fed into the MFSK demodulator, which is illustrated in the part (b) of the figure. The demodulator 
shown in Figure 3.2-6(b) is based on an I-Q baseband approach to demodulation, although the same function 
can be accomplished at IF and yields essentially identical performance [3]. The output of the demodulator is 
one of the M possible choices, or log2(M) bits. For example, if M = 8, then each data tone carries 3 bits of 
information. 
 
(a) SFH/MFSK receiver
(b) SFH/MFSK demodulator
2 cos 

M t 
b
g
Dehopping
synthesizer
Hopping
code
Bandpass
filter
(BW=B)
MFSK
demodulator
Estimated Data
Output
x(t)

0
.
d
T
dt

.bg
2
+
2
1
sin 

t 
b
g
2
1
cos 

t 
b
g
+



Select
maximum
input


Symbol
estimate
(log2(M) bits)
sr(t)
y(t)
2 sin 

M t 
b
g

0
.
d
T
dt


0
.
d
T
dt


0
.
d
T
dt

.bg
2
.bg
2
.bg
2
(b) SFH/MFSK demodulator
2 cos 

M t 
b
g
(a) SFH/MFSK receiver
Bandpass
filter
(BW=B)
x(t)
MFSK
demodulator
Estimated Data
Output
Dehopping
synthesizer
Hopping
code
.bg
2

0
.
d
T
dt

+
2
1
sin 

t 
b
g
2
1
cos 

t 
b
g
+



Select
maximum
input


Symbol
estimate
(log2(M) bits)
sr(t)
y(t)
2 sin 

M t 
b
g

0
.
d
T
dt


0
.
d
T
dt


0
.
d
T
dt

.bg
2
.bg
2
.bg
2
 
 
Figure 3.2-6 (a, b) Model of the SFH/MFSK spread spectrum receiver with slow hopping. 
 
 
, is modeled as 
                         
 
The reference signal sr(t), which provides the dehopping function
 
  
 s t
p
t
jT
t
r
T
h
j
IF
j
j
h

( )
(
)cos (
)






2



                                           (3.2-26) 
here IF is the intermediate frequency and j is the random phase (within 0 to 2 radians) that occurs on 
 of the receiver synthesizer. The result of
filter removes the sum frequency term, yields the 
 
w
every frequency hop
 the synchronized dehopping, after the 
broadband bandpass 
following signal in the dehopped band 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          135 
x t
P
p
t
iT
t
t
T
i
h
IF
i
i
d
h
( )
(
)cos
(
)
( )






R
U




2




          
(3.2-27) 
             
n t
n
t
p
t
iT
t
J
T
h
i
IF
i
i
h
( ( )
( ))
(
)cos (
)




ST
VW

2



he first term is the dehopped data modulation located at the IF with a
 a
 
 
T
 random phase t each hop
(
)


i
i

results in the jam
e jamm
N0
'  = N0
 and the second term is the thermal and jammer noise multiplied by the reference signal, which 
mer and thermal noise being located at the IF. Over each modulation frequency hop time, 
th
er plus thermal noise is still white with effective one-sided noise power spectral density of 
 + N0J W/Hz. In other words, the band-limited signal and noise during one MFSK modulation tone 
time (after removing the sum frequency terms) is of the form 
 
                     
         x t
P
t
t
n t
n
t
IF
d
J
( )
cos
( )
'( )
( )
'





2



                
(3.2-28) 
 
here  is the phase difference of  and  at that hop, whic
w
h is assumed to be a uniform random variable 
d the prim
he two noise terms denote the frequency shift
he u
hurs and 
] have solved the average MFSK tone symbol 
 
xpression1 
over 0 to 2, an
es on t
ed versions of t
nprimed 
noise terms. Art
Dym [5
error rate, with the resulting
e
 
              
               PE
M
E
N
M
n
E
n
nN
s
s
n
S
n
M

L
NM
O
QP FHG IKJ 

L
NM
O
QP

1
2
1
2
2
0
0
2
exp
exp
(
)
'
'
b g
             
(3.2-29) 
 
where Es is the tone (symbol) ener
ed earlier, 
N0 is th
effective no
mmer spect
log2(M) bits are encoded 
gy, orthogonal tone spacing is assumed as mention
and 
e 
ise plus ja
ral density. Viterbi [6] has shown that when k = 
M orthogonal signals, the mean number of bits in error when a k-bit coded word has been detected 
correctly is given by 
'  
into 
in
 
                                  
                    
1
1
2
k
k
i
k
i i
k
kM





1
2
1
2(
1)
k
k
i
k
M
i









ror rate is related to the mean symbol error rate by
 
                     
                            

                           
(3.2-30) 
 
Therefore, the mean bit er
 
PE
k
k
PE
M
M
PE
b
k
k
s
s
FHG IKJ




1
2
2
1
2
1
1
b
g
  
                     (3.2-31) 
 bit e
sed in terms of M and Eb 
 as 
         
 
/ N0
'
Consequently, the
rror rate can be expres
 
  
 PE
M
N
n
nN
b
n

kE
M
kE
n
b
M
n
b

L
NM
OPQ
FH K
G IJ 

L
NM
O
QP

1
1
2
0
b g
exp
exp
(
)
'
         
(3.2-32) 
where Es = kEb has been used in (3.2-32), which is our final result for SFH/MFSK with slow hopping and 
barrage jamming. It should be noted that in the case of BFSK, (M = 2), (3.2-32) becomes 
                                                          

2
1
2
2
0
2
b
g
'
 
 
1 The authors use a two-sided noise spectral density of N0 W/Hz, whereas we are using a two-sided noise spectral density of N0/2. The 
conversion to make the results consistent with our notation has been made here. 

 136                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
PE
E
N
b
b

L
NM
O
QP
1
2
2
                                           
          
0
 
ll that is left to do now is relate the effective E / N '  to the jamming and thermal no
exp
'                             
(3.2-33) 
b 
ise components. As 
ore (see (3.2-24)) one can write 
                                             
            
A
bef
0
 
'
0
0
1
b
b
b
E
N R
R
J
N
P
P W
 
Since thermal noise is usually s


                          
(3.2-34) 
mall compared to the jamming noise, it will be neglected in the 
. Here the effective
 = PW/(JR
 
 result 
values of 
n from the plot
 
bit error rate decreases as the number of orthogonal signals increases.  
graph of bit error rate versus the effective Eb/ N
 Eb/
'
0
N  is X where X
b). Figure
3.2-7 illustrates the final bit error rate
for five different 
M. As can be see
s, the
'
0
 
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
P
J
W
R
dB
 (
)
PEb
M=2
M=4
M=8
M=16
M=32
0.01
0.1
1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
1 10 6
1 10 5
1 10 4
1 10 3
P
J
W
R
dB
 (
)
PEb
M=2
M=4
M=8
M=16
M=32
 
 
Figure 3.2-7 Bit error rate for SFH/MFSK and DS-SFH/MFSK for various values of M. 
 
 
Example 3 (a) Consider a link in which slow frequency hop with BFSK (SFH/BFSK) modulation will be 
used. To achieve a probability of error of 10–5, what effective bit signal-to-noise ratio is needed? (b) If 
thermal noise is neglected and the received broadband ammer of bandwidth 1 MHz has a received power of 
kbps is needed, what is the required 
ignal power at the receiver input? Consider part (a) of the question first. From (3.2-33) based on numerical 
r reading Figure 3.2-7), one finds that 13.352 dB provides a bit error rate of 10–5. With regard to 
 
 j
–120 dBW in the sidelobes of the receiver antenna, and a bit rate of 1 
s
evaluation (o
part (b) (3.2-34) yields  
 
6
13.352
dBW
10log(10 ) 120 10*log(1000)
P




 
 
Solving for P dBW, one obtains the value –136.65 dBW as the required signal power at the antenna output, 
neglecting the thermal noise. 
 
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          137 
3.2.5 FFH/BFSK in Broadband Noise Jamming 
y hopping (FFH) with binary frequency shift keying (FFH/BFSK) will be 
onsidered, with barrage jamming. The receiver is illustrated in Figure 3.2-8.  
As indicated in Chapter 1, fast frequency hopping occurs when the hop rate is greater than or equal 
 the symbol rate. It will be assumed that there are L chips (or subintervals) per FSK tone. The receiver 
output for both tone frequencies, adds the square of the 
atched filter output to the square of the next chip’s matched filter output, and continues for each of the M 
ian noise. The bit error rate for 
the FFH
 
In this section fast frequenc
c
to
forms an estimate of the first chip matched filter 
m
tone frequencies until all L of the chips have been detected for both tone frequencies.  
Proakis [2] has analyzed the FFH/BFSK case (M = 2) in white Gauss
/BFSK case is given by  
 
(a) FH/MFSK receiver
Dehopping
Synthesizer
Hopping
Code
(a) FH/MFSK receiver
Bandpass
filter
MFSK
demodulator
Estimated data
output
x(t)
(b) FH/MFSK demodulator
.
(
) bgdt
n
T
nT
c
c
z
1
.bg
2
2
1
sin 

t 
b
g
2
1
cos 

t 
b
g
2 cos 

M t 
b
g



+
+
Select
maximum
input


Symbol
estimate
2 sin 

M t 
b
g
sr(t)
y(t)
b g
n
L

1

.
(
) bgdt
n
T
nT
c
c
z
1
.
(
) bgdt
n
T
nT
c
c
z
1
.
(
) bgdt
n
T
nT
c
c
z
1
.bg
2
.bg
2
.bg
2
b g
n
L

1
b g
n
L

1
b g
n
L

1
Dehopping
Synthesizer
Hopping
Code
x(t)
y(t)
MFSK
demodulator
Estimated data
Bandpass
filter
output
sr(t)
(b) FH/MFSK demodulator
.
(
) bgdt
n
T
nT
c
c
z
1
.bg
2
2
1
sin 

t 
b
g
2
1
cos 

t 
b
g
2 cos 

M t 
b
g



+
+
Select
maximum
input


Symbol
estimate
2 sin 

M t 
b
g
b g
n
L

1

.
(
) bgdt
n
T
nT
c
c
z
1
.
(
) bgdt
n
T
nT
c
c
z
1
.
(
) bgdt
n
T
nT
c
c
z
1
.bg
2
.bg
2
.bg
2
b g
n
L

1
b g
n
L

1
b g
n
L

1
 
 
Figure 3.2-8 Model of the FFH/MFSK spread spectrum receiver. 
 
 
                             
PE
e
K
E
N
b
L
E
N
i
i
L
b
i
b

FHG
IKJ





1
2
2
2
1
2
0
1
0
0
'
'
                       
(3.2
5) 
 
whe
he bit SNR is given by  
 
      
-3
re t
 E
N
N R
P
J
P
R
W
L E
N
b
b
b
c
0
0
0
1
'
'



 
                              
                   
(3.2-36) 
 
n which E
N
/
'  is the effectiv
i
b
0
e bit SNR, 
 is the effective chip SNR, and L times the effective chip 
. In (3.2-3
, Ki is defined by 
                                        
E
N
c /
'
0
SNR is equal to the bit SNR
5)
 
 K
i
L
j
j H
K
0
    
 
i
L
i


FG
IJ


1
2
1
1
( )!
                          
(3.2-37) 
ote that in the case L = 1, PEb reverts to the simple expression found in (3.2-33) 
N

 138                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
PE
E
N
b
b

L
NM
O
QP
1
2
2
0
exp
'
                                          
  
                                
(3.2-38) 
ore robust when jamming 
ccurs.  
3.2.6 Hybrid DS-SFH SS Modulation in Broadband Noise Jamming 
 to just frequency hopping. It is true that larger bandwidths may be easier to achieve when a hybrid 
cheme is used, but otherwise the performance with barrage jamming is about the same as with frequency 
opping, with the same overall bandwidth. In principle, hybrid spread spectrum schemes can be used with 
a typical direct sequence spreading 
rocess is narrower than a typical frequency-hopping bandwidth. One disadvantage in a hybrid system is that 
ing a direct sequence signal added to 
the frequ
3.2.6.1 D
ssentially statistically the same as in the frequency-hopped–only case. Actually, the 
irect sequence despreading process lowers the noise spectral density slightly when compared to the 
equency-hopped–only case. Section 3.2.1 was developed for BPSK, QPSK, or OQPSK modulation with 
 
 
FFH/BFSK has poorer BER performance in thermal noise than SFH/BFSK but is m
o
 
 
 
With barrage jamming the advantage in using a hybrid spread spectrum modulation scheme is very minimal 
compared
s
h
coherent or noncoherent data modulation. Normally the bandwidth of 
p
both the direct sequence and the frequency-hopping timing must be recovered from the signal in order to 
track the DS/FH SS modulation and to demodulate the data modulation.  
 
Figure 3.2-9 illustrates a block diagram of a representative receiver, which first dehops the hopped 
signal and then utilizes a bandpass filter to remove the sum frequency.  
Next the dehopped signal is despread by the direct sequence despreader and is followed by a second 
bandpass filter to limit the bandwidth of the output, if needed. For example, if the despreading process also 
contained a heterodyne operation as well as a despreading process, a bandpass filter would be needed to 
remove the sum frequency.  
After the signal has been dehopped and despread, it can be demodulated according to the type of 
data modulation that was used. In the next few sections, the effect of hav
ency hopped signal to produce a hybrid spread spectrum signal will be discussed briefly in terms of 
system performance. 
 
 
S-SFH/PSK in Broadband Noise Jamming 
 
When a direct sequence spreading code is used in addition to the frequency-hopping process, the resulting 
signal and noise are e
d
fr
BPSK, QPSK, or OQPSK data modulation.  
Frequency
synthesizer
dehopper
Frequency 
hopping code
generator
Bandpass
filter I
y(t)
Direct sequence
code
generator
Code
tracking
loop
Bandpass
filter II
Data
symbol
demodulator
Data
estimate


0
2 cos (
)
( )
IF
PN
t
t





x(t)
u(t)
v(t)
Frequency
synthesizer
dehopper
Frequency
synthesizer
dehopper
Frequency 
hopping code
generator
Bandpass
filter I
y(t)
Direct sequence
code
generator
Direct sequence
code
generator
Bandpass
filter II
Data
symbol
demodulator
Data
symbol
demodulator
Code
tracking
loop
Data
estimate


0
2 cos (
)
( )
IF
PN
t
t





x(t)
u(t)
v(t)
 
 
Figure 3.2-9 Block diagram model of a hybrid receiver with DS and FH. 
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          139 
Typically the bandwidth of the hybrid scheme would be considerably wider than just the direct 
sequence part of the hybrid scheme, so that filtering losses are normally negligibly small. Thus, Figure 3.2-2 
applies to DS-SFH/PSK modulation. From (3.2.1-14), since it is assumed that the bandwidth is large enough 
to pass the FH signal plus the DS signal so that  = 1, the BER performance is given by 
 
                                     
 PE
Q
N R
P
J
P
R
W
b
b
b


L
N
MMM
O
Q
PPP
2
0
                           
(3.2-39) 
 
where P is the received signal power in watts, Rb is the data rate in bits per second, N0 is the one-sided 
thermal noise spectral density in W/Hz, J is the received jammer power in watts, and W is the 
 
reading process will 
decrease the effective noise power spectral density by the factor  that was derived in Section 3.2.1 for direct 
sequence BPSK spread spectrum signaling. However, since the bandwidth required for hopping is much 
sequence 
aling (by assumption), it
 be essentially one. 
or the optimal detector is given by (3.2
ced in (3
 
the results are plotted in Figure 3.2-4. 
hybrid spread 
bandwidth in Hz. 
 
3.2.6.2 DS-SFH/DPSK in Broadband Noise Jamming 
 
When using direct sequence and frequency hopping with DPSK encoded data, the desp
greater than for the direct 
sign
 follows that  will
Therefore the bit error rate f
-20), which is reprodu
.2-40) and
 
                                 
  PE
N R
J R
b 

P
P W
b
b

L
N
MM
OPP
1
2
1
exp
                          
(3.2-40) 
M
QP
0
Rb is the data rate in bits per second, N0 is the one 
ided thermal noise spectral density in W/Hz, J is the received jammer power in watts, and W is the hybrid 
tion 3.2.4 for slow hopping, with the exception that the direct 
process will spread the noise somewhat depending on the hopping bandwidth and the 
it is assumed that the hopping bandwidth i
 direc
 
bandwidth, the noise spreading will be negligible and the bit error rate performance will be given by (3.2-32) 
r slow hopping  
 
Again, P is the received signal power in watts, 
s
spread bandwidth in Hz. 
 
 
3.2.6.3 DS-SFH/MFSK in Broadband Noise Jamming 
 
When using MFSK and direct sequence spread spectrum modulation with slow frequency hopping, the 
erformance is basically described in Sec
p
sequence despreading 
spreading bandwidth.  
Basically since 
s much greater than the
t sequence
fo
 
           
                    PE
kE
M
n
kE
n
b
b
M
n
b



M
N
nN
n
L
NM
O
QP FHG IKJ 

L
NM
O
QP

1
1
2
b
g
b g
exp
exp
(
)
'
'
           (3.2-41) 

2
1
2
2
0
2
0
nd 
 
a
 

 140                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
                                              
                E
N
N R
P
J
P
R
W
b
b
b
0
0
1
' 

                          
(3.2-42) 
 
where P is the received signal power in watts, Rb is the data rate in bits per second, N0 is the one sided 
thermal noise spectral density in W/Hz, J is the received jammer power in watts, and W is the hybrid spread 
bandwidth in Hz. Figure 3.2-7 illustrates the performance that is applicable to this modulation. 
 
FFH
and Noise Jamming 
n using FSK and direct sequence spread spectrum modulation with fast frequency hopping, the 
rmance is basically described by Section 3.2.5 for fast hopping with the exception that the direct 
 s
se somewhat depend
bandwidth and the 
ing are discussed i
sically 
 
assumed that the hopping bandwidth is much greater than the direct sequence bandwidth, the noise spreading 
negligible and the bit error rate performance will be given from Section 3.2.5 for fast hopping as 
 
3.2.6.4 DS-
/FSK in Broadb
 
Whe
erfo
p
sequence despreading process will pread the noi
ing on the hopping 
spreading bandwidth. The results for fast hopp
n Section 3.2.5. Ba
since it is
will be 
 
                              
      PE
e
K
E
N
b
L
E
N
i
i
L
b
i
b

FHG
IKJ





1
2
2
2
1
2
0
1
0
0
'
'
                            
(3.2-43) 
 
E
                                  
         
N
N R
J
P
P
R
L E
N
b
b
c
0
0
0
1
'


                            
(3.2-44) 
W
 
and 
 
                                        
       
b
' 
K
i
L
i
L
i


FG
IJ


1
2
1
1
( )!
                               
(3.2-45) 
j
j H
K
0
    
In (3.2-44) P is the received signal power in watts, Rb is the data rate in bits per second, N0 is the 
ne-sided thermal noise spectral density in W/Hz, J is the received jammer power in watts, and W is the 
n Hz. 
3.3 BER PERFORMANCE IN PARTIAL BAND NOISE JAMMING  
 
al band noise jamming is similar to full band noise jamming, except that the bandwidth is narrower for 
l band noise jamming. Most jammer transmitters can produce more narrowband noise jammer power 
 jammer pow
nd commonly partial ba
ore effective tha  
nd jamm
e more commonly use
measures (ECM) 
operations. 
 
.3.1 DS/PSK in Partial Band Noise Jamming  
 
lation with either BPSK, QPSK, or OQPSK data modulation in the presence 
f a partial band noise jammer (PBNJ). A block diagram of the system model is shown in Figure 3.2-1(b). It 
 band jammer has bandwidth 
 
o
hybrid spread bandwidth i
 
Equation Section (Next)
Parti
partia
than they can wideband noise
er, a
nd jammers are m
n
wideband jammers. Partial ba
ers ar
d in electronic counter 
 
3
Now consider a direct sequence spread spectrum communication system that uses DS spreading with either 
BPSK, QPSK, or OQPSK modu
o
is assumed that the system-input bandwidth is W Hz, the partial

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          141 
W =W Hz, and the data rate is R . In addition the received signal power is P, and the total received jammer 
b
power is J. The chip duration is Tc seconds for either BPSK or QPSK SS modulation. The received signal 
and the received partial band jammer plus thermal noise is given by 
 
            
    y t
P
t
t
t
n t
n
t
d
PN
J
( )
cos
( )
( )
( )
( )






2
0




            
(3.3-1) 
 
The reference signal is given by 
 
r t
t
t
IF
PN
( )
cos
( )



2
0



b
g
                             
(3.3-2) 
                                                    
 
After synchronously despreading, the resulting waveform is given by 
 
              
      




0
0
( )
2 cos
( )
       
2(
( )
( ))cos (
)
( )
(2
)
IF
d
J
IF
PN
IF
u t
P
t
t
n t
n t
t
t
O

















          
(3.3-3) 
 
After filtering by the bandpass filter one obtains the component at IF 
 
 
  
v t
P
t
t
n t
n t
t
t
IF
d
J
IF
PN
( )
cos
( )
(
( )
( ))cos (
)
( )







2
2
0






   
(3.3-4) 
The first term is the despread signal, the second term is the despread
d the la
e two-sided despread spectral den
ise 
 
en by  
                                             
 
 partial band jammer, an
st 
term is the despread thermal noise. Th
sity of this thermal no
term was
lready found in Section 3.2.1 to be giv
a
 
 
0
S(
)
2
IF
N
f


  
                                   
(3.3-5) 
In this equation  turns out to be close to unity if WTc is greater than three or four (see Table 3.2-1). Consider 
e despread partial band jammer term. From (3.2-5), one has for the power spectral density of the reference 
     
 
th
signal 
 




2
2
0
0
S ( )
sinc
(
)
sinc
(
)
r
c
IF
c
c
IF
c
f
T
f
f
f
T
T
f
f
f






    
T            
If th
                            
'
(3.3-6) 
 
e jammer and the despreading codes are uncorrelated, then the two-sided despread jammer spectral 
density is given by the following convolution 
 
S
( )
S (
')S (
')
JPN
r
J
f
f
f
f
df





                          
(3.3-7) 
ssume that the jammer bandwidth is equal to W Hz and the jammer spectral density is 
    
              
 
A
N
J
W
J
0



/ (
)  
W/Hz, where J is the jammer power and the jammer is centered at frequency fJ, so that the jammer spectral 
density is centered at fJ and –fJ and the jammer spectral density is given by 
 
          
0
S ( )
 for
 and for 
 
2
       
(3.3-8) 
2
2
J
J
J
J
N
W
W
f
f
f
f
f








     
 
Using (3.3-6) and (3.3-8) in (3.3-7) produces 
 

 142                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  


          






2
0
0
2
2
2
0
sinc
S
( )
2
sinc
'
J
J
W
f
IF
J
c
W
JPN
f
IF
c
c
f
f
f
f
N T
'
'
cT
f
df

2
0
0
2
2
2
0
sinc
'
             
'
2
sinc
'
J
J
W
f
IF
c
J
c
W
f
IF
f
f
f
f
T
T
































         
(3.3-9) 
t f0 and
ore than W Hz apart and f0 >> 2fIF. Then for f = +fIF 
 
the integral and for f = – fIF only the third term contributes to the int
tegration regions correspond to the regions where the two-sided spectral density is nonnegligible. It follows 
f
f
f
f
T
N T
df
f
f
f
f





























 
Assume tha
 fJ are not m
only the second term
contributes to 
egral, since the two 
in
that  
 




2
0
2
0
2
2
0
2
0
2
S
(
)
sinc
(
')
'
2
S
(
)
sinc
(
')
2
J
J
J
J
W
f
J
c
W
JPN
IF
c
f
W
f
J
c
W
JPN
IF
c
f
N T
f
f
f
N T
'
T df
f
f
f T df




















                  
              
(3.3-10) 
 
learly, the two integrals are the same so that the two-sided noise spectral density at fIF is given by 
C
 
           


2
0
2
0
2
S
(
)
S
(
)
sinc
(
')
'
2
J
J
W
f
J
c
W
JPN
IF
JPN
IF
c
f
N T
f
f
f
f T df










         
(3.3-11) 
 
This result applies for arbitrary jammer bandwidths W, as long as f0 and fJ do not differ by more 
than W Hz and f0 >> 2fIF. Let us now consider two extreme cases. Consider first the case when the jammer 
 is very narrowband compared to the chip rate 1/Tc. Integrating 
ptio
 
the interference spectral density given by 
 
bandwidth W
under this assum
n leads to
the result that 




2
2
0
0
c
0
c
S
(
)
sinc(
)
sinc(
)
2
2
J
c
c
JPN
IF
J
J
N T
W
JT
f
f
f T
f
f T





        

       
(3.3-12) 
Thus the jammer is most effective when the jammer frequency is equal to the signal center 
y, as would be expected, where the result becomes  
 
                                               
 
frequenc
  
S
(
)
2
JPN
IF
 
in the narrowband case. Note that if the jammer is offset in frequency by multiples of the chip rate Rc, the 
jammer spectral density is fully suppressed according to our theoretical model! Even a tone jammer will have 
a nonzero bandwidth, due to phase noise, so that comple
c
JT
f

                             
 (3.3-13) 
te suppression is not achieved in practice. 
r the case when the jammer is broadband, that is, we let  = 1. Fr
(3.3-11) one has, 
e change of variable 
)
Now conside
om  
after th
0
(
'
c
z
T
f
f



 and f0 = fJ, the despread jammer spectra
ty is gi
 
           
l densi
ven by 
                
2
(
/ 2)
2
(
/ 2)
sin ( )
S
(
)
2
c
c
W
T
c
JPN
IF
W
T
JT
c
z
dz
f
W


z
T




                      
(3.3-14) 
 
y; however, a reasonabl
 obtained wit
t 
This integral can be evaluated exactl
e upper bound can be
h the resul
that 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          143 
                                              
S
(
)
2
JPN
IF
J
f
W

                             
(3.3-15) 
 
Now if W is set to be the null-to-null bandwidth then (W = 2/Tc) then 
 
S
(
)
4
4
c
JPN
IF
c
JT
J
f
R


                                                        
                             
(3.3-16) 
ith Rc being the chip rate Rc = 1/Tc. Thus, by comparing the narrowband case (3.3-13) with (3.3-16), it is 
mpute the bit error rate, it is advantageous to assume that the ja
 
sian noise jammer. In that case the bit error rate for the general partial band Gaussian noise jammer is 
iven by
 
 
w
seen that, when the narrowband jammer frequency is set equal to the signal carrier frequency f0, then the 
narrow band jammer is approximately 3 dB more effective than a wideband jammer, which has an RF 
bandwidth of W = 2/Tc.  
 
Now in order to easily co
mmer is a
Gaus
g
 
0
S
(
)
                                 
2
JPN
IF
b
b
E
Q
N
f



                          
(3.3-17) 
   
PE 









 
where the two-sided thermal noise spectral density is N0/2 and the two-sided jammer spectral density is 
S
(
)
JPN
IF
f
. Under the assumption that the two random processes are statistically independent, the earlier 
e bit error rate of 
 
                   
result follows in Gaussian noise (see (3.2-14)). 
For the vary narrowband Gaussian jammer with the jammer frequency at the signal frequency, one 
obtains th


1
1
0
  
0
b
1
1
      
Q
E
P


0
2
2
2
b
b
c
b
c
b
E
PE
Q
Q
N
JT
E
R
P
N
J R
PG
N
J























































            
(3.3-18) 
 
where, for direct sequence spread spectrum systems with BPSK or QPSK chip modulation, PG is the 
processing gain and is given by 
 
                                                  









PG
R
R
c
b

                                     
(3.3-19) 
 
The greater the processing gain the lower the bit error rate, and vice versa. Figure 3.3-1 illustrates the BER 
for various values of Eb/N0 in dB versus the value of
 
 (
/
)
c
b
PR
JR
in dB. 

 144                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
0
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
1 10
1
8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
PEb
P
J
R
R
c
b
L
NM
O
QP
Eb/N0=7 dB
Eb/N0=9 dB
E /N =11dB
Eb/N0=13dB
(dB)
Eb/N0=5 dB
1
b
0
0
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
Eb/N0=5 dB
PEb
P
J
R
R
c
b
L
NM
O
QP
Eb/N0=7 dB
Eb/N0=9 dB
E /N =11dB
Eb/N0=13dB
(dB)
 
Example 4 (a) Consider a DS/PSK spread spectrum communication link, which is being jammed by a partial 
band jammer. Assume the jammer utilizes the optimum bandwidth. Also assume that the data rate is 7,943 
bps, N0 = –202 dBW/Hz, the received signal power is P = –150 dBW, and the direct sequence chip rate is 
10,000,000 chips per second. The questions are what jamming power is needed to cause a bit error rate of  
10–2? and (b) How does this compare with Example 1 with a broadband jammer? First consider (a). Compute 
the Eb/N0 value via 
 
 
From Figure 3.3-1 it is seen that a value of 
 required to achieve a BER of 10-2 is about 5 dB. 
Expressing J in the equation 
b
0
 
Figure 3.3-1 DS/PSK BER performance with a very narrowband Gaussian jammer. 
 
 
0
/
(dB)
202 150 10log(7943)
13 dB
b
E
N




 
/(
)
c
b
PR
JR
/(
)
c
b
PR
JR
 in dB
the relationship 
 
 
which yields the value of J = –124 dBW. Now consider part (b). Note that in this case, comparing to 
Example 1, that it requires a jammer that is 2.5 dB weaker compared to the wideband case to cause the same 
error rate. 
mer is given by  
 produces 
5 dB
150
10*log(10,000,000 / 7,943) dB
J



 
 
 
3.3.2 SFH/DPSK Systems in Partial Band Noise Jamming  
 
Consider now a frequency-hopped spread spectrum system with a hopped bandwidth of W Hz, in which 
binary differential encoding and decoding is used. Again Figure 3.2-3 illustrates the receiver and the 
optimum demodulator. Consider a one-sided spread bandwidth of W Hz, using J watts of jammer power, to 
produce a one-sided spectral density of J/(W) W/Hz. It is assumed that W is at least as large as 2Rb, (tone 
jammers are not considered in this section). Under these conditions, the effective one-sided spectral density 
of the noise plus jam
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          145 
                                        
0
J
S(
)
IF
f
N
W


The bit error rate for unjammed DPSK is given in (3.2-19). The hopping frequencies are assumed to 
osen (essentially) at random. If the hopping band is over the bandwidth W, then the approximate 
probability of falling in the jammer region is  and the approximate probability of falling outside of the 
 given by  
                   

                                   
(3.3-20) 
 
be ch
jammer band is (1–). Therefore, from (3.2-19) the average bit error rate probability, in a frequency-hopped 
system, in which the jammer occupies W Hz (averaged over the jammed and unjammed environment), is 
approximately
 
  
0
(1
)
S(
)
b
b
b
b
b
IF
E
E
f








             
(3.3-21) 
PE
PE
PE
N









 
where PEb
0
b
E
N






is given by  
 
                                
0
0
1 exp
 
b
b
b
E
E
PE 








                       
(3.3-22) 
2
N
N




 written as 
 
 
 
Hence the average BER can be
  
0
0
(1
)exp
exp
2
2
(
/
)
( /
)(
/(
)
b
b
b
b
PE
N R
N R
P
J P R
W















  
(3.3-23) 
 
Thus the average bit error rate for frequency-hopped DPSK modulation depends on the bandwidth 
occupancy , as indicated in 
1
1
1
P






 in (3.3-23) is negligible so that the average bit error rate reduces to 
            
(3.3-23). Many times the thermal noise is negligible compared to the jammer in 
a typical system operation. Thus to reflect the typical case (and to simplify the calculations), it will be 
assumed that the first term
 
1
exp
2
( /
)(
/(
b
b
PE
J P R
W










                      
)
                      
noise. Figure 3.3-2 illustrates the bit error rate for the case of frequency-hopped 
DPSK in partial band noise jamming. 
Now consider the optimum value of  the fractional jammer bandwidth and the jammer bandwidth 
 W. To do this we differentiate the expres
e error rate (3.
 
(3.3-24) 
 
when we neglect the thermal 
 
of the hopped bandwidth
sion for the averag
3-24) to 
obtain 
1 exp
2
2
b
PE








 
exp
0 
b
b
b
PW
PW
PW
JR
JR
JR





















 
(3.3-25) 
ing for the optimum fractional bandwidth 0 produces 
 
 
Solv
 
0
b
1
PW
JR






 
as long as  is not greater than 1. Note from (3.3-26) that , being less than or equal to 1, implies that  
 
(3.3-26) 
0

 146                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
 
1
b
PW
JR  
 
(3.3-27)
 
0
5
10
15
20
25
30
35
40
1 10 8
1 10 7
1 10 6
0.1
1
1 10 5
1 10 4
1 10 3
0.01
0.1
1
(P/J)(W/Rb) (dB)
Avera e PEb
g
=.5
=.05
=.01
=.005
=.001
=.1
=1
0
5
10
15
20
25
30
35
40
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
=.001
Avera e PEb
(P/J)(W/Rb) (dB)
g
=.5
=1
=.05
=.1
=.01
=.005
 
 
Figure 3.3-2 Average BER performance with a Gaussian partial band jammer and for a pulse jammer with SFH/DPSK. It also applies 
S-DPSK for both jammers. 
Since the maximum value of 0 is 1, it must be used whenever the optimum value of 0 is equal to 
or greater than 1. Therefore, inserting the optimum value of  into (3.3-24) produces the average bit error rate 
of 
 
                                                    
to 
D
 
 




1
max
max
                 
1
2
1 exp
      
1
2
b
b
b
b
b
b
e
P
PE
P W
J R
J R
P W
P W
PE
J R
J R

W











                   
(3.3-28) 
 
Hence in the region where the error rate is smallest ((P/J)(W/Rb)>1) the dependence on (P/J)(W/Rb) 
is an inverse relationship and not exponential as one would expect. This behavior is typical of bit error rate 
performance with optimum jamming. Figure 3.3-2 illustrates the bit error rate for the worst-case (optimum) 
jammer for various values of . Figure 3.3-3 illustrates the maximum bit error rate for the worst-case 
(optimum) jammer. 
 
3.3.3 SF
this section, SFH/BPSK, SFH/QPSK, and SFH/OQPSK spread spectrum modulations are considered. 
Conside
w a slow frequency-hopping spread spectrum system with hopped bandwidth of W Hz with one 
of the three data modulation indicated in the first line of this paragraph. Figure 3.2-5 illustrates both the 
active receiver and the two-pass receiver. Consider a one-sided spread bandwidth of W Hz, using J watts of 
jammer power, to produce a one-sided spectral density of J/(W) W/Hz. It is assumed that W is at least as 
Due to the linear reduction in BER with (PW Rb) (rather than an exponential-like decrease), it takes 
a lot of signal power to overcome an optimal jammer if coding is not used. 
 
/J
H/PSK BER in Partial Band Noise Jamming 
 
In 
r no

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          147 
large as 2Rb; in other words, tone or narrowband jammers are not considered in this section. Under these 
conditions the effective one-sided spectral density of the noise plus jammer is given by  
                                                             
 
0
S(
)
IF
J
f
N
W



                             
(3.3-29) 
 
ince the hopping is assumed to be essentially random, if the hopping band is over the bandwidth W, then 
he prob
S
t
ability of falling in the jammer region is , and the probability of falling outside of the jammer band 
is (1–). Therefore, the average bit error rate [7] (averaged over the jammed and unjammed environment) is 
given by  
 
1
10
5
0
20
25
30
35
1 10
5
10
15
40
5
1 10 4
1 10 3
0.01
0.1
(P/J)(W/Rb)dB
e
Bit error rat
1
(P/J)(W/Rb) dB
10
5
0
20
25
30
35
1 10
5
10
15
40
5
0.1
1 10 4
1 10 3
0.01
(P/J)(W/Rb)dB
e
Bit error rat
(P/J)(W/Rb) dB
 
 
Figure 3.3-3 Average BER performance for the optimum Gaussian partial band jammer and for a pulse jammer with SFH/DPSK. It also 
applies to DS-SFH/DPSK for both jammers. 
 
 
0
0
(1
)
/(
)
b
b
b
b
b
E
E
PE
PE
PE
N
N
J
















                  
W



               
(3.3-30) 
 
where 
is given by  
 
                                       
0
(
/
) 
b
b
PE E
N
0
0
(
/
)
2
/
 
b
b
b
PE E
N
Q
E
N




                     
(3.3-31) 
 
Under the assumption that thermal noise is negligible, (3.3-30) can be written as 
 
                                            
2
b
b
PW
PE
Q
JR











                        
(3.3-32) 
 
Hence it follows that  
 

 148                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  


(
)
2
2
b
d PE
d
Q
X
Q
X
d
d





                          
 










                
(3.3-33) 
 
where 
 
                                                 
X
PW
JRb

                                      
(3.3-34) 
 
Recall that Liebnitz’s rule [8] states 
 
          
d
dx
f x t dt
f x t
x
dt
f x B dB
dx
f x A dA
dx
A
B
A
B ( , )
( , )
( ,
)
( ,
)





z
z
            
(3.3-35) 
 
Applying Liebnitz’s rule and setting the derivative of PEb to zero yields 
 
                               
0
2
2
2
2



Q
X
e
X
X




                              
(3.3-36) 
 
                                              
From (3.3-36) it follows that the solution for  is of the form 
 
0
0
c
X
  
                                         
(3.3-37) 
hich corresponds to the maximum value of the average bit error rate. To find the value of 0, fix X at some 
ay 3, and det
timum value of c0 to maximize the BER. Trial and error yields the value of 
      
 
w
value, s
ermine the op
c0 
 
                                        
c0
0709
.
                                        
ince can not be larger than 1,  must be set equal to 1 whenever the optimum value of 0 is 1 or greater. 
                       
(3.3-38) 
 
S
0
Thus the maximum average BER for SFH/PSK is given by 
 
  




max
max
0.08286           
2
      
0.709
b
b
b
b
b
b
PW
PE
JR
PW
JR
PW
PW
PE
Q
JR
JR
















                  
(3.3-39) 
Figure 3.3-4 illustrates the BER plot for the range of X from 10 dB to 40 dB. Again it is seen that 
R drops off in a linear manner with (PW/JRb). Notice that SFH/PSK has slightly better BER than 
PSK for a given value of (PW/JRb). 
3.3.4 SFH/MFSK in Partial Band Noise Jamming 
 M-ary frequency shifted keyed modulation in partial band noise 
mming, with the assumption that the hopping is slow (that is, there are one or more tones per hop). The 
analysis for partial band noise jamming is very similar to the analysis done in Section 3.2.4. Recall that there 
are k bits per tone symbol. 
0.709
 
the BE
FH/D
S
 
 
 
Consider now the frequency-hopped
ja

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          149 
 
 
10
5
0
5
10
15
20
25
30
35
40
1 10 6
1
1 10 5
1 10 4
1 10 3
0.01
0.1
(P/J)(W
t er
te
/Rb)dB
Bi
ror ra
1
(P/J)(W/Rb) dB
10
5
0
5
10
15
20
25
30
35
40
1 10
0.01
0.1
6
1 10 5
1 10 4
1 10 3
(P/J)(W
t er
te
ror ra
Bi
/Rb)dB
(P/J)
 
 
uation (3.2-28) is the starting point at one hop time and for one frequency-hop frequency, so that the signal 
plus noise can be written in the form at 
(W/Rb) dB
Figure 3.3-4 Average BER performance with a Gaussian optimum partial band jammer for SFH/BPSK. 
 
 
Eq
 
                         
x t
P
t
t
n
t
IF
d
nJ
( )
cos
( )
( )




2



                    
(3.3-40) 
 
where the tone modulation is represented by d(t),  is the random phase for that hop, and term nnJ(t) 
represents the thermal noise and jammer noise when the jammer noise is present. 
s in Section 3.3.3, the effective one-sided spectral density of the noise plus jammer is given by  
A
 
                                           
0
(
)
IF
J
S f
N
W



                                
(3.3-41) 
 
t has to contend with the thermal plus jammer noise; 
owever, the receiver has only thermal noise to contend with when the jammer does not hit the hop that the 
fore, the average bit error rate [7] (averaged over the jammed and unjammed 
nvironment) is given by  
 
                  
when the jammer hits the hop with probability , i
h
signal is at. 
Since the hopping is assumed to be essentially random over W Hz, and the jammer has bandwidth 
W, then the probability of falling in the jammer region is  and the probability of falling outside of the 
jammer band is (1–). There
e
0
0
(1
)
/(
)
b
b
b
b
b
E
E
PE
PE
PE
N
N
J
















W



                 
(3.3-42) 
 
where 
 is given by (3.2-32). Again making the assumption that thermal noise is negligible, and 
denoting the one-sided jammer spectral density J/W by N0J, one has, from (3.2-32), 
 
0
(
/
) 
b
b
PE E
N

 150                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  




2
0
0
(2
)
exp
1
exp
2
1
2
2
M
n
b
b
b
n
J
J
M
kE
k E
n
PE
n
M
N
nN

























                     


        
(3.3-43) 
 
where Es = kEb. Bringing the exponential inside the summation allows us to write the average bit error 
probability as 
 
                               




2
0
(1
)
1
exp
2
1
M
n
b
b
n
J
M
k E
n
PE
n
M
n



N

















                 
(3.3-44) 
 
 
The strategy of the jammer is to maximize the average bit error probability over the bandwidth 
fraction . To find the conditions that maximize 
b
PE , (3.3-44) is differentiated with respect to  and the 
result is set equal to zero. The result is  
 
        








2
0
2
0
0
(1
)
1
1
exp
2
1
(1
)
(1
)
M
n
b
b
n
J
M
n
J
J
M
k E
n
d PE
n
d
M
nN
M
k E
n
kE
n


























            +
1
exp
2
1
b
b
n
M
nN
nN

n




        
(3.3-45) 









 
Making the substitutions 
 and  
/
b
y
kX
X
PW JR



, it is not difficult to show that (see also Houston [9]) 
3.3-45)
(
 
 can be written as 
M
n
n
y
n
                                 
 
M
y
y
y
n
M
n
n
n
n
M
n
F I
F I
KJ

HG
HG
KJ

1b g exp
 
uced to facilitate the solution
 
FG IJ 
FG IJ




2
1
1
b g exp
                          
(3.3-46) 
H K
H K
2
where y and X have been introd
. Note again that X is the effective signal to
jammer density ratio. Also recall that  
 
                                        
k
M
log (
)
2
                                      
(3.3-47) 
 
The solution for y, call it y , can be solved from (3.3-46) to yield the value of  that maximizes the 
average 
e bit error rate. Again, when the solution for 0 is 1 or greater, the value of 0 = 1 
is used since the fractional bandwidth cannot exceed unity. When the optimum value of  is less than one,  
0 = y0/(kX). The value of  = 1 corresponds to the value of X0 f
0
bit error probability given by (3.3-44). It is clear from inspection that when M = 2 then y0 = 2. Other 
values can be computed with the aid of a computer using an iterative solution. Hence when M and X are 
selected, the corresponding value of k is known, and from y0 one can obtain the optimum value of , call it 
0, and therefore the averag
is found from 
ound when 
1
 fro
 
X0 = y0/(k0)  
(3.3-48) 
 (3.3-48)), one has from 
m 
 
 
Hence for < 1 (or Eb/N0J > (Eb/N0J)0 ((Eb/N0J)0 is the value where 0 is 1) using
.3-43), the result 
(3
 
  
 





0
0
0c
(3.3-49) 
2
0
0
(1
)
1
exp
2
1
/
(
/
)
M
n
b
n
b
J
b
J
M
y
y
n
PE
n
M
E
N
n
E
N



















    

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          151 
 
where c0 is a constant and is displayed in Table 3.3-1 for various values of M. 
Table 3.3-1 Solution of (3.3-45) for Various Values o
 
f M [9] 
0.798
0.1746
3.62
32
0.872
0.1803
3.49
16
0.930
0.1954
2.78
(Eb/N0J)0
c0
y0
M
8
1.170
0.2329
2.38
4
2.000
0.3679
2.00
2
0.798
0.1746
3.62
32
0.872
0.1803
3.49
16
0.930
0.1954
2.78
0
c0
y0
8
1.170
0.2329
2.38
4
2.000
0.3679
2.00
2
0.798
0.1746
3.62
32
0.872
0.1803
3.49
16
0.930
0.1954
2.78
(Eb/N0J)0
c0
y0
M
8
1.170
0.2329
2.38
4
2.000
0.3679
2.00
2
0.798
0.1746
3.62
32
0.872
0.1803
3.49
16
0.930
0.1954
2.78
0
c0
y0
8
1.170
0.2329
2.38
4
2.000
0.3679
2.00
2
 
 
 
In the case when  =1, one has from (3.3-44) the value 
 
                    




2
0
(1
)
n
b
kE
n
1
1
exp
2
1
M
b
n
J
M
PE
n
M
nN


















In summary then, the average bit error rate is given by 
       
                
(3.3-50) 
 
 




0
0
0
0
0
0
0
0
0
                                                   
/
(1
)
b
b
b
b
J
J
J
M
J
J
J
c
E
E
PE
E
N
N
N
M
kE
n
E
E








2
1
exp
    
2
1
n
b
b
b
b
n
PE
n
M
nN
N
N
























       
(3.3-51) 
 jammer forces the bit error ra
 
e 3.3-5 for four values of M. T
 the sam
e M = 
 
Notice that again the optimum
te to drop off as the inverse SNR. The average
it error rate is shown in Figur
he value of M = 32 is almost
e value as 
b
th
16 case. For M greater than 8, there is almost no improvement in bit error rate performance. It can be 
shown that the optimum value of  is given by 
 
                                  
0
0
(
/
)
opt
b
J
c
E
N


                                       
(3.3-52) 
 
for  up to a value of 1 where it is limited to 1. Note that c0 is obtained from Table 3.3-1. 
 
.3.5 FFH/MFSK in Partial Band Noise Jam
freque
rmal noise to simplify the analysis. Thus the jammer density over the bandwidth W is 
/(W). 
Each M ry symbol is divided into L subsymbols (a different hop for each subsy
l) or 
 
 
3
ming 
 
Consider now the case of fast 
ncy hopping, in which it will be seen that diversity improves the 
performance of the MFSK signal. Refer to Figure 3.2-8 that illustrates a (fast) FFH/MFSK receiver. Again 
we will neglect the
J
-a
mbo
chips with
energy  
 
b
c
kE
E
L

 
(3.3-53) 
 

 152                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
0
5
10
15
20
25
30
35
40
45
1 10 5
1 10 4
1 10 3
0.01
0.1
(P/J)/(W/Rb) dB
 PEb
M=8
Average
M=4
M=2
M=16
(P/J)(W/Rb) dB
Av
e PEb
erag
0
5
10
15
20
25
30
35
40
45
1 10 5
1 10 4
1 10 3
0.01
0.1
(P/J)/(W/Rb) dB
 PEb
M=8
Average
M=4
M=2
M=16
0
5
10
15
20
25
30
35
40
45
1 10
0.01
0.1
M=16
5
1 10 4
1 10 3
(P/J)/(W/Rb) dB
 PEb
M=8
Average
M=4
M=2
(P/J)(W/Rb) dB
Av
e PEb
 
here k is log2(M). It is assumed that the receiver can detect perfectly when hops are jammed. A hop is 
e tone detector is high at the end
. If an
 
r-free M-ary tone detection is made
hoose 
 
etrics 
                                        
M

                         
(3.3-54) 
ations. It has been shown [10, 11] that the Chernoff bound2 for arbitrary L and k = log (M) is given 
by  
                        
erag
 
Figure 3.3-5 Average BER for SFH/MFSK and DS-SFH/MFSK for worst-case partial band jamming and worst-case pulse jamming. 
 
 
w
jammed when more than on
 of the symbol time [10, 11]
y of the L
chips are not jammed, erro
. If this does not occur, then c
the largest
of the m
 
  

x
i



1
;    
L
i
ij
j1
 
where xij is the energy detector output for the i-th M-ary tone on the j-th subsymbol or chip. Due to the fact 
that exact expressions for this metric generally do not yield closed form expressions, an exponentially tight 
upper bound [11] will be used for the average bit error rate. It is known that these bounds are close 
approxim
2
 
2
2  
exp
   
4
1
1
L
b
M
PE




















  

                         
                                                          
(3.3-55) 
 
 
2 A technique to generate tight probability bounds that can then be used as an approximation. The exact solution would be very difficult 
to evaluate directly. 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          153 
and maximizing over  and  produces 
 
                
1
0
0
0
4
3
   
;   
4
/
/
L
b
b
b
b
E
0
3
M
Le
L
L
PE
kE
N
kE
N
N
k











                
(3.3-56) 
 
where 
 
                     










kE
N
L
b /
,
0
2
2
2
1
4
1
    
b
g
b
g
                 
(3.3-57) 
 
Consider the bound when Eb/N0 
3L/k. When the jammer has optimized his bandwidth to 
maximize the average BER, the user at the receiver can optimize the number of chips L to minimize the 
average BER. Differentiating (3.3-56) with respect to L and utilizing the formula  
 
                      
 
1
1
0
( )
( )
4
( )
ln
 
/
L
L
b
dX L
dX L
Le
LX L
dL
dL
kE
N








                     
(3.3-58) 
 
yields the optimum value of L, call it L0, which is given by 
 
                                          
L
kE
N
b
0
0
4

                                            
(3.3-59) 
 
The corresponding average BER is obtained by using (3.3-59) in (3.3-56), which produces 
 
                          
0
0
3
exp
,      
4
4
b
b
kE
M
PE
N



4







                            
(3.3-60) 
here the optimum value of  follows from using (3.3-59) in the expression for 0 in (3.3-56).  
Notice that the optimum diversity (L0) restores the exponential reduction in the average bit error 
 
w
rate. Figure 3.3-6 illustrates the average bit error rate for fixed values of (a) L = 4 and (b) L = 8 (note that the 
optimized value is not used here).  
 
10
12
14
16
18
20
1107
1106
1105
1104
1 10

3
0.01
0.1
(a) L=4
M=4
M=32
M=16
M=8
M=2
Average PE
(P/J)(W/Rb) (dB)
10
12
14
16
18
20
1107
1106
1105
1104
1 10

3
0.01
0.1
(a) L=4
M=4
M=8
M=2
M=32
M=16
Average PE
(P/J)(W/Rb) (dB)
 
 
Figure 3.3-6 (a) Average BER for FFH/MFSK for worst-case partial band and pulse jamming and for DS-FFH/MFSK. 

 154                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
The curves start at a higher value of Eb/N0 since 3L/k is larger in (b). Clearly fast frequency hopping 
odulation is superior to slow frequency hopping in partial band j
atly improves performance in partial band jamming. 
 
with MFSK m
amming. Generally speaking, 
diversity gre
M=1
(b) L=8
M=8
M=4
M=2
Average PE
12
13
14
15
16
17
18
19
20
11010
1109
M=32
6
(P/J)(W/Rb) (dB)
1108
1107
1106
1105
1104
1 10

3
0.01
0.1
M=1
(b) L=8
M=8
M=4
M=2
Average PE
(P/J)(W/Rb) (dB)
12
13
14
15
16
17
18
19
20
M=32
6
1105
1104
1 10
11010
1109
1108
1107
1106

3
0.01
0.1
 
 
Figure 3.3-6 (b) Average 
ming and for DS-FFH/MFS
 
BER for FFH/MFSK for worst-case partial band and pulse jam
K. 
 
.3.6 Hybrid DS-SFH/MFSK in Partial Band Noise Jamming 
Figure 3
ow frequency hopping is used. Figure 3.3-8 illustrates the two possible 
ases that can occur for the relative bandwidths of the jammer bandwidth compared to the pseudonoise 
(direct sequence) bandwidth (PNBW). In case 1 it is assumed that the jammer bandwidth is smaller than the 
direct sequence bandwidth. Note that the probability that the jammer falls into the PNBW bandwidth on a 
given hop is approximately given by (PNBW)/W. In case 2 it will be assumed that the jammer bandwidth is 
larger than PNBW. In this case the probability of the jammer hitting the signal is (quite) approximately . 
Only the second case will be considered here.  
 
From (3.2-28) the dehopped signal, when the thermal noise is neglected, is given by  
 
                   
3
 
.3-7 illustrates a block diagram of a BPSK-SFH/MFSK receiver. It will be assumed that the direct 
sequence signal is binary phase shift keyed (modulated) onto the carrier.  
It will be assumed that sl
c


( )
2
( )cos
( )
      
2
( )cos(
)
2
( )sin(
)
IF
d
Jc
IF
Js
IF
x t
PPN t
t
t
n
t
t
n
t
t










                     
(3.3-61) 
 
in which the two noise terms are statistically independent from one another, and each have a flat spectral 
density of 
/2 each. This jammer noise model represents the dehopped jammer noise. The spectral density 
 = J/(
), with  the fractional jammer bandwidth. 
 
N J
0

W
N J
0


 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          155 
Frequency
synthesizer
dehopper
Frequency 
hopping code
generator
Bandpass
filter I
y(t)
Direct Sequence
Code
Generator
Code
tracking
loop
Bandpass
filter II
Data
symbol
demodulator
Data
estimate
PN t( )
v(t)
r t( ) 
x(t)
u(t)
Frequency
synthesizer
dehopper
Frequency
synthesizer
dehopper
Frequency 
hopping code
generator
Bandpass
filter I
y(t)
Direct Sequence
Code
Generator
Direct Sequence
Code
Generator
Bandpass
filter II
Data
symbol
demodulator
Data
symbol
demodulator
Code
tracking
loop
Code
tracking
loop
Data
estimate
PN t( )
v(t)
 
 
Figure 3.3-7 Block diagram of the BPSK-SFH/MFSK modulation receiver with BPSK direct sequence modulation. 
 
 
r t( ) 
x(t)
u(t)
W
PNBW
Case 1  jammer BW less than PNBW
W
PNBW
Case 1  jammer BW less than PNBW
JBW=W
JBW=W
JBW=W
JBW=W
Case 2  jammer BW greater than PNBW
Case 2  jammer BW greater than PNBW
JBW=W
JBW=W
JBW=W
JBW=W
 
 
Figure 3.3-8 Model for determining the dehopped and despread jammer for DS-SFH/MFSK. 
 
 
Since it has been assumed that the direct sequence spreading code is binary phase shift keyed onto the carrier, 
the BPSK DS despreading signal is of the form  
 
                                     
r t
PN t
( )
( )

                                              
(3.3-62) 
 
After despreading, the despread signal is of the form  
 
 


'
'
( )
2
( )cos
( )
      
2
( )cos(
)
2
( )sin(
)
IF
d
Jc
IF
Js
IF
u t
PPN t
t
t
n
t
t
n
t
t










                    
                   
(3.3-63) 
 
where the two noise terms are products of the jammer noise and the despreading code. The two jammer noise 
terms are g
 by 
 
           
n
t
n
t PN t
n
' ( )
( )
( ),

      
iven
       
               
(3.3-64) 
After filtering by the second bandpass filter, the output can be represented by 
 
t
n
t PN t
Jc
Jc
Js
Js
' ( )
( )
( )

 

 156                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  


'
'
( )
2
( )cos
( )
     
2
( )cos(
)
2
( )sin(
)
IF
d
Jc
IF
Js
IF
v t
PPN t
t
t
n
t
t
n
t
t









%
%
                          

                        
(3.3-65) 
 
where the two noise terms are filtered versions of (3.3-64) and are denoted as filtered terms by the “tilde” 
over the process. Two statistically independent, filtered, Gaussian random processes will approximate these 
two terms. The one-sided jammer noise spectral density of the jammer noise (which is the same for each 
baseband component) is given by 
 
           
                
(3.3-66) 
 
S
f
R
e
d
R
R
e
d
n
n
j
f
n
PN
j
f
Jc
Jc
Jc
~
~
~
'
'
( )
( )
( )
( )








z
z






2
2
where ~ ( )
n
t
jc
 and ~ ( )
n
t
js
 are the bandpass equivalent filtered noise terms. The spectral density at f = 0 is 
iven by  
     
f df     
(3.3-67) 
 
This can be evaluated as 
 
                     
g
 
S
R
d
R
R
d
S
f S
n
n
n
PN
n
PN
Jc
Jc
Jc
Jc
~
~
~
~
'
'
( )
( )
( )
( )
( )
( )
0 








z
z
z





S
J S
f
H
f
df
J
n
PN
Jc
~' ( )
( )
( )
0
2
2
0
2
2
0



z

                               
(3.3-68) 
 
in which SPN(f) is a unit power PN code sequence, and  is the signal loss through the second bandpass filter. 
The filter loss through the filter is given by 
 
                             


z
S
f
H
f
df
PN ( )
( )
2
2
                                   
(3.3-69) 
 
Therefore the jammer spectral density, out of the bandpass filter, is given by  
                                               
 



N
J
W
J
0 
  
                                                
(3.3-70) 
 slow hopped MFSK modulation case, due to the additional 
g operation. Typically the val
 
 filter bandwidth and chip rate 
how
 
r QPSK
 
r in performance to SFH/MFSK modulation 
except for the factor of  in the noise jammer density, under the assumption that the jammer bandwidth is 
W. Thus the results of Section 3.3.4 apply approximately wi
ding th
                    
 
hus the noise has been spread wider than in the
T
direct sequence despreadin
ue of  can be anywhere from a few dB to
egligible, depending on the
involved. The same results can be s
n to hold
n
fo
-SFH/MFSK and OQPSK-SFH/MFSK modulation. 
It follows that DS-SFH/MFSK modulation is simila
larger than PNB
th the understan
at  
 
  
0
/
   with      
b
J
P
b
b
W
X
PW
E
N
 
X
JR
JR


 



                      
(3.3-71) 
nd  has to be evaluated according to the direct sequence modulation and the filter bandwidth according to 
ure 3.3-5 illustrates the BER performance. 
a
(3.3-69). Fig
 
 
 
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          157 
3.3.7 Hybrid DS-SFH/
 
DPSK in Partial Band Noise Jamming  
It can be shown that DS-SFH/DPSK modulation has essentially the same performance as SFH/DPSK, as 
iscussed in Section 3.3.2 and will not be discussed further here. Figure 3.3-2 illustrates the BER 
MANCE IN PULSED JAMMING  
quation Section (Next) 
alysis method for pulse jamming signals is conceptually very similar to the partial ban
ming the parameter
d
performance. 
 
 
3.4 BIT ERROR RATE PERFOR
E
The an
d jammer 
analysis. In this case the pulse jam
is the fraction of time
 
oce
 that the wideband noise
jamming pr
ss is on and (1– ) is the fraction of time that the pulsed jammer is off. The two-sided power 
spectral 
y of the jammer is N /(2) when the jammer is “pulsed on” and is N /2 when the jammer is 
“off.
densit
J
0
” Here NJ is given  
 
 
 
 
 
/
J
N
J W

 
 
 
       
th of the filter preceding the multiplier that despreads or dehops, as shown in 
 
     (3.4-1) 
 
 
with W being the bandwid
igure 3.4-1. 
F
 
Bandpass
filter
BW(W Hz)
Dehopping
or despreading
as applicable
Data
demodulator
Data estimates
Bandpass
filter
BW(W Hz)
Data
demodulator
Dehopping
or despreading
as applicable
Dehopping
or despreading
as applicable
Data estimates
 
igure 3.4-1 General model for pulsed jamming of spread spectrum signals. 
We will see that a pulsed jammer can produce the same type of BER performance that occurs in a 
 
F
 
 
partial band jammer used in FH systems. One limitation with pulsed jamming is the fact that it is difficult to 
achieve very high pulse power levels.  
 
The average bit error probability is given by 
 
        
  
0
0
( )
(1
)
(
/
)
(
/
(
( )))
b
b
b
b
J
b
PE
PE E
N
PE E
N
N










         
(3.4-2) 
 
where  accounts for any despreading decrease in the noise or jammer spectral density level (see Section 
.2.1). The parameter  is the percentage of time the pulsed jammer is on. The object of the jammer is to 
e of  so as to maximize the value of the average erro
3
optimize the valu
r probability, 
b
PE
ect to the
, subj
 
nge of .  
ed Jamming 
or all the coherent systems, the bit error rate is given by  
allowable ra
 
 
3.4.1 Bit Error Rate Performance for DS/PSK in Puls
 
F

 158                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
                                         
0
b
N





 
where N0 is th
2
b
E

    
PE
Q



                                               
(3.4-3) 
e one-sided noise spectral density. When jamming is present the density changes, and that fact 
ust be reflected in the jamming calculations. The average PE is given by  
m
 
                
0
0
(
( ))
J
N
N
N








 
Normally the noise is negligible with respect to the jamming level so that (3.4-4) can be approximated by 
 
                                       
2
2
b
b
E
E








(1
)
b
Q
Q








                     
(3.4-4) 
PE
2E
( )
b
J
b
PE
Q
N










                                            
(3.4-5) 
ormally  is approximately unity, and that assumption will be made here to plot the curves versus . Using 
                                  


N
(3.4-1) and the fact that Eb =P/Rb and NJ =J/W yields the expression  
 
2
b
b
PW
PE
Q
JR











                                     
(3.4-6) 
 
 
Figure 3.4-2 illustrates the average BER as a function of  for DS/PSK modulation in pulse 
jamming. From the figure it can be seen that an optimum value of  occurs for each value of (P/J)(W/R). The 
easiest method of obtaining the optimum value of  is based on using the bound  
 
                                 
exp(
)
4
b
PE
X
X





                                 
(3.4-7) 
here 
 
w
b
P
W
X
J
R












. Consider the first derivative of (3.4-7) that yields 
                         
1
0
2
4
4
4
e
e
X e
X
X
X
X
X
X







                        
(3.4-8) 
this equation yields









 
Solving 
 Inserting the solution into (3.4-5) yields the following result 
 
0.5.
X


 


1
1      0.5
2
2
b
b
PW
PE
Q
X
JR
PW
PW




                                 
(3.4-9) 
                                 
     
0.5
b
b
b
PE
Q
JR
JR








ue or  at each PW/(JRb) value. 
 
Equation (3.4-9) is plotted in Figure 3.4-3, which uses the optimum val
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          159 
0
10
20
30
40
50
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.1
0.01
(P/J)(W/R)  (dB)
Average Probability of Error
0.00032
0.0016
0.008
0.04
0.2
=1
(P/J)(W/Rb) dB
Average
bility of error
 proba
0
10
20
30
40
50
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.1
0.01
(P/J)(W/R)  (dB)
Average Probability of Error
0.00032
0.0016
0.008
0.04
0.2
=1
(P/J)(W/Rb) dB
0
10
20
30
40
50
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.1
0.01
(P/J)(W/R)  (dB)
Average Probability of Error
0.00032
0.0016
0.008
0.04
0.2
=1
0
10
20
30
40
50
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.1
0.01
(P/J)(W/R)  (dB)
Average Probability of Error
=1
0.00032
0.0016
0.008
0.2
0.04
(P/J)(W/Rb) dB
Average
bility of error
 
igure 3.4-2 Average BER for various  versus the effective Eb/N0 for DS/PSK in pulsed jamming. 
Example 5 Consider a DS/BPSK link that is going to be jammed by an adversary. The received signal power 
 –145 dBW at the antenna output terminals, and the chip rate is 106 chips/sec. The data rate is 10 kbps, and 
e pulse
 proba
 
F
 
 
is
th
d bandwidth is 106 Hz. Determine the optimum pulsed jammer power necessary to increase the bit 
error rate to 10–1, neglecting thermal noise. Assume 0 dB gain for the receiver antenna. From Figure 3.4-3 the 
value of 
/(
)
c
b
PR
JR
 necessary to force the bit error rate to 10–1 is about 0 dB. The equation 
/(
)
c
b
PR
JR
 can 
be written in dB as 
 
his yields the value of J = –125 dBW received jammer power. Note that if the antenna gain were lower than 
 the direction 
 correspondingly larger. Also note 
ammer power 
 
3.4.2 Performance of SFH/MFSK in Pulsed Jamming 
 slow freq
bit error 
robability is given by (3.2-32). Again the average bit error rate probability is given by  
 
 
4) dB 
6
0 dB
145
10log(10 ) 10log(10
J




T
0 dB in
of the jammer the jammer power needed would be
that the j
is about 20 dB stronger than the signal power. 
 
 
In this section we consider a
uency-hopped system utilizing MFSK data modulation. The 
p
 
0
0
( )
(1
)
(
/
)
(
/
(
( )))
b
b
b
b
J
b
PE
PE E
N
PE E
N
N









 

(3.4-10) 
where  is the fraction of the time the pulse jammer is on. The analysis is identical to Section 3.3.4 so that the 
results are repeated here  
 
 




0
b
b
                                                   
b
c
E
E
PE





0
0J
0J
0
b
b
2
0
0J
0J
0
/
(1
)
1
1
exp
    
2
1
b
J
M
n
b
b
n
J
E
N
N
N
M
kE
n
E
E
PE
n
M
nN
N
N



 























 
(3.4-11) 

 160                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
10
0
10
20
30
40
50
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
(P/J)(W/Rb) (dB)
Bit Error Probability
(P/J)(W/Rb) (dB)
Bit error probability
10
0
10
20
30
40
50
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
(P/J)(W/Rb) (dB)
Bit Error Probability
(P/J)(W/Rb) (dB)
10
0
10
20
30
40
50
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
(P/J)(W/Rb) (dB)
Bit Error Probability
(P/J)(W/Rb) (dB)
(P/J)(W/Rb) (dB)
Bit error probability
 
 
igure 3.4-3 BER in optimum pulsed jamming for DS/PSK. 
F
 
 
The bit error rate performance is plotted in Figure 3.3-5. 
 
 
3.4.3 Per
of SFH/DPSK in Pulsed Jamming 
 
he BER of DPSK
formance 
 is given by (3.2-19) and is of the form 
 
T
                                              
   
0
exp
2
b
b
PE
N






                                    
(3.4-12) 
 
t follows that the average BER in pulse jamming is given by 
1
E


I
 
                         
1
exp
b
b
E
PE


0
0
J
exp
2
2
/
b
E
N
N
N















                 
(3.4-13) 
  




 
his expression is identical to the one in 
T
(3.3-23) so that it can be written as 
 
  
0
0
2
2
(
/
)
( /
)(
/(
)
b
b
b
N R
N R
P
J P R
W






 
nd the result is plotted in Figu
1
1
1
(1
)exp
exp
b
P
PE














   
(3.4-14) 
res 3.3-2 and 3.3-3. 
 
.4.4 Performance of Hybrid DS-SFH/MFSK in Pulsed Jamming 
Again the approach used here is to evaluate the mean error probability based on (3.4-2) that is repeated here 
for convenience 
A
 
3
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          161 
 
         
0
0
( )
(1
)
(
/
)
(
/
(
( )))
b
b
b
b
J
b
PE
PE E
N
PE E
N
N










           
(3.4-15) 
 
where  is the fraction of the time that the jammer is on, (1–) is the fraction of the time it is off, and NJ() is 
jammer spectral density that varies with . When thermal noise is neglected and the worst-case jammer is 
used, the results of (3.3-51) apply. The results are plotted in Figure 3.3-5. 
 
 
3.4.5 Performance of Hybrid DS-SFH/DPSK in Pulse Jamming 
 
The approach is similar to the previous section except the data modulation is for DPSK. Following Section 
3.3.2, the results are given in  (3.3-28), and plotted in Figures 3.3-2 and 3.3-3.  
 
 
3.5 BIT ERROR RATE PERFORMANCE IN TONE JAMMING 
 
In this section the performance of direct sequence spread spectrum receivers will be addressed for a number 
of modulation types in the face of tone jamming. 
Equation Section (Next) 
)/BPSK in Tone Jamming 
 this section tone jamming will be investigated for its effect on BPSK data modulation with direct sequence 
SK signal is modeled as 
                               
 
3.5.1 Bit Error Rate Performance for DS(BPSK
 
In
DS BPSK spread spectrum signaling. The DS(BPSK)/BP
 


0
0
( )
2
( )
( )cos
s t
Pd t PN t
t




  
                              
(3.5-1) 
 
where P is the received signal power, d(t) ( 

1,1

) is the binary valued data sequence, PN(t) is the binary 
alued pseudonoise sequence, 
0
is the angular carrier 
v
frequency, and  is the carrier phase. The tone 
                                               
jammer is modeled as  
 


0
( )
2
cos
J
J
n t
J
t




  
                              
(3.5-2) 
here J is the received jammer power, and 
 
w
J
 is the jammer carrier phase. The received signal y(t) is given 
e signal, jammer, and thermal noise, which is denoted by n(t).
 
                                                
by the sum of th
 Thus  
  
( )
( )
( )
( )
J
y t
s t
n t
n t



                                  
(3.5-3) 
he receiver is illustrated in Figure 3.5-1.  
 
T
 
X(T)
X(T)
y(t)
BPF

0
1
.
T
dt
T 
ˆ( )
d t


u(t)
u’(t)
0
IF
2cos (
)
( )
t
PN t






ˆ
2cos
t



0
IF
v(t)
y(t)
BPF
u(t)
u’(t)
v(t)

0
1
.
T
dt
T 
0
1
.
T
dt
T 
ˆ( )
d t


2cos (
)
( )
t
PN t






ˆ
2cos
t



0
IF
0
IF
 
igure 3.5-1 Model for a DS(BPSK)/BPSK receiver with tone jamming. 
 
F
 
 

 162                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
It is assumed that signal is despread perfectly (no time tracking error), and the signal is heterodyned 
eband coherently with no phase error (that is, ˆ


to bas
). Consider the effect of t
eading
 
n each component of the input signal. Consider 
ich is the bandpass filtered despread response, 
                      
(3.5-4) 
gnal and the first reference signal, 
he despr
 operation
( )
u t
'
, wh
o
which has three components 
 
                                               
( )
( )
( )
( )
s
J
n
u t
u t
u
t
u t



'
'
'
'
            
 
which includes the despread signal, jammer, and noise components.  
 
Consider the signal component first. Taking the product of the si
after neglecting the sum frequency term, produces  
 
                                    
 


' ( )
2
( )cos
u t
Pd t
t
0
s
IF




                       
(3.5-5) 
 
After the second multiplier the following signal is obtained 
 
                             
'
0ˆ
( )
( )2cos(
)
2
(2
)
s
s
IF
IF
v t
u t
t
P
O






            
(3.5-6) 
 
 
Out of the integrate-and-dump matched filter one has 
                             
 
  
0
s
T

 
(
)
T
d T 
( )
2
(
) 2
X T
Pdt
d T
P



                    
(3.5-7) 
here T– is the time just before the end of the bit time.  
er the jammer. The despread jammer component is
w
 
Now consid
 given by 
 
                                


' ( )
( )sin
2
J
IF
J
u
t
t
t
J PN




                         
(3.5-8) 
 
The jammer component, out of th second multiplier, is given by 
 
e 
       




'
0
0
ˆ
( )
( )2cos
2
( )cos
(2
)
  
J
J
J
IF
v t
u
O
IF
t
t
J PN t




       
 
onent is given by 
                              






(3.5-9)
 
Again twice the IF frequency will be neglected in what follows since it will be filtered out by the integrator 
following the sine wave heterodyning.  
 
Now consider the output of the integrate-and-dump filter. The jammer comp
 


0
0
2
( )
cos
( )
T
J
J
J
X
T
P
T




N t dt                     
(3.5-10) 
This can be written as 
 
                             
 



(
1)
0
1
2
cos
c
c
i
T
N
J
J
i
iT
J
i
X
T
P
T







N dt                        
(3.5-11) 
 
here PNi is the i-th term in the PN(t) process that exists for Tc seconds. The PNi will be modeled as random 
ng a probability of 1/2. Evaluating the integration 
roduces 
w
variables taking on the values of 1
 with each value havi
p
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          163 
                       



0
1
2
1
cos
(
)
N
J
J

 rewritten as 
 
i
c
i
J
X
T
PN NT
T
N





                  
(3.5-12) 
 
since NT  = T, (3.5-12) can be
c
                            



0
1
2
cos
N
1
J
J
i
i
T
J
N





(
PN                      
3.5-13) 
X

 
The mean value of 
( )
J
X
T  is given by  



0
J
E X
T

                                             
(3.5-14) 
                                                  
 
The variance of 
( )
J
 is given by 
X
T
 
                                        




2
0
2
( )
cos
J
Var X
T
J
J
N


                           
(3.5-15) 
hermal noise. The thermal noise can be written in the form 
 
                       


 
Now consider the t




( )
2
( )cos
2
( )sin
c
IF
s
n t
n t
t
n t
t




  
IF
                       
(3.5-16) 
by, after a little trigonometry, 
 
The despread noise is given 
 



             

2
( )
( )cos
n t PN t
t


             
(3.5-17) 
oise terms are approximately Gaussian with th
 of N0/2, 
 can 
' ( )
2
( )
( )sin
n
c
IF
u t
n t PN t
t


s
IF
 
Since the two baseband n
e spectral density
n
be approximated by 
' ( )
u t
 



                     

cos
IFt

                        
(3.5-18) 
 
Finally the noise component out of the second multiplier can be written as 
 
' ( )
2
( )sin
2
( )
n
c
IF
s
u t
n t
t
n t



       






'
0
0
0
ˆ
( )
( )2cos
2
( )cos
2
( )sin
n
n
IF
c
s
v t
u t
t
n t
n t








         
(3.5-19) 
 
cess is statistically (mean and variance) equivalent to 
T
 
his pro
               
                                     
( )
2
( )
n
c
v t
n t

                 
 
s is indicated by the fact that when
                          
(3.5-20) 
 
0
0

, vn(t) is exactly equal to (3.5-20), for example. The variance of 
grate-and-dump filter is given by 
a
t
 
he noise out of the inte


2
0 0
1
( )
2
( ) 2
( )
T T
n
c
c
Var X
T
E
n t
n u dtdu
T



                   
(3.5-21) 
                         




ing
 
Evaluating this expression and not
 that 
'
2
( )
cn t  has two-sided noise spectral density of N0 leads to  
 

 164                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  


0
( )
n
N
Var X
T
T

                                                      
                   
 
rmal noise and the jammer noise can be modeled as Gaussian 
e output of the integrate-and-dump is given by  
                                             
                 
(3.5-22) 
Assuming that the sum of the the
oise, the mean and standard deviation of th
n
 


2
0
0
2
2
cos
J
P
N
J
T
N







  

                           
(3.5-23) 
probability of 
                                       
 
was transm
error is given by 
Given that a “plus one” bit 
itted, the 
 
2
2
2
1
exp
2
2
b
P
x
PE
d












  
x                             
(3.5-24) 
         
 
which can be evaluated to  
 


2
0
0
2
2
cos
b
c
J
PT
PE
Q
N
JT













                          
     
 which Q(x) is defined as 
                                   
                    
(3.5-25) 
 
in
2
1
( )
exp
 
2
2
             
x
 
 
When therm
u
Q x
du











                     
al noise is neglected compared to the jammer and the worst-case jammer phase angle is 
ssumed (
(3.5-26) 
a
0
J



), then (3.5-25) can be written as 
              
 
                       
c
b
c
b
PE
Q
Q
JT
J R

R
PT
P













                                 
(3.5-27) 
nd factor in the right-hand side of (3.5-27) is the processing gain (PG) f
 sy
t 
, 
 
where the seco
or BPSK
stems; tha
is
/
c
b
PG
R
R

. 
The 
loss 
would 
be 
less 
if 


 
is 
not 
zero 
[4]. 
Furthermore 
if 
0
(2
1)    
1,2,3...
J
n
n







, then the effect of the jammer is theoretically zero. It is to be noted, however, 
aintain the jammer
l 
formance that is somewha
e “perfec
 
that it is essentially impossible to m
with the signal. In reality some smal
frequency error occurs with per
worse than predicted by th
t” jammer
 coherent 
t 
(
0
J



). Figure 3.5-2 illustrates two curves relevant to DS(BPSK)/BPSK. The upper curve corresponds to 
s on t
the case (3.5-25) that the jammer take
he worst-case phase causing the highest error rate (
0
J



), and 
the second curve is based on averaging the phase difference of the jammer over 0 to 2 radians, assuming 
at the phase is uniformly distributed. Thus the second curve is based on the equation 
                        
th
 


  

2
0
1
1
2
b
c
2
1
2
cos
b
PE
Q
d
PT
E
JT

















                            
(3.5-28) 
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          165 
Both curves of bit error rate are 
)(Rc/Rb) expressed in dB
se that the
worst-case jammer phase angle i
 20. Notice that when
plotted versus the ratio (P/J
 for the ca
 
s assumed, and for Eb/N0 =
 the jammer phase is 
randomi
mer is about 1.5 dB less effective than the optimum jammer phase 
zed the jam
(
0
J



). 
 
3.5.2 Bit Error Rate Performance for DS(QPSK)/BPSK in Tone Jamming 
 
SK data modulation with DS QPSK co
nsidered. Fi
 
that will be used for analysis purposes. 
 
 
In this section the case of BP
de spreading is co
gure 3.5-3
illustrates the receiver model 
BPSK aver
jammer pha
age 
se
BPSK worst-case
mmer phase
ja
0
1
2
3
4
5
6
7
8
9
10 11 12 13 14 15
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.1
0.01
1
(P/J)(Rc/Rb) dB
ver
bability
or
A
age Pro
 of err
QPSK any
jammer phase 
and MSK
(P/J)(Rc/Rb) dB
A
e pr
lity of
r
age 
se
rst-case
mmer phase
BPSK wo
ja
verag
obabi
 erro
BPSK aver
jammer pha
0
1
2
3
4
5
6
7
8
9
10 11 12 13 14 15
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.1
0.01
1
(P/J)(Rc/Rb) dB
ver
bability
or
A
age Pro
 of err
QPSK any
jammer phase 
and MSK
(P/J)(Rc/Rb) dB
age 
se
rst-case
mmer phase
BPSK wo
ja
BPSK aver
jammer pha
0
1
2
3
4
5
6
7
8
9
10 11 12 13 14 15
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.1
0.01
1
(P/J)(Rc/Rb) dB
ver
bability
or
A
age Pro
 of err
QPSK any
jammer phase 
and MSK
BPSK aver
jammer pha
age 
se
rst-case
mmer phase
BPSK wo
ja
1
0
1
2
3
4
5
6
7
8
9
10 11 12 13 14 15
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.1
0.01
(P/J)(Rc/Rb) dB
ver
bability
or
A
age Pro
 of err
QPSK any
jammer phase 
and MSK
(P/J)(Rc/Rb) dB
A
e pr
lity of
r
 
t the worst-case phase. 
 
 
 erro
obabi
verag
 
Figure 3.5-2 BER for a tone jammer a
y(t)
BPF

0
1
.
T
dt
T 
ˆ( )
d t


0
2cos
IFt



u(t)
u’(t)
v(t)
X(T)
r(t)
y(t)
BPF

0
1
.
T
dt
T 
0
1
.
T
dt
T 
ˆ( )
d t


0
2cos
IFt



u(t)
u’(t)
v(t)
X(T)
r(t)
 
The reference signal, w
           
 
Figure 3.5-3 Model for a DS(PSK)/BPSK receiver with tone jamming. 
 
 
hich is the input to the first multiplier in Figure 3.5-3, is denoted by r(t). The 
received signal plus jammer plus noise is described by 
 
  
                               
( )
( )
( )
( )
J
y t
s t
n t
n t



                                      
(3.5-29) 
 
where the received signal is given by 
 
         
1
0
0
2
0
( )
( )
( )cos(
)
( )
( )sin(
)
s t
Pd t PN t
t
Pd t PN t
t
0








        
(3.5-30) 
 
 jammer process is modeled as 
                                       
and the Gaussian
 
0
( )
2
cos(
)
J
J
n t
J
t




                           
(3.5-31) 
he thermal noise is described as 
 
T

 166                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
                  
0
0
0
0
( )
2
( )cos(
)
2
( )sin(
)
c
c
n t
n t
t
n t
t








                     
(3.5-32) 
 
Consider the signal component first. The signal component after the first multiplier is given by 
 
0
0
( )
/ 2 ( )cos(
)
/ 2 ( )cos(
s
IF
IF
u t
P
d t
t
P
d t
t
)







              
0
         
(2
)
IF
O

            
(3.5-33) 
here O(x) denotes a signal at a frequency of x. After the bandpass filter, the signal component is given by 
 
               




 
w
'
0
0
( )
/ 2 ( )cos(
)
/ 2 ( )cos(
)
s
IF
u t
P
d t
t
P
d t
t
IF








           
(3.5-34) 
 
After the second multiplier, the signal component is given by 
 
                        
'
0
( )
( )2cos(
)
2
( )
(2
)
s
s
IF
v t
u t
t
Pd t
O
IF







                
(3.5-35) 
 
After being integrated by the integrate-and-dump filter and neglecting the O(2IF) term, the signal 
component is given by 
 
                                            
( )
2
(
)
s
X T
Pd T 

                                            
(3.5-36) 
 
re 
 is the value just prior to the end of a bit time. Now consider the jammer signal as it is processed 
ultiplier the jammer signal takes the form 
               
 T 
whe
from the input all the way to the output. After the first m
 


1
2
0
( )
( )cos(
)
( )sin(
)
         
(2
)
J
IF
J
IF
u
t
J PN t
t
PN t
t
O
IF
J












             
(3.5-37) 
 
The bandpass filter removes the second term in (3.5-37) so that after the second multiplier one obtains (using 
0
J






) 
 


                 
1
( )
( )cos(
)
2( )sin(
)
(2
)
J
IF
N t
O
v t
J PN t
P





          
(3.5-38) 
The jammer signal out of the integrate-and-dump produces (neglecting the double frequency term 
since it w



 
 
ill be filtered out by the integration) 
 


1
2
0
( )
( )cos(
)
(
T
J
J
                 
)sin(
)
T
PN t
PN
T






t
dt

              
(3.5-39) 
X
 
This can be written as 
 
(
1)
(
1)
1
2
1
1
cos(
)
sin(
)
( )
c
c
c
c
i
T
i
T
N
N
J
i
i
i
i
iT
J
J
X
T
PN dt
PN dt
T
T












hip values of PN1(t) and PN2(t). E
 be rewritten as 
      
     
(3.5-40) 
iT


 
where PN1i and PN2i are the i-th c
quation (3.5-40) can
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          167 
1
2
1
1
1
( )
cos(
)
sin(
)
N
N
1
J
i
c
i
c
i
X
T
J
PN NT
J
PN NT
N
N









       
i
        
(3.5-41) 
ote that the mean of Xj(T) is zero, assuming that the PNki chips (k = 1 or 2) are random variables taking on 
the value
 
                   
 
N
s of 1
 with probability of 1/2. The variance can be evaluated by  
 






2
1
1
2
1
1
2
2
2
2
1
1
                   
sin(
)
1
( )
cos(
)
1
N
N
J
i
j
i
j
N
N
Var X
T
J
E PN PN
N






                   
(3.5-42) 
o the simple result 
i
j
i
j
J
E PN PN
N






 
This can be evaluated t
 
                                 


2
1
1
( )
N
Var X
T
J
1
J
i
J
N
N



                           
(3.5-43) 
Now consider the despread thermal noise. The despread noise is given by 

 
 
 
                
0
0
0
0
( )
( )
2
( )cos(
)
2
( )sin(
)
n
c
s
u t
r t
n t
t
n t
t












         
(3.5-44) 
has 
0
IF
 
ultiplying the terms out one 
After m
 
    
1
1
( )
( )
( )cos(
)
( )
( )sin(
)
          +
( )
( )sin(
)
( )
( )cos(
)
(2
)
n
c
IF
s
IF
u t
n t PN t
t
n t PN t
t
n t PN t
t
n t PN t
t
O
1
2
c
IF
s
IF











    
(3.5-45) 
 
Out of the second multiplier one has  
 
                                 
  
'
0
( )
( )2cos(
)
n
n
IF
v t
u t
t




                             
(3.5-46) 
This can be 
plified to the following expression 
   
0
0
 
sim
 
1
0
2
2
0
1
( )
( )
( )cos(
)
( )
( )cos(
)
          
( )
( )sin(
)
( )
( )sin(
)
n
c
s
c
s
v t
n t PN t
n t PN t
n t PN t
n t PN t








 
               
    
dependent codes) that is equivalent to one noise term multiplied by 
         
(3.5-47) 
 
This sum is equivalent to the sum of two independent baseband white noise terms (multiplied by two 
in
2 . That is to say 
                       
 
                  
( )
2
( )
n
c
v t
n t

                        
density of N0/2 W/Hz. The assumption that the despread jammer is Gaussian, since it 
umber of random variables having the values of
               
(3.5-48) 
 
which has a two-sided 
s the sum of a large n
i
 
1
, allows us to write the error 
robability as 
                             
p
 
2
2
1
exp
2
2
x
P
2P
E
dx










                            
(3.5-49) 
his can be evaluated as 


 
T

 168                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
                                         
0
c
2PT
PE
Q
N
JT








 
In comparing (3.5-50) with (3.5-25), it is seen that the worst-case tone
                               
(3.5-50) 
 jamming has 3 dB greater effect 
DS-BPSK/BPSK than for DS-QPSK/BPSK! Figure 3.5-2 illustrates the worst-case DS-PSK/BPSK and 
the average jammer phase DS-BPSK/BPSK, along with the DS-QPSK/BPSK case. 
3.5.3 Bit Error Rate Performance for DS(MSK)/BPSK in Tone Jamming 
 
ow consider the bit error rate performance of uncoded direct sequence DS MSK SS signals with BPSK data 
 similar to the two previous sections, so that the exposition will be 
rief. Figure 3.5-4 illustrates the receiver model for DS-MSK/BPSK. 
nal r(t), letting 
for 
 
 
N
modulation. The analysis in this section is
b
The reference sig
'
0
0
IF





, is given by 
  
 




  


2
0
         
2
(
/ 2)sin
/ 2
( )sin
c
c
c
c
i
c
p t
iT
T
t
iT
T
PN t
T


'
1
0
( )
2
(
)sin
( )cos
c
c
i
c
r t
p t
iT
t
iT
PN t
t
T



't















    
(3.5-51) 
 seconds, starting at time zero. Note that the second set of terms is 
ffset from the first set by one half of a chip, as in offset QPSK. Note also that only the positive half of the 
soid is used in this representation of MSK modulation; see [4] for more details. 








 
where p(t) is a unit pulse of duration Tc
o
sinu
 
y(t)
BPF

0
1
.
T
dt
T 
u(t)
v(t)
r(t)
y
BPF

0
1
.
T
dt
T 
0
1
.
T
dt
T 
ˆ
d(t)
u
v
0
2cos(
)
IFt



X(T)
u’(t)
y(t)
u(t)
BPF

0
1
.
T
dt
T 
0
1
.
T
dt
T 
0
1
.
T
dt
T 
v(t)
r(t)
y
u
v

0
1
.
T
dt
T 
BPF

0
1
.
T
dt
T 
0
1
.
T
dt
T 
0
1
.
T
dt
T 
ˆ
d(tˆ
d(t)
0
2cos(
)
IFt



X(T)
u’(t)
 
el for a DS(MSK)/BPSK receiver with tone jamming. 
  
 
Figure 3.5-4 Mod
 
 
The signal is represented by 
 




1
0
0
( )
2
( )
( )cos
s t
Pd t
N t
t


  




2
0
0
   
2
( )
(
/ 2)sin
/ 2
( sin
c
c
c
c
i
c
Pd t
p t
iT
T
t
iT
T
PN
t
T

(
)sin
)
c
c
i
c
p t
iT
t
iT
P
T
t
























   
(3.5-52) 
nd the tone jammer and the thermal noise are defined in (3.5-2) and (3.5-32), respectively. The reference 
by  
 



 
a
signal for the first multiplier is given 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          169 







1
0

2
0
0
)sin
( )cos (
         
2
(
/ 2)sin
/ 2
( )sin (
)
c
c
c
c
c
IF
t
iT
PN t
T
p t
iT
T
t
iT
T
PN t
t




0
( )
2
(
)
c
c
IF
i
r t
p t
iT
t

     
i
cT






















     





(3.5-53) 


 
Define u(t) as the product of the input and the reference signal, and r(t) and uJ(t) as the signal component of 
at product; hence 
th
 
                                          
( )
( ) ( )
su t
s t r t

                                       
(3.5-54) 
   
 
Evaluating produces the result 
 




( )
2
( )
(
)sin
(
)sin
c
c
Pd t
p t
iT
t
t
jT
T
T
)
(
(
) cos
       
2
( )
(
)sin
(
)
2
2
       
(
)sin
(
) cos
2
2
      
cross ter
s
c
c
IF
i
j
c
c
c
c
c
c
i
c
c
c
c
c
IF
j
c
u t
iT
p
t
jT
t
T
T
Pd t
p t
iT
t
iT
T
T
T
p t
jT
t
jT
t
T













































ms
(2
)
O




        (3.5-55) 
  









0
IF
 
Noting that the MSK shaping function can only exist at one time produces 
 




2
2
0
( )
2
( )
(
)sin
(
)
cos
       
2
( )
(
)sin
(
)
cos
2
2
      
cross terms
(2
)
s
c
c
IF
i
c
c
c
c
c
i
c
IF
u t
Pd t
p t
iT
t
iT
t
T
T
T
Pd t
p t
iT
t
iT
t
T
O




IF































   
(3.5-56) 
 
oting that  
                       
N
 
2
1
1
2
sin
(
)
cos
(
)
2
2
c
c
c
c
t
iT
t
iT
T
T















  



                
(3.5-57) 
produces for us(t) the signal term, neglecting the double frequency component 
                             
 
 
     


' ( )
2
( )cos
s
I
u t
Pd t
t
F




                          
 
The second multiplier produces the value of the signal component into the integrator 
(3.5-58) 
 
                                      
( )
2
( )
(2
)
s
IF
v t
Pd t
O



                          
(3.5-59) 
 
Out of the integrator, the signal component is given by 
 

 170                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
                                              
( )
2
(
)
s
X T
Pd T 

                           
(3.5-60) 
Now consider the jammer. The first component of the jammer signal is the product of 
and the reference signal, letting 
 
 
the jammer 
'
0
0
IF





, which yields 
 


    




0
( 2
cos
)sin
(
)
2
2
i
c
'
1
0
2
(
)sin
(
)
( )cos
( )
c
c
'
2
0
2
(
( )sin
J
c
c
c
c
i
c
T
J
t
T
T
t
iT
P
T
J
p t
iT
t
iT
PN t
t
u
t



p t
iT
N t
t



















   (3.5-61) 
fter the first multiplication with r(t) produces 
 
       





















 
A




'
1
1
( )
2
(
)sin
(
)
( )cos
       
2
(
)sin
(
)
( )sin
J
c
c
IF
i
c
c
c
IF
i
c
u
t
J
p t
iT
t
iT
PN t
t
T
J
p t
iT
t
iT
PN t
t
T

J
J



























        
(3.5-62) 
 
The output of the second multiplier is given by the product of
 and 
 
' ( )
Ju
t


2cos
IFt



 so that 
 
         
1
(
)sin
(
)
( )cos(
)
c
c
J
  
2
( )
2
(2
)
sin
(
)
( )cos(
)
2
2
i
c
J
IF
c
c
c
c
J
i
c
v t
J
O
T
T
p t
iT
t
iT
PN t
T
p t
iT
t
iT
PN t
T













































 
(3.5-63) 
nce the output component is the average over T seconds, one has 
 







 
Si
1
0
2
(
)sin
(
)
( )cos(
)
2
(2
)
sin
(
)
( )cos(
)
2
2
c
c
T
i
c
 
( )
           
J
IF
c
c
c
c
i
c
p t
iT
t
iT
PN t
T
J
T
dt
O
T
T
T
p t
iT
t
iT
PN t
T


X

















































 (3.5-64) 
 
where 
J






. Breaking up the integral over each chip time produces 
 
(
1)
1
1
           
(
1)
2
sin(
)
c
c
i
T
N
T
J








2
2
i

1
2
cos(
)
( )
sin
(
          
sin
c
c
i
T
N
J
c
i
c
iT
c
i
c
iT
J
T
t
iT
T
T
t
iT
PN dt
T
T
























           
(3.5-65) 
code. Since XJ(T) is a random variable, consider the 
)
i
X
PN dt


 
in which PNkj denotes the j-th component of the k-th 
ariance of the expression. The variance is given by 
v
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          171 


Var
( )
J
X
T





(
1)
(
1)
2
1
1
2
2
           
2 sin(
)
            
sin
sin
2
2
c
c
c
i
T
j
T
N
N
i
j
c
jT
c
c
c
c
j
c
c
T
T
J
t
iT
t
jT
T
T
T










































(
1)
(
1)
1
2
1
1
        
 
c
c
c
c
i
T
j
T
N
N
i
j
i
iT
jT
1
2
2
2 cos(
)
  
     
sin
sin
c
c
c
i
j
c
iT
J
t
iT
t
jT
PN PN dtds
T
T
T

















  
     
PN PN dtds
cross terms







) 
 
Utilizing (3.5-57), simplifying and neglecting the double frequency terms and the cross terms 
produces  
 
 (3.5-66
         


2
2
2
2
1
1
2 cos(
( )
)
1
2 sin(
)
1
2
2
N
N
J
c
c
i
i
J
T
T
T
T















J
Var X
T







       
(3.5-67) 
 
lifying even further produces 
 
                               
Simp


2
1
( )
N
J
c
i
J
J
Var X
T
T
T
N




                              
(3.5-68) 
ent 
n by 
                                  
 
 
Now consider the thermal noise component. The noise compon
is give
 
( )
( ) ( )
n
u t
n t r t

      
(3.5-69) 
n be written as 
 
which ca




0
0
 
1
           2
(
)sin
(
)
( )cos
c
c
i
c
p t
iT
t
iT
PN t
T








0
2
0
( )
2
( )cos(
)
2
( )sin(
)
(
)
       
2
sin
(
)
( )sin (
)
 
2
2
n
c
s
IF
c
c
c
c
IF
i
c
u t
n t
t
n t
t
t
T
T
p t
iT
t
iT
PN t
t
T










































  
(3.5-70) 
which, after assuming that the sum frequencies are removed by the BPF, can be expanded to the following 
form 
 
  
 








'
2
1
)
       
2
( )
sin
( )cos(
)
2
2
      
2
( )
sin
( )sin(
)
     
2
( )
IF
c
c
s
c
c
IF
i
c
s
c
c
IF
i
c
u
t
T
T
n t
p t
iT
t
iT
PN t
t
T
n t
p t
iT
t
iT
PN t
t
T
n t
p t
iT














































1
( )
2
( )
sin
( )cos(
n
c
c
c
i
c
t
n t
p t
iT
t
iT
PN t
T








c
c
2
2
2
c
IF
i
cT
sin
( )sin(
)
c
c
T
T
t
iT
PN t
t















  
(3.5-71) 
he second multiplication produces the product 








 
T

 172                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 


'
( )
2cos
( )
n
IF
v t
t
u t




 
n
(3.5-72) 
 
This can be written, after removing the sum frequencies (which are removed by the integrate-and-dum
filter), by 
 
   
p 











1
1
( )
2
( )
sin
( )cos
      
2
( )
sin
( )sin
     
2
( )
sin
2
n
c
c
c
i
c
s
c
c
i
c
c
c
v t
n t
p t
iT
t
iT
PN t
T
T
T
n t
p t
iT
t
iT
PN t
T
T
n t
p t
iT
T



2
       
2
( )
sin
( )cos
2
2
c
c
s
c
c
i
c
n t
p t
iT
t
iT
PN t
T




























c
c
i






























    
(3.5-73) 

2( )sin
2
c
c
T
t
iT
PN t















ng integrate-and-dump filter, over the ti
T seconds, is a 
ven by 
 
 
 
The output of the averagi
me from 0 to 
random variable, and is gi
0
1
                                           
( )
( )
n
n
X
T
v t dt
T

                              
T
(3.5-74) 
variance will be computed. The variance of 
 is given by 
                                
 
ince it is a random variable, the 
S
( )
n
X
T
 


2
0 0
1
Var
( )
( )
( )
T T
n
n
n
X T
E
v t v u dtdu
T








              
(3.5-75) 
where the E{x} denotes the expectation of x. For convenience in the notation, an over bar will denote the 
expectation also. Evaluating (3.5-75) produces 
 
 
 









2
1
1
2
0 0
2
( )
( )
sin
sin
( )
( )
cos
c
c
c
c
c
c
i
j
c
c
n t n u
p t
iT p u
jT
t
iT
u
jT
PN t PN u dudt
T
T
T














2
2
0 0
Var
( )
cos( )
( )
2
( )
( )
sin
sin
2
2
2
n
T T
T T
c
c
c
s
s
c
c
c
i
j
c
c
X
T
T
T
T
n t n u
p t
iT
p u
jT
t
iT
u
j
T
T
T













































2
2
2
2
0 0
2
                                                                                                                     
( )
( )
sin( )
2
( )
( )
sin
c
c
T T
s
s
c
c
i
j
T
T
PN t PN u dudt
n t n u
p t
iT p u
jT
T
T

























1
1
(
)
t
u dudt
2
2
0 0
sin
)
(
sin( )
2
( )
( )
sin
sin
2
2
2
2
                                      
c
c
c
c
T T
c
c
c
c
c
c
c
c
c
c
i
j
c
c
t
iT
u
jT
PN
PN
T
T
T
T
T
n t n u
p t
iT
p u
jT
t
iT
u
jT
T
T
T






























































2
2
                                                                               
( )
( )
PN t PN u dudt

 
                                                             (3.5-76) 
hat the expected value of the noise pairs yield (N0/2)(t–u). 
 
Equation (3.5-76) can be simplified by noting t
Thus 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          173 




2
2
2
0
2
0
2
2
2
i
c
T




0
2
0
2
2
2
0
2
0
2
0
2
2cos
Var(
( ))
(
) sin
(
)
2
2cos
sin
2
2
2
2sin
(
) sin
(
)
2
2sin
2
T
n
c
c
c
c
c
c
i
c
T
c
c
i
c
N
X
T
p t
iT
t
iT
dt
T
T
N
T
T
p t
iT
t
iT
dt
T
T
N
p t
iT
t
iT
dt
T
T
N
T





































































 
2
2
0
sin
2
2
T
c
c
c
c
i
c
T
T
p t
iT
t
iT
dt
T































 
(3.5-77) 
 
Using (3.5-57) and noting that the summation yields unity everywhere yields 
 
 
2
2
0
0
2
2
0
0
2cos( )
2sin( )
Var(
( ))
T
T
n
N
N
X
T
dt
dt
T
T
T
T






 
0
N
T

(3.5-78) 
 
), which leads to the final result for the bit error rate 
 
Now approximate the sum of the jammer noise and the thermal noise as nonwhite Gaussian noise. Then 
use 
.5-60), (3.5-68), and (3.5-78
(3
 
0
2
c
PT
PE
Q
N
JT








 
(3.5-79) 
 
It is to be observed that this result is the same as for the DS(QPSK)/BPSK of Figure 3.5-2! It should 
notch filter at the jammer frequency could defeat a t
ammer. This will cause 
 signal level but normally removes nearly all of t
 
quite ineffective.  
 
ATE PERFORMANCE 
Both SFH/MFSK and SFH/DPSK will be considered in this section. Noise will not be considered in the 
analysis to follow. This greatly simplifies the analysis, but provides only approximate answers when noise is 
present. 
 
3.6.1 Multitone Jamming Bit Error Rate Performance for SFH/MFSK 
 
 this section the bit error rate (BER) performance will be determined under idealized conditions for 
equency-hopped systems only. Numerous analyses have been performed [9, 12–16] in the area of multitone 
jamming, including nonorthogonal frequency spacing as well as orthogonal frequency spacing. The analysis 
presented here follows [13] in which it is assumed that orthogonal frequency spacing of the modulated tones 
is used. Figure 3.2-6 illustrates a model of the FH/MFSK receiver.  
 
It is assumed that the jammer has complete knowledge of the signal structure including the hopping 
bandwidth, and transmits only one jamming tone per MFSK frequency bin. Slow frequency hopping is 
assumed in this analysis. The MFSK symbol rate is given by
 
be pointed out that placing a 
one j
some degradation in the
he tone jammer so that it becomes
Equation Section (Next) 
3.6 MULTITONE JAMMING BIT ERROR R
 
In
fr
 
2
/ log (
)
sy
b
R
R
M

, where Rb is the bit rate 
input to the MFSK modulator, and M is the number of tone
odulation. At each hop 
quency, one of M possible MFSK tones can be tra
nce the 
andwidth associated with each hop is given by 
s used in the MFSK m
fre
nsmitted. The tones are spaced Rsy Hz apart. He
b
2
/ log (
)
sy
MR
M
m
W 
. The jammer transmits a total of n 
tones, each having a power of 

 174                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
/
n
J
J n

 
(3.6-1) 
and spaced apart by Wm Hz. 
 
Neglect the thermal noise in the analysis to follow. Under this condition it follows that if Jn < P, 
where P is the received signal power, the correct MFSK tone will be detected. When Jn > P, then a symbol 
error will be made if the jamming tone is at the correct hop frequency, but not located at the correct signal 
MFSK frequency. It follows that the jammer should not use more power than necessary in order to maximize 
e number of frequency hops possible. In the limiting case set the jammer power to just more than the signal 
wer so that the number n approximates 
 
 
th
po
J
n
P






 
(3.6-2) 
 
where x

 denotes the largest integer less than or equal to x. If J < P, then n = 0. It will be assumed that  
mber of frequency hop bins, 
J > P in what follows. The maximum value of n, call it nmax, is bounded by the nu
or  
 
max
m
W
n
W

 
 
(3.6-3) 
 
 
The probability of any one FH band being jammed is given by the ratio 
 
Jam
m
n
p
W W










 
 
When al
(3.6-4) 
 
l FH bands are jammed and n is chosen from (3.6-2), then the symbol error probability is just the 
probability that the jammer is not at the same MFSK frequency as the jammer so that  
 
 
1
1
sy
P
M

 
(3.6-5) 
 
when W/Wm < J P



. Now when all the FH bands are not jammed, then the probability of a symbol error is 
given by the probability that the correct hop band is chosen and the jammer does not fall at the frequency of 
the signal. Thus 
 


1
 
1
m
sy
P
M
W


 
(3
nW
.6-6) 
 
under the condition that 1
m
J
W
P
W






. As noted earlier when the jammer power is less than the signal 
power, then the symbol error probability is zero. Thus when can write the following 
 




1
1
                      
  
1
1-
      1  
 
0                                  
 1
m
sy
m
m
W
J
M
W
P
nW
PE
m
W
P
W
J P



J
W
































(3.6-7) 
 


 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          175 
 
 
In order to obtain the b
 
it error rate probability, note that  
 
M
/(2(
1))
b
sy
PE
MPE


 
r ortho
(3.6-8) 
 
fo
gonal signals (MFSK) and that n; J/P and Wm = MR/(log2M). It is left to Problem 7 to show that  
 
 


2
0.5                               
  
(log
)
PW
M
M
JR
2
2
     
  
  
2log
lo
0                                   
  
b
b
b
b
m
b
b
JR
M
PW
W
M
PE
M
g
R
PW
M
JW
PW
W R
JR















  
(3.6-9) 
Th
than partial band noise jamming in the sense that for the same PW/(JRb), the bit error rate is 
igher for multitone jamming. 










 
is relationship is plotted in Figure 3.6-1 for M =2, 4, 8, and 16. This figure should be compared to 
Figure 3.3-5 for SFH/MFSK in partial band noise jamming, where it can be seen that multitone jamming is 
more efficient 
h
 
10log
b
PW
JR






PEb
0
2
4
6
8
10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40
1 10 6
1 10 5
1 10 4
1 10 3
0.01
1
0.1
M=2,4
M=8
M=16
10log
b
PW
JR






PEb
0
2
4
6
8
10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40
1 10 6
1 10 5
1 10 4
1 10 3
0.01
1
0.1
M=2,4
M=8
M=16
 
igure 3.6-1 BER performance for multiple-tone jamming of SFH/MFSK. 
This analysis assumed that only one tone per MFSK hop frequency was utilized. If the hop 
xactly, then this
 tones than what 
6-9) is asymptotically 
m
b
 
3.6.2 Multitone Jamming Bit Error Rate Performance for SFH/DPSK 
 
In this section the performance of slow frequency hopping with binary differential phase shift keying is 
obtained. This work follows [9, 13]. Extensions to M-ary DPSK can be found in Simon [18].  
 
F
 
 
 
frequencies are known e
 jamming procedure works well. If the hop frequencies are not 
known exactly then more
was considered in the previous analysis may be a better choice; see 
Levitt [10, 14, 17]. Even with a more detailed analysis, it can be shown [13] that (3.
ccurate at high values of of (PW )/(JR ). 
a
 

 176                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
Again the total received jammer power is assumed to be J W. Each jammer has power Jn where  
 
n
J
J
n

 
 
 
The received signal power is assumed to be P W, and each frequency hop bandwidth is assumed to be Rs Hz, 
where Rs is the encoded symbol rate and Rs
(3.6-10) 
 ;  Rb, where Rb is the bit rate. The frequency hop bandwidth is W 
z. The number of frequency hop frequencies is given by 
H
 
FH
s
W
N
R

 
 
(3
 
.6-11) 
 
 
It follows that the probability that a hop is jammed is given by 
 
Jam
FH
s
n
n
P
W
N
R


 
(3.6-12) 
It will be assumed that the noise is negligible. The DPSK demodulator functions by comparing the phase of 
the present symbol with the previous symbol. When the phase difference, call it 
 
2
1
(
)








, satisfies 
 

 
2
2





 
(3.6-13) 
 
then the receiver detects a “one.” And when 

 satisfies 
 
3
2
2





 
 
(3.6-14) 
 
the receiver detects a “zero.” The received signal plus jammer is a vector sum of the two terms. The resulting 
angle of the sum of the signal plus jammer for the present symbol minus the resulting angle of the sum of the 
signal plus jammer for the past symbol is used to determine the phase difference, 

, determines the 
detected data bit. Consider the case when a data bit “one” was transmitted, which is illustrated in Figure  
3.6-2. 
In Figure 3.6-2(a) the presently received data symbol and the previously received data symbol are 
shown on the right and left sides, respectively, for the case of a data bit “1” has been transmitted. Figure  
3.6-2(b), the presently received data symbol and the previously received data symbol shows on the right and 
left sides, respectively, for the case of a data bit “0” that has been transmitted. Also the two diagrams have 
been joined at the point designated as “0” in Figure 3.6-2(b). Clearly in the case of the data bit “1” the phase 
angle difference is zero, and the detector correctly detects a data bit “1.” In the second case of the transmitted 
data bit “0” the phase angle 

 is not zero. Using the law of cosines on the triangle A0B yields the result 
 
 




2
2
2
1
2
2 2
cos
2 4
n
R
R
P
J P





 
(3.6-15) 
Solving for the angle 
 
 from the triangle 0CA and 0BD produces the results 
 
 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          177 
2
 

2
2 4
n
2
2
cos
n
P
J
R




 
(3.6-16) 
J P
 
 
2P
2
R
In this case:
2
n
J

1
2
1
2
,  R
R




2
(a) A data bit “1” was transmitted by two successive data symbols of value “1” and “1”
2P
2
n
J
1
1
R
2
R
In this case:
0
2P
2P
2
n
J
2
n
J
1
R
2
R
1
2



(b) A data bit “0” was transmitted by two successive data symbols of value “1” and “0”
1
2
1
2
,  R
R




In this case:
C
A
B
D


2P
2
n
J

1
2
1
2
,  R
R




2
(a) A data bit “1” was transmitted by two successive data symbols of value “1” and “1”
2P
2
n
J
1
1
R
2P
2
n
J
2
2
R2
R
In this case:
In this case:
2P
2
n
J

1
2
1
2
,  R
R




1
2
1
2
,  R
R




2
(a) A data bit “1” was transmitted by two successive data symbols of value “1” and “1”
2P
1
R
2
n
J
1
1
R
2
n
J
1
2P
0
A
B
2P
2P
2
n
J
2
n
J
1
R
2
R
1
2



(b) A data bit “0” was transmitted by two successive data symbols of value “1” and “0”
1
2
1
2
,  R
R




In this case:
C
D


0
2P
2P
2
n
J
2
n
J
1
R
2
R
1
2



0
A
B
2P
2P
2
n
J
2
n
J
1
R
2
R
1
2



(b) A data bit “0” was transmitted by two successive data symbols of value “1” and “0”
1
2
1
2
,  R
R




In this case:
C
D


 
igure 3.6-2 (a, b) Phase diagram showing the effect of a tone jammer on a data bit “1” and a “0” for SFH/DPSK modulation. 
 
and  
 
F
 
 



2
1
2
2
cos
cos
2 4
n
n
P
J
R
J P






 
(3.6-17) 


olving (3.6-16) and (3.6-17) for
 and substituting into (3.6-17) produces the result 
 
S
 
2
2
1
2
R
R

 




1
2
2
cos
n
J
P

 
R

R


 
(3.6-18) 
his result is established in Problem 8. When
 
 
3
2

T
2




.e., a “0” data bit was transmitted). When
, the demodulator produces the correct output, 
 
(i
2
2






, then an error is made on the data bit “0.” In 
other words whenever 


cos


0

 then an error is made. This occurs whenever Jn > P. There are no errors 
when a data bit “1” is transmitted. Therefore the number of jammer tones is given by 
 
 
J
n
P
;
 
(3.6-19) 
 
The optimum jamming power is just Jn ; P. The bit error rate probability is given by 
 
 
0.5 (error 0 was transmitted)
       
0.5
error 1 was transmitted)
0.5 (error 0 was transmitted)
b
PE
P
P



 
(3.6-20) 
(
P
 

 178                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
The conditional bit error probability, given that a data bit “0” was transmitted, is given by the expression for 
jam, of (3.6-12). Combining (3.6-12) and (3.6-19) with (3.6-20) leads to the result 
P
 
( /
)
1
 
2(
/
)
2
b
W R
b
b
J P
PE
PW
JR




 
(3.6-21) 
ote that
When the jammer power is large, all FH bands can be jammed and PEb =
 
n J < P, not even one single FH band can be jammed sufficiently to cause an error, so that PEb = 0 in this 
ase. In summary one has the final result 
 




 
N
 0.5. Also
 1
/
b
n
W R


. 
whe
c
 
b
0.5                           
1
1
        1
2(
) /(
)
W
0                             R
b
b
b
b
b
PW
JR
b
PW
W
PE
PW
JR
JR
R
PW
JR













 
(3.6-22) 
 
 
This result is plotted in Figure 3.6-3. Once again the inverse value of the parameter 
)  is seen in (3.6-22). If we compare Figure 3.6-1 with Figure 3.6-3, we see that SFH/DPSK 
is about 3 dB better than SFH/MFSK in the binary case. 
 
 
3.7 DEGRADATION DUE TO INTERFERENCE OR JAMMING IN DS SYSTEMS 
Equation Section (Next) 
 this section the degradation due to interference or noise jamming to the bit error rate perform
of 
blem in 
losing the link. This section will derive an expression useful for determining the degradation due to the 
ffects of other signals, or jamming signals. This calculation is useful for code acquisition, bit error rate, and 
r loop tracking degradation; it is not directly applicable to code tracking degradation. This section 
llows [19]. 
(
)/(
b
X
PW
JR

In
ance 
DS/BPSK systems will be determined. Many times interference from other signals is a major pro
c
e
carrie
fo
 
10log
b
PW
JR






PEb
0
2
4
6
8
10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40
1 10

6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
10
g
b
PW
JR






PEb
lo
1 10 3
0.01
0.1
1
1 10 4
0
2
4
6
8
10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40
1 10

6
1 10 5
 
 
Figure 3.6-3 BER performance of SFH/DPSK spread spectrum signal in worst-case multiple-tone jamming. 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          179 
 
3.
 
7.1 Equivalent Noise Spectral Density for DS(BPSK)/BPSK Systems 
This section will determine the equivalent noise spectral density of DS(BPSK)/BPSK signals. The 
alculation developed here is applicable to direct sequence systems, a model of which is illustrated in Figure 
c
3.7-1. The simplified received signal plus interference model is given by  
 
 






1
1
1
0
0
0
s
( )
2
( )
( )cos
2
( )cos
2
( )sin
c
y t
P d t PN t
t
n t
t
n t
t






 
(3.7-1) 
 
I & D
y(t)


0
1
2 cos
( )
t PN t
BPF
(BW=B)
Correlator
ei(t)
x0(T)
LPF
I & D
y(t)


0
1
2 cos
( )
t PN t
BPF
(BW=B)
Correlator
ei(t)
x0(T)
LPF
 
Figure 3.7-1 Simplified model for the correlation output for determining the interference and degradation due to the other signals in the 
band for DS(BPSK)/BPSK. 
 
In (3.7-1) P1 is the power of the received signal being tracked, d1(t) is the corresponding baseband 
data signal, and PN1(t) is the corresponding spread spectrum code used in signal 1; this is the one being 
tracked. Also the thermal noise and the jamming or interference signals are modeled with the last two terms 
in (3.7-1) as a Gaussian random process that can be decomposed as the sum of the white Gaussian thermal 
oise and the interfering signal Gaussian random process.  
out of the low-pas
 
 
n
Demodulating the signal with the coherent reference signal and the input to the averaging integrator, 
s filter (which removes the double frequency term) is given by 
 
 
1
( )
( )
( )
( )
i
c
e t
Pd t
PN t n t  
(3.7-2) 


 
At the output of the averaging integrator, one obtains the correlated signal plus noise  
 
 
2
1
0
1
( )
( )
( )
( )
( )
T
o
BB
PN
c
x T
P
H
f S
f df
n t PN t dt
T






 
(3.7-3) 
 
where the correlated signal component [20] depends on the baseband equivalent low-pass filter HBB(f) of the 
bandpass filter at the input of the correlator system (bandpass filter of the receiver), with RF transfer function 
(f) and bandwidth B Hz. The output can be separated into the signal term and the noise term as suggested 
by (3.7-3) 
 
 
H
0
0
0
( )
( )
( )
x T
s T
n T


 
(3.7-4) 
 
The variance of the noise term is given by 
 
 
1
1
2
0 0
1
Var(
( ))
( )
( )
( )
( )
T T
o
c
c
n T
E
n t n u PN t PN u dtdu
T












 
(3.7-5) 
 
Modeling the PN1(t) code as a stationary random process independent of the signal process and the thermal 
noise process yields 

 180                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
1
2
0 0
1
Var(
( ))
(
)
(
)
c
T T
o
n
PN
n T
R
t
u R
t
u dtdu
T




 
 
(3.7-6) 
 
This can be expressed as a single integration [21] with a change of variables to the form 
 
 
1
0
2
1
Var(
( ))
( )
( )
c
T
n
PN
T
n T
R
R
T
d
T












 
(3.7-7) 
 
With the assumption that the two processes are wideband relative to 1/T, (3.7-7) can be well approximated by 
 
1
0
1
Var(
( ))
( )
( )
c
T
n
PN
T
n T
R
R
d
T






 
(3.7-8) 
 
Approximating the integral with finite T second limits with an integral with unbounded limits and using 
Parseval’s theorem for real functions [22] leads to the spectral form 
 
 
1
0
1
Var(
( ))
( )
( )
n T
S
f S
f df



 
cn
PN
(3.7-9) 
tral densities denoted by the form 
be assumed to have unit power in this section. This finite versus infinite time
mit is ju
function becomes essentially zero in a small time compared to T seconds. Note that d
 
 noise process spectral density 
 may have filtering on it. Consequently the limits of 
the integral may be finite for ideal filters. 
Now consider the case that the other signals act as interference to signal 1. We can write the noise 
spectral density as the sum of thermal noise and interfering noise so that  
 
          
T 
 
where 
( )
cn
S
f  is the baseband equivalent power spectral density of the sum of white Gaussian (thermal) 
noise (WGN) and the jamming or interfering signals, which are modeled as Gaussian random processes, and 
1 ( )
PN
S
f  is the unit power psd of the despreading signal. All code spec
S
 li
stified if 
th
ue to the
PN(f
e co
ont
) will 
rrelation 
-end filter, the
fr
( )
cn
S
f
( )
( )
( )
c
I
n
n
n
S
f
S
f
S
f


 
 
 
        
  
(3.7-10) 
 
here Sn(f) is the two-sided noise spectral density and 
is the filtered, two-sided, interference spectral 
band-limiting due to the front-end bandpass filter, one has 
w
( )
S
f
In
density.  
Accounting for the 
 
 
1
1
2
2
0
0
1
Var(
( ))
( )
( )
( )
( )
( )
2
BB
PN
BB
I
PN
N
n T
H
f
S
f df
H
f
S
f S
f df
T
T








 
(3.7-11) 
 
where SI(f) is the interference or jamming spectral density, prior to being filtered by the baseband equivalent 
bandpas
ote that the equivalent noise spectral density is obtained from (3.7-11) as 
 
 
(3.7-12) 
his can be written explicitly in terms of the code and interference spectral densities as  
 
s filter HBB(f), which is the baseband equivalent transfer function of the receiver front-end bandpass 
filter. 
N
 
'
0
0
2 Var(
( ))
N
T
n T

 
T

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          181 
1
1
2
2
'
0
0
( )
( )
2
( )
( )
( )
BB
PN
BB
I
PN
N
N
H
f
S
f df
H
f
S
f S
f df








 
 
(3.7-13) 
 
Noting that the baseband equivalent interference process 
( )
IS
f  contains I/2 watts of interference power, 
(3.7-13) can be written as  
 
 
1
1
I
PN
2
2
'
'
0
0
( )
( )
( )
( )
( )
BB
PN
BB
N
N
H
f
S
f df
I
H
f
S
f S
f df








 
(3.7-14) 
eband equivalent, unfiltered, power spectral density (psd) of the 
terference or jammer and is related to the nonunit power spectral density by 
 
 
where 
' ( )
IS
f  denotes the unit power, bas
in
 
'
2
( )
( )
I
I
S
f
S
f
I

 
(3.7-15) 
lates how much a given interferer interferes with the received signal. If the unit powered 
ignal spectral densities don’t overlap much, the SSC will be small and the
effect. On the other hand if there is considerable overlap, the SSC will be larger and the degradation on the 
ceived signal will be more appreciable for a given interference power lever, I. 
special case that the 
noise PSD due to an 
ry interference simplifies for the equivalent noise spectral density to 
 
(3.7-16) 
n the other hand, when the interference is due to another signal, say
spectral density 
, then  (3.7-14) applies with 
PSK)/BPSK 
 is now convenient to compute the signal to equivalent noise spect
PSK)/BPSK signal. First define the output signal as the signal co
hus the correlated signal voltage out of the averaging filter is given by [20]  
 
The integral in the second term in (3.7-14) is called the spectral separation coefficient (SSC) and is normally 
expressed in dB. It re
s
 interfering signal will have little 
re
Equation (3.7-15) applies in the general case for arbitrary interference. In the 
F filter is modeled as an ideal bandpass filter with a bandwidth of B Hz, the effective 
R
arbitra
 
1
1
/ 2
/ 2
B
B


 
/ 2
/ 2
'
'
0
0
( )
( )
( )
B
B
PN
PN
I
N
N
S
f df
I
S
f S
f df




 
O
, signal 2, with baseband unit-power 
2 ( )
PN
S
f
2
' ( )
( )
I
PN
S
f
S
f

. 
 
 
.7.2 Carrier to Equivalent Noise Spectral Density Ratio for DS(B
3
 
It
ral density ratio after despreading a 
DS(B
mponent out of the averaging filter. 
T
 
 
1
( )
Re
( )
( )
o
BB
PN
s T
P
H
f S
f df










 
(3.7-17) 
 
where P is the received signal power expressed in watts. When the baseband equivalent transfer function 
HBB(f) is complex conjugate symmetric, then (3.7-1
be simplified [20] to  
 
7) can 
 
1
( )
( )
( )
o
BB
PN
s T
P
H
f S
f df




 
(3.7-18) 
 

 182                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
Note that complex conjugate symmetric means that 
* (
)
(
)
BB
H
j
H
j
BB




. By definition, the output signal-
to-noise ratio is given by 
 
 
2
( )
( )
os T
SNR T 
 
(
( ))
o
o
Var n T
(3.7-19) 
In WGN this expression can be evaluated, in the case of no filtering from (3.7-13) and (3.7-18), to 
 
 
 
0
0
2
( )
o
P
PT
SNR T
N
N




 
(3.7-20) 
2T




 
s is wel known from matched filter theory.  
When a front-end RF filter is present at the receiver,
iven by (3.7-14). From (3.7-14) it follows that  
0I
a
 s0(T) is given by (3.7-17) and Var(n0(T)) is 
l 
g
 
 
'
0
0
N
N



 
(3.7-21) 
where 
 
 is defined by 
1
2
 
( )
BB
PN
H
f
S
f



 
(3.7-22) 
 
( )
f d

 the general case, where HBB(f) is the baseband equivalent receiver filter response.  
The interference parameter I0 is the SSC and is given by 
 
in
 
1
0
BB
I
PN
2
'
( )
( )
( )
I
I
H
f
S
f S
f df


 
(3.7-23) 
nterference or jammer. The 
quivalent 

 
ote that the interference could be due to another signal or set of signals or an i
N
 can be obtained from the relationship 
e
'
0
/
P N
 
 
0
'
0
(2 )
( )
T SNR T
N 
 
(3.7-24) 
 
and SNR0(T) is defined in 
P
 
(3.7-19). When only thermal noise is present and there is no filtering, (3.7-24) 
reduces to 
'
0
0
P
P
N
N

 
(3.7-25) 
 
where P
received signal power in watts. If the noise degradation is defined only relative to the increase 
 the effective noise level, then the effective one-sided noise spectral density in (3.7-21) can be wr
 is the 
in
itten as 
 
 
'
0
0
0
N





 
1
oI
N
N





 
(3.7-26) 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          183 
where I  is given by (3.7-23). When interference is present the equivalent value of carrier power to noise 
 = P) to one-sided noise 
pectral density ratio, in the general case, is given by 
o
spectral density is reduced. Combining (3.7-14) and (3.7-18), the effective carrier (C
s
 
1
2
Re
( )
( )
BB
PN
P
H
f S
f df






 
1
1
'
2
2
'
0
0
( )
( )
( )
( )
( )
BB
PN
BB
I
PN
C
N
N
H
f
S
f df
I
H
f
S
S
f df











 
(3.7-27) 
 
f
 
where I is the received interference power expressed in watts and all the power spectral densities have unit 
power. Equation (3.7-27) can be simplified in the case of an ideal BPF with bandwidth of B Hz to 
 
1
1
1
0
0
( )
PN
N
S
f df
f

 
2
/ 2
/ 2
/ 2
/ 2
'
'
/ 2
/ 2
( )
( )
( )
B
PN
B
B
B
I
PN
B
B
P
S
f df
C
N
I
S
f S
f d













 
(3.7-28) 
e now determine the degradation for some particular cases in the following section.  
.7.3 Equivalent Noise Spectral Density Degradation for DS(BPSK)/BPSK Systems 
dditional noise due to interference. From (3.7-21) and (3.7-23) we
 
W
 
 
3
 
ow consider the noise degradation due to an interference or jammer. Define the noise degradation as the 
N
a
 have 
 
1
2
'
'
0
0
( )
( )
( )
BB
I
PN
N
N
I
H
f
S
f S
f d





f  
(3.7-29) 
where 
 
 is defined by (3.7-22). Factoring out the nominal noise yields 
 
1
( )
( )
PN
f S
f df 
 
(3.7-30) 
 
2
'
'
0
0
0
( )
1
BB
I
I
H
f
S
N
N
N



















The noise degradation due to the interference-induced noise is therefore given by  
 
 
 
1
1
2
'
( )
( )
BB
I
P
0
( )
1
N
n
I
H
f
S
f S
f df
Degr
N















 
(3.7-31) 
ise de
 is accounted for, is given by (3.7-27), so that the 
tal signal power to noise spectral density degradation, relative to the quantity 



 
where I is the interfering power (interfering signal) at the input to the receiver, expressed in watts. The 
carrier-to-no
nsity ratio, when the front-end filtering


0
/
P
N

to
, is given by  

 184                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
1
2
2
'
0
( )
( )
( )
1
N







total
BB
I
PN
Degr
I
H
f
S
f S
f df













 
y total it is meant the additional effective noise spectral density degradation as well as the correlated signal 
(3.7-32) 

 
B
power loss, 2. The input signal level is taken to be P W, and the filtered thermal noise is taken as N0. In 
(3.7-32),  is the signal correlation loss component, where 
 
 
2
j
f
Re max
( )
( )
BB
PN
H
f S
f






e
df
















 
(3.7-33) 
 
which applies if the baseband equivalent filter HBB(f) is not complex conjugate symmetric [20]. However, if 
the baseband filter is complex conjugate symmetric [20], the following applies 
 
2
max
( )
( )
j
f
BB
PN
H
f S
f e
df













 
 
(3.7-34) 
= 
 
It is seen that 
 in the case of an ideal bandpass filter; however, the correlation loss in powe

whereas the power loss goes as , so that the correlation for an ideal bandpass filter is 20log(), whereas the 
power loss is 10log(). 
r is 2 
 
Example 6 Assume that the unit-power signal spectral density is given by the following expression 
 
2
2
sin(
)
( )
(
)
c
c
s
c
fT
S
f
T
fT



 
 
 
And furthermore assume that the interference is more of the same type of signal with the same power spectral 
density, but with distinct codes. The chip rate is 1.023×106. If the received interferer power is –145 dBW and 
the received signal power is –155 dBW and N0 = –202 dBW/Hz, what is the noise degradation when the 
ont-end bandwidth is large compared to the chip rate? Since the bandwidth is large, we can assume that 
fr
1
. Furthermore, from (3.7-31), the following evaluation is made 
 
 
1
2( )
sS
f df












 
0
10log
1
1.25 dB
n
Degr
I
N




















he interferer power was –140 dBW, then the degradation woul
le
 NRZ signal having a chip rate of 
 Mcps, with a spectral density given by 
 








 

 
In addition if t
d increase to –3.14 dB. 
 
 
xamp  7 Determine the correlation loss associated with passing an
E
5

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          185 
2
2
sin(
)
( )
(
)
fT
S f
T
fT



 
 
 
through an ideal bandpass filter, having bandwidth of 10 MHz. From (3.7-33) it follows that the integral 
produces 
 
valent loss of 20×log(0.903) = – 0.89 dB. In other words the correlation loss associated with 
sing an ideal filter set to the first nulls of the signal spectra is about 0.9 dB. 
 
 
.7.4 Degradation to NRZ Signals Due to Narrowband Jammers for DS(BPSK)/BPSK Signals 
 
( )
0.903
S f df 

 
6
6
5*10
5*10

This is an equi
u
3
 
Consider a narrowband Gaussian random process jammer at the center of the band, having a flat bandwidth 
of BI Hz, degrading a nonreturn-to-zero (NRZ) DS(BPSK)/BPSK signal. Figure 3.7-2 illustrates the NRZ RF 
model of the narrowband interference, as well as the baseband version model.  
 
Notes: I0 = I/BI
Spectral density (two-sided)
fc
Baseband model
RF model
0
f
BI
0
Power = I/2  W 
Total jammer power = I W
(positive and negative freq.)
Spectral density (two-sided)
I
Notes: I0 = I/BI
Spectral density (two-sided)
f
0
I0/2
I0/2
BI
BI
c
-f
Baseband model
RF model
fc
0
f
BIBI
Total jammer power = I W
(positive and negative freq.)
Spectral density (two-sided)
I
f
0
0
Power = I/2  W 
I0/2
I0/2
BI
BI
c
igure 3.7-2 Radio frequency (RF) and baseband model for NRZ signals being jammed by narrowband jammers. 
i
-f
 
 
F
 
From (3.7-31) the no se degradation is given by  
 
 
1
/ 2
( )
( )
1
I
BB
PN
I
B
/ 2
2
1
0
I
B
n
I
H
f
S
f df
B
Degr


N











.7-35) 







 
(3
 

 186                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
since the spectral density of 
' ( )
IS
f is 1/(BI) for a unit-power interference, where  is defined in (3.7-22), 
and 
1( )
PN
S
f  is the received signal (unit) PSD. 
 
This degradation expression applies to NRZ signals only. Note that when BI << 1/Tc, then (3.7-35)
can be well approximated by 
 
 
1
1
2
0
(0)
(0)
1
BB
PN
n
IH
S
Degr
N












 
 
(3.7-36) 
 
his chapter dealt with the bit error rate performance with various types of jammers without coding or 
nt. Models were presented for each type of modulation. First 
ries of BER performance evaluations, followed by narrowband 
mming BER performance. For coherent systems, when noise as considered, the evaluation was in terms 
f the parameter PW/(JRb) and Eb/N0. Pulsed jamming for v
us SS and data modulation types were 
d, and some similarities were found with partial band jamming. Single tone and multitone jamming 
llowed the pulse jamming sections. Finally degradation due to interference or jamming a DS(BPSK)/BPSK 
 was observed that many modulation types, when subjected to optimum jamming led to a BER 
erformance that goes as the inverse of the effective signal-to-noise ratio (PW/(JRb)) in some regions of BER 
erformance curves. 
] 
M. K. Simon, S. M. Hinedi, and W. C. Lindsey, Digital Communication Techniques, Upper Saddle River, NJ: Prentice Hall, 1995. 
] 
E. Arthurs and H. Dym, “On the Optimum Detection of Digital Signals in the Presence of White Gaussian Noise—A Geometric 
Interpretation and a Study of Three Basic Data Transmission Systems,” IRE Transactions on Communications Systems, December 
1962. 
 
[6] 
S. W. Golomb, L. D. Baumert, M. F. Esterling, J. J. Stiffler, and A. J. Viterbi, Digital Communications With Space Applications, 
Englewood Cliffs, NJ: Prentice-Hall, 1964. 
 
[7] 
D. R. Martin and P. L. McAdam, “Convolutional Code Performance with Optimal Jamming,” TRW Defense and Space Systems 
report, section 3, 1975. 
 
[8] 
F. W. Hildebrand, Advanced Calculus for Applications, Englewood Cliffs, NJ: Prentice-Hall, Chapter 7, 1962. 
 
[9] 
S. W. Houston, “Modulation Techniques for Communication, Part I: Tone and Noise Jamming Performance of Spread Spectrum 
M-ary FSK and 2, 4-ary DPSK Waveforms,” Conference Rec. of NAECON, 1975. 
 
[10] B. K. Levitt, “Use of Diversity to Improve FH/MFSK in Worst Case Partial Band Noise and Tone Jamming,” Proceedings of 1982 
IEEE Military Communication Conference, Vol. 2, October 17–20, 1982, pp. 28.2-1–8.2-5. 
 
[11] A. J. Viterbi and I. M. Jacobs, “Advances in Coding and Modulation for Noncoherent Channels Affected by Fading, Partial Band, 
and Multiple Access Interference,” in Advances in Communication Systems, Vol. 4, New York: Academic Press, 1975, pp. 279–
308. 
 
3.8 SUMMARY 
 
T
interleaving. The various types of jammers useful to jam the signal were presented. Some of the analyses 
were done without thermal noise prese
roadband noise was the basis for a se
b
ja
w
o
ario
evaluate
fo
system was developed. Both total degradation and noise degradation were presented. 
 
It
p
p
 
References 
 
[1
 
[2] 
J. G. Proakis, Digital Communications, New York: McGraw-Hill, 1983. 
 
[3] 
R. E. Ziemer and R. L. Peterson, Digital Communications and Spread Spectrum Systems, New York: Macmillan Publishing 
Company, 1985. 
 
[4] 
J. H. Park, “On Binary Detection,” IEEE Trans. on Communications, April 1978. 
 
[5

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          187 
 
[12] D. J. Torrieri, “Frequency Hopping, Multiple-Frequency Shift Keying, Coding, and Optimal Partial-Band Jamming,” Naval Air 
Systems Command, CM/CCM Center, Tech. Report CM/CCM-82-1, August 1982. 
 
[13] R. E. Ziemer and R. L. Peterson, Digital Communications and Spread Spectrum Systems, New York: Macmillan Publishing 
Company, 1985. 
 
[14] M. K. Simon, J. K. Omura, R. A. Scholtz, and B. K. Levitt, Spread Spectrum Communications, Vol. 2, Rockville, MD: Computer 
Science Press, 1985. 
 
[15] L. B. Milstein, R. L. Pickholtz, and D. S. Schilling, “Optimizing of the Processing Gain of an FSK-FH System,” IEEE Trans. on 
Communications, July 1980. 
 
[16] M. P. Ristenbatt and J. L. Davis, Jr., “Performance Criteria for Spread Spectrum Communications,” IEEE Trans. on 
Communications, August 1977. 
 
[17] B. K. Levitt, “FH/MFSK Performance in Multitone Jamming,” IEEE J. Selected Areas in Communications, Vol. SAC-3, 
September 1985, pp. 627–643. 
 
[18] M. K. Simon, “The Performance of M-ary FH-DPSK in the Presence of Partial Band Multitone Jamming,” IEEE Trans. on 
Communications, Vol. COM-30, May 1982, pp. 953–948. 
 
[19] S. Raghavan and J. K. Holmes, “Frequency Band Sharing Between NRZ and Split Spectrum Signals—Analysis and Simulation 
Results,” AIAA ICSSC, Montreal, 2002. 
stic Processes, 2nd ed., New York: McGraw-Hill, 1984. 
[22] L. Couch II, Digital and Analog Communication Systems, 6th ed., Upper Saddle River, NJ: Prentice-Hall, Chapter 2, 2001. 
 
[23] G. L. Lui and J. K. Holmes, “Power Spectral Density of General Offset Carrier Signals,” The Aerospace Corporation IOC, 
November 27, 2001. 
Problems 
 
1. Show that for the binary case of MFSK, the bit error rate is given by  
 
 
[20] J. K. Holmes, Coherent Spread Spectrum Systems, Malabar, FL: Kreiger Press, Chapter 8, 1990. 
 
[21] A. Papoulis, Probability, Random Variables, and Stocha
 
 
 
PE
E
N
b 

b
L
NM
QP
2
0
p
'
nd and a wideband noise jammer. Show that when the wideband jammer 
bandwidth is set equal to W = 2N/Tc, then the on-frequency (f0 = fJ) narrowband jammer is about 10 
log (2N) dB more effective than the wideband jammer. More effective in this case means that it has 
a higher spectral density. 
3. Show that the value of c0 used in Section 3.3.3 for frequency-hopped BPSK and QPSK is given by 
c0 = 0.709.  In addition show that (3.3-28) is correct. Hint: Let X = 3 and show that the optimal value 
of  is given by 
O
1
2 ex
 
 
 
 
 
(P3-1) 
 
2. Consider a narrowba
02363
.
, so that c0 = 0.709. 
t (3.3-45), using the substitutions y = kX and X = (PW)/(JRb), can be written as (3.3-46) 
is zero. 
4. Show tha
after canceling some common terms and rearranging the expressions. In addition show that when 
M = 2, the solution for y from (3.3-46) is y0 =2. 
 
5. Show that the optimum value of L, L0 is given by (3.3-58) for fast frequency hopping. Hint: Start 
with (3.3-56) and find the minimum value of L. 
 
6. Show that (3.5-47) is statistically equivalent to (3.5-48). Do this by showing that the two equations 
have the same mean and same variance with the assumption that the expected value of PN1(t)PN2(t) 

 188                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
7.  Show that (3.6-9) follows from (3.6-7). Hint: Note that if a
b
c


 is true, then it follows that 
8. 
Solving (3.6-16) and (3.6-17) for 
(1/ )
(1/ )
(1/ )
a
b
c


 is true. 
 
 
2
2
1
2
R
R

 and substituting into (3.6-15), show that the following 
result is obtained: 




1
2
2
cos
n
J
P
R R




rate 1/Tc, the following expression for noise 
nd jammer of bandwidth BI Hz can well be 
. 
 
9. Show that when BI is small compared to the chip 
degradation applies to the case that a flat narrowba
approximated by the expression 
 
1
 
0(1
1
I
D
n
/
)
c
N
T

egr






;
 


 
       w
(P3-2) 
hen it is assumed that the low pass filter response at f = 0 is 1, and 
1(0)
PN
c
S
T

, with Tc the chip  
e for jamming a signal spectra that has two equal-sized main lobe responses [23]. 
       duration. 
 
10. Consider the effect of a pair of narrowband jammers or interference noise processes as shown in the 
following figur
 
Spectral density (two-sided)
0
f
(positive and negative freq.)
BJ
Notes:
0
Power = I/4 W
(positive and negative freq.)
BJ
0
Total interferer power = I W
(positive and negative freq.)
BJ
I0/2
BI
BI
Spectral density (two-sided)
I0/2
B
BI
I
0
(positive and negative freq.)
BJ
Notes:
0
(positive and negative freq.)
BJ
0
(positive and negative freq.)
B
I0= I /(2B)
I /2
-f
0     f
-f
fc-f0 fc fc+f0
RF model
Spectral density (two-sided)
0
0
0
c
Baseband model
0
f
(positive and negative freq.)
BJ
Notes:
0
Power = I/4 W
(positive and negative freq.)
BJ
Total interferer power = I W
(positive and negative freq.)
0
BJ
I0/2
Spectral density (two-sided)
BI
BI
I0/2
B
BI
I
0
(positive and negative freq.)
BJ
Notes:
0
(positive and negative freq.)
BJ
I0= I /(2B)
(positive and negative freq.)
0
B
I /2
-f
0     f
-f
fc-f0 fc fc+f0
RF model
 
    Figure for Problem 10 illustrating a pair of flat narrowband jammers. 
1 
0
c
Baseband model
0
0
   
 
quat
E
ion Chapter (Next) Section 
(a) Show that the effective noise spectral density is given by 
 
0
0
1
/
1
1
0
/2
/ 2
PN
BB
PN
f
B
f
B
2
/ 2
2
2
2
'
0
0
0
( )
( )
( )
( )
( )
( )
I
I
f
B
f
B
BB
PN
BB
N
N
H
f
S
f df
I
H
f
S
f df
I
H
f
S
f df










 (P3-3) 
0
0
I
I




uency that maximizes the spectral density of the binary offset carrier  
 
           where f0 is the positive freq
  
             (BOC) signal being interfered. Spectral symmetry implies 

 
                                 Jamming Performance of Uncoded Spread Spectrum Systems 
 
 
          189 
 
 
0
/ 2
I
1
1
0
0
0
2
2
'
I
 
(P3-4) 
 the fact that 2I0 = I/BI, becomes 
0
/ 2
( )
( )
2
( )
( )
BB
PN
BB
PN
f
B
N
N
H
f
S
f df
I
H
f
S
f df






f
B


 
    
    
      which, due to
 
 
0
)
f
I
df
1
1
/2
2
2
'
0
0
( )
(
( )
( )
I
B
BB
PN
BB
PN
N
N
H
f
S
f
H
f
S
f df






 
(P3-5) 
nterferers is given by 
 
0
/2
I
J
f
B
B


(b) Further deduce that the noise degradation for a narrowband pair of i
 
0
1
2
( )
( )
BB
PN
0
1
/ 2
/ 2
1
I
I
f
B
I
f
B
I

H
f
S
f df
0
n
B
Degr
N












 
(P3-6) 








 
              where is given by (3.7-22). When the front-end filter is an ideal bandpass filter of bandwidth B Hz  
              (B>BI), where f0 is the frequency offset that maximizes the dual peak spectral density, 
2
0
(
)
PN
S
f
 at  
              f = f0. If BI is very small, show that (P3.4) can be approximated by 
 
1
1
0
(
)
1
PN
n
IS
f
Degr
N

0









 
(P3-7) 
 
              Note that in this case of an ideal front-end bandpass filter, the value of  is given by  
 
/2
B
 
1
/ 2
( )
PN
B
S
f df



 
(P3-8) 
 
             (c) Show that the total C/N  degradation is given by 
 
0
 
0
1 (
0
2
/ 2
/ 2
0
I
I
total
f
B
J
f
B
Degr
N





)
1
PN
I
S
f df
B















 
(P3-9) 
          (d) Thus show in the general case for dual-spectral signals that the noise degradation can be  
            described in the NRZ signal interferer case or the dual 
              Gaussian noise interference and that the noise degradation is given by  
 

 
              where f0 is 0 for the NRZ narrowband interferer signal case and is the frequency offset that  
              maximizes the BOC spectral density in the BOC narrowband interferer pair case.  
 
    
  
spectral signal case for dual-narrowband  

 190                                     Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
0
1
0
/
1
/2
0
J
f
B
N

2
( )
1
J
PN
J
f
B
n
I
S
f df
B
Degr



















) 
 

 
(P3-10

CHAPTER 4 
Jamming Performance of Coded Spread Spectrum 
Systems 
 
 
4.0 INTRODUCTION 
 
Equation Chapter (Next) Section 1 
In this chapter the effects of coding and interleaving to the spread spectrum channel will be presented. The 
function of coding/interleaving is to improve upon the spread spectrum (SS) link performance in the face of 
jamming or interference. Recall in Chapter 3 the performance of SS links was better than non-SS links, due 
to the fact that the despreading function spread the interference over the spread bandwidth, thus diluting the 
effect of a narrowband jammer or interference. In fact the despread power that falls in the data bandwidth is 
the primary power causing a deleterious effect on the receiver performance. Since the power that falls in the 
data bandwidth is much less than the spread bandwidth, this ratio of spread bandwidth to data bandwidth 
yields the notion of processing gain.  
 
Even with the employment of SS techniques, we found in Chapter 3 that worst-case jamming caused 
significant degradation to the bit error rate (BER) performance. The effect of worst-case jamming can be 
mitigated by the use of forward error correction (FEC) and the use of interleaving/deinterleaving. Jamming 
techniques that concentrate on a partial segment of the bandwidth, or on pulsing on a portion of the time that 
the jammer is on, tend to produce burst error patterns. However, most FEC techniques work best when the 
errors are distributed randomly; thus interleaving is assumed for all the FEC techniques that are used in this 
chapter. The effect of the interleaver/deinterleaver is to “randomize” the errors; the FEC methods have better 
performance with interleavers used in conjunction with deinterleavers. The model for the channel including 
the FEC and the interleaver/deinterleaver is shown in Figure 3.0-2 of Chapter 3.  
 
The BER performance of the FEC schemes in this chapter is calculated as a function of the discrete 
memoryless channel (DMC) transition probabilities 
(
,
j
j
j
p y x
z )  that account for any jammer-state (side) 
information contained in zj. This transition probability relates the output symbol yj to the input symbol xj and 
the jammer side information zj at time j, which in its most rudimentary form indicates whether the jammer is 
on or off for channel use j. In some cases the input and output DMC alphabets are not the same. By having a 
different alphabet for the input and output, more information can be supplied to the decoder. As an example, 
the DMC can supply information indicating the reliability of the alphabet decision. When additional 
information is output from the DMC, the channel is called a soft-decision channel. The role of the 
interleaver/deinterleaver is to make the channel approximately memoryless. Consider the case when, in 
addition to outputting a binary one or zero, the DMC may also output information about the reliability of the 
one/zero decision. This occurs for the binary erasure channel for example. An example of a soft decision 
channel is illustrated in Figure 4.0-1. The input alphabet composed of a “1” and a “0.” The output alphabet 
includes a “1,” a “0,” and an “erasure.” An erasure indicates the channel is not sure what symbol was 
transmitted and decides not to guess what it was. The binary symmetric channel (BSC) is similar to the one 
shown in Figure 4.0-1 except that there is no “e” output. Thus a zero can become a zero or a one, and a one 
can become a one or a zero. The probabilities for the BSC are as follows: 
 
 
 
                                     191 

 192                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
(1 0)
(0 1)
(11)
(0 0)
1
p
p
p
p
p
p




 
(4.0-1) 
 
 
Thus a “one” will be received as a “1” with probability p and an error will occur with probability 
1–p. The same probabilities result when a “zero” is transmitted. 
Jammer-state information (JSI) can include an indication of whether or not a jammer is detected. 
The use of JSI is critical for encoded systems that use soft-decision statistics, since without JSI a smart 
jammer can “break” the communication link with a small amount of jamming power. When considering 
hard-decision decoders, JSI is not a requirement; however, system performance can be improved with its use. 
 
0
1
0
1
e
(0 0)
p
(11)
p
(0 1)
p
(1 0)
p
( 1)
p e
( 0)
p e
g
g
g
g
g
Input 
symbols
Output 
symbols
0
1
0
1
e
(0 0)
p
(11)
p
(0 1)
p
(1 0)
p
( 1)
p e
( 0)
p e
g
g
g
g
g
Input 
symbols
Output 
symbols
 
 
Figure 4.0-1 The transition diagram for soft-decision binary erasure channels. 
 
 
The remainder of this chapter will address block, convolutional, and Turbo codes. Numerous 
references exist on the area of coding covering both convolutional and block coding. Some references that 
are relevant include, but are not limited to, Clark and Cain [1], Lin and Costello [2], Peterson and Weldon 
[3], Blahut [4], and Hanzo, Wong, and Yee [5]. 
 
 
4.1 INTERLEAVER STRUCTURES FOR CODED SYSTEMS 
Equation Section (Next) 
All of the systems analyzed in Chapter 3 did not necessarily have memoryless channels in the sense that a 
jamming burst could affect more than one coded bit in sequence. In the case of burst errors, an interleaver-
deinterleaver combination renders the channel to be essentially memoryless. The approach is to interleave the 
coded data prior to transmission and deinterleave the coded data prior to decoding. Figure 4.1-1 illustrates the 
channel model.  
 
An interleaver is a device that rearranges the ordering of the coded bits in a predetermined manner. 
Along with an interleaver is a compatible deinterleaver, which applies the inverse permutation to the coded 
bit stream. It is also used in turbo codes, as will be seen later in this chapter. 
 
 
4.1.1 Block Periodic Interleaving 
 
A typical block interleaver is implemented by writing the coded bits by columns into a rectangular array that 
has N rows and B columns.  
 
Example 1 Figure 4.1-2 illustrates the interleaver for the case that N = 8 and B = 10. Coded symbols are read 
into the interleaver by columns and read out of the deinterleaver by rows, into the data modulator. This 
interleaver is referred to as a (B, N) block periodic interleaver.  
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           193 
Discrete
memoryless
source
Channel
encoder
Channel
interleaver
Data
modulator
Spreading
modulator
+
White
Gaussian
noise
Jamming
signal
+
Spreading
demodulator
Data
demodulator
Channel
decoder
Data
User
Discrete memoryless channel
Discrete
Channel
Data
Spreading
White
Gaussian
Jamming
Data
Channel
Data
User
Discrete memoryless channel
x
y
Deinterleaver
Discrete
memoryless
source
Channel
encoder
Channel
interleaver
Data
modulator
Spreading
modulator
+
White
Gaussian
noise
Jamming
signal
+
Spreading
demodulator
Data
demodulator
Channel
decoder
Data
User
Discrete memoryless channel
Discrete
Channel
Data
Spreading
White
Gaussian
Jamming
Data
Channel
Data
User
Discrete memoryless channel
x
y
Deinterleaver
 
 
Figure 4.1-1 A model of a spread spectrum communication system. 
 
 
80
72
64
56
48
40
32
24
16
8
79
71
63
55
47
39
31
23
15
7
78
70
62
54
46
38
30
22
14
6
77
69
61
53
45
37
29
21
13
5
76
68
60
52
44
36
28
20
12
4
75
67
59
51
43
35
27
19
11
3
74
66
58
50
42
34
26
18
10
2
73
65
57
49
41
33
25
17
9
1
N
B
80
72
64
56
48
40
32
24
16
8
79
71
63
55
47
39
31
23
15
7
78
70
62
54
46
38
30
22
14
6
77
69
61
53
45
37
29
21
13
5
76
68
60
52
44
36
28
20
12
4
75
67
59
51
43
35
27
19
11
3
74
66
58
50
42
34
26
18
10
2
73
65
57
49
41
33
25
17
9
1
N
B
 
 
Figure 4.1-2 A block interleaver for the example when N = 8 and B = 10. 
 
 
The deinterleaver does the inverse operation of the interleaver. The received coded bits are written 
into the deinterleaver by rows and read out by columns. It therefore follows that the coded bits in our 
example, which are fed into the data modulator, are as follows: 
 
1,9,17,33,41,49,57,65,73,2,10,18,… 
 
 
Suppose coded bits 27, 35, 43, 51, and 59 are corrupted by a burst event (they are shaded gray). 
Since they are transmitted in this sequence, and will be read out by columns in the deinterleaver, it is seen 
that each error will be spaced by N = 8 coded bits.  
Good design dictates that for a block interleaver-deinterleaver the designer should make N large 
enough so that each error occurs in different code words, and thus the errors may be considered statistically  
 

 194                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
independent. In addition B should be made so that all expected bursts of coded bits do not exceed length B. 
Clark and Cain [1] have shown that the following burst error characteristics of the block interleaver are as 
follows: 
(1) Any burst of coded bit errors of length bB results in single errors at the deinterleaver output, each 
separated by at least N coded bits.  
(2) Let r

 denote the smallest integer greater than r. Any burst of length b = rB, for r > 1, results in 
bursts on the output of no more than r

 coded bits, separated by no less than N – r

 coded bits. 
(3) A periodic sequence of single coded bit errors, spaced by B coded bits, results in a single burst of 
errors of length of N at the deinterleaver output. 
(4) The end-to-end delay is 2NB coded bits, due to the interleaver-deinterleaver only. Channel delay is 
in addition to the interleaving process delay. The memory requirements are NB coded bits, in both 
the interleaver and the deinterleaver.  
      Typically, the interleaver parameter B would be selected such that for all the expected bursts lengths 
b, it would satisfy b < B.  
      It is to be noted that synchronization of the interleaver is associated with the problem of frame 
synchronization. The word boundaries must be known after deinterleaving in order to decode the coded 
words. One approach to deinterleaver synchronization is obtained by the use of a periodic addition of frame 
sync words, added to the data stream after interleaving and coding. Obtaining frame sync allows the receiver 
to synchronize to the decoder. 
      The hybrid interleaver has been described by Olsen [6] and is another type of interleaver, designed 
for use in packet switching applications on multiple access radio communication channels. This interleaving 
system has some of the characteristics of the block interleaver and some of the characteristics of the 
convolutional interleaving, which will be discussed next. Details are contained in the reference. 
            Another interleaver type discussed in the literature is the uniform interleaver [7], which is a 
probabilistic device that maps all words of weight w into all distinct 
 permutations of it with equal 
probability given by Pr
, where N is the size of the interleaver. 
N
w






1/
N
w







Additional interleaving types include the helical block interleaver system [8], and the pseudorandom 
interleavers [1]. 
 
 
4.1.2 Convolutional Interleaving 
 
We have not addressed convolutional encoding; however, since we are addressing interleaving types, we will 
now address convolutional interleaving. Forney [9] has proposed the structure shown here. See also the work 
of Ramsey [10]. We will follow Forney in our presentation. It is assumed that all multiplexing functions are 
synchronous. Figure 4.1-3 illustrates a convolutional interleaver. It is to be noted that this interleaver will 
also be applicable to block codes. 
There are B rows in both the interleaver and the deinterleaver. Each row has a multiple of M coded 
bit delays. Denote the parameter N as N = BM. This interleaver is referred to as a (B, N) interleaver. The 
multiplexer switches (shown with the curved double arrowheads) change position after each code bit time so 
that successive encoder coded bits enter different rows of the interleaver memory. Each interleaver and 
deinterleaver row contains a shift register memory of a certain number of units of delay of the coded bits of 
the form LM, where L = 0, 1, 2,…, B–1, that are noted in the boxes.  
The switching goes from top to bottom in a periodic fashion. First a coded bit is passed through the 
interleaver with no delay. It passes through the channel and is presented with a delay of (B–1)M coded bits at 
the deinterleaver. The second coded bit is passed through M code bits of delay in the interleaver and sent 
through the burst error channel and presented with a delay of (B–2)M coded bits in the deinterleaver. It 
follows that adjacent coded bits are M coded bits apart in the channel. Notice that the total 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           195 
interleaver/deinterleaver delay is (B–1)M coded bits for all paths. It follows that the deinterleaved code bits 
are in the same order as they were at the input to the interleaver, delayed by (B–1)M coded bits. 
 
M
2M
(B-2)M
(B-1)M
M
+
Sync
word
From
encoder
Burst
error
channel
(B-1)M
(B-2)M
M
2M
M
To
decoder
& frame
sync circuit
M
2M
2M
(B-2)M
(B-2)M
(B-1)M
(B-1)M
M
+
Sync
word
From
encoder
Burst
error
channel
Burst
error
channel
(B-1)M
(B-1)M
(B-2)M
(B-2)M
M
2M
2M
M
To
decoder
& frame
sync circuit
 
 
Figure 4.1-3 Convolutional interleaver/deinterleaver system for convolutional codes. 
 
 
Clark and Cain [1] have summarized the properties and they are as follows: 
(1) The minimum separation at the interleaver output is B symbols for any two coded bits that are 
separated by less than N coded bits at the interleaver input.  
(2) Characteristic (1) implies that any burst of b < B errors inserted by the channel results in single 
errors at the deinterleaver output, separated by at least N coded bits. 
(3) A periodic pattern of single errors spaced N + 1 coded bits apart results in a burst of length of B at 
the deinterleaver output. 
(4) The total memory required is N(B–1)/2 coded bits for both the interleaver and the deinterleaver. This 
is approximately half of what is required for a block interleaver/deinterleaver system. The total end 
to end delay is N(B–1). 
For the (B, N) interleaver, B is chosen to be larger than the length of any burst errors. N is chosen to 
be larger than the block length of block codes or the decoding constraint for convolutional codes. Under 
these conditions both interleaver/deinterleaver systems will have about the same burst error performance. It 
must be stressed that synchronization of the interleaver and the deinterleaver is necessary. The addition of a 
sync word at the input of the interleaver is one method of verifying that the deinterleaver is synchronous with 
the interleaver, by correlation at the receiver.  
 
 
4.2 LINEAR BLOCK CODING  
Equation Section (Next) 
Block codes can be classified as either linear or nonlinear codes. Our discussion in this chapter will be 
limited to linear codes. A linear block code is a code for which any two code words can be added together, 
modulo-two, and the sum is another code word in the code set. 
 
 
4.2.1 Linear Block Coding Concepts 
 
A block code is composed of a set of vectors called code words. The length of the code word is the number 
of elements in the vector and is denoted by the letter n. The elements of the code word are selected from an 
alphabet of q symbols, or elements. When the code word is selected from a q symbol alphabet and q is a 
power of 2, then the code is nonbinary. When q is a power of 2 then it can be represented as a binary code 
word consisting of q-ary symbols that can be represented as b bits each, where 
. Thus each q-ary 
symbol can be represented as b bits each. Therefore a nonbinary code of block length N can be mapped into a 
binary code word of block length n = bN.  
2b
q 
 
There are 2n possible code words in a binary block of length n. From these code words it is possible 
to choose M = 2k code words where k < n to form a code. In summary, a block of k information bits is 

 196                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
mapped into a code word of length n, which is selected from the set of M = 2k code words. The resulting code 
block is denoted as an (n,k) code, and the code rate of the code is defined as the ratio Rc = k/n. For nonbinary 
codes having q symbols, there are qn possible code words. In this case a subset of the M = qk code words may 
be selected to form the k-symbol blocks of information.  
 
The reason that error correction capabilities of the code exist is due to the fact that not all of the 
possible 2n code words are used in the code set. Consequently it is possible to select codes such that when a 
code word is transmitted, it will not be confused with other code words, if only a few errors occur upon the 
reception of the code word. More powerful codes will tolerate more errors before they will be confused with 
another member of the code set.  
Code words are represented as binary n-tuples Cm = (cm0, cm1, …cm(n-1)), with m = 0, 1, 2, …, 2k–1, 
where m is the message number and 
(0,1) all 0
1
mi
c
i
n



(0,1) all 0
mi
. The binary k-tuple of the information bits is 
given by Xm=(xm0,xm1,…xm(k-1)),  where 
1
x
i
k


. In some analysis it will be necessary to 
convert from the values “0” and “1” to the real AWGN channel values of “1” and “–1.” We denote the 
channel values of the code to be Dm = (dm0, dm1, …dmn–1), corresponding to Cm and Um=(um0,um1,…um(k–1)) 
corresponding to Xm. Note that  
 
 
1 2
1 2
mi
mi
mi
mi
d
c
u
x


 
(4.2-1) 
 
Thus when cmi =0, dmi =1, and cmi =1, dmi = – 1, and similarly for umi and xmi. 
Only linear binary codes will be considered in what follows. An important property of linear codes 
is the fact that modulo-two sum of two code words is another code word in the same code word set, as was 
noted earlier.  
Let Ci and Cj denote two code words in the code set of M = 2k code words. The Hamming distance 
between the two code words, having components ciq and cjq for q = 0, 1, 2, …, n–1, is given by the number of 
elements in the two codes that differ and is denoted by dij.  
 
Example 2 For example, consider the two code words C1 = (1010) and C2 = (0111). The Hamming distance 
is given by 3, since the two code words differ in three positions. It is clear that the code words agree in 4–3 = 
1 position and disagree in 3 positions.  
 
 
The smallest value of the set of all pairs of hamming distances {dij}, is called the minimum distance 
of the code and is denoted by dmin. Denote the weight of a code word as the sum of the nonzero elements in 
the code word. As an example, the weight of the word (0101) is two. In general, it can be shown that the 
distance dij between any code word pair Ci and Cj is simply the weight of the code word formed by taking the 
sum of the two code words, using modulo-2 arithmetic. The parameter dmin can be found from the expression 
 
 
 
(4.2-2) 
,
0
{
}
min
r
r r
d
Min w


 
where wr is the weight of each code word, and w0  is the zero word, which is composed of all zeros, and has 
weight zero. 
Let the number of code words that have Hamming distance d from the all-zeros code word by Ad. The 
code weight distribution of the code is the set of all Ad for d = dmin, dmin+1, …n.  
 
Example 3 Consider the following seven-symbol code indicated in Table 4.2-1. This code is rate Rc=4/7 and 
has k = 4 information bits and a code word length of 7 coded bits. The code weights can be determined from 
checking all but the all-zero code word. Thus there are seven of weight 3, so that A3 = 7, seven of weight 4, 
so that A4 = 7, and one of weight 7, so that A7 = 1. 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           197 
Another parameter is related to the minimum distance. It is the number of errors that can be 
corrected in a code word, is denoted by the letter “t,” and is called the error correction capability. The error 
correction capability is given by 
 
 
1
2
min
d
t







 
(4.2-3) 
 
where x

 is the largest integer less than or equal to x. The value of t is the number of all combinations of t 
or fewer errors in any received code word that can be corrected. Note for error detection, dm –1 errors can be 
detected. 
 
Table 4.2-1 Seven-Symbol (7,4) Code 
1
1
0
1
0
0
1
1
1
1
1
15
0
1
1
0
0
0
1
0
1
1
1
14
1
0
0
0
1
0
1
1
0
1
1
13
0
0
1
1
1
0
1
0
0
1
1
12
1
1
1
1
1
1
1
1
1
0
1
11
0
1
0
0
1
1
1
0
1
0
1
10
1
0
1
0
0
1
1
1
0
0
1
9
0
0
0
1
0
1
1
0
0
0
1
8
1
1
0
0
0
1
0
1
1
1
0
7
0
1
1
1
0
1
0
0
1
1
0
6
1
0
0
1
1
1
0
1
0
1
0
5
0
0
1
0
1
1
0
0
0
1
0
4
1
1
1
0
1
0
0
1
1
0
0
3
0
1
0
1
1
0
0
0
1
0
0
2
1
0
1
1
0
0
0
1
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
Word
number                       
Information bits
6 44 7 4 48
                     
Code words
6 44 7 4 48
1
1
0
1
0
0
1
1
1
1
1
15
0
1
1
0
0
0
1
0
1
1
1
14
1
0
0
0
1
0
1
1
0
1
1
13
0
0
1
1
1
0
1
0
0
1
1
12
1
1
1
1
1
1
1
1
1
0
1
11
0
1
0
0
1
1
1
0
1
0
1
10
1
0
1
0
0
1
1
1
0
0
1
9
0
0
0
1
0
1
1
0
0
0
1
8
1
1
0
0
0
1
0
1
1
1
0
7
0
1
1
1
0
1
0
0
1
1
0
6
1
0
0
1
1
1
0
1
0
1
0
5
0
0
1
0
1
1
0
0
0
1
0
4
1
1
1
0
1
0
0
1
1
0
0
3
0
1
0
1
1
0
0
0
1
0
0
2
1
0
1
1
0
0
0
1
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
1
1
0
1
0
0
1
1
1
1
1
15
0
1
1
0
0
0
1
0
1
1
1
14
1
0
0
0
1
0
1
1
0
1
1
13
0
0
1
1
1
0
1
0
0
1
1
12
1
1
1
1
1
1
1
1
1
0
1
11
0
1
0
0
1
1
1
0
1
0
1
10
1
0
1
0
0
1
1
1
0
0
1
9
0
0
0
1
0
1
1
0
0
0
1
8
1
1
0
0
0
1
0
1
1
1
0
7
0
1
1
1
0
1
0
0
1
1
0
6
1
0
0
1
1
1
0
1
0
1
0
5
0
0
1
0
1
1
0
0
0
1
0
4
1
1
1
0
1
0
0
1
1
0
0
3
0
1
0
1
1
0
0
0
1
0
0
2
1
0
1
1
0
0
0
1
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
Word
number                       
Information bits
6 44 7 4 48
                     
Code words
6 44 7 4 48
 
 
 
Example 4 Consider the code set consisting of four code words: 00000, 11011, 11100, and 00111. Four 
messages can be transmitted with this code set. Note that 32 code words are possible. By limiting the number 
of possible code words, one increases the distance from the other code words. The minimum distance is 3, 
and therefore by (4.2-3) it can correct any single error in the received code word. It can detect at least two 
errors. Of the 32 possible code words, 4 are allowable and 28 are presumed to have at least one error in 
reception. One can construct a decoding table that is illustrated in Table 4.2-2.  
Under each code word all the single position errors are listed, which are indicated as single errors in 
the table. Note that there are eight positions left over. In each of these eight words, the corresponding word 
differs from the correct code word by at least two errors. Note that there is not a unique way to assign them. 
For example, the word 10001 could be placed under the first column or the second column, since both have 
errors in two places. 
This table is used in the decoding process by finding the column of the table that contains the 
received sequence and selecting the code word at the top of the column as the decoded output.  
 

 198                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
The reason that the table is constructed in this way is that single errors are more likely than double 
errors when the channel bit error rate (p) is less than 0.5. For a sequence of five channel bits the probability 
of k channel bit errors is given by pk(1–p)5–k. Clearly  
 
 
 
(4.2-4) 
5
4
(1
)
(1
)
...
p
p
p
p




5
 
which states that zero errors are more likely than a single error, followed by a double error, and so on, 
followed by five errors. No errors, a single error, and a double error are shown in Table 4.2-2. Therefore it 
follows that a decoder that decodes a particular received sequence into a code word that is nearest in the 
Hamming sense (distance) selects the most likely transmitted code word under the assumption that all code 
words are equally likely. A decoder that implements this decoding rule is called a maximum-likelihood 
decoder. In this sense it is an optimum decoder. This decoding approach via a decoding table is only feasible 
for short codes. This approach provides a benchmark to compare nonoptimum decoding approaches.  
 
Table 4.2-2 Decoding Table for a Four-Word Code Set 
 
1
1
1
0
0
0
0
1
1
1
1
1
0
1
1
0
0
0
0
0
1
0
0
1
1
1
1
0
1
0
1
0
1
1
1
0
1
0
0
1
0
0
1
0
0
1
1
1
0
1
1
0
1
1
0
0
1
0
1
0
1
0
0
0
1
1
1
0
0
1
0
1
1
1
0
1
0
1
1
1
0
0
0
0
0
1
0
0
0
1
1
1
1
1
0
0
1
1
0
1
0
0
0
1
0
0
0
0
0
0
1
1
1
1
1
1
1
0
0
1
0
0
1
1
1
0
0
0
1
0
1
1
1
0
0
1
0
0
0
1
0
1
1
0
1
0
0
1
1
0
1
1
0
1
0
0
0
0
0
1
1
1
1
0
0
0
0
1
1
1
1
1
0
1
1
0
0
0
0
0
1
0
0
1
1
1
1
0
1
0
1
0
1
1
1
0
1
0
0
1
0
0
1
0
0
1
1
1
0
1
1
0
1
1
0
0
1
0
1
0
1
0
0
0
1
1
1
0
0
1
0
1
1
1
0
1
0
1
1
1
0
0
0
0
0
1
0
0
0
1
1
1
1
1
0
0
1
1
0
1
0
0
0
1
0
0
0
0
0
0
1
1
1
1
1
1
1
0
0
1
0
0
1
1
1
0
0
0
1
0
1
1
1
0
0
1
0
0
0
1
0
1
1
0
1
0
0
1
1
0
1
1
0
1
0
0
0
0
0
1

Code
words

Single
errors
Double
errors
 
 
 
 
Each symbol is transmitted one at a time across the channel. Each symbol is corrupted by thermal 
noise or a jamming signal on the channel. The channel can be described by the probability of receiving a 
particular output n-tuple, given that the input was a particular input n-tuple, Cm, and the jammer state vector 
is z. This probability is denoted as 
(
,
m
p y C
z). The channel is assumed to be memoryless so that the joint 
probabilities is simply given as the product 
 
 
1
(
, )
(
,
n
m
i
i
p
p y


y C
z
)
mi
i
c
z  
(4.2-5) 
 
 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           199 
4.2.1.1 Algebraic Elements of Linear Block Codes  
 
Before we address the decoding rule for decoding, let us summarize some algebraic concepts that are used in 
dealing with linear block codes [11]. These operations are based on the convention of the algebraic field that 
has elements that are the symbols contained in the alphabet. A very common field is based on the two 
elements “0” and “1,” which forms the binary alphabet. In general a field F consists of a set of elements that 
has two arithmetic operations defined on the elements: (1) addition and (2) multiplication that satisfy the 
following two axioms. 
(A) Addition 
1. The set F is closed under addition. That is, if ,a b
F

, then a
b
F

. 
2. Associative property. If , , 
 
a b and c
F

, then 
)
(
)
(
a
b
c
a
b
c





. 
3. Addition is commutative. That is, a
b
b
a



. 
4. There is a “zero element” in the set that satisfies 
0
a
a


. 
5. For every element there exists its negative. That is, if b exists, then –b exists. Subtraction is 
defined by 
(
) 
a
b
a
b



(B) Multiplication 
1. The set F is closed under multiplication. That is, if ,
 then, 
a b
F
ab
F


. 
2. The multiplication operation is associative. That is, (
)
(
)
a bc
ab c

. 
3. The multiplication operation is commutative. That is, ab
ba

. 
4. The multiplication operation is distributive over addition. That is, (
)
. 
a
b c
ac
bc



5. The set F contains the identity element that satisfied the condition (1)
a
a

. 
6. Every element of F has an inverse except the element “0.” If 
F
(
0)
,
b 

 then its inverse is 
defined as b–1 and bb–1=1. 
The set of real numbers, the set of complex numbers, and the set of rational numbers are examples 
of fields. Codes are constructed from finite fields-fields that have a finite number of elements. Finite fields 
with q elements are called Galois fields, and are denoted by GF(q). The smallest field is the field GF(2). By 
these axioms every field must have a zero element and a one element. If q is a prime number then it is 
possible to construct GF(q) of the form {0,1,2…q–1} with q an integer satisfying q
2

. The multiplication 
and addition operations on the elements in GF(q) are defined modulo q and are denoted as mod(q). The 
addition and multiplication tables for GF(2) are shown here. 
 
+
0        1
0         0        1
1         1        0
.
0        1
0         0        0
1         0        1
Addition
Multiply
+
0        1
0         0        1
1         1        0
+
0        1
0         0        1
1         1        0
.
0        1
0         0        0
1         0        1
.
0        1
0         0        0
1         0        1
Addition
Multiply
 
 
 
4.2.1.2 The Generator and Parity Check Matrices 
 
Recall that the data is described as a row vector of the form Xm = (xm0, xm1, … xm(k–1)) and the code word is of 
the form Cm = (cm0, cm1, …cm(n-1)), with m = 0, 1, 2, …, 2k–1 and Cm is one of the 2k code words. Each code 
word in a linear block encoder can be written as a set of n linear equations of the form 
 
 
 
(4.2-6) 
1
1
2
2
3
3
...
     
0, 1, 2,...
1
mj
m
j
m
j
m
j
mk
kj
c
x g
x
g
x g
x g
j
n







 
where 
(0,1) all 0
1
mi
x
i
k


 and 
(0,1) 
ij
g 
and 
(0,1) all 0
1
kj
c
j
n



. The linear equations of 
(4.2-6) can be written in matrix form as 

 200                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
m
m

C
X G  
(4.2-7) 
 
In (4.2-7) G is a k × n matrix called the generator matrix of the code and is represented by 
 
 
0
00
01
0(
1)
1
10
11
1(
1)
2
0
1
1(
1)
1
,
,...
,
,...
,
,...
n
n
k
k
k
n
k
g
g
g
g
g
g
g
g
g




































M
M
g
g
G
g
g
 
(4.2-8) 
 
The rows of G generate or span the (n,k) code. The rows of G are known as the row vectors of G. A linear 
code with 2k code words is a subspace of dimension k, and the row vectors gj of the generator matrix G must 
be linearly independent (i.e., they must be a basis for the (n,k) code). Since the set of basis vectors gj are not 
unique, the matrix G is also not unique. Since the subspace has dimension k, the rank of G is k. From (4.2-6) 
it can be seen that any code word can be written as the linear sum 
 
 
1
0
k
m
mj
j
x



C
jg  
(4.2-9) 
 
where the gj are defined as the rows of the matrix in (4.2-8). To encode a code word the encoder only has to 
store the k rows of G and to form the linear combination of these k rows based on the input data message Xm, 
as indicated in (4.2-7). 
 
Example 5 Consider the code indicated in Table 4.2-1. It has the following generator matrix 
 
 
0
1
2
3
1 1 0 1 0 0 0
0 1 1 0 1 0 0
0 0 1 1 0 1 0
0 0 0 1 1 0 1


























g
g
G
g
g
 
(4.2-10) 
 
since the k row vectors are found by locating the unit vector data sequences. Thus the word number 9 of 
Table 4.2-1 is g0, the word number 4 is g1, and so on. If the data message to be coded is X = (1 1 0 1), then its 
corresponding code word is given by, using modulo-2 addition  
 
 
0
1
(1)
(1)
(1)
3



C
g
g
g  
(4.2-11) 
or 
 
0
1
3
(1)
(1)
(1)
1101000
     0110100
    0001101
1010001



+
+
C
g
g
g
C =  
C = 
 
(4.2-12) 
 
is the resulting code word as can be seen from Table 4.2-1 (code word 13).  
 
Any generator matrix for a linear (n,k) code can be reduced by row operations and column 
permutations to the systematic form of G, which is a k by n matrix of the form:  

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           201 
 
11
12
1(
)
21
22
2(
)
1
2
(
)
1 0 0. . . 0  
 
... 
0 1 0. . . 0  
 
... 
                       
0 0 0 . . .1  
 
... 
n k
n k
k
k
k
k n k
p
p
p
p
p
p
p
p
p




















M M M M M M M M
G
I
P
 
(4.2-13) 
 
In (4.2-13) Ik is a k × k identity matrix and P is a k × (n–k) matrix that generates the n–k redundant coded bits 
(parity check bits). The vertical line in the first matrix to the right of G denotes partitioning. The code 
generated by G of (4.2-13) is a systematic code. A linear block systematic code is a code in which the data 
bits are contained in the code word. The G of (4.2-13) defines the first k symbols of the code as the input data 
bits. If an (n,k) linear code generated by a generator matrix is not in systematic form, then the code is called 
nonsystematic. However a nonsystematic code can always be put into systematic form by elementary row 
and column operations.  
 
It is possible to implement a linear systematic block code with the use of k bit shift registers and n–k 
modulo-2 adders tied to the appropriate stages of the shift register. The sketch following illustrates a linear 
shift register for generating a (7,4) code, which has G given by 
 
 
4
1 0 0 0 1 0 1
0 1 0 0 1 1 1
0 0 1 0 1 1 0
0 0 0 1 0 1 1

















G
I P  
(4.2-14) 
 
where I4 is a 4 × 4 identity matrix and P is a 4  3 matrix.  
 
It follows from (4.2-7) that the cmj are given by: 
 
 
4
0
1
5
1
2
6
0
1
3
m
m
m
m
m
m
m
m
m
m
m
m
c
x
x
x
c
x
c
c
c
x
x
x
2
3









 
(4.6-15) 
 
The corresponding encoding scheme is shown in Figure 4.2-1. The general procedure (illustrated in Figure 
4.2-1, for k = 4) is as follows. The k-bit block of data is shifted into the upper shift register in Figure 4.2-1. 
The n–k parity check bits are generated in the lower shift register. Finally the data bits are shifted out 
followed by the parity check bits to form the n-bit coded word. 
 
+
+
+
xm3              xm2            xm1
xm0   
cm6          cm5
cm4   
Input data blocks
four at a time, Xm
Output encoded
data, Cm
+
+
+
xm3              xm2            xm1
xm0   
cm6          cm5
cm4   
Input data blocks
four at a time, Xm
Output encoded
data, Cm
 
 
Figure 4.2-1 A linear shift register for generating a systematic (7,4) binary code. 
 
 
 
It is to be noted that the resulting form of the code is as shown in Figure 4.2-2.  
 

 202                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
                                 
6 4 4 4 7 4 4 4 8
Parity check part
                                  
6 4 4 4 7 4 4 4 8
Message part
0
1
2
k-1
L
k
L
n-1
n-k data bits
k data bits
                                 
6 4 4 4 7 4 4 4 8
Parity check part
                                  
6 4 4 4 7 4 4 4 8
Message part
                                  
6 4 4 4 7 4 4 4 8
Message part
0
1
2
k-1
L
k
L
n-1
n-k data bits
k data bits
n-k data bits
k data bits
 
 
Figure 4.2-2 Systematic block code showing the data (shaded part) and parity bits. 
 
 
The original data bits are at the front of the (block) word followed by the parity check bits as seen in Figure 
4.2-2.  
There is a dual code associated with any linear (n,k) code. The dual code is a linear (n, n–k) code 
with 2n–k code words, which is the null space of the original (n,k) code word. Let H denote the generator 
matrix for the dual code and note that it is an n × (n–k) matrix. It turns out that any code word of the (n,k) 
code word is orthogonal to any code word in the dual code [2]. Therefore any code word of the original (n,k) 
code is orthogonal to every row of the matrix1 H. That is  
 
 
m
0
T
C H
 
(4.2-16) 
 
where the superscript “T ” denotes the transpose of the given matrix, 0 is the all-zero row vector with n–k 
elements, and Cm is one of the code words in the original (nondual) code. The matrix H is called the parity 
check matrix of the original code and has the property given in (4.2-16) and is an (n–k) × n matrix. Note that 
HT is therefore an n by n–  k matrix. In addition to the relation indicated in (4.2-16), it can be shown that  
 
T 0
GH
 
(4.2-17) 
 
where 0 is a k × n– k matrix with all-zero elements. Equivalently we have that since the reversal law of 
transposed products of matrices holds 
 
 




T
T
T
A B
B
A

 
(4.2-18) 
 
It follows that from (4.2-17) that 
 
 
T 0
HG
 
(4.2-19) 
 
 
Consider now a linear block (n,k) code that is systematic and assume that its generator matrix G is 
given by (4.2-13), then since 
, it follows [12] that for coefficients 
T 0
GH
 
 
11
21
1
12
22
2
1(
)
2(
),
(
)
,
        ...       
,1,0,0,...0
,
,      ...       
,0,1,0,...0
                         
,
...
,0,0,0...1
k
k
T
T
n k
n k
n k
n k
k n k
p
p
p
p
p
p
p
p
p






























M
M
M
M M
H
P
I
P
I
 
(4.2-20) 
 
                                                          
1 It should be noted that not all authors define G and H as we do here. References [1, 4, 11, 12] have the same definitions as used here, 
but [2, 13] are different, for example.  

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           203 
since addition and subtraction modulo 2 is equivalent, the second term matrix form follows, in (4.2-20). Note 
that H is an (n–  k) × n matrix. Clearly it is seen that 
 
 
T
k
n k









P
GH
I
P
I
 
(4.2-21) 
 
This is evaluated as 
 
 
 
(4.2-22) 
T 

0
GH
P
P =
 
which is a k by n– k null matrix. (4.2-22) follows, since multiplication of a rectangular matrix by an identity 
matrix of compatible dimensions leaves the matrix unchanged [13]. 
 
Example 6 As an example of obtaining the generator matrix for the dual code H, from G, consider the G 
defined in (4.2-14). Repeating the G for the (7,4) code here  
 
 
1 0 0 0 1 0 1
0 1 0 0 1 1 1
0 0 1 0 1 1 0
0 0 0 1 0 1 1












G
 
(4.2-23) 
 
It follows that the H matrix is obtained from (4.2-20) to produce 
 
 
1 1 1 0 1 0 0
0 1 1 1 0 1 0
1 1 0 1 0 0 1










H
 
(4.2-24) 
 
Thus it is seen that the 3 × 3 identity matrix is located at the right side of H, and the last three columns of G 
form the first four elements of the rows of H. Now let us check that (4.2-17) holds. Evaluating the indicated 
matrix product produces the 4 × 3 all-zero matrix. 
 
 
0 0 0
0 0 0
0 0 0
0 0 0
T












GH
 
(4.2-25) 
 
 
4.2.1.3 The Syndrome and Error Correction 
 
Consider a linear (n,k) block code with a generator matrix G and a parity check matrix H. Let C be a code 
word from this code set that was transmitted over a noise channel. Let 


0
1
1
, ... n
r r
r 

r
 be a received vector at 
the output of the channel. Due to the channel noise, C and r will not be the same. The n-component vector 
sum given by  
 
 


0
1
1
,
,... n
e e
e 


e
r
C =
 
(4.2-26) 

 204                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
is called the error pattern or error vector. Each component of e satisfies 
1
ie  for 
i  and ei = 0 for 
ri = ci. The “1s” in the error vector are the transmission errors caused by channel noise. It follows from 
ir
c

(4.2-26) that 
 
 


r
C
e  
(4.2-27) 
 
The receiver does not know if errors exist in r. When the presence of errors is detected then either action will 
be taken to correct the errors (forward error correction) or a retransmission will be requested.  
 
The decoder computes the following (n–k) tuple when r is received 
 
 
 
(4.2-28) 

0
1
1
,
,...
T
n k
s s
s 


T
s
Hr

 
which is called the syndrome of r. Now s = 0, if and only if r is a code word, and 
0
s
 if and only if r is not 
a code word. Therefore if 
, it is known that r is not a code word, and the presence of one or more errors 
has been detected. However if s = 0, r is a code word, and the receiver assumes that r is the transmitted code 
word. It is to be noted that certain errors will not be detectable, (that is, if r has errors, but 
). 
This will occur when the error pattern e is identical to a nonzero code word. When this occurs, r is the sum of 
two code words, which is, of course, a code word and thus 
0
s
T

0
s
Hr
T

0
s
Hr
.  
An error pattern of this kind is called an undetectable error pattern. It follows that since there are 
2k–1 nonzero error patterns, there are 2k–1 undetectable error patterns. It is clear that when an undetectable 
error occurs, then a decoding error results. Note also that since the reversal law of transposed products of 
matrices holds, it follows that 
 
 


0
1
1
,
,...
T
n k
s s
s 

s
= rH
1
 
(4.2-29) 
 
It is to be noted that a circuit similar to the encoding circuit can be used to obtain the syndrome.  
 
 
4.2.1.4 Polynomial Codes and Their Generation 
 
Previously we defined a code word by the n-tuple  
 
 
 
(4.2-30) 
( )
0
1
2
1
(
,
,
,...
)
i
n
c c c
c 

C
 
An alternate method of expressing the same code word is to let the elements c0, c1, c2,…cn–1 be the 
coefficients of a polynomial in the variable x. Let this polynomial be of the form 
 
 
2
0
1
2
1
( )
...
n
n
p x
c
c x
c x
c
x 





 
(4.2-31) 
 
With this notation a polynomial code is specified as the complete set of polynomials of degree n–1 or less 
that contains some specified polynomial g(x) as a factor. In general g(x) is of degree n–k. This polynomial 
g(x) is called the generator polynomial of the code. It is necessary that the coefficients of these polynomials 
are elements of a finite field. The operations include adding, subtracting, multiplying, and dividing these 
coefficients, as indicated in Section 4.2.1.1.  
Then the set of polynomials defined by  
 
 


2
3
0
1
2
3
1
( )
( )
k
k
c x
g x
a
a x
a x
a x
a
x 






1  
(4.6-32) 
 
forms an (n,k) code. 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           205 
Example 7 Let g(x) be given by 
 
 
3
( )
1
g x
x
x


 
(4.2-33) 
 
Then the set of polynomials described by the equation  
 
 
 
(4.2-34) 
3
0
1
2
( )
(1
)(
)
c x
x
x
a
a x
a x





2
)
5
1
2
 
form a (6,3) linear block code. Since there are three coefficients, there are eight distinct polynomials that 
correspond to the eight ways to choose the three coefficients (d0, d1, and d2) from GF(2) (that is, di = 0 or 1). 
This will not lead to a systematic code.  
 
 
Consider a method that will lead to a systematic code. If 
 is represented the input code 
words (i.e., a0 the first, a1 the second, and a2 the third), then the code words would be represented by 
2
0
1
2
(a
a x
a x


 
 
 
(4.2-35) 
2
3
4
0
0
1
1
2
0
2
1
2
( )
(
)
(
)
(
)
c x
a
a
a x
a
a x
a
a x
a x
a x









 
A property of linear polynomial codes is that they may always be rendered in systematic form. For the above 
example, indicated in (4.2-35), let  
 
 
0
0
1
0
2
1
b
a
b
a
a
b
a
a





 
(4.2-36) 
 
By solving (4.2-36) for the ai values and substituting into (4.2-35), the code polynomial becomes (see 
Problem 10 for the details) 
 
 
 
(4.2-37) 
2
3
4
0
1
2
0
2
0
1
0
1
2
( )
(
)
(
)
(
)
c x
b
b x
b x
b
b x
b
b x
b
b
b x










5
5)
5
 
 
It is seen that this code polynomial is in the familiar (systematic) parity check form in which the 
first three bits are the input data and the last three bits are parity symbols.  
 
Another option to obtaining a systematic form is to multiply the polynomial 
 by x3 
giving a result of 
. Now, if this result is divided by the generator polynomial, it is shown 
in Problem 7 that one obtains a quotient of 
 and a remainder of 
. It is to be noted that in general for polynomials the coefficients are 
either “0” or “1” and the addition is modulo 2. Now notice that if the remainder is added to the dividend, the 
result is given by 
2
0
1
2
(
)
d
d x
d x


3
4
0
1
2
(d x
d x
d x


1
2
1
2
)
(
d
d
x
d
d




2
0
2
1
2
((
)
)
d
d
d x
d x



2
0
2
0
(
)
(
)
d
d
d
x


 
 
 
(4.2-38) 
2
3
4
0
2
0
1
2
1
2
0
1
2
( )
(
)
(
)
(
)
p x
d
d
d
d
d
x
d
d
x
d x
d x
d x










 
which represents a code word in systematic form. It is seen that the right three terms include the data and the 
left three terms are the parity check bits. This code polynomial procedure is an application of the Euclidean 
division algorithm, which states [1] that 
 
 
 
dividend = (quotient) 
(divisor) + remainder

 
(4.2-39) 
 

 206                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
In the general case for this representation of a linear block (n, k) code, the pre-multiplication 
polynomial is x(n–k). It is true that the degree of the remainder will always be less than the degree of the 
divisor, which is n– k, since g(x) is of degree n–  k. The dividend will only contain terms higher than n–  k, since 
the original sequence to be encoded was multiplied by xn–k. It therefore follows that the adding the remainder 
to the dividend will not result in any cancellation since each group of terms have no polynomial terms in 
common.  
 
A circuit model that can generate this code is shown in Figure 4.2-3. The first bit input is d2. On the 
first shift it enters both stage 1 and stage 2 simultaneously. On the second shift d1 enters stage 1, and d1+d2 is 
placed into stage 2 of the shift register. In stage 3 d2 is placed. Finally on the last shift d0 + d2 ends up in stage 
1, d0+d1+d2 ends up in stage 2, and d1+d2 ends up in stage 3 of the shift register. All additions are modulo 2.  
 
 
3
d1+ d2
d0+ d1+ d2
d0+ d2
2
d2
d1+ d2
d1
1
0
d2
d2
0
0
0
0
Shift number
Third stage
Second stage
First stage
+
+
d2, d1, d0
1
2
3
Stage numbers
3
d1+ d2
d0+ d1+ d2
d0+ d2
2
d2
d1+ d2
d1
1
0
d2
d2
0
0
0
0
Shift number
Third stage
Second stage
First stage
3
d1+ d2
d0+ d1+ d2
d0+ d2
2
d2
d1+ d2
d1
1
0
d2
d2
0
0
0
0
Shift number
Third stage
Second stage
First stage
+
+
d2, d1, d0
1
2
3
Stage numbers
 
 
Figure 4.2-3 A circuit diagram that encodes the (6,3) code by simultaneously multiplying by x3 and dividing by g(x) = 1 = x + x3 [1]. 
 
 
Following Clark and Cain [1] the general encoder over GF(q) can be constructed as shown in Figure 
4.2-4. Note that for binary codes defined over GF(2), all the minus signs can be removed with no effect on 
the encoder. The input is shown at the bottom of the figure, with k data bits that 
 
1
n-k
g 
L
1g

0
g

-
1
n k
g


-
2
n k
g


+
L
+
+
+
1
2
3
1
0
,
,
,... ,
k
k
k
d
d
d
d d



1
n-k
g 
L
1g

0
g

-
1
n k
g


-
2
n k
g


+
L
+
+
+
1
2
3
1
0
,
,
,... ,
k
k
k
d
d
d
d d



 
 
Figure 4.2-4 General circuit for encoding linear block codes in GF(q), which multiplies the input polynomial by xn–k and divides by g(x). 
 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           207 
are input to the encoder. The inverse coefficient indicated on the right-hand side of the figure must be taken 
in GF(q). For more details see [1].  
 
4.2.1.5 Cyclic Codes 
 
In general for particular values of n the polynomial codes exhibit a cyclic property. That is when a code word 
C = (c0, c1, …cn-1) is shifted one place to the right, one obtains another n-tuple code word 
 
 
 
(4.2-40) 
( )
1
0
1
2
(
,
,
,...
i
nc
c c
c


C
)
n
 
which is called a cyclic shift of C. That is to say, every cyclic shift generates a new code word.  
 
Consider the code of Example 7 in the previous section. The generator polynomial for this code is 
given by 
3
( )
1
g x
x

x . Consider a code word from the set of code words generated by g(x). That is, if the 
code word is shifted one place to the right that is the same as multiplying the code word, expressed as a 
polynomial by x, and replacing the term x7 with 1. This latter step is equivalent to reducing the polynomial 
mod(x7–1). Now select a code word with a 1 in the right-hand position. We may write this code word as  
 
 
( )
( ) ( )
c x
g x p x

 
(4.2-41) 
 
where g(x) was given earlier. Thus shifting this code word one place to the right yields the new code 
polynomial of the form 
 
7
7
( )
( )
(
1)mod(
1)
xc x
xc x
x
x




 
(4.2-42) 
 
It is shown in Problem 8 that g(x) divides (x7–1). Since the right hand side clearly is divisible by g(x) (see 
(4.2-41)) it is clear that the single shift is another code word. If our original code word did not have a 1 in the 
right-hand position, the result still holds [1].  
 
This result can be extended to any (n,k) code in which g(x) divides xn–1. The least n in which g(x) 
divides xn–1 normally determines the largest useful code length nmax of the code. It can be shown [1] that the 
largest possible value of nmax is of the form (2m–1) where m is the degree of g(x). It is to be noted that for 
some polynomials the number of cycles can be much less than 2m–1.  
 
 
4.2.1.6 Cyclic Redundant Check Codes 
 
Cyclic redundant check (CRC) codes are suited well for error detection, as opposed to error correction. In 
other words, they are suitable for the detection of one or more errors in a word, without the requirement to try 
to correct the word to its original uncorrupted form. The encoding and decoding process is practical, and they 
can be designed to detect many different types of errors. For these reasons CRC codes are almost universally 
used for all error detection applications in practice.  
 
Define an error burst of length B in an n-bit received word as a contiguous sequence of B bits in 
which the first and the last bits of any number of intermediate bits are received in error. Binary (n,k) CRC 
codes are capable of detecting the following five error patterns: 
(1) All error bursts of length n–k or less. 
(2) A fraction of error bursts of length n–k+1; the fraction is 1–2–(n–k–1). 
(3) A fraction of error bursts of length greater than n–k+1; the fraction is 1–2–(n–k–1). 
(4) All combinations of dmin –1 or fewer errors. 
(5) All error patterns with an odd number of errors if the generator polynomial g(x), for the code has an 
even number of nonzero coefficients.  
Table 4.2-3 lists some CRC codes that are used in practice, and are international standards. 
 
It is to be noted that the first three CRC codes listed in the table contain the factor (x + 1). By using 
the factor (x+1) in the generating polynomial ensures that all odd number of errors are detected. Often the 
CRC-12 is used for 6-bit characters, and the second and third codes are used for 8-bit characters. The last 

 208                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
CRC, CRC-32, is used in asynchronous transfer mode (ATM) applications. CRC-32 is difficult to compute 
because it is based on a polynomial of degree 32 that has many more terms (15) than any other CRC 
polynomial in common use.  
 
Table 4.2-3 CRC Code Polynomials 
 
32
x32+x26+x23+x22+x16+x12+x11+x10+x8+x7+
x5+x4+x2+x+1
CRC-32
16
x16+x12+x5+1
CRC-CCITT
16
x16+x15+x2+1
CRC-16
12
x12+x11+x3+x2+x+1
CRC-12
n–k
Generator Polynomial
CRC Code
32
x32+x26+x23+x22+x16+x12+x11+x10+x8+x7+
x5+x4+x2+x+1
CRC-32
16
x16+x12+x5+1
CRC-CCITT
16
x16+x15+x2+1
CRC-16
12
x12+x11+x3+x2+x+1
CRC-12
n–k
Generator Polynomial
CRC Code
 
 
 
 
Now that we have finished the presentation of the basics of block codes, we will turn our attention 
to evaluating their performance.  
 
 
4.2.2 Rule for Optimum Decoding with No Jammer Side Information 
 
Now we will consider the optimum decoding rule when no side information is available for block codes.  
 
It is assumed that the following is known to the decoder: (1) the received vector y, (2) knowledge of 
the entire set of code words Cm, (3) knowledge of the source probabilities of being transmitted, (4) and 
knowledge of the channel transition probabilities 
(
m
p
)
y C
. Based on this information the decoding rule is 
designed so that the average number of bit errors outputted to the user is minimized. Denote the decoder 
output bit error probability as Pb. 
 
First consider the problem of designing a decoding rule that results in the minimum probability of 
incorrectly estimating the transmitted code word without regard to the bit errors associated with a particular 
decoded code word. Denote the code word error probability as Pw. Denote the decoder estimate of the 
decoded code word as 
, given that y was received. If Cm was transmitted and 
 when y was 
transmitted, then the decoder estimate is correct. The code word error probability Pw is minimized if the 
decoder chooses its estimate 
 as the code word that was most likely to have been transmitted. In other 
words, choose 
 to be Cm with the largest posterior probability 
ˆ
m
C
ˆ
m 
C
Cm
ˆ
m
C
ˆ
m
C


m
P C
y , and the decision based on this 
criterion is called the maximum a posteriori probability criterion (MAP).  
 
Bayes’ theorem [10] can be used to compute the probabilities 

m
P C
y . Note that from Bayes’ 
theorem one has 
 
 
(
, )
(
)
( )
(
) (
m
m
m
P
P
P
P
P


C
y
C
y
y
y C
C )
m  
(4.2-43) 
 
Hence one can solve for 
(
m
P C
y)  to be 
 
(
) (
(
)
( )
m
m
m
P
P
P
P

y C
C
C
y
y
)  
(4.2-44) 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           209 
 
From Papoulis [14] the denominator can be expressed as the following summation 
 
 
2
1
'
' 0
( )
(
) (
)
k
m
m
P
P
P



y
C
y C
'
m
 
(4.2-45) 
 
which is a positive number, independent of the signal message m. Therefore in maximizing (4.2-44) over Cm 
one can see that it is sufficient to maximize the following quantity 
 
 
(
) (
m
m
P
P
)
y C
C
 
(4.2-46) 
 
If all message probabilities are equal then  
 
 
1
(
)
2
m
k
P

C
 
(4.2-47) 
 
so when all messages are equally likely the decoding rule simplifies to the following rule: Choose 
 to be 
Cm for which 
ˆ
m
C
 
(
m
P y C )  
(4.2-48) 
 
is maximized. A maximum-likelihood decoder is a decoder that maximizes (4.2-48) without regard for the 
message probabilities. This result is applicable [15] to all discrete memoryless channels, including hard- 
decision and soft-decision channels, which are memoryless and therefore characterized by the following 
expression 
 
 
1
(
)
(
n
m
i
i
p
p y


y C
)
mi
c
 
(4.2-49) 
 
 
4.2.2.1 Hard Decisions  
 
Consider now the case that hard decisions are made on the received coded symbols. This channel is modeled 
by the binary symmetric channel, so that 
 
 
(
)
(1
)
d
n
m
p
p
p
d



y C
 
(4.2-50) 
 
where d is the Hamming distance between the received y and Cm, and p is the BSC error (transition) 
probability. Since the logarithm is a monotonic function of its argument, the log of 
(
m
p
)
y C
 may be used as 
the maximum likelihood-decoding rule. Taking the log of (4.2-50) produces the result 
 
 
ln{ (
)
ln( )
(
)ln(1
)
ln
ln(1
)
(1
)
m
p
p y C
d
p
n
d
p
d
n
p
p














 
(4.2-51) 
 
The decoding rule is to choose 
 when the right-hand side of 
ˆ
m

C
C
(4.2-51) is maximum. Only the first term 
of the right-hand side of (4.2-51) depends on d, and since ln(p/(1–p) < 0 for p < 0.5, maximizing (4.2-51) is 
equivalent to minimizing d. Hence the decoding rule is a minimum-distance decoding rule in the Hamming 
sense. In other words the decoding rule states the decoded word is the one with the smallest distance between 
the received code word and all of the possible code words. 

 210                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
The decoding rule just described achieves the minimum word (block) decoding error probability. 
Minimization of the word decoding error probability is also presumed to minimize the bit error probability. 
This is normally true in well-designed block codes. The messages are assigned such that the most likely word 
decoding errors induce the minimum number of bit errors in that decoded word. All reasonable codes have 
this property. 
 
Example 8 Consider the n = 7, k = 4 code indicated in Table 4.2-1. Suppose that the demodulated output 
vector y is given by y = (0,1,1,0,0,1,0). Using Table 4.2-1, and using the minimum distance-decoding rule, 
determine the most likely transmitted word. By inspection the only code word that has a Hamming distance 
of one is code word ten, 
 = (1,1,1,0,0,1,0). 
ˆC
 
 
4.2.2.2 Soft Decisions 
 
Now consider a soft-decision memoryless, AWGN process with one-side noise power spectral density of N0, 
where the coded bits take on the value of 
1
kd , where T is the coded bit duration in seconds, and the 
matched filter integration is weighted by the factor 1/T. Since we are dealing with channel symbols that take 
on the values of 
 we will substitute 
1

m
D  for 
. Assuming that the receiver uses this matched filter, the 
channel produces the conditional probability density  
m
C
 
 
2
0
0
(
1
(
)
exp
/
/
k
mk
k
mk
y
d
p y d
N
T
N
T

)









 
(4.2-52) 
 
for each bit number k. Since the channel is assumed to be memoryless, the joint probability density of all the 
coded bits in a word is given by (conditioning on Cm is equivalent to conditioning on Dm) 
 
 
1
(
)
(
n
m
k
k
)
mk
p
p y d


y D
 
(4.2-53) 
 
 
Again it is more convenient to consider the natural logarithm of (4.2-53). Using (4.2-52) produces 
 
 





2
0
1
0
ln
(
ln
/
2
n
m
k
n
T
p
N
T
y
N






y D

k
mk
d

mk
 
(4.2-54) 
 
In order to maximize this result we note that the first term is independent of the code word Dm and 
the second term has a coefficient (T/N0) that does not depend on the code choice. Hence it is sufficient to 
minimize the summation by choosing the code word l such that the minimum is obtained; that is, 
 
 
 
(4.2-55) 

2
1
ˆ
min
n
l
k
m
k
y
d




D
 
This quantity is the square of the Euclidean distance between the received code word plus noise and 
the code word. The optimum choice of the code word is the value of Dl that minimizes the Euclidean distance 
to the received data, the received vector y (n-tuple). It is to be noted that the values of the code in (4.2-55) are 
expressed in 1s and –1s, not 0s and 1s. Thus it is assumed that a binary “0” maps to a “1” and a “1” maps to a 
“–1.” This fact is noted in Example 6. 
 
In problem 2 it is shown that for the AWGN channel (4.2-55) can be simplified to the following  
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           211 
 
 
(4.2-56) 
1
ˆ
max
{
}
n
l
m
k
y d



D
k
mk
 
In other words it is equivalent to maximize the correlation of the received code word over all possible code 
words and choose the one that yields the maximum.  
 
Example 9 Reconsider Example 1 in which the 7-bit code is illustrated. Consider the all-zero code word 
C0=(0,0,0,0,0,0,0) which corresponds to (0,0,0,0) as the input data. The additive real vector white Gaussian 
noise channel C0 is represented by C0’=(1,1,1,1,1,1,1). Hypothesize that the sampled output of the matched 
filter is given in 
 notation by (–0.02, –0.03,1.0,1.0,1.0,1.0,1.0). In other words the first two values have 
been corrupted by noise, and the other five components have not been corrupted. When the hard-decision 
detector is used the threshold is set to zero volts, so that anything larger than zero is detected as a 1 and 
anything less as a –1. Thus, in this example the hard decision detector will detect (1,1,0,0,0,0,0) as the 
detected word. The closest code word from Table 4.2-1 is (1,1,0,1,0,0,0), which corresponds to the data 
sequence (1,0,0,0), producing an error in the first bit position. 
1

 
The soft-decision decoder chooses the code word that is closest in Euclidean distance to the received 
word. Consider Table 4.2-4, in which the message number, the channel representation (
) along with the 
Euclidean distance between the received vector and each word via 
1

(4.2-55) are shown. As can be from the 
table that the closest Euclidean fit is to message 0, which corresponds to the data sequence (0,0,0,0). Hence 
with soft decision with this assumed y vector data, no bit decoding error is made, unlike the hard-decision 
decoding which produced one bit error in the first bit position. An alternative calculation would be to 
maximize the correlation via (4.2-56), in lieu of minimizing the Euclidean distance. 
 
 
4.2.3 Rule for Optimum Decoding with Jammer Side Information 
 
When jammer side information (JSI) is available the jammer state vector z is available to the decoder to aid 
in forming decoding decisions. Equation (4.2-5) characterizes the channel when jammer side information is 
available.  
 
 
4.2.3.1 Rule for Optimum Decoding with Jammer Side Information—Hard Decisions 
 
Consider the case when jammer side information (z) is available to the decoder to aid in making decisions in 
the decoding process and again assume a BSC. 
Again consider the maximum-likelihood decoder, which is based on choosing the code word Cm for 
which  
 
 
(
,
m
p y C
z)  
(4.2-57) 
 
is maximum [11].  
 
Assuming that the channel is memoryless, (4.2-5) applies. The analysis with JSI is similar to the 
case in which JSI is not available. Consider the natural logarithm of (4.2-5) to yield the quantity to maximize 
 
 


1
max
ln
(
,
m
n
k
mk
k
C
k
p y c
z

 
(4.2-58) 
 

 212                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
Table 4.2-4 Soft-Decision Decoding Euclidean Distance for Example 6 
 
14.021
10.021
10.021
14.021
21.901
9.901
9.901
5.901
9.981
13.981
13.981
9.981
18.101
14.101
14.101
2.101
– 1
– 1
1
– 1
1
1
– 1
15
1
– 1
-1
1
1
1
– 1
14
– 1
1
1
1
– 1
1
– 1
13
1
1
-1
– 1
– 1
1
– 1
12
– 1
– 1
-1
– 1
– 1
– 1
– 1
11
– 1
– 1
1
1
– 1
– 1
– 1
10
– 1
1
-1
1
1
– 1
9
1
1
1
– 1
1
– 1
–1
8
– 1
– 1
1
1
1
– 1
1
7
1
– 1
-1
– 1
1
– 1
1
6
– 1
1
1
– 1
– 1
– 1
1
5
1
1
-1
1
– 1
– 1
1
4
– 1
– 1
-1
1
– 1
1
1
3
1
– 1
1
– 1
– 1
1
1
2
– 1
1
-1
– 1
1
1
1
1
1
1
1
1
1
1
1
0
Message
Number
Euclidean Distance
                                                
Codewords (in Channel Format)
6 4 4 4 4 4 7 4 4 4 4 48
–1
14.021
10.021
10.021
14.021
21.901
9.901
9.901
5.901
9.981
13.981
13.981
9.981
18.101
14.101
14.101
2.101
– 1
– 1
1
– 1
1
1
– 1
15
1
– 1
-1
1
1
1
– 1
14
– 1
1
1
1
– 1
1
– 1
13
1
1
-1
– 1
– 1
1
– 1
12
– 1
– 1
-1
– 1
– 1
– 1
– 1
11
– 1
– 1
1
1
– 1
– 1
– 1
10
– 1
1
-1
1
1
– 1
9
1
1
1
– 1
1
– 1
–1
8
– 1
– 1
1
1
1
– 1
1
7
1
– 1
-1
– 1
1
– 1
1
6
– 1
1
1
– 1
– 1
– 1
1
5
1
1
-1
1
– 1
– 1
1
4
– 1
– 1
-1
1
– 1
1
1
3
1
– 1
1
– 1
– 1
1
1
2
– 1
1
-1
– 1
1
1
1
1
1
1
1
1
1
1
1
0
Message
Number
Euclidean Distance
                                                
Codewords (in Channel Format)
6 4 4 4 4 4 7 4 4 4 4 48
–1
 
 
 
Assume that the JSI is perfect in the sense that it knows what the jamming levels are exactly. Let J 
denote the set of all channel use indices j, for which zj = 1 and denote J  the set of all channel indices j, for 
which zj = 0, j = 0,1,2 ... n–1. Let d1 and d0 denote the Hamming distance between and Cm and y for the 
channel use indices (coded symbol number in a word) in J and J , respectively, and let p1 and p0 denote the 
BSC error probability for the channel use indices in J and J , respectively. In addition, let n1 denote the 
number of elements in J and n0 denote the number of elements in J , and note that n1 + n0 = n. Then 
(
,
m
p y C
z)  can be written as  
 
 
0
1
1
1
1
1
0
0
(
,1)
(
,0)
(1
)
(1
)
d
n n
d
n
d
k
mk
k
mk
k
k
p y c
p y c
p
p
p
p
1
0
d










J
J
 
(4.2-59) 
 
and recall that n = n1 + n0. Taking the natural logarithm of both sides produces 
 
 





0
1
1
1
0
1
1
1
0
1
ln
, )
ln
ln
ln
(
)ln 1
1
1
1
m
p
p
p
p
C
d
d
n
n
n
p
p
p
p


























y
z

0

 
(4.2-60) 
 
 
The decoder chooses as its estimate of Cm, which is 
, the code word in which 
ˆ
m
C
(4.2-60) is the 
largest. The third and fourth terms do not depend on Cm, and therefore can be disregarded in the search for 
the maximum. Thus the maximum of the following function can be used for the maximum-likelihood 
estimate of the transmitted code word 
 of Cm  
ˆ
m
C
 




0
1
1
0
1
0
ln
, )
ln
ln
1
1
m
p
p
p
C
d
d
p
p














y
z

 
(4.2-61) 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           213 
 
Note both terms are of the form ln(pi/(1–  pi)) and are negative for pi < 0.5. It follows that when some 
bits are jammed, the corresponding probability of error satisfies,
1
0.5
p 
, and for the other bits that are not 
jammed 
, so that ln(p0/(1–  p0)) is very negative. In this case, basically only the unjammed bits are 
used by the decoder to determine the best choice of Cm. Minimizing d0 does this. In the case that all bits are 
jammed the second term of 
0
0.5
p 
(4.2-61) is gone (d0 = 0) and then d1 must be minimized [15]. 
 
 
4.2.3.2 Rule for Optimum Decoding with Jammer Side Information―Soft Decisions 
 
Consider now the binary input soft-decision AWGN channel, which is characterized by (4.2-52). The 
function of the decoder is to choose its output code word that maximizes 
(
,
m
p y C
z)  or actually 
(
,
m
p
)
y D
z , where the Dm expresses each coded symbol as 

1

, whereas Cm expresses each coded symbol 
as 

0,1 . Defining J and J  as in Section 4.1.3.1, one can write 
 
 
(
, )
(
,1)
(
,
m
mk
k
k
p
p
d
p



0)
mk
d


J
J
y D
z
y
y
 
(4.2-62) 
 
 
The one-sided thermal noise spectral density is given by N0. When jamming is present the total 
spectral density is given by 
0
0J
N
N

. Using (4.2-52) in (4.2-62) produces  
 
    


2
2
0J
0
0
0J
0
0
(
)
(
1
1
(
, )
exp
exp
/
)
(
)/
(
) /
k
mk
k
mk
m
k
k
y
d
y
d
p
N
N
T
(N
T
N
N
T
N
T






)
/



















J
J
y D
z
 (4.2-63) 
 
Again taking natural logarithms one obtains 
 
 












2
1
0
0
0
2
0
0
0
, )
/
2
                           
ln
/
2
m
0J
k
J
k
mk
k
n
T
ln p(
ln
N
N
T
y
d
N
N
n
T
N
T
y
d
N














J
J
y D
z
k
mk
 
(4.2-64) 
 
As was observed before, the first and third terms on the right side of (4.2-64) are independent of the code 
word and can be ignored for determining the choice of the code word. The decoder, which determines the 
minimum error probability solution, chooses its output as the code word Dm in which  
 
 






2
0
0
0
1
1
, )
m
k
mk
k
k
J
ln p(
y
d
y
d
N
N
N









J
J
y D
z
2
k
mk
 
(4.2-65) 
 
is the largest (we have removed the T since it doesn’t affect the solution). The decoding metric is seen to be a 
weighted Euclidean distance metric that is influenced more by the received symbols that are not jammed than 
the ones that are jammed. This is true since it is assumed that N0J is much larger than N0 so that the second 
term (unjammed metric) is weighted more heavily. 
 
 
4.2.4 Computation of the Block Coded Word and Bit Error Rate 
 
In this section we shall compute the word error rate and the bit error rate for block codes.  
 

 214                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
4.2.4.1 Computation of the Block Coded Error Rates with No Jammer Side Information 
 
The actual probability of word or bit error is dependent upon the code as well as the decoding rule used. In 
the following sections minimum distance or maximum likelihood decoding is assumed. Let us view the 
decoder as a partition or mapping of the space of all possible received n-tuples y into one of the 2k possible 
code words. This mapping or partitioning results in 2k = M disjoint subspaces [15, 16] 
, where m = 0, 1, 
2,…M–1. 
 is defined by  
m

m

 
 
'
(
)
:
1 for all 
'
(
)
m
m
m
p
m
m
p














y C
y
y C
 
(4.2-66) 
 
Consider the definition 
m

y
. A word error (block of n bits) occurs when message m is transmitted and 
m

y
. A correct detection occurs when message m is transmitted and 
m

y
. 
m
 is defined by 
 
 
'
(
)
:
1 for some 
'
(
)
m
m
m
p
m
m
p










y C
y
y C
 
(4.2-67) 
 
 
Again assume that there are M code words, C0, C1,…CM-1  with M = 2k. The word error probability 
for the m-th code word is based on a result in [16] that states  
 
 




( )
(
)
1
m
w
m
m
m
P m
P
p
P





m
m

y
y
C
y C
y
C
 
(4.2-68) 
 
The overall average word error probability of all M words, given that P(m) is the probability of selecting 
message m, is given by 
 
 
1
0
( )
( )
M
w
m
w
P
P m P m



 
(4.2-69) 
 
 
Consider a bound on the word error probability. Let 
'
mm

 denote the decision region when there are 
only two messages m, and m’; that is, 
 
 
'
'
(
)
1
(
)
m
mm
m
p
p













y C
y
y C
 
(4.2-70) 
 
Note that 
 separates message m and m’. Figure 4.2-5(a) illustrates both a four set space with 
, 
'
mm

1

2
, 
, and 
 for partitioning four signals, shown as shaded areas. It is to be noted that the shaded areas are 
unbounded in reality, but are shown as finite areas for drawing purposes only. Also indicated in Figures  
4.2-5(b–d) are 
, 
, and 
, which partitions signal 1, signal 2, signal 3, and signal 4, as if there were 
only two signals total in the partitioning. For example, in Figure 4.2-5(b) the partition is a horizontal line that 
separates the two areas. Note that 
3

4

12
13

14

1
12
13
1

4  as can be seen from the figure. In general [16] it can 
be shown that  
 
 
'
'
m
m m

mm


 
(4.2-71) 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           215 
 
One can write 
 
 
'
'
'
( )
(
)
(
)
(
)
w
m
m
mm
m
m
m
m
m
m
P m
P
P
P









'
m
m

U
y
C
y
C
y
C
 
(4.2-72) 
 
since the probability of a union of events is less than or equal to the sum of probabilities of the component 
events. Restating (4.2-72), it follows that 
 
 
'
'
'
(
)
( )
1
(
')
(
)
m
w
m
m
m
m
m
m
p
w
P m
P
P m
p















y C
C
y C
m

')
 
(4.2-73) 
 
where 
(
w
P m
m

 denotes the pairwise probability of error when Cm is transmitted and Cm’ is the only 
alternative. Equation (4.2-73) becomes an equality when there are only two messages (i.e., when M = 2). The 
bound in (4.2-73) is known as the union bound for word errors. Averaging over m one has the result 
 
 
1
1
0
' 0
'
( )
(
')
M
M
w
w
m
m
m
m
P
P m
P m
m








 
(4.2-74) 
 
x
C0
x
C1
x
C3
x C0
0 3

(a)
x
x
x
C0
C3
x C2
C1
0

1

3

2

(c)
(d)
x
C0
x C2
0 2

(b)
0 1

0 2

0 1

0 3

x
C0x
C0
x
C1
x
C3
x C0
x C0
0 3

(a)
x
x
x
C0x
C0
C3
x C2
x C2
C1
0

1

3

2

(c)
(d)
x
C0x
C0
x C2
x C2
0 2

(b)
0 1

0 2

0 1

0 3

 
 
Figure 4.2-5(a–d) m regions and the 0m regions for a four signal set. 
 
 
A further simplification to (4.2-74) is dependent on the properties of linear block codes. A particular property 
of linear block codes is that the Hamming distance is the same between a code word Cm and code word Cm’ 
for which 
 and m’= 0, 1, M–1. In this case it is convenient to let m = 0, since the error probability is 
unchanged with this assumption, therefore 
'
m
m

(4.2-74) becomes 
 

 216                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
1
1
1
0
' 1
' 1
( )
(0
')
(0
')
M
M
M
w
w
w
m
m
m
P
P m
P
m
P
m













')
 
(4.2-75) 
 
and 
(
w
P m
m

 is determined by (4.2-79) or (4.2-80) and is the two-code word probability of error.  
From (4.2-75) it is possible to obtain a useful expression for Pw. Assume the number of code words 
at Hamming weight d are known and are denoted Ad. The two-code word error probability, 
(0
')
w
P
m

, is 
the same for all code words that have d errors, and is denoted by Pd. From (4.2-75) it follows [15] that the 
word error probability can be expressed in the alternative form 
 
 
min
n
w
d d
d
d
P
A P


 
(4.2-76) 
 
Given the word error probability, let us now determine the bit error probability. The bit error 
probability is obtained from the word error probability by considering the particular block decoding error 
events as well as the number of bit errors produced with each of the word error events. Let 
( ,
')
w
P m m
 denote 
the probability that message m was transmitted, and the decoded message was determined to be m’ (i.e., 
'). That is 
m

y
( ,
')
w
P m m
 is given by 
 
 
'
( ,
')
(
)
m
w
P m m
P


m

y
y C
 
(4.2-77) 
 
 
Let N(m,m’) denote the number of information bits associated with this block error event. As 
an example in Table 4.2-1 if word number 4 was transmitted (m = 4) and word number 5 was decoded (m’= 
5), then three bit errors would occur, and N(4,5) = 3. The exact bit error probability is determined [15] by 
weighting (4.2-77) by the number of information bits in error N(m,m’) and then averaging over all possible 
transmitted messages m, and for each m value, over all possible decoding error outputs m’ to produce 
 
 
'
1
1
0
' 0
'
1
( )
( ,
')
(
)
m
M
M
b
m
m
m
m
P
P m
N m m
P
k









y
y Cm
')
 
(4.2-78) 
 
The factor of (1/k) stems from the fact that k bits are decoded for each word that it decoded. In general this 
expression is quite difficult to evaluate, except for very simple cases. Fortunately bounds can be obtained that 
make the calculation much easier to accomplish.  
 
Consider now the evaluation of the word error probability for the binary symmetric channel from 
(4.2-73) for 
(
w
P m
m

. Recall that 
(
w
')
P m
m

 is the probability that when there are only two signals, m 
is transmitted and m’ is decoded. Let d denote the Hamming distance between these two codes. An error in 
the code word only matters when the errors occur where the code words bits differ in the two words. 
Consider first the case that d is an even number. An error only occurs when (d/2)+1 errors occur in the 
positions where Cm and Cm’ differ. If only d/2 errors occur then a decoding error is assumed to occur only one 
half of the time [15]. Let p denote the BSC error probability. The probability of exactly  errors in d coded 
bits is given by 
(1
d
p
)d
p








. Hence for d even [15] the probability 
(
w
')
P m
m

 is given by 
 
/2
/2
(
/2) 1
1
(
')
(1
)
(1
)
/ 2
2
d
d
d
w
d
d
d
P m
m
p
p
p
p
d

























d
 
(4.2-79) 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           217 
Errors greater than d have no effect on channel decoding, since the code words differ by only d channel 
symbols, and any errors where the code words agree increase the distance of the received word, y, from both 
words Cm and Cm’ equally.  
 
Now consider the case that d is odd. The two-word word error probability, 
, for odd d is 
given by 
(
w
P m
m

')
 
 
((
1)/2)
(
')
(1
)
d
d
w
d
d
P m
m
p
p

















 
(4.2-80) 
 
Using (4.2-74) along with either (4.2-79) or (4.2-80) produces an upper bound on the word error probability. 
Consider a bounded distance decoder. This decoder has the property that it corrects up to E coded 
bit errors, and no more. Note that a maximum likelihood decoder is guaranteed to be able to correct at least t 
errors (t is defined in (4.2-3)). The bounded distance decoder will make an error whenever more than t errors 
are made on the channel. Thus the word error probability for a bounded distance decoder is given by  
 
 
 
1
(1
)
n
k
w
k
E
n
P
p
k
n k
p









 
(4.2-81) 
 
For a maximum likelihood decoder this expression is an upper bound, since more than t errors may 
be corrected, and at least t error’s will be corrected. Oldenwalder [17] has presented an argument that 
suggests that the bit error probability for a bounded distance decoder is given by 
 
 
1
1
(1
)
n
k
b
k
k E
n
P
p
k
n

n k
p









 
(4.2-82) 
 
where 
k
 is the average number of coded bit errors remaining in the corrected received code word, given 
that the channel caused k coded bit errors. Oldenwalder [17] claims that 
k
k
;
 is a good approximation. 
Thus the final approximation for the bit error probability of a bounded distance decoder is given by 
 
 
 
1
1
(1
)
n
k
b
k
E
n
P
k
p
p
k
n
n k








;
 
(4.2-83) 
 
 
Consider further the issue of estimating the bit error rate. Consider linear systematic block codes. 
We have already defined systematic block codes as a subset of linear block codes that have the k information 
bits used directly in the code word. In other words there are k information bits and n–k remaining bits, which 
all together form the coded bits of the code word. Recall for linear code words the number of code words that 
are Hamming distance d from any particular code word is the same for all code words. Using this fact, the 
word error probability calculation was simplified assuming that the “0” word was transmitted. This 
simplification occurs since (1) the number of code words at a Hamming distance d from a particular code 
word is the same for all code words, and (2) the number of bit errors caused by any Hamming distance d 
word decoding error is the same for all code words. 
 
Example 10 Consider the (7,4) code of Table 4.2-1 in Example 1. Consider word number 14 and assume that 
there is an error in the fourth bit producing word number 15. Note that word 14 is three coded bits away from 
word 15 in distance. Now consider word “0” and let one bit error occur in the fourth data bit. That produces 
word number 1, which is also three code bits away from code word “0.” The Hamming distance between the 
transmitted words and the decoded words is three (coded bits). 
 
 

 218                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
The probability of information bit error probability, Pb, is determined by assuming that message “0” 
is transmitted and weighting each block error event by the associated number of information bit errors. 
Denote the number of information bit errors that occur when m = 0 is transmitted and m’ is decoded by 
N(m’). The average (information) bit error probability is then upper bounded by a modification of (4.2-75), 
which produces [15] 
 
 
1
' 1
1
(
')
(0
')
M
b
w
m
P
N m P
m
k




 
(4.2-84) 
 
Note that 
(0
')
w
P
m

 is the same number for all code words Cm’, with the same Hamming distance d from 
the “0” code word, having all zeros. Define Bd as the total number of information bit errors that occur in all 
code word error events involving code words that have a distance d from the all-zeros code word (the code 
word of all zeros). Then (4.2-84) can be rewritten as [15] 
 
 
1
min
n
b
d d
d
d
P
B P
k



 
(4.2-85) 
 
and dmin is, of course, the minimum distance of the code. In order to use this bound for the bit error 
probability, Bd must be determined by calculation for any particular code. In this equation Pd is the value of 
(0
')
w
P
m

 with Hamming distance d and is the same for all code words Cm’. 
 
Example 11 Determine the upper bound for the bit error probability in terms of the BSC channel error 
probability parameter, p, for the code of Example 3, which is illustrated in Table 4.2-1. From Table 4.2-1 it is 
seen that, since dmin = 3, and the three values of d are 3, 4, and 7. It can be seen that B3 = 13, B4 = 16, and B7 
= 3. Note as a check, in this case the sum of all the data bits should equal the sum of the nonzero Bi: that is,  
B3 +B4 +B7 = 32. From (4.2-79) and (4.2-80) we have 
 
 
    
3
3
3
2
4
4
2
4
2
7
7
7
4
3
(1
)
4
4
1
(1
)
(1
)
2
2
7
(1
)
P
p
p
2
P
p
p
p
p
P
p
p









































 
 
The bit error probability is given by (4.2-85); that is, 
 
                     


3
4
1 13
16
3
4
b
7
P
P
P
P



 
 
 
Now consider another example to further illustrate the ideas presented so far.  
 
Example 12 Consider an FH/BFSK spread spectrum system. Determine a bound on the bit error probability 
versus the Eb/N0 value in dB for the case of worst-case partial band jamming. Assume that the code of 
Example 3, illustrated in Table 4.2-1 is used. Note that the bit energy per bit is related to the coded bit energy 
through the following relationship 
 
0
0
s
b
E
E
k
N
n N

 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           219 
 
 
The coded bit (symbol) error probability has been determined in (3.3-51) of Chapter 3 and is included here 
with the 4/7 conversion factor relating the bit energy and the coded bit energy. Using Table 3.3-1 to 
determine the symbol error probability, which is the BSC crossover probability, one has 
 
0
0.3679
7
                 
(4/ 7)(
/
)
2
                   
1
4
1
7
exp
                 
2
7
2
2
b
J
J
s
b
b
J
J
E
E
N
N
P
p
E
E
N
N
















 
 
Using p in this example along with the results in Example 11, the bit error probability is obtained as 
an upper bound. This example relates the bit error rate probability to the coded bit (symbol) error probability. 
The plot of both the uncoded and the coded cases are plotted in Figure 4.2-6. 
 
10
15
20
25
30
35
40
45
50
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
Eb/NJ (dB)
Bit Error Probability
Uncoded
(7,4) Coded
Bit error probability
10
15
20
25
30
35
40
45
50
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
Eb/NJ (dB)
Bit Error Probability
Uncoded
(7,4) Coded
10
15
20
25
30
35
40
45
50
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
Eb/NJ (dB)
Bit Error Probability
10
15
20
25
30
35
40
45
50
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
Eb/NJ (dB)
Bit Error Probability
Uncoded
(7,4) Coded
Bit error probability
 
 
Figure 4.2-6 FH/BFSK comparison in worst-case partial band jamming of uncoded and (7,4) block coded bit error performance. 
 
 
It is seen that the coded case has superior performance at higher values of Eb/NJ ratios. It is also to 
be noted that the bit error probability bound of (4.2-85) may produce bit error probabilities greater than unity. 
Clearly this is a poor bound when this occurs. These bounds tend to be more accurate at higher values of 
Eb/NJ ratios. 
 
 
4.2.4.2 Computation of the Word Error Rates with Jammer Side Information 
 
In this section we consider the computation of the word error rates when jammer side information is known. 
This section is based primarily on [15, 18]. It will be assumed that jammer side information is composed of 
two states, “1” corresponding to the jammer “on” condition, and “0” corresponding to the jammer “off” 
condition. Assume that the probability that a particular symbol in the coded word is jammed is “.” Assume 
that interleaving is present so that the channel has no memory, and each symbol may be jammed 
independently. Equation (4.2-57) is a discrete memoryless channel transition probability equation used for 

 220                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
the maximum-likelihood decoder rule for choosing the code word Cm, by searching for the maximum over 
Cm.  
 
For a code word of n coded bits with a known jammer state 


1
2
3
,
,
...,
n
z z
z
z

z
 regions for 
decoding, 
( )
m

z  is specified for each possible transmitted message m. 
( )
m

z  is given by modifying 
(4.2-66) to include the parameter z: 
 
 
'
(
, )
( )
:
1 for all 
'
(
, )
m
m
m
p
m
m
p














y C
z
z
y
y C
z
 
(4.2-86) 
 
When message m is transmitted, a decoding error occurs when the received vector y does not fall within 
( )
m

z ; in other words, an error occurs when 
( )
m
y
z . From (4.2-68) generalizing to the jammer side 
information case, it follows that  
 
 


( , )
,
(
, )
m
w
m
m
P m
P
p




m

y
z
y
C
z
y C
z  
(4.2-87) 
 
which has the jammer side information contained within the expression. In a similar manner to the definition, 
with no jammer side information, one can write 
 
 
'
(
, )
( )
:
1 for some 
'
(
, )
m
m
m
p
m
m
p









y C
z
z
y
y C
z
 
(4.2-88) 
 
 
Now consider a union bound of the type used for the case of no JSI. Define  
 
 
'
'
(
, )
( )
1
(
, )
m
mm
m
p
p













y C
z
z
y
y C
z
 
(4.2-89) 
 
Note that  
 
'
'
( )
( )
m
m
m m



m
z
z  
(4.2-90) 
One can write  
 
 
 
'
'
'
'
( , )
(
, )
(
(
, )
(
(
, )
w
m
m
mm
m
mm
m
m
m
m
P m
P
P
P









m

U
z
y
C
z
y
z) C
z
y
z) C
z  
(4.2-91) 
 
since the probability of a union of events is less than or equal to the sum of probabilities of the component 
events. Restating (4.2-91) it follows that 
 
 
'
'
' 0
'
(
, )
( , )
1
,
(
', )
(
, )
m
w
m
m
m
m
m
m
m
p
P m
P
P m
m
p
















y C
z
w

z
C
z
z
y C
z
 
(4.2-92) 
 
where 
(
',
w
P m
m

)z  denotes the pair-wise probability of error, when Cm is transmitted and Cm’ is the only 
alternative. 
 
Consider the evaluation of the word error bound of (4.2-92) for the BSC in which the error 
probability of jammer state z = 1 corresponds to transition probability p1, and jammer state z = 0 corresponds 
to transition probability p0. From (4.2-61), it is seen that the maximum likelihood rule for this channel is used 
to decode when two jammer states exist, and is given by 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           221 
 
0
1
1
0
1
0
ln
ln
1
1
p
p
d
d
p
p













 
(4.2-93) 
 
which is a weighted Hamming distance. This metric is evaluated for both code words and the decoder output 
is the code word which yields the largest output. 
In (4.2-93) di is the Hamming distance between y and the code word being tested against the 
jammed and unjammed channel coded bits, respectively. This rule is evaluated for each of the two code 
words, and the decoded output is determined by the code word for which (4.2-93) is largest.  
 
Note that based on the analysis for jamming without jammer side information for BSC errors when 
cmj = cm’j the effect on the Hamming decoding metric is the same for both code words. In a similar manner 
when JSI is available the value of the weighted Hamming distance for code symbols where cmj = cm’j is 
affected identically. Hence again we can ignore those coded bits when they are the same. Define [15] 
1
'
(
,
, )
m
m
J C
C
z  as the set of coded symbols for which cmj  cm’j and zj = 1, and in a similar manner define 
0(
,
,
m
m'
)
J
C
C
z  as the set of coded symbols for which cmj  cm’j and zj = 0. Denote the Hamming distance 
between m and m’ as d(m,m’). Denote by 
 as the number of elements in
'
(
,
,
J
m
m
n C
C
z)
1
'
(
,
, )
m
m
J C
C
z
', )
, and 
therefore note that 
 is the number of elements in
'
( ,
')
(
,
J
m
m
d m m
n

C
C , )z
0(
,
m
m
J C
C
', )
m
m
z . Denote by d1(m) 
the Hamming distance between y and Cm for channel coded bits in
1(
,
J C
C
z
m
, and denote by d0(m) the 
Hamming distance between y and Cm for channel cod
0(
,
m
ed bits in
', )
J
C
. L
'
(
,
, )
J
m
m
n C
C
z – d1(m) (this is true for the sam
in 
1
'
(
,
, )
m
m
C
z
et 
1 (
'
d
m )  = 
e coded bits 
J C
C
z  only) and let d0(
 – 
'
(
,
, )
J
m
m
n C
C
z – d0(m) denote the same distances for Cm’. To avoid a cumbersome notation, the dependence 
or 
'
, 
1
'
(
m’) = d(m,m’)
on Cm, Cm’, z f
(
,
, )
J
m
m
C
C
z
,
n
, )
m
m
J C
C
d 
0
'
(
,
, )
m
m
z , an
J
C
C
z  will be suppressed, and d(m,m’) will be 
denoted by d. Using the abbreviated notational form produces the decoder metrics  
 
 
0
1
1
0
1
0
( )
( )ln
( )ln
1
1
p
p
DM m
d m
d m
p
p















 
(4.2-94) 
 
and  
 
0
1
1
0
1
0
(
')
(
')ln
(
')ln
1
1
p
p
DM m
d m
d m
p
p















 
(4.2-95) 
 
One can write 
 
 




0
1
1
0
1
0
(
')
( ) ln
( ) ln
1
1
J
J
p
p
DM m
n
d m
d
n
d m
p
p



















)
 
(4.2-96) 
 
The decoder chooses code word m if D(m) > D(m’) and m’ if D(m) < D(m’). When D(m) = D(m’) the 
decoder chooses the decoded word randomly. Now initially ignore the case when the two metrics are equal. 
Consider the two-code word case that will be used in the word error probability of (4.2-92). The word error-
probability 
(
',
w
P m
m

z  is the probability that  
 
     




0
0
1
1
1
0
1
0
1
0
1
( )ln
( )ln
( ) ln
( ) ln
1
1
1
J
J
p
p
p
p
d m
d m
n
d m
d
n
d m
0
1
p
p
p































p



   (4.2-97) 
 
 
 

 222                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
under the condition that message m was transmitted and given z. Rearranging (4.2-97) produces the result 
 
 


0
0
1
1
1
0
1
0
1
0
( )
( )ln
( )ln
ln
ln
( ,
)
1
1
2
1
2
1
J
J
J
d
n
p
n
p
p
p
DM m
d m
d
m
d n
p
p
p
p



































 (4.2-98) 
 
Following [15] the word error probability corresponding to the case that DM(m) =DM(m’) is given 
by 
 



1
(
', )
( )
( ,
)
( )
( ,
2
w
J
)
J
P m
m
Pr D m
d n
Pr D m
d n






z

 
(4.2-99) 
 
where Pr(a) denotes the probability event a. The Hamming distance between the received word y and the 
transmitted word Cm equals d1(m) when Cm is transmitted, and d1(m) transmission coded bit errors occur with 
nJ total coded bits that are affected by the jammer. Now the probability of d1(m) channel bit errors for nJ 
channel bits is given by  
 
1
1
1
1
1
(1
) J
J
n
d
d
n
p
p
d








 
(4.2-100) 
 
Note that d1(m) has been written as d1, since there is no dependence on m’ in the expression. In a similar 
manner the probability of d0(m) errors in the d–   nJ unjammed channel coded bits is given by 
 
 
0
0
0
0
0
(1
)
  
J
J
d
d n
d
n
p
p
d
d










 
(4.2-101) 
 
 
Now the two-code word error probability 
(
',
w
P m
m

)z , given jammer state condition z, is the 
sum of the product of the two probabilities in (4.2-100) and (4.2-101) over all d1 and d0, where 
DM(m)< ( ,
)
J
d n

 or DM(m) = ( ,
)
J
d n

. Therefore the two-word error probability is given by 
 
                       
1
0
1
1
0
1
0
1
1
0
0
0
0
0
1
(
', )
(
,
)
(1
)
(1
)
  
J
J
J
J
n
d n
J
J
n
d
d
d n
d
d
w
d
d
d
n
n
P m
m
d d
p
p
p
p
d
d


0























z
 
(4.2-102) 
 
where 
1
0
(
,
)
1
d d

 if DM(m) < ( ,
)
J
d n

, 
1
0
(
,
)
1/ 2
d d


 if DM(m) = ( ,
)
J
d n

, and 
1
0
(
,
)
0
d d


 
otherwise. From (4.2-102) it is seen that the value of 
(
w
P m 
',
m
)z  is a function of the Hamming distance 
d(m,m’) between messages m and m’, and the number of jammed coded bits 
 in which cmj 
'
(
,
J
m
n C
C , )
m z
 
cm’j. From (4.2-92) the bound on the word error probability was derived as 
 
 
' 0
'
( , )
(
', )
w
w
m
m
m
P m
P m
m





z
z  
(4.2-103) 
 
This expression depends on m as well as z. To remove the dependence on m and z, it is necessary to average 
over both the vector z and the message index m. Thus the word error probability is given by 
 
 
1
0
( , ) ( ) ( )
M
w
w
z
m
P
P m
P m P



z
z  
(4.2-104) 
 
From (4.2-103) it follows that  
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           223 
 
1
1
0
' 0
'
(
', ) ( ) (
   
M
M
w
w
m
m
m
m
P
P m
m
P m P








z
)
z
z
 
(4.2-105) 
 
Since the summations are finite, they may be rearranged to the following [15] 
 
 
1
0
' 0
'
( )
(
',
M
w
w
m
m
m
m
P
P m
P
P m
m
























z
(z)
z
 
(4.2-106) 
 
 
Consider the summation inside the bracket. The function 
(
',
w
P m
m

)z  was noted in the 
paragraph following (4.2-102) to have the same value for all z for which the value of 
 is the 
same. Consequently the summation may be reconstructed as a summation over all possible values of nJ. 
Therefore one can write  
'
(
,
, )
J
m
m
C
C
z
n
 
   
(
,
')
(
,
')
( ,
')
( )
(
', )
(1
)
(
', )
( ( ,
'), )
     
J
J
J
d m m
n
d m m
n
w
w
Jd
z
n
J
d m m
P
P m
m
P m
m
PE
d m m
n

















z
z
z
 
(4.2-107) 
 
where 
(
,
')
( ,
')
(1
)
     
J
J
n
d m m
J
d m m
n










n  is the sum of the probabilities of all z for which 
= nJ. 
The fraction , which appears in 
'
(
,
, )
J
m
m
n C
C
z
(4.2-107), is the probability of a coded bit being jammed and applies to 
partial band jamming or partial pulse jamming. Insert (4.2-107) into (4.2-106) to yield the result 
 
 
1
1
0
' 0
'
( )
( )
( ( ,
'), )
M
M
w
Jd
m
m
m
m
P
P m
PE
d m m









 
(4.2-108) 
 
Now when linear codes are considered [15], the second summation is the same for all m, and therefore 
can be written as 
 
min
1
' 1
( )
( (0,
'), )
( )
M
n
w
Jd
d
m
d d
P
PE
d
m
A PEJd










 
(4.2-109) 
 
where PEJd() denotes the value of PEJ(d(0,m’),) for d(0,m’) = d (the word error probability for a two-word 
code), and the summation over the variable m’ has been changed to a summation over all possible Hamming 
distances d with each term of the summation weighted by the number of code words Ad, which are Hamming 
distance d from the all-zeros code word. Note that it is assumed that interleaving is present so that the 
channel has no memory. Each coded bit may be jammed independently with probability  and applies to 
partial band jamming or partial pulse jamming. 
 
Thus an upper bound on the word error probability can be obtained for any specific block code that 
is subject to partial band jamming or pulse (partial time) jamming, as long as the number of code words Ad, at 
a distance d, is known. The bit error probability can be estimated from (4.2-109) by 
 
 
min
( )
( )
n
b
d
d d
d
P
A PE
n
Jd





 
(4.2-110) 
 
which is applicable to all codes and for systematic codes one can modify (4.2-85) to write 
 

 224                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
1
( )
min
n
b
d
J
d d
P
B PE
k
d 



 
(4.2-111) 
 
where, as before, Bd is the total number of information bit errors that occurs in all code word error events 
involving code words that have a distance d from the all-zeros code word. 
 
 
4.3 CONVOLUTIONAL CODES  
 
In block coding the encoder accepts a k bit message and generates an n bit code word. Hence code words are 
generated on a block-by-block basis. This necessitates providing for a buffer to accumulate the k bit message 
before encoding it into a code word. Convolutional codes are different in that they are coded serially rather 
than in blocks. A convolutional code is a code generated by inputting the information bit stream into a linear 
finite state shift register.  
 
 
4.3.1 Convolutional Code Encoder Characterization 
Equation Section (Next) 
The shift register contains K’ k bit stages and there are n modulo-2 adders that connect to some of the 
individual shift register bits. The code rate is defined as  
 
 
 
c
k
R
n

 
(4.3-1) 
 
which is consistent with the definition of the code rate of a block code. The constraint length of the 
convolutional code is the value of K = kK’. When k = 1 the constraint length is simply K=K’. Inherently the 
constraint length of the encoder is the value of the memory of the encoder. Figure 4.3-1 illustrates the general 
convolutional encoder. For each k data bits entered into the encoder, n coded bits are sent to the modulator. 
 
+
+
+
+
1       2      …
k
1       2      …
k
1       2     …
k
…
1
2
n-1
n
k information bits input at a time
Convolutionally coded sequence to modulator
…
K’ groups of  k information bits
+
+
+
+
1       2      …
k
1       2      …
k
1       2     …
k
…
1
2
n-1
n
k information bits input at a time
Convolutionally coded sequence to modulator
…
K’ groups of  k information bits
 
 
Figure 4.3-1 A general convolutional encoder of rate k/n. 
 
 
 
Each modulo-2 adder, indicated by the symbol , has associated with it a generator that is denoted 
by a series of ones and zeros (contained in brackets) denoting connections (a 1) or nonconnections (a 0). 
Figure 4.3-2 [19] illustrates an example of a convolutional encoder that has K = 3 (k = 1) and n = 2, has a rate 
1/2, and has two generators.  
In the encoder the all-zeros bits are initially loaded into the registers. The upper code generator is 
denoted by g1= [111] and the lower code generator is denoted by g2 = [101]. In the first case all the 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           225 
connections to the modulo-2 adder are made, whereas for the lower code generator only the outer two are 
made. An alternative representation of the convolutional encoder is illustrated in Figure 4.3-3; it is an 
alternative form for Figure 4.3-2.  
 
Coded data bits out
+
+
g1= [111]
g2= [101]
0                  0                 0
Mplxr
12345
01000
12345
01110
1  2  3  4  5
0011010100 
CU(i)
CL(j)
Input bits:
Time
000 01101
12345
Input bits
Time
Coded data bits out
+
+
g1= [111]
g2= [101]
0                  0                 0
Mplxr
12345
01000
12345
01110
1  2  3  4  5
0011010100 
CU(i)
CL(j)
Input bits:
Time
000 01101
12345
Input bits:
Time
000 01101
12345
Input bits
Time
 
 
Figure 4.3-2 A K = 3, n = 2, rate ½ convolutional encoder. 
 
 
+
+
Input bits
Output
coded bits
g1= [111]
g2= [101]
Mplxr
+
+
Input bits
Output
coded bits
g1= [111]
g2= [101]
Mplxr
 
 
Figure 4.3-3 An alternative representation of a convolutional encoder with Rc = ½, K = 3, and n = 2. 
 
 
In this alternative diagram the input bit and the two stored bits determine the coded output bits. In 
this alternative case the constraint length is one plus the number of memory elements. When a data bit is 
input into the encoder the coded output bits are based on the input bit and the two stored bits as is seen in the 
diagram. Both versions of the convolutional encoder are used in the literature. Figures 4.3-2 and 4.3-3 are 
alternative descriptions of the same encoder. 
 
Again consider Figure 4.3-2 to determine the output coded bit sequence for a particular input bit 
sequence. Initially the three zero bits are loaded into the shift register. Let the input sequence be 
 
 
(4.3-2) 
}
 
 
 
10110 000
initial 
Time to the left
1 4 2 43
After the three initialization bits are loaded into the shift register (denoted by “initial” in the 
equation), it is seen that the first input bit (reading from right to left) is a “0.” The upper mod 2 adder 
produces the modulo-2 sum: 0
0
, which of course yields zero. The lower modulo-2 adder also 
produces a zero. The next input is a “1.” The upper generator produces a “1” and the lower generator 
produces a “1.” Next, another “1” is input to the encoder. The upper generator produces a 1
1
 and the 
lower generator produces 1
0
. This continues in this manner, generating the sequence shown at the 
output based on having the input bits as shown in 
0

1

0


(4.3-2). Thus the sequence 01101 from first to last bit on 

 226                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
the right produces the encoded output sequence of 0011010100 (first on the left last on the right). Again the 
initial sequence is 000.  
 
It is to be noted that octal notation may be used to specify the code generators. For example, g1 = 
[111] can be represented as g1 = [7] and g2 = [1011] can be represented as g2= [13]. 
 
Example 13  Consider a rate 2/3 constraint length 4 convolutional encoder shown in Figure 4.3-4. For this 
encoder there are three outputs (n = 3), and two bits are input per clock cycle so that the code rate is 2/3. The 
total number of bits in the shift register is 2×2=4, so the constraint length is 4. The code generators are as 
follows: g1=[1011], g2=[1101], and g3=[1010]. 
 
+
+
+
1
2
3
Input
two bits
per clock
cycle
Encoded
output
g1=[1011]
g2=[1101]
g3=[1010]
+
+
+
1
2
3
Input
two bits
per clock
cycle
Encoded
output
g1=[1011]
g2=[1101]
g3=[1010]
 
 
Figure 4.3-4 An example of a rate 2/3, constraint length 4, convolutional encoder. 
 
 
 
Viewing Figure 4.3-2 again and denoting the input data sequence by I(j), notice that the upper 
encoded sequence is given by 
 
( )
( )
(
2)
U
C
j
I j
I j



 
(4.3-3) 
 
and the lower encoded sequence is given by 
 
 
( )
( )
(
1)
(
2)
U
C
j
I j
I j
I j





 
(4.3-4) 
 
Thus each coded data bit can be described by 
 
 
2
0
( )
(
)
k
k
C j
W I j
k




 
(4.3-5) 
 
where Wk is the tap weights, I(k) in the input data sequence, and C(j) is the output encoded data sequence. 
Thus the output sequence is the convolution of the input sequence and hence the name convolutional code.  
 
There are three methods to represent a convolutional encoder. These are the (1) the tree diagram, 
(2), the trellis diagram, and (3) the state diagram. 
Figure 4.3-5 illustrates an example of a rate 1/2, constraint length 3, convolutional code tree 
diagram for the convolutional encoder of Figure 4.3-2 (or 4.3-3). Starting at the left of the diagram a “0” is 
input into the encoder and “00” is output. Likewise, starting at the left and inputting a “1” produces an output 
of “11.” Each upward movement on the tree implies a “0” was input to the encoder; likewise, each downward 
movement on the tree implies a “1” was input to the convolutional encoder. To determine the output of the 
encoder, it is observed that the first two bits (in a constraint length 3 encoder) is the state of the encoder, plus 
the input bit, determines the output encoded bit pair.  

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           227 
 
At the third stage (third set of output encoded bits) it is seen that there are two sets of the four states. 
It is observed from Figure 4.3-5 that all branches emanating from the same state are equivalent in the sense 
that they generate the identical sequences. Therefore the two nodes having the same label (state) can be 
merged, which results in a much simpler diagram. Merging of the nodes lead to the trellis diagram shown in 
Figure 4.3-6. In the trellis diagram shown in Figure 4.3-6 the input sequence 01101 (first bit on the left) is 
shown on the trellis diagram. Input “1” is denoted by a dashed line and an input of “0” is denoted by a solid 
line. Thus it can be seen that the input sequence 01101 (first bit on the left) produces the following output 
coded bit sequence: 00 11 01 01 00, which is the same as the result shown in Figure 4.3-2.  
 
Now consider the trellis diagram, Figure 4.3-6, which is the second method of representing a 
convolutional encoder. Consider the level numbers at the bottom of the trellis diagram (Figure 4.3-6). If the 
message length is L, and the constraint length is K, then the trellis contains L+K levels, where a level is one 
stage in the trellis diagram. The levels of the trellis are labeled as 0, 1, 2, 3, … L+K–1. In Figure 4.3-6, since 
K=3, L+K –1=L+2. Another term for level is the trellis depth. The first K–1 levels correspond to the encoders 
movement from state “a,” and the last K–1 levels corresponds to the encoders return to the state “a.” The 
trellis diagram shows the output symbols and the state of the encoder as the evolution through the encoder. In 
Figure 4.3-6 the initial state is “00.” If a “1” is input (shown by the solid lines), the result is “00” being 
output and the encoder stays in state “00.” However, if a “1” is input (shown by the dashed lines), an “11” is 
output and the changes to “10,” as can be seen in the diagram. The dark arrows on the diagram illustrate the 
state progress and the output coded symbols as the trellis depth increases from depth zero to depth 5 for the 
input sequence 01101 (first bit on the left). 
Now consider the third representation of the encoder, the state transition diagram. Figure 4.3-7 
illustrates a state transition diagram for Figure 4.3-2. In this diagram all the states are shown, and the 
resulting coded outputs are shown with the “1” and “0” inputs. 
The states are shown inside the circles, and when a “1” is input into the encoder, the solid arrow 
indicates the next state and the resulting output coded bits. As an example in state 11 a “1” bit input produces 
the state 11 and outputs 10 as the encoded bit pair. If a “0” is input to the encoder from state 11, the state 01 
results and 01 is the resulting encoded bit pair.  
 
0
1
00
00
00
00 a
11
11  c
11
01
10  d
10  b
11  a
01  b
11
10
10
11
00  a
01
10
10  d
01  b
00
01
00  c
11 a
01  d
10  b
11  c
00  c
01 d
a
b
c
d
a
c
b
d
c
a
b
d
States:
a = 00
b = 01
c =10
d =11
0
1
0
1
00
00
00
00 a
11
11  c
11
01
10  d
10  b
11  a
01  b
11
10
10
11
00  a
01
10
10  d
01  b
00
01
00  c
11 a
01  d
10  b
11  c
00  c
01 d
a
b
c
d
a
c
b
d
c
a
b
d
States:
a = 00
b = 01
c =10
d =11
 
 
Figure 4.3-5 Tree diagram for rate 1/2, constraint length 3, convolutional code. 
 
 

 228                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
00
00
00
00
Input bits:
1
0
00
00
00
00
10
11
11
11
11
11
01
01
01
01
01
01
01
10
00
00
00
11
11
11
Input bit sequence:
01101 Time
10
10
10
00
10
01
11
10
10
11
11
00
01
10
01
11
11
Level
0                1                      2                 3     
4                    5   L-1            L            L+1       L+2
01
a
d
c
b
10
10
00
00
00
00
Input bits:
1
0
00
00
00
00
10
11
11
11
11
11
01
01
01
01
01
01
01
10
00
00
00
11
11
11
Input bit sequence:
01101 Time
10
10
10
00
10
01
11
10
10
11
11
00
01
10
01
11
11
Level
0                1                      2                 3     
4                    5   L-1            L            L+1       L+2
01
a
d
c
b
10
10
 
 
Figure 4.3-6 Trellis diagram for rate 1/2, constraint length 3, convolutional code. 
 
 
00
10
11
01
Input bits:
1
0
10
00
10
00
01
01
11
11
00
10
11
01
Input bits:
1
0
10
00
10
00
01
01
11
11
 
 
Figure 4.3-7 State diagram for rate 1/2, constraint length 3, n = 2 convolutional encoder. 
 
 
 
A modification to convolutional codes is based on the concept of puncturing the output sequence. A 
punctured convolutional code is one in which some output coded bits are systematically deleted, or not 
transmitted, out of a low rate convolutional encoder. Since the trellis structure of the low rate code remains 
the same, the number of information bits per sequence does not change. As a consequence the output 
sequences belong to a higher rate punctured convolutional code. This process will not be discussed further 
here, but the reader can consult Clark and Cain [1] for more details. 
 
 
4.3.2 The Transfer Function of a Convolutional Code and the Free Distance 
 
The distance properties and the bit error rate performance of a convolutional code can be obtained from its 
associated state diagram. In addition the free distance can be obtained from the transfer function. Due to the 
fact that a convolutional code is linear, the set of Hamming distances of the code sequences generated up to 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           229 
some point in the tree, from the all-zero code sequence, is the same as the set of distances of the code 
sequences with respect to any other code sequence. Therefore we can state, without loss in generality, that 
the all-zero code sequence is the input to the encoder. The free distance of a convolutional code is the 
minimum Hamming distance between any two code words in the code set. A convolutional code with free 
distance df can correct t errors if and only if df is greater than 2t. 
 
The free distance of the convolutional code can be obtained from the transfer function of the code 
when the state diagram has been obtained. Consider the state diagram of Figure 4.3-7 for the encoder of 
Figure 4.3-2 (or Figure 4.3-3). First it is convenient to put the 00 state (state a) at the bottom of the diagram 
as shown in Figure 4.3-8(a). Since the only paths that are of interest are those that start and end in the state 00 
and do not go through the state 00 in between, the self loop on the state 00 (zero state) can be removed and 
the state can be split into an input and an output. To do this one breaks apart state 00 (state a) and forms an 
input state (a0) and an output state (a1), as shown if Figure 4.3-8(b). It is convenient to label the branches 
with the associated weight of the output bits, with D raised to the power of the weight. The D parameter is a 
dummy parameter, which denotes a unit distance. In addition to the D parameter it is possible to place 
another factor N into the branch transition whenever a bit transition is caused by a input data bit “1.” Hence, 
as each branch is traversed, the cumulative exponent on N increases by one only if that branch transition is 
due to an input data bit “1” [11]. 
 
(a) Redrawn state
diagram
c
Input bits:
1
0
11
10
00
01
00
10
10
00
11
01
01
01
b
a
d
a0
c
a1
b
d
N
D2
D2
ND
ND
(b) Modified state diagram
D
D
(a) Redrawn state
diagram
c
Input bits:
1
0
11
10
00
01
00
10
10
00
11
01
01
01
b
a
d
c
Input bits:
1
0
Input bits:
1
0
11
10
00
01
00
10
10
00
11
01
01
01
b
a
d
a0
c
a1
b
d
N
D2
D2
ND
ND
(b) Modified state diagram
D
D
 
Figure 4.3-8 (a) Redrawn state diagram along with (b) the modified state diagram. 
 
 
 
The modified state diagram can be viewed as a signal flow graph with one input and one output. 
Signal flow graphs are composed of nodes (large dots) and directed branches (lines connecting the nodes). 
The following rules [20] apply to flow graphs: 
(1) A branch multiplies the signal at its input node by the transmittance characterizing that branch (for 
example, D).  
(2) A node with incoming branches sums the signals produced by all of those branches. 
(3) The signal at a node is applied equally to all the branches outgoing from that node. 
(4) The transfer function of the graph is the ratio of the output signal to the input signal, expressed as a 
ratio. 
The following four equations can be written from Figure 4.3-8(b): 

 230                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
2
0
2
1
b =
a +
c =
b +
d
d =
d +
b
a =
c
ND
N
D
D
ND
ND
D
c
 
(4.3-6) 
 
In Problem 4 it is shown that the ratio of the output to the input, as a function of D, is given by 
 
 
5
(
) = 1 2
ND
T D,N
ND

 
(4.3-7) 
 
Noting that 
 
2
3
1/(1
)
1
...
x
x
x
x





(4.3-7), evaluated at N =1, can be written as 
 
 
 
(4.3-8) 
5
6
7
8
( ,1) =
+ 2
+ 4
+8
+...
T D
D
D
D
D
 
The free distance is the minimum Hamming distance between any two code words in the code, and 
the distance transfer function T(D) enumerates the number of code words that are a given distance apart. It is 
clear that the exponent of the first term in the expression for T(D,1) is the free distance. Thus the 
convolutional code under study has a free distance of df = 5. In addition there are two paths of distance 6, four 
paths of distance 7, eight paths of distance 8 and so on. This is the weight structure of the code. Further 
information can be obtained from the state diagram; however, it will not be discussed here [1], except for the 
relationship to the bit error rate bounds. 
 
The transfer function can be used to provide additional information besides the distance of the 
various paths [12]. One such augmentation is based on the introduction of a factor N into all branch 
transitions caused by a data “1” bit. Therefore, as each branch is traversed, the cumulative exponent on N 
increases by unity only if that branch transition is due to a data input of a “1.” The resulting transfer function 
will be labeled T(D,N) and will be used in the expression of the upper bound on Viterbi decoding error rate.  
 
 
4.3.3 Decoding of Convolutional Codes 
 
When we decoded a block code for a memoryless channel, we determined the Hamming distances (hard-
decision channel) or the Euclidean distance (soft decision) between the received code word and the 2k 
possible transmitted code words. Our job was to select the code word that was closest to the received code 
word. The computation of the 2k metrics is the optimum decision rule, in the sense that it results in a 
minimum probability of error for the binary symmetric channel when the error probability is less than 0.5 in 
the white Gaussian noise channel. 
 
A convolutional encoder, unlike a block code that has a fixed length of n channel bits, is essentially 
a finite state machine. It turns out that the optimum decoder is a search through the trellis for the most 
probable sequence. 
 
The approach for the decoding rule for convolutional codes is based on the same basic approach 
used for block codes. It will be assumed that the data bits are equally likely and statistically independent from 
one another. In this case all paths through the trellis are equally probable, and a maximum-likelihood 
decoding rule is appropriate for this case. The decoder output is the path through the trellis whose data bit 
sequence was most likely to have been transmitted to the channel by the convolutional coder. Denote the 
convolutional encoder output infinite sequence, starting at time zero, of the message sequence (or path) m by 
the vector Cm where  
 
0
1
2
3...
...
m
m
m
m
m
mk
c c c c
c

C
 
(4.3-9) 
 
The discrete memoryless channel sequence is denoted by the vector y where 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           231 
 
0
1
2
3...
...
k
y y y y
y

y
 
(4.3-10) 
 
 
It follows that the probability of receiving the channel output y, given that channel input Cm was 
transmitted, is given by 
 
0
(
)
(
m
k
k
p
p y



y C
)
mk
c
 
(4.3-11) 
 
For a given received vector y, the path that is most likely to be obtained through the trellis is the one that 
maximizes 
(
m
p
)
y C
. The probability function 
(
m
p
)
y C
 is the metric or measure used in working through 
the trellis that is used to compare all the possible code words Cm that were transmitted. In the case of a hard-
decision binary symmetric channel the metric evolves to finding the path through the trellis diagram that 
minimizes the Hamming distance between a path and the received sequence. The most common method used 
to decode convolutional codes is the Viterbi decoder algorithm [21–23]. This algorithm will be discussed 
shortly.  
 
Commonly the natural logarithm is taken of the likelihood function to form the log likelihood 
function. Since the natural log is a monotonic function of its argument, natural logarithms can be taken on 
both sides of (4.3-11) to produce 
 
 
0
ln
(
)
ln
(
)
m
k
k
p
p









y C
mk
y c
 
(4.3-12) 
 
since the log of a product yields the sum of the product components. The summation of the probabilities 
associated with a single code trellis branch is called the branch metric for that particular branch.  
 
Up until now we have primarily discussed the hard-decision binary symmetric channel, however 
there is more information when the channel output is not heavily quantized. In principle the channel could be 
a continuous output value. However, in practice, the channel output is normally quantized to 2 or 3 bits. It 
has been determined that only about 0.2 to 0.25 dB can be gained by quantizing from 3 bits to infinite 
quantization [24].  
 
Consider now the threshold levels for 1-, 2-, and 3-bit quantization. Figure 4.3-9 illustrates the three 
levels of quantization, assuming that the matched filter output takes on the values of 
s
E

, where Es is the 
symbol energy. 
For 1-bit quantization the levels are divided between the negative voltage (0) as one region and the 
positive voltage for the other region (1). The 2-bit quantization produces four levels numbered 0, 1, 2, and 3, 
and the levels are smaller than the 1-bit case, with two levels below zero volts and two above. Finally the 3-
bit quantization has eight levels, which can be represented by 3 bits. Figure 4.3-10 illustrates the channel 
models for the three cases noted earlier.  
It can be seen from Figure 4.3-10 that the input is always binary, but the output can be 2, 4, or 8 
values. The transition probabilities for any of the three channels in Figure 4.3-10 can be determined by 
computing the area under the Gaussian probability density function between the chosen thresholds that 
determine the output symbol. For example, for the case of the 3-bit quantization, the probability of having a 
“0” sent and an output of a “3” occurring is given by the area that has lines pointing up to the right, and when 
a “1” is transmitted the probability is given by the area that has the lines pointing up to the left (actually 
cross-hatched). 
 
For both hard-decision and soft-decision channel quantization, the decoding rule is basically the 
same. Given the received sequence y, the decoder output is the code path (sequence) in the trellis diagram 
such that xm makes the probability 
(
m
p y x ) the maximum over all possible xm values. The Viterbi algorithm 
is optimal in finding the correct path through the trellis diagram for either soft- or hard-decision processing. 
 
 

 232                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
1 bit
2 bits
0
1
0
1
2
3
s
E
3 bits
0
1
2
3
4
5
6
7
(
 0)
p y
(
 1)
p y
s
E

1 bit
2 bits
0
1
0
1
2
3
s
E
3 bits
0
1
2
3
4
5
6
7
(
 0)
p y
(
 0)
p y
(
 1)
p y
s
E

 
 
 
Figure 4.3-9 (a–c) Three levels of quantization for convolutional decoding. 
 
 
(a) One-bit (hard-decision) quantization
0
0
1
1
1
1
2
3
0
0
(b) Two-bit quantization
0
0
1
2
3
4
5
6
7
(c) Three-bit quantization
1
(a) One-bit (hard-decision) quantization
0
0
1
1
0
0
1
1
1
1
2
3
0
0
(b) Two-bit quantization
1
1
2
3
0
0
0
0
(b) Two-bit quantization
0
0
1
2
3
4
5
6
7
(c) Three-bit quantization
1
 
 
Figure 4.3-10 Three channel models for decoding convolutional codes. 
 
 
4.3.4 The Viterbi Algorithm 
 
The Viterbi algorithm is an efficient method for using maximum-likelihood methods to decode convolutional 
codes. Andrew Viterbi first described the Viterbi algorithm in 1967 [25]. However it was Forney [26] that 
proved that the algorithm was optimal and not just asymptotically optimal.  
 
Note that the function of the maximum-likelihood decoder is to find the trellis path (sequence) that 
was most likely to have been transmitted, given the received channel output sequence. As was mentioned 
earlier, this corresponds to finding the path (sequence) through the trellis whose code sequence has the 
largest log-likelihood function as discussed in (4.3-12). For the binary symmetric channel, the maximizing of 
the log-likelihood function is equivalent to finding the path through the trellis whose code sequence is closest 
in Hamming distance to the received sequence.  
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           233 
 
4.3.4.1 The Viterbi Algorithm with Hard Decisions 
 
We have shown in Section 4.1.2 for optimum decoding of the BSC that it is sufficient to find the code or path 
with the minimum Hamming distance from the received code. This is minimum distance decoding in the 
Hamming sense. Since a code tree is equivalent to the trellis diagram, we may limit our choice to the possible 
paths in the trellis representation of the convolutional code. The advantage in using the trellis over the tree 
diagram is the fact that the number of nodes, at any level of the trellis, does not continue to grow as the 
number of channel bits are imputed to the decoder. In fact the number of nodes remains at 2(K–1), where K is 
the constraint length of the convolutional code. Consider the trellis diagram of Figure 4.3-6, which represents 
a K = 3, Rc= 1/2 convolutional encoder, as shown in Figure 4.3-2.  
Consider for example Figure 4.3-6, which is the trellis diagram of the encoder shown in Figure  
4.3-2. At depth (level) 3 there are two paths entering any of the four nodes in the trellis diagram. Furthermore 
these paths will be identical from this level onward until the convergence to node “a” at level L to L+2. It is 
clear that a minimum distance decoder may make a decision at that point in time on which path to retain, 
without suffering any loss of bit error rate performance.  
Basically this is what the Viterbi algorithm for decoding does as it works its way through the trellis 
diagram. The Viterbi algorithm computes a metric for every possible path in the convolutional code trellis. 
The metric differs for soft and hard decisions. For the hard-decision channel the metric is the Hamming 
distance between the coded sequence for that path and the received sequence (which probably has errors on 
it). Thus for each state (node) in the trellis diagram of Figure 4.3-6, the algorithm compares the two paths 
entering the state, and the state with the lower Hamming distance is retained, and the other path is discarded. 
This comparison is repeated for every level j of the trellis in the range of
1
K
j
L


, where K–1 is the 
encoder’s memory, and L is the length of the data message sequence. The retained paths are called the 
survivors or active paths. For a length K convolutional code, there are no more than 2K–1 survivors’ paths. 
The set of 2K–1 remaining paths is always guaranteed to contain the maximum-likelihood choice. 
 
It is possible that when comparing paths entering a state, the metrics will be identical. In this case a 
choice is made by conceptually flipping a random coin, and letting the coin flip choose which path becomes a 
survivor.  
 
To recap, the Viterbi algorithm is a maximum-likelihood decoder that is optimum in the sense of 
minimum sequence error probability estimate (or word error) for the case of white Gaussian channel noise. It 
does not necessarily minimize the bit error probability [27]. Even though Viterbi decoding is not optimal in 
the sense of minimization of the bit error probability, in most applications of interest, the performance of 
both the optimum and the Viterbi algorithm are essentially identical. The Viterbi algorithm decoding steps 
have been summarized by Lin and Costello [2] and are as follows: 
 
Step 0 Initialization.  
Label the all-zero state as state “0.”  
 
Step 1 Computational step.  
Begin at step (depth) j = 1; compute the partial metric for the single path entering each state. Store the 
survivor path and its metric for each state.  
 
Step 2 Additional computational steps.  
Increase j by 1. Compute the partial metric for all the paths entering a state by adding the branch metric of 
the surviving connections at the preceding depth. For each state, store the path with the largest metric (the 
survivor path), together with its metric, and eliminate all the other paths. Note that for the hard-decision 
channel, one minimizes the Hamming distance. 
 
Step 3 Test and computational step(s) 
If j < L+K–1 repeat step 2; if not, stop the process. 
 
 

 234                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
Example 14 Assume that the encoder of Figure 4.3-2 or (4.3-3) is used as our encoder. Let our input coded 
sequence be 0100010000... , where the underline indicates the encoded pair of coded bits. 
It is also assumed that the all-zeros data bit sequence was sent. Following the algorithm rules 
determine that the 2-bit errors are not enough to prevent the Viterbi decoder from correctly detecting the all-
zero data bit sequence.  
Figure 4.3-6 is used to determine the Hamming distance for each path. Figure 4.3-11(a) and  
4.3-11(b) illustrate the trellis development. At depth j =2 the algorithm first defines four paths, one for each 
of the four states of the encoder. The upper sequence is the input encoded data sequence. The values next to 
each branch, near the node at the right end of the branch, is the Hamming distance for that particular path. At 
j = 3, we see that the first decision must be made to eliminate one of the paths into each node. The figure 
labeled j = 3, survivors indicates what the survivors are at time j=3. Again we are down to four paths, one 
into each node. This process continues until j=5 occurs. At this point there are four survivor paths, but only 
one has the lowest Hamming distance, which corresponds correctly to the all-zeros data input sequence.  
Thus the correctly decoded path is the all-zeros path shown horizontally from the state “00” in 
Figure 4.3-11(b) in the right-hand lower corner. Clearly it has the lowest Hamming distance value (2). 
 
Now consider the Viterbi algorithm when soft decisions are employed. 
 
 
4.3.4.2 The Viterbi Algorithm with Soft Decisions 
 
Soft-decision decoding is quite similar to hard-decision decoding except that, instead of using the Hamming 
distance and minimizing it, one seeks the largest log likelihood along the path. For a soft decision 
memoryless channel with AWGN it was shown in (4.2-56) that one can maximize the correlation of the 
received code word over all possible code words, to obtain the path with the highest correlation. 
Consequently the discarded paths are the ones with the smaller correlation metric. The result is that the path 
that is most likely to have been followed by the encoder is chosen. 
 
00
10
1
1
Rec’d seq:
j =1
01
States
0            1
j value:
Rec’d seq:
00
10
1
1
j =2
01          00
01
11
1
3
2
2
0             1             2
j value:
Rec’d seq:
00
10
1
1
j =3
01          00            01
01
11
1
3
2
2
2
3
2
3
5
3
4
2
0           1             2                3
j value:
Rec’d seq:
00
10
1
1
j =3,
survivors
01          00            01
01
11
1
3
2
2
2
2
3
2
0           1             2                3
j value:
00
10
1
1
Rec’d seq:
j =1
01
States
0            1
j value:
00
10
1
1
Rec’d seq:
j =1
01
States
0            1
j value: 0            1
j value:
Rec’d seq:
00
10
1
1
j =2
01          00
01
11
1
3
2
2
0             1             2
j value:
Rec’d seq:
00
10
1
1
j =2
01          00
01
11
1
3
2
2
Rec’d seq:
00
10
1
1
j =2
01          00
01
11
1
3
2
2
00
10
1
1
j =2
01          00
01
11
1
3
2
2
0             1             2
j value: 0             1             2
j value:
Rec’d seq:
00
10
1
1
j =3
01          00            01
01
11
1
3
2
2
2
3
2
3
5
3
4
2
0           1             2                3
j value:
Rec’d seq:
00
10
1
1
j =3
01          00            01
01
11
1
3
2
2
2
3
2
3
5
3
4
2
Rec’d seq:
00
10
1
1
j =3
01          00            01
01
11
1
3
2
2
2
3
2
3
5
3
4
2
0           1             2                3
j value: 0           1             2                3
j value:
Rec’d seq:
00
10
1
1
j =3,
survivors
01          00            01
01
11
1
3
2
2
2
2
3
2
0           1             2                3
j value:
Rec’d seq:
00
10
1
1
j =3,
survivors
01          00            01
01
11
1
3
2
2
2
2
3
2
Rec’d seq:
00
10
1
1
j =3,
survivors
01          00            01
01
11
1
3
2
2
2
2
3
2
0           1             2                3
j value: 0           1             2                3
j value:
 
 
Figure 4.3-11 (a) An illustration of the decoding steps for Example 14. An input “1” is denoted by a dashed line and a “0” by a solid 
line. 
 
 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           235 
0           1             2                3               4    
5 
j value:
Rec’d seq:
00
10
1
1
j =5,
survivors
01          00            01             00            00
01
11
1
3
2
2
2
2
3
2
2
2
3
3
2
3
3
3
Rec’d seq:
00
10
1
1
j =5
01          00            01             00            00
01
11
1
3
2
2
2
2
3
2
2
2
3
3
2
5
4
3
3
4
4
3
0           1             2                3               4    
5 
j value:
Rec’d seq:
00
10
1
1
j =4
01          00            01             00
01
11
1
3
2
2
2
2
3
2
2
4
4
2
3
4
4
3
0           1             2                3               4
j value:
Rec’d seq:
00
10
1
1
j =4, 
survivors
01          00            01             00
01
11
1
3
2
2
2
2
3
2
2
2
3
3
0           1             2                3               4
j value:
0           1             2                3               4    
5 
j value: 0           1             2                3               4    
5 
j value:
Rec’d seq:
00
10
1
1
j =5,
survivors
01          00            01             00            00
01
11
1
3
2
2
2
2
3
2
2
2
3
3
2
3
3
3
Rec’d seq:
00
10
1
1
j =5,
survivors
01          00            01             00            00
01
11
1
3
2
2
2
2
3
2
2
2
3
3
2
3
3
3
Rec’d seq:
00
10
1
1
j =5
01          00            01             00            00
01
11
1
3
2
2
2
2
3
2
2
2
3
3
2
5
4
3
3
4
4
3
0           1             2                3               4    
5 
j value:
Rec’d seq:
00
10
1
1
j =5
01          00            01             00            00
01
11
1
3
2
2
2
2
3
2
2
2
3
3
2
5
4
3
3
4
4
3
Rec’d seq:
00
10
1
1
j =5
01          00            01             00            00
01
11
1
3
2
2
2
2
3
2
2
2
3
3
2
5
4
3
3
4
4
3
0           1             2                3               4    
5 
j value: 0           1             2                3               4    
5 
j value:
Rec’d seq:
00
10
1
1
j =4
01          00            01             00
01
11
1
3
2
2
2
2
3
2
2
4
4
2
3
4
4
3
0           1             2                3               4
j value:
Rec’d seq:
00
10
1
1
j =4
01          00            01             00
01
11
1
3
2
2
2
2
3
2
2
4
4
2
3
4
4
3
Rec’d seq:
00
10
1
1
j =4
01          00            01             00
01
11
1
3
2
2
2
2
3
2
2
4
4
2
3
4
4
3
0           1             2                3               4
j value: 0           1             2                3               4
j value:
Rec’d seq:
00
10
1
1
j =4, 
survivors
01          00            01             00
01
11
1
3
2
2
2
2
3
2
2
2
3
3
0           1             2                3               4
j value:
Rec’d seq:
00
10
1
1
j =4, 
survivors
01          00            01             00
01
11
1
3
2
2
2
2
3
2
2
2
3
3
Rec’d seq:
00
10
1
1
j =4, 
survivors
01          00            01             00
01
11
1
3
2
2
2
2
3
2
2
2
3
3
0           1             2                3               4
j value: 0           1             2                3               4
j value:
 
 
Figure 4.3-11 (b) An illustration of the decoding steps for Example 14. 
 
 
Example 15 Consider an example to illustrate the soft-decision Viterbi decoder, for the encoder shown in 
Figures 4.3-2 or 4.3-3. The binary input with four levels of output is illustrated in Figure 4.3-12, along with 
the log likelihoods. For example the probability of receiving a “0” when a “0” is sent is 0.7. Conversely, the 
probability of receiving a “3” when a “0” was sent is 0.01. The natural log of 
(0 0)
P
 is –0.36. 
Note that the natural log of the transition probabilities is the metric for the soft decision along the 
trellis. From (4.2-53) we see when taking natural logs that for the memoryless channel one has 
 
 
1
ln
(
)
ln
(
)
n
m
k
k
p
p








y C
mk
y c
 
(4.3-13) 
 
0
1
0
1
2
3
0.7
0.25
0.04
0.01
0.01
0.04
0.25
0.7
ln
(0 0)
ln
(31)
ln(0.7)
0.36
ln
(1 0)
ln
(2 1)
ln(0.25)
1.39
ln
(2 0)
ln
(11)
ln(0.04)
3.22
ln
(3 0)
ln
(0 1)
ln(0.01)
4.61
P
P
P
P
P
P
P
P












0
1
0
1
2
3
0.7
0.25
0.04
0.01
0.01
0.04
0.25
0.7
0
1
0
1
2
3
0.7
0.25
0.04
0.01
0.01
0.04
0.25
0.7
ln
(0 0)
ln
(31)
ln(0.7)
0.36
ln
(1 0)
ln
(2 1)
ln(0.25)
1.39
ln
(2 0)
ln
(11)
ln(0.04)
3.22
ln
(3 0)
ln
(0 1)
ln(0.01)
4.61
P
P
P
P
P
P
P
P












 
 
Figure 4.3-12 Binary input 2-bit soft-decision memoryless channel. 
 
 
Therefore the sum of the log likelihoods is applicable to each trellis path. Figure 4.3-13(a) illustrates 
the trellis paths for each possibility, when five zeroes were transmitted along with two zeros to drive the state 
to “00.” It was assumed that the initial state was “00.” 
 

 236                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
The branch metrics were computed by adding the natural log likelihood. For example, consider the 
branch 
from 
state 
“00” 
at 
level 
1 
going 
to 
state 
“10” 
at 
level 
2. 
Adding 
ln
(2 1)
ln
(0 1)
P
P


1.39
4.61
6


. Now consider the cumulative branch metrics. Figure 4.3-13(b) 
illustrates the cumulative branch metrics.  
 
Rec’d sequence: 01
20
10
00
02
01
00
00(-3.58)
00(-1.75)
00(-.72)
00(-1.75)
00(-3.58)
00(-1.75)
00(-.72)
10(-7.58)
11(-7.83)
11((-6)
11((-7.83)
11(-9.22)
01(-7.83)
01(-6)
01(-9.97)
01(-1.75)
01(-6)
01(-4.97)
01(-3.58)
10(-1.75)
00(-1.75)
00(-.72)
00(-3.58)
11(-7.83)
11(-9.22)
10
(-3.58)
10(-4.97)
10(-7.83)
00
10
01
11
10(-4.97)
10(-3.58)
Level: 0                1                      2                 3     
4                    5              6             7
01(-3.58)
11(-7.83)
11(-9.22)
10(-6)
states
11(-9.22)
11(-6.0)
Rec’d sequence: 01
20
10
00
02
01
00
00(-3.58)
00(-1.75)
00(-.72)
00(-1.75)
00(-3.58)
00(-1.75)
00(-.72)
10(-7.58)
11(-7.83)
11((-6)
11((-7.83)
11(-9.22)
01(-7.83)
01(-6)
01(-9.97)
01(-1.75)
01(-6)
01(-4.97)
01(-3.58)
10(-1.75)
00(-1.75)
00(-.72)
00(-3.58)
11(-7.83)
11(-9.22)
10
(-3.58)
10(-4.97)
10(-7.83)
00
10
01
11
10(-4.97)
10(-3.58)
Level: 0                1                      2                 3     
4                    5              6             7
01(-3.58)
11(-7.83)
11(-9.22)
10(-6)
states
11(-9.22)
11(-6.0)
 
 
Figure 4.3-13 (a) Soft-decision Viterbi decoding branch metrics for the encoder of Figure 4.3-2. 
 
 
00
00
00
Input bits:
1
0
00
00
00
00
10
11
11
11
11
11
01
01
01
01
01
01
01
10
00
00
00
11
11
11
Input bit sequence:
0000000 Time
10
10
10
00
10
01
11
10
10
Level: 0                1                      2                 3     
4                    5              6             7
a
d
c
b
01
11
11
10
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
(-1.75)
(-5.33)
(-7.08)
(-7.8)
(-11.38)
(-13.13)
(-11.85)
(-7.83)
(-7.75)
(-11.33)
(-12.05)
(-17.02)
(-9.58)
(-11.33)
(-16.13)
(-18.1)
(-17.38)
(-15.66)
(-13.75)
(-16.35)
(-13.8)
00
00
00
Input bits:
1
0
00
00
00
00
10
11
11
11
11
11
01
01
01
01
01
01
01
10
00
00
00
11
11
11
Input bit sequence:
0000000 Time
10
10
10
00
10
01
11
10
10
Level: 0                1                      2                 3     
4                    5              6             7
a
d
c
b
01
11
11
10
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
(-1.75)
(-5.33)
(-7.08)
(-7.8)
(-11.38)
(-13.13)
(-11.85)
(-7.83)
(-7.75)
(-11.33)
(-12.05)
(-17.02)
(-9.58)
(-11.33)
(-16.13)
(-18.1)
(-17.38)
(-15.66)
(-13.75)
(-16.35)
(-13.8)
 
 
Figure 4.3-13 (b) Soft-decision Viterbi decoding cumulative branch metrics for the encoder of Figure 4.3-2. The “X” denotes that the 
path is cut. 
 
 
The cumulative values are noted in parentheses above each node. An “X” on a branch in the figure 
indicates that that path has been eliminated, since the other path’s cumulative branch metric was smaller into 
that node. For example, consider the node at depth 3 in the 00 state. The cumulative branch metric is –7.08 
enclosed in a parenthesis. 
From Figure 4.3-13(b) we see that moving from state 00 at depth 3 to state 00 at depth 4 yields a 
cumulative branch metric of –7.08 –0.72 = –7.8. However going from state 01 at level 3 to state 00 at level 4 
yields a branch metric of –11.33 –9.22 = –20.55 that is smaller than –7.8. Thus this latter branch is severed, 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           237 
which is denoted by the “X” in its path. This process continues for all nodes until only one path is left and 
this is the Viterbi algorithm’s choice. 
 
Examples 14 and 15 have illustrated the Viterbi decoder for both the hard-decision and the soft- 
decision channels. We have seen that the decoding method is the identical; only the branch metric is 
different. 
 
Now consider a list of optimum short constraint length convolutional codes that are shown in Table 
4.3-1 [17]. The table lists the code rate, the constraint length, the free distance, and the associated tap 
connections for that code. Notice that the optimum code for rate 1/2, constraint length 3 has the tap 
connections of “111” and “101.” Thus the convolutional code shown in Figure 4.3-2 (or alternatively 4.3-3) 
is optimum, based on the table. Note that the rate 1/2 codes are listed up to length 9 and codes with rate 1/3 
are listed up to length 8.  
 
 
4.3.4.3 Zero Filling and Tail Biting of the Viterbi Algorithm 
 
Up until now all convolutional codes were assumed to start in the all-zero state. Furthermore at the end of a 
message, K–1 zeros, where K is the constraint length of the convolutional code, are added to the message to 
make sure the decoder converges to the all-zeros state. This is called zero-filling. Tail biting [12, 28] is an 
alternative means of ending in a known state. When tail biting is used, the code sequence starts from a state 
equal to the last K–1 bits of the information message. This insures that all code words start and end at the 
same state. This offers approximately 0.1 dB better bit error performance [29] than zero filling.  
 
Table 4.3-1 Optimum Short Constraint Length Rc= 1/2 and 1/3 Convolutional Codes 
 
11110111,11011001,10010101
16
8
1/3
1111001,1110101,1011011
15
7
1/3
111101,101011,100111
13
6
1/3
11111,11011,10101
12
5
1/3
1111,1101,1011
10
4
1/3
111,111,101
8
3
1/3
111101011, 101110001
12
9
1/2
11111001, 10100111
10
8
1/2
1111001, 1011011
10
7
1/2
111101, 101011
8
6
1/2
11101, 10011
7
5
1/2
1111,  1101
6
4
1/2
111,  101
5
3
1/2
Code Generators
df
Constraint 
Length (K)
Code Rate (Rc)
11110111,11011001,10010101
16
8
1/3
1111001,1110101,1011011
15
7
1/3
111101,101011,100111
13
6
1/3
11111,11011,10101
12
5
1/3
1111,1101,1011
10
4
1/3
111,111,101
8
3
1/3
111101011, 101110001
12
9
1/2
11111001, 10100111
10
8
1/2
1111001, 1011011
10
7
1/2
111101, 101011
8
6
1/2
11101, 10011
7
5
1/2
1111,  1101
6
4
1/2
111,  101
5
3
1/2
Code Generators
df
Constraint 
Length (K)
Code Rate (Rc)
 
 
 
4.3.4.4 Branch Symbol Synchronization 
 
The branch symbols must be synchronized with the received symbols. When misaligned, the performance 
deteriorates rapidly. Typically a misalignment can be detected by observing (a) path metric growth or  
(b) channel bit error estimates. In the first case (a) the path metrics are typically close to each other and grow 
at a large rate. For case (b) the channel bit error rate will approach 1/2. 

 238                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
Thus a synchronization stage must be included external to the decoder itself. The synchronization 
stage has the function of changing the symbol timing by one symbol for at most n–1 changes where the code 
rate is 1/n. After each trial (there are a total of n trials at most) the metric is compared to what is expected for 
normal behavior. If normal behavior is not obtained, the symbol timing is shifted once and the metric is tried 
again. This continues until synchronization is achieved. 
 
 
4.3.4.5 Required Memory for Viterbi Decoding 
 
One of the problems in decoding with a Viterbi decoder is the fact that as the sequence length increases, the 
required storage of the branch metrics and the sequences increases. Moreover a delay in decoding is required, 
which depends directly on the length of the transmitted sequence. A solution to this problem is to modify the 
algorithm in such a way that it becomes simpler, but maintains about the same performance. The usual 
solution to this problem is to allow only a fixed delay and fixed memory in the trellis. Basically at any given 
time, the algorithm only needs the N most recent bits.  
 
As each new information bit is received, a final decision is made on the bit received N branches 
(bits) back in the trellis, by comparing the branch metrics in the surviving sequences and deciding in favor of 
the bit in the sequence that has the largest path metric. If the parameter N is chosen to be large enough, all of 
the surviving sequences will contain the same decoded bit N branches back in time. In other words with a 
very high probability, all surviving sequences at a particular time t1 will stem from the same node at t1–N. It 
has been determined by simulation and hardware measurement that if 
, then negligible degradation 
will occur compared to the case of infinite memory case (optimum Viterbi decoding). 
5
N
K

 
 
4.3.5 Error Probabilities for Viterbi Decoding of Convolutional Codes  
 
Perhaps the most useful techniques for estimating bit and word error performance of convolutional codes are 
union bounds and computer simulation [1]. Now consider the evaluation of the bit error probability. 
Following Clark and Cain [1], first event error probability per node denoted by Pw is evaluated. Since 
convolutional codes are linear, the decoding error probability is the same for all possible transmitted 
sequences. Therefore it is assumed that the all-zeros sequence corresponds to the transmitted sequence.  
 
 
4.3.5.1 Error Probabilities for Viterbi Decoding for the BSC Via the Union Bound 
 
Let p denote the channel symbol error probability for the binary symmetric channel (BSC). It is shown in 
[23] and [1] that for Viterbi decoding, the word or sequence error probability is overbounded by a union 
bound of the form 
 
 
1,
2
(1
)
( ,
)
w
N
D
p
p
P
T D N




 
(4.3-14) 
 
where p is the BSC error probabilities. Again for Viterbi decoding, the union bound for the bit error 
probability is overbounded by [23] and [1] 
 
 
1,
2
(1
)
1
(
)
b
N
D
p
p
dT D,N
P
k
dN




 
(4.3-15) 
 
where k is as before the number of bits input to the encoder at a time.  
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           239 
Example 16 Consider the upper bound on sequence and the bit error probability for the convolutional code 
of Figure 4.3-2. The transfer function for this code is repeated here. 
 
 
5
(
)
1 2
ND
T D,N
ND

 
(4.3-16) 
 
Evaluating (4.3-14) produces the sequence error probability 
 
 
5
2
2
(1
1
4
(1
)
w
p
p
P
p
p












 
(4.3-17) 
 
Now consider the bit error probability upper bound. Taking the derivative with respect to the variable N 
produces the result 
 
5
2
1
(
< )
(1 2 )
N
dT D N
D
dN
D



 
(4.3-18) 
 
Combining (4.3-15) and (4.3-18) produces the result for the bit error probability 
 
 




5
1/ 2
2
1/ 2
2
(1
)
1 4
(1
)
b
p
p
P
p
p












 
(4.3-19) 
 
since k = 1 in this case. 
 
 
4.3.5.2 Error Probabilities for Viterbi Decoding for the Soft-Decision Decoding in the AWGN Channel 
 
In a derivation similar to the derivation of (4.3-19) for the unquantized soft-decision decoding for the binary 
input AWGN channel, the following upper bound for the bit error probability is given by [16] 
 
 


/
0
0
1,
0
2
1
(
exp
/
E
N
s
f
s
b
f
s
N
D e
d E
dT D,N
P
Q
d E
N
k
N
dN












)
 
(4.3-20) 
 
The parameters in (4.3-20) are given by: 
Ec/N0 = RcEb/N0 = the channel symbol energy to one-sided noise spectral density 
Rc= the code rate of the code = k/n  
N0 is the one-sided noise spectral density in W/Hz 
df is the free distance of the convolutional code 
And for each k data bits entered into the encoder, n coded bits are sent to the modulator. This bound 
has been used very effectively to obtain tight bounds for the bit error rate probability on the AWGN channel 
for a variety of convolutional codes of constraint lengths (K) less than 10. It is pointed out in Viterbi’s paper 
[23] that the transfer function bound is unmanageable for K > 4; however, a matrix inversion can be used to 
obtain the same generating function.  
 
Example 17 Consider the convolutional code of Figure 4.2-3, which is a rate 1/2, k = 1, K=3 code. Utilize 
(4.3-20) to obtain a bound to the bit error probability. Since the derivative is given by 
 

 240                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
5
2
1
(
)
(1 2 )
N
dT D,N
D
dN
D



 
(4.3-21) 
 
It follows that  
 
 
0
2
0
0
0
5
exp
2
5
5
exp 2
1 2exp
2
b
b
s
b
b
E
N
E
E
P
Q
N
N
E
N




































 
(4.3-22) 
 
Canceling the common terms produces 
 
 
0
2
0
5
1 2exp
2
b
b
b
E
Q
N
P
E
N





















 
(4.3-23) 
 
which is our result for the bit error probability bound for soft decision in a WGN channel, for the rate ½,  
K = 3, k = 1, convolutional code of Figure 4.3-2. The reader should note that other bounds for these error 
probabilities exist and in some cases they may slightly tighter [30].  
 
Figure 4.3-14 illustrates eight level (uniform spacing) simulation and transfer function bounds by 
Heller and Jacobs [24] of rate ½ convolutional codes of constraint lengths of K = 3 through K = 8 with k = 1.  
 
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
1 10
7
1 10
6
1 10
5
1 10
4
1 10
3
Eb/N0 (dB)
BER
Simulation
K=3
K=5
K=7
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
Eb/N0 (dB)
BER
K=8
K=6
K=4
Upper bound
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
1 10
7
1 10
6
1 10
5
1 10
4
1 10
3
Eb/N0 (dB)
BER
Simulation
K=3
K=5
K=5
K=7
K=7
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
Eb/N0 (dB)
BER
K=8
K=6
K=4
Upper bound
 
 
Figure 4.3-14 Bit error probability based on simulation and transfer function bounds. 
 
 
One thing to notice immediately is the simulation results (solid lines) are above the upper bounds! 
This is due to the fact the bounds are for the infinitely quantized channel and the simulation was for 8-level 
quantization. Thus to convert the bounds to 8-level quantization also, one must add about 0.2–0.25 dB [24]  
 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           241 
 
to the bounds to bound the 8-level case. When this correction factor is added to the bounds, they agree quite 
well over the BER range of 10–4 to 10–5. Furthermore, since the bounds become more accurate at lower bit 
error rates, it is believed that the bounds are a good estimate for the BER performance when the ¼ dB is 
added to correct for the infinite quantization used in the bounds.  
 
Another method of estimating the bit error probability follows from the work of Viterbi [21]. 
Consider the all nonzero paths through the code trellis that first emerges with the all-zero path at depth j. 
Recall that the number of ones in a nonzero code word sequence is the Hamming distance between this 
sequence and the all-zero sequence. The free distance, as defined in Section 4.3.2, is just the minimum 
Hamming distance between any two distinct code sequences. The free distance is equal to the Hamming 
weight on the nonzero code sequence with the smallest Hamming weight, since the code is linear. For the 
error rate estimates, let ad denote the number of nonzero code sequences that are Hamming distance d away 
from the all-zero sequence path. Therefore, in light of the definition of the free distance, for all d < df, ad = 0. 
In addition define PEd as the probability that the convolutional decoder discards the all-zero code sequence at 
depth j in favor of a code having Hamming distance d. This probability is the same as the two-code word 
error probability for a block code with minimum distance d. Viterbi [21] has shown that PEd can be 
overbounded by 
 
 
f
Ed
d d
d
d
P
a P



 
(4.3-24) 
 
Equation (4.3-24) bounds the probability that the Viterbi decoder selects an incorrect path through the trellis. 
It should be noted that it is not a bound on the bit error probability. Viterbi [21] has shown that for the 
continuous output, soft-decision AWGN channel that 
 
 
0
2
0
2
/
2
1
exp
2
2
c
b
c
b
d
dR E
N
dR E
z
P
dz
Q
N



















d
 
(4.3-25) 
 
where Rc is the code rate, Eb is energy per bit, d is the Hamming distance, and N0 is the one-sided noise 
spectral density.  
 
To bound the bit error rate probability, each decoding error event is weighted by the number of bit 
errors associated with that error event. Under the assumption that the all-zeros sequence is the correct path, 
the number of bit errors associated with a nonzero path is equal to the number of information bits that are 
“ones” associated with that path. In the general case there are a total of cd “information bit” errors associated 
with all paths that are at Hamming distance d from the all-zeros sequence path. Viterbi [17] has shown that 
the bit error rate probability can be overbounded by 
 
 
f
b
d
d d
P
c P



 
(4.3-26) 
 
where Pd is given by (4.2-79) and (4.2-80) for the hard-decision binary symmetric channel and (4.3-25) for 
the soft-decision AWGN channel. When jammer state information (JSI) is available, Peterson et al. [15] have 
shown that (4.3-25) and (4.3-26) remain valid with the appropriate calculation of Pd. Peterson et al. [15] have 
shown that using analysis similar to that used for the binary symmetric channel, when JSI is available, Pd 
must be replaced with Pjd of (4.2-107).  
 
The results that have been presented here are upper bounds and not exact results. Most upper bounds 
are reasonably accurate at lower BER values of say less than 10–4. Simulation is another means of 
determining the BER values and of course works at all values of BER.  
 
 
 
 

 242                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
4.3.6 Sequential Decoding of Convolutional Codes 
 
Before the discovery of Viterbi decoding of convolutional codes, convolutional codes were decoded using 
sequential decoding, as well as some of its variants. Sequential decoding is not maximum likelihood but can 
be made to be roughly of the same BER performance. The complexity of sequential decoders is roughly 
independent of the constraint length of the convolutional code. Typically sequential decoding is used when 
the constraint length is very large (K > 10).  
 
Sequential decoding is a method that makes it feasible to decode large constraint length 
convolutional codes by checking only some of the branches, and the number of branches depends on the 
channel characteristics. When a period of reliable data is received, only a few paths need be checked, but 
when a batch of unreliable data is received, many more paths are checked. 
 
A sequential decoder systematically searches through a code tree by extending, one branch at a time, 
a path that has already been examined and bases its decision on which path to extend only on the metrics of 
already-examined paths [17]. Sequential decoders work on paths of different lengths, and to accommodate 
these operations on different length paths, a fixed bias term is added to the symbol metric in order that the 
metric values that have been accumulated along the correct path tend to increase whereas those metric values 
along an incorrect path have a tendency to decrease. For a binary input soft decision the output has 2q values 
and a code rate of Rc. The most commonly used sequential decoding symbol metrics add a bias of qRc [17] to 
these maximum likelihood metrics. This metric bias is called the Fano metric.  
 
The main sequential decoding algorithms are the Fano and Stack algorithms, or some variation of 
these. References [2] and [31] present good descriptions of these two algorithms. Figure 4.3-15 illustrates bit 
error rate performance for sequential decoding of a K = 36, Rc =1/2 sequential decoder based on results 
presented in Oldenwalder [17].  
 
3.2
3.4
3.6
3.8
4
4.2
4.4
4.6
4.8
5
5.2
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
Eb/N0 (dB)
BER
56 Kbps
256 Kbps
512 Kbps
1.544 Kbps
Note: Buffer size is fixed at 4096 branches.
Eb/N0
3.2
3.4
3.6
3.8
4
4.2
4.4
4.6
4.8
5
5.2
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
Eb/N0 (dB)
BER
56 Kbps
256 Kbps
512 Kbps
1.544 Kbps
Note: Buffer size is fixed at 4096 branches.
3.2
3.4
3.6
3.8
4
4.2
4.4
4.6
4.8
5
5.2
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
Eb/N0 (dB)
BER
56 Kbps
256 Kbps
512 Kbps
1.544 Kbps
Note: Buffer size is fixed at 4096 branches.
Eb/N0
 
 
Figure 4.3-15 Measured BER of a K = 36, Rc = 1/2 2-bit sequential decoded, convolutional code, on an AWGN channel with BPSK or 
QPSK modulation [17]. 
 
 
4.3.7 Threshold Decoding of Convolutional Codes 
 
Feedback decoding of convolutional codes is a method of obtaining more modest coding gains than those 
that can be obtained with Viterbi or sequential decoding. The primary advantage of feedback decoding is that 
the decoder is simple to implement and that interleaving and deinterleaving can be included as part of the 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           243 
encoder and decoder [32]. Feedback decoded convolutional coding systems usually employ systematic codes 
along with hard-decision quantized receiver data.  
 
 
4.3.8 Nonbinary Convolutional Codes 
 
So far we have discussed binary convolutional codes. Binary convolutional codes are suitable for channels in 
which BPSK of QPSK modulation along with coherent demodulation is utilized. In some applications BPSK 
or QPSK modulation with coherent demodulation may not be appropriate; however, noncoherent 
modulations may be applicable, such as M-ary FSK. If M is picked to be divisible by 2, then nonbinary 
convolutional codes are directly applicable. We will briefly discuss dual-k codes for a rate 1/2 encoder. 
These codes can be decoded either by hard-decision or soft-decision methods. A rate 1/2 dual-k 
convolutional encoder can be represented as shown in Figure 4.3-16. The encoder is composed of two (K’=2) 
k-bit shift register stages and 2k function generators. The output is two k-bit symbols. The example shown is 
a dual-2 bit convolutional encoder (k = 2). We see that the code rate is ½ since there are k input bits and 2k 
output coded symbols. For more details see [17, 33]. 
 
1     2  …..
k-1   k
Input
k bits
1     2  …..
k-1   k
Generators
g1,g2,…gk
M
1
2
k
Generators
gk+1,gk+2,…g2k
M
1
2
k
1     2  …..
k-1   k
Input
k bits
1     2  …..
k-1   k
Generators
g1,g2,…gk
M
1
2
k
Generators
g1,g2,…gk
M
1
2
k
M
1
2
k
Generators
gk+1,gk+2,…g2k
M
1
2
k
Generators
gk+1,gk+2,…g2k
Generators
gk+1,gk+2,…g2k
M
1
2
k
M
1
2
k
 
 
Figure 4.3-16 Convolutional encoder for rate 1/2 dual-2 codes.  
 
 
4.4 ITERATIVELY DECODED CODES  
Equation Section (Next) 
Iterative decoding can be described as a decoding technique utilizing a soft-output decoding algorithm that is 
iterated several times to improve the bit error performance of a coding scheme, with the goal of obtaining 
true maximum-likelihood decoding, with less decoder complexity. These codes are also called capacity 
approaching codes, since their performance approaches channel capacity.  
The early work of Elias [34] on iterated codes back in 1954 was the original work in the area of 
iterated codes. Iterated decoding was known as probabilistic decoding in those times. The basic concept was 
then, as it is currently, to maximize the a posteriori probability of a symbol being sent, given a noisy version 
of the coded sequence.  
In this section a brief discussion of one branch of iterated codes, known as product codes, are 
presented. These codes include parallel-concatenated codes (turbo codes) and serial-concatenated codes. The 
codes can be either convolutional or block codes. 
The other class of iterated codes, low-density parity check codes (LDPC), will be discussed briefly 
here also. Basic to turbo codes is the notion of concatenation of codes. Concatenation of two codes is a 
method of achieving large coding gains from two (or more) simple component or constituent codes. 
Concatenation was first proposed by Forney [35]. The most popular concatenated code consists of a Reed-
Solomon outer block code and a convolutional inner code, usually utilizing Viterbi decoding of the 
convolutional code. 
 

 244                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
4.4.1 Turbo Codes 
 
A turbo code can be viewed as generalization of a concatenated code in conjunction with the use of an 
iterative decoding algorithm for decoding the turbo code. The unique aspect of turbo codes is the iterative 
decoding algorithm. Turbo codes were discovered by Berrou, Glavieux, and Thitimajshima [36, 37]. They 
reported a coding and decoding scheme that offered phenomenal bit error probability results: A rate 1/2 code 
in AWGN, with BPSK modulation, produced a bit error probability of 10–5 at a Eb/N0 of 0.7 dB!  
 
 
4.4.1.1 Turbo Coding Structure  
 
A turbo code has the following four attributes. (1) A turbo code system is a product code (as referred to in 
[36]) with a parallel concatenated code structure, with constituent recursive systematic convolutional 
encoders. (2) A turbo code system utilizes soft-input soft-output (SISO) maximum a posteriori (MAP) 
decoders for each component code in which to generate log-likelihood ratios. (3) A turbo code system 
utilizes feedback of part of the symbol reliabilities, in the form of extrinsic information, from an outer 
(column) decoder to an inner (row) decoder and from the inner decoder to the outer decoder. (4) A turbo 
code system utilizes a long random interleaver that is applied between the two encoders. Its primary function 
is to ensure that, at each decoding iteration, the component MAP decoders get independent estimates on the 
information symbols.  
 
 
4.4.1.2 Turbo Encoder  
 
First we consider parallel-concatenated convolutional codes (PCCC) with interleaving, commonly known as 
a turbo code. A turbo code encoder is shown in Figure 4.4-1. 
 
Recursive
convolutional
encoder C1
Pseudo random
block interleaver
(length N)
Recursive
convolutional
encoder C2
Optional
puncturing
Input 
bits
Output
First parity
check bits
Second parity
check bits
Recursive
convolutional
encoder C1
Recursive
convolutional
encoder C1
Pseudo random
block interleaver
(length N)
Recursive
convolutional
encoder C2
Optional
puncturing
Optional
puncturing
Input 
bits
Output
First parity
check bits
Second parity
check bits
 
 
Figure 4.4-1 Turbo encoder for parallel concatenated code, a turbo code. 
 
 
 
The encoder is a recursive systematic convolutional (RSC) encoder and is comprised of two RSC 
convolutional encoders operating in parallel, along with an interleaver that inputs the data in a scrambled 
manner. A recursive systematic convolutional encoder has the property that one of the outputs is the data 
input itself (systematic property). The two internal RSC encoders can be identical or different. The nominal 
code rate for a turbo encoder is 1/3, since for each input bit there are three output coded symbols. However 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           245 
by the act of puncturing, the code rate can be increased to 1/2, 2/3, or higher. The interleaver is designed to 
randomize the data bits prior to inputting them to the second RSC. The use of the interleaver in conjunction 
with the two encoders turns out to have relatively few nearest neighbors as shown by Benedetto and Montorsi 
[38]. They also have shown that the number of nearest neighbors, is reduced by N, with N being the 
interleaver length. Ryan [39] has shown that the bit error rate decreases as N is increased. Thus the 
interleaver length is an important parameter in the design of RSC codes.  
 
Consider now the difference between a nonsystematic convolutional code (NSC) and a recursive 
systematic code (RSC). Figure 4.4-2 illustrates both an NSC and an RSC encoder.  
 
+
+
(a) Nonsystematic convolutional (NSC) example with G1= {1,1,1} and G2 = {1,0,1}.
dk
dk-1
dk-2
uk
vk
+
+
(b) Recursive systematic convolutional (RSC) example with G1= {1,1,1} and G2 = {1,0,1}.
ak
ak-1
ak-2
uk
vk
dk
+
+
(a) Nonsystematic convolutional (NSC) example with G1= {1,1,1} and G2 = {1,0,1}.
dk
dk-1
dk-2
uk
vk
+
+
(b) Recursive systematic convolutional (RSC) example with G1= {1,1,1} and G2 = {1,0,1}.
ak
ak-1
ak-2
uk
vk
dk
+
+
(b) Recursive systematic convolutional (RSC) example with G1= {1,1,1} and G2 = {1,0,1}.
ak
ak-1
ak-2
uk
vk
dk
 
 
Figure 4.4-2 (a, b) An example of NSC and RSC codes with G1 = {1,1,1} and G2 ={1,0,1}. 
 
 
In Figure 4.4-2(a) is an example of a nonsystematic convolutional encoder (NSC). It is a simple rate 
1/2, constraint length K = 3 convolutional encoder. The input to the encoder at time k is the data bit dk. The 
two outputs, in the general case, can be written as  
 
 
 
(4.4-1) 
1
1
0
1
1
0
1
  Mod(2)  1
0,1
2
  Mod(2)  2
0,
K
k
i
k
i
i
K
k
i
k
i
i
u
g d
g
v
g
d
g












1
)
 
where the code generators G1 = {g1i} and G2 = {g2i} are the connections for each coder. This encoder has a 
finite impulse response (FIR). Now consider the rate 1/2, K=3, recursive systematic convolutional encoder 
(RSC) of Figure 4.4-2(b), in generalized form. The variable ak is defined by 
 
 
 
(4.4-2) 
1
1
0
1
1
0
 
1
  mod(2
2
  mod(2)
  mod(2)
 
K
k
k
k
k
i
K
k
k
k
i
k
k
a
d
g a
v
g
a
u
d













 246                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
The trellises for both these encoders (NSC and RSC) have the same structure, and they have the 
same free distance [39]. As noted in the figure the two encoder generators are given by G1={1,1,1} and 
G2={1,0,1}. 
 
 
4.4.1.3 Parallel Concatenation of RSC Codes  
 
It is well known that the BER of a classical nonsystematic convolutional code is lower than a systematic 
convolutional code with the same memory at high SNR, and at low SNR it is higher. For turbo codes at low 
SNR RSC are better in BER than the best nonsystematic convolutional codes [36]. An example of a turbo 
code based on two recursive convolutional encoders is depicted in Figure 4.4-3. Notice that the convolutional 
encoders are recursive in nature. That is, the feedback data adds into the input data. The data input is dk 
(
) at time k, and the two coded sequences are represented by v1k and v2k (
).  
(0,1)
k
d 
 
1 and 2
(0,1)
k
k
v
v

 
There are two recursive convolutional encoders; one of them has the data interleaved. There is also a 
third output that is composed of the unmodified data, which is output directly.  
 
xk
Interleaving
+
+
+
+


k1
v


k
2
v

ku
RSC code 1
RSC code 2
xk
Interleaving
+
+
+
+


k1
v


k
2
v

ku
RSC code 1
RSC code 2
 
 
Figure 4.4-3 A turbo encoder composed of the parallel concatenation to RSC encoders. 
 
 
4.4.1.4 A Parallel Concatenated Convolutional Decoder (Turbo Decoder) 
 
The turbo decoder utilizes iterative decoding based on the maximum a posteriori (MAP) criterion. The 
Viterbi decoding algorithm is an optimal decoding process for minimizing the probability of a sequence 
error. It turns out that its output of a hard decision of a bit is not applicable to generate the a posteriori 
probability (APP) for each detected bit. The iteration-decoding algorithm that works with soft decision bits is 
oftentimes based on the Ball, Cocke, Jelinek, and Raviv [27] (BCJR) algorithm or a modification of the 
same. Figure 4.4-4 illustrates the iterative decoder for the parallel concatenated convolutional code (PCCC) 
(that is, a turbo code). The BCJR algorithm was modified by Berrou et al. [36] for the decoding of RSC 
codes. This section is based, in part, on Berrou et al. [37], Sklar [40], and Proakis [11].  
Consider an RSC with constraint length K. Let vector r denote the outputs from the demodulator 
over a discrete, memoryless, AWGN channel.  
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           247 
 
 
The first decoder (Decoder 1) is fed inputs from the information bits and the first set of parity check 
bits v1k derived from the soft output demodulator. In a similar manner the second decoder (Decoder 2) is fed 
information bits and the second set of parity check bits from the soft output demodulator. Each soft input soft 
output (SISO) decoder attempts to decode the information sequence {ui} by computing the a posteriori 
probability for each information bit derived from its respective parity bits and then sending the soft output 
information to improve upon it the probability of correct decision. This soft output information that is 
exchanged between the two decoders is called the extrinsic information.  
 
Received signal
SISO
decoder1
Interleaving
SISO
decoder2
Deinterleaving
Deinterleaving
Decoded output ˆu
Soft output 
demodulator
Feedback loop
v1k
v2k
ˆ
ˆ
  
2( )
2( )
On last iteration
eL
u
L
u

k
2(
)
i
eL
u
1(
)
e
k
L
u
ˆ
1( )
i
eL
u
cL r
cL r
k
2(
)
i
eL
u
Received signal
SISO
decoder1
SISO
decoder1
Interleaving
Interleaving
SISO
decoder2
SISO
decoder2
Deinterleaving
Deinterleaving
Deinterleaving
Deinterleaving
Decoded output ˆu
Soft output 
demodulator
Feedback loop
v1k
v2k
ˆ
ˆ
  
2( )
2( )
On last iteration
eL
u
L
u

k
2(
)
i
eL
u
1(
)
e
k
L
u
ˆ
1( )
i
eL
u
cL r
cL r
k
2(
)
i
eL
u
 
 
Figure 4.4-4 Block diagram representation of an iterative decoder for a PCCC (turbo code). 
 
The output symbol-by-symbol MAP decoder is the a posteriori log-likelihood ratio for the condition 
that a transmitted information bit u = 1 and the transmitted bit u = –1. Thus one can write 
 
 




1
ˆ
( )
log
1
P u
L u
P u








r
r

 
(4.4-3) 
 
where the hat over the letter u denotes the estimate of the bit u. The decoder can make a decoded bit decision 
based on comparing the log-likelihood ratio (LLR) to a threshold of zero: 
 
 
ˆ
ˆ
1  if  (
)
0
ˆ
ˆ
1  if  (
)
0
k
k
k
k
u
L u
u
L u




 
(4.4-4) 
 
The LLR (4.4-3) can be decomposed into the sum of three components [40]. The first component is the a 
priori likelihood and is defined as 
 
 
(
1)
( )
log
(
1)
P u
L u
P u








 
(4.4-5) 
 
which depends only on the a priori probability of u = 1 and u = –1 occurrence. The second component [12] is 
expressed as [11] 
 
0
4
c
c
E
L r
N

r  
(4.4-6) 
where 

 248                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
0
4
 for an AWGN channel
c
c
E
L
N

 
(4.4-7) 
 
and where N0/2 is the two-sided noise spectral density, and Ec is the coded symbol energy.  
 
Hagenauer et al. [40] have shown for systematic turbo codes that the soft output for the information 
bit u may be expressed as the sum of three additive terms for statistically independent transmission, in 
particular 
 
 
ˆ
ˆ
( )
( )
( )
c
e
L u
L r
L u
L u



 
(4.4-8) 
 
where the extrinsic information, 
ˆ
( )
eL u , is exchanged between the two soft-in soft-out decoders. In the 
process of the first iteration of the iterative decoding algorithm, SISO decoder 1 produces the extrinsic 
information given by 
 


ˆ
1( )
1( )
( )
e
c
L
u
L u
L r
L u



 
(4.4-9) 
 
If a “1” and a “–1” are a priori equally likely, then L(u) = 0. This extrinsic information from the first SISO 
decoder, after being interleaved, is sent to the second SISO decoder, which uses 
 as the a priori value 
in place of L(u) to compute 
ˆ
1( )
eL
u
ˆ
2( )
L
u . Therefore, the extrinsic information value computed by decoder 2, for 
each information bit, is given by 
 
 


ˆ
ˆ
2( )
2( )
1( )
e
c
ˆ
e
L
u
L
u
L r
L
u



 
(4.4-10) 
 
 
Next SISO decoder 1 will use the extrinsic information values 
 as prior information in the 
second SISO decoder iteration. This computation is repeated for each iteration.  
ˆ
2( )
eL
u
 
The iterative process is commonly terminated after a predetermined number of iterations. This 
occurs typically when the successive soft output values 
ˆ
2( )
L
u  stabilize, in the sense that they change very 
little between each successive iteration. The SISO decoder 2, in the final iteration combines the two extrinsic 
information values in determining the soft output values 
 
 
ˆ
ˆ
2( )
1( )
2( )
c
e
e
L
u
L r
L
u
L
uˆ



 
(4.4-11) 
 
The data bit estimate is obtained from a hard decision of 
ˆ
2( )
L
u , as shown in Figure 4.4-3.  
Berrou et al. [37] have simulated the performance of a rate ½ encoder with constraint length K = 5, 
having octal generators G1=37 and G2=21 and parallel concatenation. The parity bits are alternatively deleted 
producing a rate of 1/2. The interleaver is based on a 256×256 matrix, and the modified Bahl algorithm [27] 
is used. The block length is N = 65,535 bits. Figure 4.4-5 [37] illustrates the BER performance of a recursive 
parallel-concatenated turbo code with these parameters.  
 
As can be seen from the figure, after one iteration, the BER versus Eb/N0 ratio is considerably better 
than uncoded BPSK. Finally after 18 iterations the BER is 1×10–5 at Eb/N0 = 0.7 dB.  
 
The primary drawback with decoding turbo codes with large interleavers is the attendant decoding 
delay and the computational complexity resident in the iterative decoding algorithms. However, in 
communication applications some delay may be tolerable and the enhancement in bit error rate performance 
makes the option very appealing.  
 
 
 
 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           249 
4.4.2 A Serial Concatenated Convolutional Code 
 
An alternative to a PCCC is a serial concatenated convolutional code (SCCC). Benedetto, Divsalar, 
Montorsi, and Pollara [7] introduced serial concatenation of codes in 1998. Figure 4.4-6 illustrates a block 
diagram of a SCCC model. The encoder is composed of two constituent linear convolutional encoders and an 
interleaver. 
 
This section follows Benedetto et al. [7] and their notation. The symbols L(.;I) and 
(.;
)
L
O  at the 
input and output ports of the SISO refer to the log-likelihood ratios (LLRs) unconstrained when the second 
argument is I and modified according to the code constraints when it is O. When the symbols are binary only 
one LLR is required. The first argument u refers to the information symbols of the encoder, and c refers to 
the code symbols. Finally, the superscript o refers to the outer encoder and the superscript i refers to the inner 
encoder. 
 
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
1 10 5
1 10 4
1 10 3
0.01
0.1
1
Eb/N0 (dB)
BER
Uncoded
Iteration 1
2
3
5
18
Eb/N0 (dB)
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
1 10 5
1 10 4
1 10 3
0.01
0.1
1
Eb/N0 (dB)
BER
Uncoded
Iteration 1
2
3
5
18
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
1 10 5
1 10 4
1 10 3
0.01
0.1
1
Eb/N0 (dB)
BER
Uncoded
Iteration 1
2
3
5
18
Eb/N0 (dB)
 
 
Figure 4.4-5 A plot of the BER for a PCCC (turbo code) against the SNR and iteration number. 
 
 
The log-likelihood ratios are defined by [7] 
 
 
( ;.)
( ;.)
log
(
;.)
ref
P u
L u
P u








p
n
 
(4.4-12) 
 
When u is a binary symbol, “1” or “0” uref is usually assumed to be “1.” When u belongs to an M-ary 
alphabet, uref can be chosen as each one of the M symbols.  
The outer code C1 has a code rate of 
 and the inner code C2 has a code rate of 
 
connected by an interleaver of length N bits. This concatenation results in a code of length of
/
o
c
R
k

/
o
c
R
p

/
S
c
R
k n

. It is 
assumed that N is a multiple of p.  
 

 250                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
Encoder 1
Outer code
Interleaver
(N)
o
c
k
R
p







Encoder 2
Inner code
i
c
p
R
n







o
u
oc
iu
ic
Encoder 1
Outer code
Interleaver
(N)
o
c
k
R
p







Encoder 2
Inner code
i
c
p
R
n







o
u
oc
iu
ic
 
 
Figure 4.4-6 A block diagram of an encoder for an SCCC. 
 
 
The iterative decoder for SCCC systems is illustrated in Figure 4.4-7 [41]. Again, soft input and soft 
output (SISO) devices are used in the decoding process. The SISO is a four-port device that accepts as inputs 
the probability likelihood ratios of the information and code symbols labeling the edges of the code trellis, 
and forms an update of these probabilities based on the code constraints.  
 
SISO
Inner
Deinterleaver
SISO
Outer
Interleaver
zero
From soft
demodulation
Decoded 
output
( ; )
i
L c I
(
; )
i
L u I
(
;
)
i
L u O
(
; )
o
L c
I
(
; )
o
L u
I
(
;
)
o
L c O
(
;
)
o
L u O
ˆu
SISO
Inner
SISO
Inner
Deinterleaver
Deinterleaver
SISO
Outer
SISO
Outer
Interleaver
Interleaver
zero
From soft
demodulation
Decoded 
output
( ; )
i
L c I
(
; )
i
L u I
(
;
)
i
L u O
(
; )
o
L c
I
(
; )
o
L u
I
(
;
)
o
L c O
(
;
)
o
L u O
ˆu
 
 
Figure 4.4-7 Block diagram of an iterative decoder for SCCC. 
 
 
 
Unlike the turbo decoder, in which only the LLRs of information symbols are updated, for the 
SCCC both the LLRs of information and code symbols are updated, based on the code constraints.  
During the first iteration of the SCCC algorithm, the SISO inner block is fed with the demodulator 
soft outputs, which consists of the LLRs of symbols received from the channels (that is, code symbols of the 
inner channel). If the a priori information of a “0” and a “1” are equally likely, then the log likelihood is set 
to zero on the first iteration. The second (lower) input 
 of the inner SISO is set to zero during the first 
iteration, because there is no a priori information available on the input symbols ui of the inner encoder. 
( ; )
i
L u I
 
The inner SISO algorithm processes the LLRs 
 to produce the extrinsic LLRs of the inner 
encoder 
 conditioned on the inner code constraints. The extrinsic LLRs are transmitted through the 
deinterleaver (inverse interleaver) whose outputs correspond to the LLRs of the code symbols of the outer 
code—that is, 
( ; )
i
L c I
(
;
)
i
L u O
 
 
1
(
;
)
(
; )
i
o
L u O
L c
I




 
(4.4-13) 
 
where 
1
 denotes the inverse operation of the interleaver (i.e., the deinterleaver function).  
 
These LLRs are then transmitted to the outer SISO (upper input), which corresponds to the code 
symbols. The outer SISO decoder processes the LLRs 
 of its unconstrained code symbols, and 
computes the LLRs of both the information and code symbols, based on the code constraints. The input 
 of the SISO outer decoder is always set equal to zero. This is based on the assumption that the 
information data bits are “0” and “1,” and occur with an equal probability of 1/2.  
(
; )
o
L c
I
(
; )
o
L u
I
 
The output LLRs of information symbols, which yields the a posteriori LLRs of the SCCC 
information symbols, is used in the final iteration to recover the data information bits. In addition, the LLRs 
of outer code symbols, after interleaving, are fed back to the lower input, which are the information symbols  
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           251 
of the inner code of the inner SISO decoder to start the second iteration. It can be seen from the block 
diagram that  
 
 
(
;
)
(
; )
o
i
L c O
L u I




 
(4.4-14) 
 
That is to say, the interleaved value of 
 is equal to 
. 
(
;
)
o
L c O
(
; )
i
L u I
Benedetto et al. [7] have determined that PCCCs seem better suited to approaching capacity limits 
for bit error probabilities above the error floor, which is around 10–6 to 10–7; on the other hand SCCCs seem 
to be better suited to provide near error-free performance. Further details are contained in [7]. 
 
 
4.4.3 Serial Concatenated Block Codes 
 
Serial concatenated block codes (SCBC) are similar to SCCC codes in which an outer linear encoder feeds a 
block interleaver, which in turn drives another linear block encoder. Figure 4.4-8 is a block diagram of a 
serial concatenated block code system.  
 
Linear block 
encoder 1
(Outer code)
Interleaver
(N = mp)
Linear block 
encoder 2
(Inner code)
o
u
oc
iu
ic
k-bit
blocks


,p k


,n p
p-bit
blocks
m
p-bit
blocks
m
n-bit
blocks
Linear block 
encoder 1
(Outer code)
Interleaver
(N = mp)
Linear block 
encoder 2
(Inner code)
o
u
oc
iu
ic
k-bit
blocks


,p k


,n p
p-bit
blocks
m
p-bit
blocks
m
n-bit
blocks
 
 
Figure 4.4-8 A block diagram of an encoder for an SCBC. 
 
 
 
Both the inner and the outer codes are linear block codes. The outer code is a (p,k) linear code and 
the inner code is an (n,p) code. The block interleaver is chosen to be of size N = mp, in which m is the 
number of p bit blocks, or outer code words. The data processing is as follows: m blocks of k bits are 
encoded, one block at a time. This results in mp encoded bits. Each of the m blocks of interleaved and coded 
data is fed to the inner encoder, which produces m blocks of n coded bits. The resulting code rate is the 
product 
 
 
SCBC
c
k p
k
R
p n
n


 
(4.4-15) 
 
The block length of the SCBC is nm coded bits, which could easily be significantly larger than the block 
length of a conventional serial concatenation of two block codes that do not utilize an interleaver between 
them.  
 
The decoder for SCBC codes is the same as shown in Figure 4.4-7, and the decoding process 
description is the same for the SCBC as for the SCCC systems.  
 
 
4.4.4 Parallel Concatenated Block Codes 
 
Parallel-concatenated block codes (PCBC) can be constructed in parallel along with the use of an interleaver. 
Figure 4.4-9 illustrates a block diagram of an example of a PCBC, which is based on two constituent 
systematic linear block codes denoted as (n1,k) and (n2,k), respectively.  
The pseudorandom block interleaver has length of N = mk bits. The overall code has length 
m(n1+n2–k) coded bits and has a code rate of k/(n1+n2–k). Daneshgaran and Mondin [41] have investigated 
the design of block interleavers for parallel-concatenated codes. The effect of the interleaver when used with 
SCBC and PCBC is to produce code words that are both large in block length and relatively sparse (very few 
binary ones).  

 252                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
4.4.5 Low-Density Parity Check Codes 
 
Gallagher, in 1962, introduced a class of codes known as low-density parity check (LDPC) codes and 
escribed two iterative probabilistic decoding algorithms [42]. Later Zyablov and Pinsker [43] showed that 
d
LDPC codes have a minimum distance that grows in a linear manner with the code length, and that errors up 
to the minimum distance could be corrected with a decoding algorithm with an almost linear complexity. Still 
later Tanner [44] extended Gallagher’s probabilistic decoding algorithm to the more general case in which 
the parity checks are defined as subcodes rather than simply single parity check equations.  
 
mk-bit blocks
of data
(n1,k)
Block
encoder
m(n1-k)
parity bits
Block
interleaver
of length
N = mk bits
(n2,k)
Block
encoder
m(n2-k)
parity bits
mk information bits
mk information bits
(n1,k)
Block
encoder
(n1,k)
Block
encoder
mk-bit blocks
of data
m(n1-k)
parity bits
m(n1-k)
parity bits
Block
interleaver
of length
N = mk bits
Block
interleaver
of length
N = mk bits
(n2,k)
Block
encoder
(n2,k)
Block
encoder
(n2,k)
Block
encoder
m(n2-k)
parity bits
m(n2-k)
parity bits
m(n2-k)
parity bits
 
 
Figure 4.4-9 Parallel concatenated block code (PCBC) utilizing a block interleaver. 
annon limit as turbo codes in papers by 
acKay and Neal [45] as well as MacKay [46]. Recently it was shown that irregular LDPC codes were 
own to
ength N. As a 
 
 
It has been shown that LDPC can get as close to the Sh
 
M
sh
 outperform turbo codes when they are of the same approximate length and rate [47].  
 
A regular LDPC is a linear (N,K) code with parity check matrix H having the Hamming weight J of 
the columns of H and weight K of the rows of H. Both J and K are much smaller than the code l
consequence a LDPC has a very sparse (low number on ones) parity check matrix. When the Hamming 
weights are chosen in accordance with some nonuniform distribution, then irregular LDPC are obtained [47]. 
The reader may consult [12] for a more complete discussion of LDPC. An example of an LDPC parity check 
code is shown in Figure 4.4-10; indicated in Gallagher’s paper [42]. 
 
1111 0000 0000 0000 0000
0000 1111 0000 0000 0000
0000 0000 1111 0000 0000
0000 0000 0000 1111 0000
0000 0000 0000 00001111
1000 1000 1000 1000 0000
0100 0100 0100 0000 1000
0010 0010 0000 0100 0100
0001 00
H 
00 0010 0010 0010
0000 0001 0001 0001 0001
1000 0100 0001 0000 0100
0100 0010 0010 0001 0000
0010 0001 0000 1000 0010
0001 0000 1000 0100 1000
0000 1000 0100 0010 0001 




















































 
 
Figure 4.4-10 LDPC parity check matrix based on Gallagher’s paper [42]. 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           253 
It is seen that J=3 and K=4 in this code, since the weight of each column is 3 and the weight of each 
row is 4. This is a LDPC(20,5) code since from (4.2-20) it is clear that H is an n × (n–k) matrix and since  
n–k = 15, it follows that k = 5. Further details can be found in [12]. 
 
For every linear (n,k) code there exists a bipartite graph with incidence matrix H. The name of this 
graph is a Tanner graph. The Tanner graph of a linear (n, k) graph has n code nodes and at least n–k parity 
nodes z, associated with the parity check equations. For a regular LDPC code the degrees of the code nodes 
are all equal to J and the degrees of the parity nodes are equal to K. The Tanner graph of the (20,5) Gallagher 
code is shown in Figure 4.4-11. 
 
1       2      3       4      5     6      7      8      9     10    11    12    13    14    15    16    17    18    19    20
1       2      3       4      5     6      7      8      9     10    11    12    13    14    15    16    17    18    19    20
8       9     10   11   12     13    14    15
1       2     3      4       5     6     7
8       9     10   11   12     13    14    15
1       2     3      4       5     6     7
 
 
Figure 4.4-11 A Tanner graph for the Gallagher (20,5) LDPC code. 
 
 
A few of the resulting parity check equations are given by 
 
1
1
2
3
4
2
5
6
7
8
15
5
10
15
20
z
x
x
x
x
z
x
x
x
x
z
x
x
x
x












M
 
 
(4.4-16) 
 
Two iterative decoding algorithms are discussed by Gallagher [42] and Morelos-Zaragoza [12] for the 
interested reader. 
 
 
4.5 SELECTED RESULTS FOR SOME ERROR CORRECTION CODES 
Equation Section (Next) 
Up until now the basic ideas of block, convolutional, and iterative decoding type codes have been discussed 
to present the general ideas and types of codes that are used in applications. In this section the goal is to 
 a small selection of the available codes are presented 
ere.  
.5.1 Bose, Chaudhuri, and Hocquenghem Codes 
 
he Bose, Chaudhuri, and Hocquenghem (BCH) linear codes a
ultiple error correction. These codes were discovered indepe
and Bose and Ray-Chaudhuri in 1960. This family of codes includes many code rates and a wide range of 
error correction capability for which excellent decoding algorithms exist. All error correction-coding books  
present some specific codes. It is to be noted that only
h
 
 
4
T
re a clever generalization of the Hamming 
codes for m
ndently by Hocquenghem in 1959 
 

 254                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
discuss BCH codes, oftentimes devoting a chapter to them. See, for example, Blahut [4] or Lin and Costello 
[2] for details on the decoding algorithms and the codes. 
The relevant parameters for a BCH code that is capable of correcting t or fewer errors in a block of 
ngth n coded bits [2,17] are the following: 
k bits 
n–k
 
le
(1) Block length   
 
n = 2m–1 , m3 
 
(2) Number of parity chec
mt  
 in Appendix A of Clark and Cain [1].  
Table 4.5-1 Selected BCH Generator Polynomials in Octal 
 
(3) Minimum distance 
 
d  2t+1 
(4) Error correction capability 
t < 2m–1 
 
Table 4.5-1 lists a few selected generator polynomials for some BCH codes [20]. A larger table is 
provided
 
5423325
5
11
107657
3
3551
2
31
721
2
7
15
g(x) (octal)
t
k
n
23
1
11
15
13
1
4
7
313365047
7
6
31
31
16
31
21
45
1
26
31
2467
3
5
15
5423325
5
107657
3
3551
2
31
721
2
7
15
g(x) (octal)
t
k
n
23
1
11
15
13
1
4
7
2467
3
5
15
45
1
26
31
21
16
31
31
11
313365047
7
6
31
 
 
Example 18  As an example of how to use the table, 
nsider the case that n = 31, k = 21 BCH code. Using 
the octal 3551 produces the binary values of 011,101,101,001. Using the lowest order polynomial from the 
right side produces the polynomial sequence 
 
co
10
9
8
6
5
3
1
x
x
x
x
x
x






x11). From the table t = 2 so that 
. The leftmost “0” is ignored in 
the polynomial (actually it corresponds to 0
5 and m = 5 and clearly  
t < 24 =16 and n–k =10
(5)(2)=10. 
 
 
Example 19 Consider the (31,16) BCH code in which t = 3. The code rate is given by 16/30 = 0.53. Assume 
that this code is used in a SFH/DPSK spread spectrum communication link and also assume that  
W/Rb = 1,000. Determine the upper bound to the bit error rate under the condition that the worst-case tone 
jamming is employed. Using (3.6-22) for the channel symbol error rate and using the fact that Rs = (30/16)Rb, 
one obtains the following symbol error rate: 
 
 
d

0.5                                              < (30/16)
1
           
      (30/16)
(
)
2(
)(
)(30/16)
            0                                             (
)
s
b
b
b
PE
X
X
W/R
P/J W/R
W/R
X




 
(4.5-1) 
 
where X = (P/J)(W/Rb). Since most BCH decoder are bounded distance decoders one can use (4.2-82) to 
obtain the result shown in Figure 4.5-1. 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           255 
 
Coded
BCH (30,16,3)
Uncoded
Uncoded
5
7
9
1
1 10
1
13
15
17
19
21
23
25
27
29
31
33
35
6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
(P/J)(W/Rb) dB
BER
5
7
9
1
1 10
1
13
15
17
19
21
23
25
27
29
31
33
35
6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
(P/J)(W/Rb) dB
BER
Coded
BCH (30,16,3)
 
 
Figure 4.5-1 Bit error rate performance for SFH/DPSK with BCH (30,1,63) encoding for worst-case tone jamming with W/Rb = 1,000. 
 
 
4.5.2 Reed-Solomon Codes 
 
Reed-Solomon codes (RS) form a special and very important subclass of q-ary BCH codes. Here q = 2m. The 
encoder for an RS (n,k) code on m-bit symbols (m
 groups the binary data stream into blocks, with each 
block containing k symbols (km bits). When m is an integer power of 2, the m bit symbols are called bytes. A 
common value of m is 8 and 8-bit RS codes are very powerful. The block length of a RS code is one less than 
2m. Efficient decoding techniques are available for RS codes.  
The relevant parameters for an RS code, which is capable of correcting t or fewer errors in a block 
of length n symbols [2,17], are the following: 
(1) Block length (symbols) 
 
n = q–1= 2m–1 (m(2m–1) bits) 
(2) Number of message symbols 
 
k (mk bits) 
(3) Number of redundancy symbols  
n–k = 2t (m(2t) bits) 
(4) Minimum distance in symbols  
d = 2t+1 (m(2t+1) bits) 
 
The decoded bit error rate for RS codes has been bounded by Clark and Cain [1]. The result for the 
bound on the bit error probability is given by 
 
1
)
1
1
2
(1
)
k
n
i
n i
b
s
s
n
i
t
P
p
p

 
2
1
k
i t
i
n




bol error probability. It should be noted that the error probability may be for an 






 
(4.5-2) 
 
in which ps is the channel sym
actual nonbinary symbol such as in an FH/MFSK modulation, or may be the probability of one or more 
binary errors in an m-bit word on a binary channel. In the case the channel is binary [15] the following 
expression is used for the symbol error probability 
 
 
(1
)
m
i
m i
s
m
p
p
p
1
i
i



 







 
(4.5-3) 

 256                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
where p is the binary channel er
lity. It shou
ror probabi
ld be noted that RS codes can be extended to have 
rtial lis
sed in practice in GF(8) are listed in Table 
hort List of RS Codes with m = 6 or 8 
 
length n = q and n = q + 1 [4]. A pa
t of some RS codes u
4.5-2. 
 
Table 4.5-2 A S
3
249
255
16
223
255
16
31
63
t
k
n
11
233
255
8
8
8
6
m
3
249
255
16
223
255
16
31
63
t
k
n
11
233
255
m
8
8
6
8
m
8
8
6
8
 
 
 
Example 20 Assume an RS code is being used in a SFH/DPSK spread spectrum communication system. 
sing the first entry (63,31,16) with m = 6 and estimate the bit error probability for worst-case multitone 
jamming. This code has a rate o
hannel symbol error probability 
is given by  
 
 
U
f 31/63 = 0.492. From (3.6-22) one has the c
0.5
63 31   
63/31
1/ 2(31/ 63)
  63/31<
<1000
0                      1000<
X
X <
p
X
X
X





 
(4.5-4) 
 
where X = (P/J)(W/Rb). Use of (4.5-3) specifies the symbol error probability, in terms of the binary channel 
error probability. Finally, using (4.5-2) provides the estimate of the bit error probability. The result is plotted 
in Figure 4.5-2. 
 
10
11
12
13
14
15
16
17
18
19
20
21
22
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
0.1
1
1 10 3
0.01
0.1
1
1 10 3
0.01
(P/J)(W/Rb) dB
Bit error probability
10
11
12
13
14
15
16
17
18
19
20
21
22
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
(P/J)(W/Rb) dB
 
 
Figure 4.5-2 Bit error
Bit error pro
 probability for an RS(63,31,16) code with m = 6 and W/Rb = 1000 for worst-case tone jamming. 
bability

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           257 
 
 
4.5.2.1 Concatenated Reed-Solomon/Convolutional Codes 
 
A very powerful coding scheme that has been used for some time is the concatenation of RS codes with 
Viterbi decoded convolutional codes [2]. Figure 4.5-3 illustrates the block diagram for the RS/convolutional 
code concatenation system. The information bits are grouped in blocks of m bits to form a 2m-ary symbol 
alphabet used by the RS encoder. This first code, the RS code is called the outer code, in the sense it is out 
from the channel.  
 
The RS encoded symbols are converted to the m-bit binary representation and input to the symbol-
interleaving buffer. The interleaver along with the deinterleaver tends to spread symbol errors uniformly over 
the symbol sequence. The interleaved bits forming the interleaver are input to the convolutional encoder (the 
inner encoder). The encoded data bits are modulated and transmitted over the discrete memoryless channel 
(DMC). After the demodulation process the demodulated bits are input to the Viterbi decoder, which decodes 
the bit stream. The decoded bits are grouped into RS symbols and deinterleaved and fed into the RS decoder. 
Finally the RS decoder decodes the data in bit format and sends it to its destination. The portion of the block 
diagram between the interleaver input and the deinterleaver output constitutes a super channel. 
Measurements and simulations have yielded the fac that output errors from the Viterbi decoder tend to 
mbination to 
ndomize the error bursts, and make the channel to appear to be memoryless. In effect the RS decoder is 
able to correct, thus improving the overall bit 
t 
appear in bursts. Therefore it is necessary to utilize the interleaver and deinterleaver co
ra
able to correct some errors that the Viterbi decoder was not 
rror rate. 
e
 
 
Channel
Data 
source
Reed-Solomon
outer encoder
Symbol 
interleaving
buffer
Convolutional
inner
encoder
Modulator
Decoded
data
Reed-Solomon
outer decoder
Symbol 
Deinterleaving
buffer
Viterbi
inner
decoder
Waveform
demod.
Superchannel
DMC
Noise
Channel
Data 
source
Reed-Solomon
outer encoder
Symbol 
interleaving
buffer
Convolutional
inner
encoder
Modulator
Data 
source
Reed-Solomon
outer encoder
Symbol 
interleaving
buffer
Convolutional
inner
encoder
Modulator
Data 
source
Reed-Solomon
outer encoder
Symbol 
Convolutional
interleaving
buffer
inner
encoder
Modulator
Decoded
data
Reed-Solomon
outer decoder
Symbol 
Deinterleaving
buffer
Viterbi
inner
decoder
Waveform
demod.
Decoded
data
Reed-Solomon
outer decoder
Symbol 
Deinterleaving
buffer
Viterbi
inner
decoder
Waveform
demod.
Superchannel
DMC
Noise
 
 
Figure 4.5-3 Block diagram of RS/convolutional concatenated coding system. 
 
 
4.5.3 Convolutional Codes with Maximum Free Distance 
n important measure of the goodness of a convolutional code is its weight structure. Typically this is found 
by an exhaustive search on a digital computer. For a maximum-likelihood approach the optimum weight 
structure is that which has the minimum number of bit errors in the paths through the code trellis that are 
closest to one another in the sense of the Hamming distance. Oldenwalder [48] first published the optimum 
rate 1/2 and 1/3 convolutional codes. Clark and Cain [1] and Peterson et al. [15] later published these results 
also. Tables 4.5-2(a) and 4.5-2(b) list the weights out to df + 4. Note that for listing purposes d denotes df , the 
free distance in the table. The constraint length is denoted by K. The entries for each code at distance d + i, 
i = 0,1,…4, is the coefficient cd needed to evaluate the upper bound on the bit error rate. Note (4.3-26) is the 
equation used to estimate the upper bound of the bit error rate probability. 
 
 
A

 258                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
Table 4.5-2 (a) Optimal Rate 1/2 Convolutional Codes and their Partial Weight Structure 
 
2179
0
281
0
33
12
753,561
9
8
7
6
5
4
3
K
340
148
60
22
2
10
371,247
404
0
211
0
36
10
171,133
332
62
32
36
2
8
75,53
225
72
20
12
4
7
35,23
130
49
18
7
2
6
17,15
80
32
12
4
1
5
7,5
df+4
df+3
df+2
df+1
df+0
df
Generators
1
Rc=1/2
cd for df =
2179
0
281
0
33
12
753,561
9
8
7
6
5
4
3
K
340
148
60
22
2
10
371,247
1404
0
211
0
36
10
171,133
332
62
32
36
2
8
75,53
225
72
20
12
4
7
35,23
130
49
18
7
2
6
17,15
80
32
12
4
1
5
7,5
df+4
df+3
df+2
df+1
df+0
df
Generators
Rc=1/2
cd for df =
cd for df =
 
s and their Partial Weight Structure 
 
 
Table 4.5-2 (b) Optimal Rate 1/3 Convolutional Code
 
8
7
113
53
0
20
0
1
14
171,165,133
19
20
26
6
5
4
3
K
8
1
13
75,53,47
56
0
12
0
12
12
37,33,25
58
0
6
0
6
10
17,15,13
58
0
15
0
3
8
7,7,5
df+4
df+3
df+2
df+1
df
df
Generators
0
24
0
1
16
367,331,225
Rc=1/3
cd for df =
6
5
4
3
K
19
20
26
8
1
13
75,53,47
56
0
12
0
12
12
37,33,25
58
0
6
0
6
10
17,15,13
58
0
15
0
3
8
7,7,5
df+4
df+3
df+2
df+1
df
df
Generators
8
7
113
53
0
20
0
1
14
171,165,133
0
24
0
1
16
367,331,225
Rc=1/3
Rc=1/3
cd for df =
cd for df =
 
 
 
 
To evaluate the BER, (4.3-26) is used with Pd given by (4.2-79) or (4.2-80) for the hard-decision 
binary symmetric channel and (4.3-25) for the soft-decision, AWGN channel. The value of cd is given in the 
above table. When jammer-state information (JSI) is available Peterson et al. [15] have shown that (4.3-24) 
and (4.3-26) remain valid with the appropriate calculation of Pd. Peterson et al. [15] have also shown that 
using analysis similar to that used for the binary symmetric channel, when JSI is available, Pd must be 
replaced with Pjd. 
 
 
4.5.3.1 SFH/DPSK BER Performance Convolutional Code in Optimal Tone Jamming 
 
In this section the bit error rate performance of an SFH/DPSK modulation scheme with optimal tone 
mming utilizing Viterbi decoding of a rate 1/2 K=7 convolutional code will be assessed for hard-decision 
decoding. The methodology applies to any convolutional code in which the c  values are known.  
The BER
d values given in 
able 4.5-2 (or elsewhere) and the value of Pd given by (4.2-79) or (4.2-80) according to whether df is even 
or odd, and evaluation of the symbol error probability, p, from (3.6-22). Since the code rate is 1/2 the symbol 
error rate, the probability is given by  
 
ja
d
 performance is based on the upper bound given in (4.3-26) with the c
 
T
                    0.5                   
< 2
1
                       
                    2
<
                        0                      
b
b
p
X
X W/R
X
W/R
X


 
(4.5-5) 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           259 
 
 
The convolutional code selected is a rate 1/2 K=7 code having the octal representation of the two 
code generators as (171,133), shown in Figure 4.5-4. The binary equivalent of the octal is given by 
(1111001,1011011). Figure 4.4-12 depicts the convolutional encoder, based on the tap connections to the 
decoder. The cd values are the entries given in Table 4.5-2. Using (4.5-5) in (4.2-79), since df is even, 
produces the bit error rate performance result illustrated in Figure 4.5-5, for the case that W/Rb=1,000. 
 
Encoded
output
+
+
Input
Encoded
bits
output
+
+
Input
onvolutional encoder with (171,133) code generators. 
bits
 
 
igure 4.5-4 Rate 1/22 c
F
 
 
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
Coded case
Uncoded case
(P/J)(W/Rb)
Bit error probability
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
1 10 8
1 10 7
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
Coded case
Uncoded case
(P/J)(W/Rb)
Bit error probability
 
 
Figure 4.5-5 Bit error probability for SFH/DPSK modulation with (171,133) convolutional code with K = 7 and Rc = 1/2 and the 
uncoded case for comparison. 
 
.5.4 Hard- and Soft-Decision FFH/MFSK with Repeat Coding BER Performance 
4
 
Repeat coding (RC), in which the same symbol is transmitted numerous times, is not very effective for the 
AWGN channel. However significant gains can be achieved with its use in a FFH/(orthogonal)MFSK 
modulation system. The area of repeat coding has been studied extensively in [15, 49–56]. It is to be noted 
that repeat coding and time diversity are the same. The fact that there are many references in this area reflects 
the fact that high-quality anti-jam performance, with reasonable hardware designs, can be obtained with this 
coding/modulation scheme. In this section worst-case two-state partial band jamming is assumed.  
 
Consider a spread spectrum communication link that uses orthogonal MFSK modulation with fast 
frequency hopping. The approach in this section follows Peterson et al. [15]. As was discussed in Section 
3.3.5 for FFH/MFSK, each MFSK tone is divided up into L chips, and each chip is transmitted with a 
different FH frequency. This is known as L state diversity. Thus the FFH rate is L times the MFSK symbol 
rate. Let the uncoded MFSK symbol rate be Rs and the chip rate be Rch so that Rch = LRs. It is assumed that  

 260                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
the jammer is intelligent in that it knows how much jamming power is needed to transmit over a particular 
 highest possible chip error rate probability. It 
 assumed that an interleaver is employed in the link and the assumption is made that all chip errors are 
onsidered to be statistically independent from each other.  
 
Figure 4.5-6 illustrates the M different tones that are repeated over L times. The next MFSK symbol 
is also repeated L times, as are all the MFSK tones. What is not shown in Figure 4.5-6 is the fact that, 
at each chip time a different hop frequency is transmitted for the chip duration, another hop frequency is 
transmitted in the next chip duration, and so on. It is assumed that M = 2k, for k an integer (commonly k = 3). 
The jammer optimized its bandwidth (or duty factor) in the same way it would if uncoded FFH/MFSK were 
being utilized with a symbol rate of LRs.  
 
bandwidth or over a particular time slot in order to provide the
is
c
1    2    3    . . .                                           L
Chip number:
1
2
3
.
1    2    3    . . .                                           L
Chip number:
ry tones
.
e M-a
.
Th
M
1    2    3    . . .                                           L
Chip number:
1
2
3
.
ry tones
he frequency hopping is removed prior to the 
emodul
 
.
e M-a
.
Th
M
 
 
Figure 4.5-6 Transmitted MFSK tones for FFH/MFSK modulation with repeat coding (M = 2k). 
 
 
 
The receiver dehops the frequency-hopping spread spectrum modulation, leaving the FSK 
modulation. The resulting dehopped signal plus interference is input to the MFSK demodulator, with the 
filters being matched to the chip duration. Figure 4.5-7 illustrates the demodulator.  
 
 
4.5.4.1 Hard-Decision BER Performance of FFH/MFSK with RC Without JSI  
 
The demodulator is composed of a bank of M noncoherent demodulators, with one detector pair for each of 
the M possible MFSK tones as shown in Figure 4.5-7. T
d
ation process. 
For each chip time, j, (j =1, 2,… L), there is a noncoherent detector output denoted by eij. For the  
i-th symbol and the j-th chip, these outputs can be processed in a number of ways, a few of which will be 
discussed here. The simplest processing involves making a hard decision of the MFSK symbol for each 
demodulated chip. From Problem 9 note that the relationship between the MFSK symbol error rate and the 
bit error rate [57] is given by 
 
/ 2
1
s
b
M
PE
PE
M








 
(4.5-6) 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           261 
+


1
1
2 cos
t




0
.
c
T
dt


2
.


1
1
2 sin
t




0
.
c
T
dt


2
.
+


1
2 cos
Mt




0
.
c
T
dt


2
.


1
2 sin
Mt




0
.
c
T
dt


2
.
e1(j)
eM(j)
M
M
M
M
M
FFH(t)
y(t)
+


1
1
2 cos
t




0
.
c
T
dt

0
.
c
T
dt


2
.
2
.
e1(j)


1
1
2 sin
t




0
.
c
T
dt

0
.
c
T
dt


2
.
2
.
+


1
2 cos
Mt




0
.
c
T
dt

0
.
c
T
dt


2
.
2
.


1
2 sin
Mt



.
c
T
dt

0 .
c
T
dt

0

2
.
2
.
eM(j)
M
M
M
M
M
y(t)
FFH(t)
 
ure 4.5-
g, and using (4.5-6) and  
.3-51), the chip error probability becomes 
 
Fig
7 MFSK demodulation for the FFH/MFSK SS modulation (j = 1, 2, …L). 
 
 
Also noting that the bit energy is reduced by the factor L due to the repeat codin
(3
 
0
0
0
2(
1)
 
                                   
/
(
/
c
b
J
b
Lc
M
P
E
N
L E
N



 
0
2
0
)
/
J
n
J
M
E
N







 
nd for every one of the eight frequencies. The decoding rule that is used by the 
ceiver is to choose the decoder output symbol frequency (which frequency was sent) as the frequency with 
e greatest number of detects over the L (L = 10 in this case) chips within the M (eight in this case) 
equencies. Note that in the example of Figure 4.5-8, frequenc number 7 has the most detects. No
 
bility of received chip error probability. Denote by Pe the probability that there is no chip error, so 
at a correct entry occurs in the tone number versus chip number decoding matrix of Figure 4.5-8. 
 
 
0
0
0
0
1
1
         
( 1)
exp
     
/
(
/
)
b
M
n
b
b
J
b
J
M
kE
n
E
N
L E
N
n
M
LN
n
















 
(4.5-7) 
In (4.5-7) c0 and Eb/N0J are obtained from Table 3.3-1.  
 
The receiver generates an output sequence of L chips for each information symbol (1 thru M). One 
realization of the outcomes for L chips is illustrated in Figure 4.5-8. The dots indicate one possible detected 
sequence for each chip time a
re
th
fr
y 
te that Pc
is the proba
th
Chip number (L = 10)
1    2    3 …
10
Frequency number (M=8)
1
2
3
.
.
.
8
Chip number (L = 10)
1    2    3 …
10
Frequency number (M=8)
1
2
3
.
.
.
8
Chip number (L = 10)
1    2    3 …
10
Frequency number (M=8)
1
2
3
.
.
.
8
 
 
Figure 4.5-8 One possible realization of a chip detect. 

 262                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
Thus 
 
1
e
c
p
P

 
(4.5-8) 
 
Further the probability of n entries in the correct row and column of the decoding matrix is expressed by the 
following expression 
 
 
n
( )
(1
)
n
L
e
e
L
PC n
p
p
n









 
(4.5-9) 
 
 
Note that a symbol error occurs when the number of entries in some incorrect row of the decoding 
matrix exceeds the number of entries in the correct row of the decoding matrix. Note that a symbol error may 
be made in the case that the number of entries in the incorrect row equals the number in the correct row of 
the decoding matrix. Let 
m n
P
 denote the probability of a symbol error, given that there are n entries in the 
correct row of the decoding matrix.  
 
Under the condition that there are n entries in the correct row, there are L–1 en
n all of the 
correct rows. Considering the decoding matrix, there are (M–1)L incorrect positions in the ecoding matrix, 
s in the correct row. Consequently there 
re a total of (M–1)(L–n) incorrect positions in the decoding matrix, which contains L–1 entries. It can be 
tries i
d
in
in which (M–1)n do not contain entries since there are only n entrie
a
shown that the probability of n entries in a block that has L–n elements, given that the total entries in 
(M–1)(L–n) elements, is given by [15]  
 


(
2)(
)
   
    
(
1)(
)
       
L
n
M
L
n
j
L
n
j
P j n
M
L
n
L
n






















 
ealt with when computing the total symbol error 
robabil
 
(4.5-10) 
 
 
There are two distinct cases that must be d
p
ity. The first one is M = 2 and the second one is M 
4

. First consider the case M = 2, which 
corresponds to FSK modulation. In this case whenever a chip error is made, an entry in the decoding matrix 
appears in the only incorrect row of the decoding matrix. For L an even number the symbol error probability 
is given by 
 
(
/ 2) 1
0
1
( )
( / 2)
2
L
s
n
P
PC n
PC L





 
(4.5-11) 
 
hen L is an odd number, then the symbol error probability is given by 
W
 
(
1)/ 2
0
( )
L
s
n
P
PC n



 
 
(4.5-12) 
 
Equation (4.5-11) is based on the fact that a decoding error always occurs when the correct row has anywhere 
from 0 to (L/2)–1 entries and occurs with probability 1/2 when there are L/2 entries in the correct row. 
Equation (4.5-12) is similar except that it acknowledges the fact that there cannot be L/2 entries in any row 
since L is an odd number.  
 
In the case that M
, the error probability for L even is given by [15] 
 
 
4


 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           263 
( / 2) 1
1
1
 
1
2
j n
1
(0)
(
1)
( )
(
)
(
)
1
L
L
s
n
     
(
1)
( / 2) 2
2 2
PC
M
PC n
P n n
P j n
L L



M
PC L
P






P




 
(4.5-13) 




 the case that L is an odd number the symbol error rate is given by [15] 
 






 
In
 
(
1)/2
1
1
1
n
j n
1
(0)
(
1)
( )
(
)
(
)
2
L
s
L
PC
M
PC n
P n n
P j n








P






 
 
The first term in (4.5-13) accounts for the case that there are no entries in the correct row, hence 
some other incorrect row must have more entries that the correct row. The last term in (4.5-13) accounts for 
the case that there are L/2 en ies in the correct row. Note that an error occurs with probability 1/2 only when 
an incorrect row has L/2 entries. Th


 
(4.5-14) 
tr
e probability of a particular incorrect row that has L/2 entries is 


/ 2
P
L
 and the probability of any one of the (M–1) incorrect rows having L/2 entries is 
/ 2
L


(
1)
/ 2
/ 2
M
P L
L

. The first summation in (4.5-13) is over all the remaining values of n for which errors 
can occur. The term in brackets of this equation is the probability of a particular incorrect row being decoded, 
given n entries in the correct row. The factor of (M–1) in the summation term accounts for the (M–1) 
incorrect rows.  
 
Based on the bit error rate to symbol error rate relationship of (4.5-6) it follows that  
 
2(
1)
b
M
s
P
P
M







 
 
 
 be noted that for M large 
(4.5-15) 
It is to
(1/ 2)
b
s
P
P

. 
 
 
4.5.4.2 Hard-Decision BER Performance of FFH/MFSK with RC with JSI  
 
The analysis associated with having jammer side information (JSI) is very complicated. This section follows 
Peterson et al. [15] and Stark [18]. In order to render a solution only FSK (M = 2) will be considered here, so 
at the results of Section 4.2.4.2 can be utilized. Similar to the assum
z = (z1, z2, z3,…zL) and the binary symmetric channel have error probabilities of p0 and p1 corresponding to 
e jammer states 0 and 1 which are known to the receiver. The time diversity, or L-repeat code, is composed 
1)). Clearly the Hamming 
istance between the two words is L. Recall Section 4.2.4 provides bounds on the average block code bit 
ror probability for any linear binary block code. Those bounds can be applied to the L-re
 
iscussed here. Denote the hard-decision output vector y by
 = (y1, y2, y3,… yL) in which the
 
. From (4.2-61) the block decoder determines the weighted Hamming distance 
th
ptions of Section 4.2.4 the jammer state 
th
of two code words (i.e., the all zero word C0 = (0,0,0,…0) and C1 = (1,1,1,…
d
er
peat code
d
 y
 yi satisfy
{0,1}
iy 
 
 
0
1
0
1
ln{ (
, )
ln
ln
1
1
m
p
p
p
C
d
d
p
p




0
1













y
z
 
(4.5-16) 
 
he hard-decision out
 vector y and each of the two code words. It estim
b
word is th
etween t
put
ates that the received code 
e code word in which the weighted Hamming distance (4.5-16) is the largest. Recall that in (4.5-16) 
d0 is the Hamming distance between y and Cm for the symbols of the code that are not jammed, and d1 is the 
Hamming distance between y and Cm for the symbols of the code that are jammed. Note that for this trivial 

 264                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
code, the word error rate and the bit error rate are the same. The transition probabilities in (4.5-16) have the 
following meaning. The transition probability p0 is based on assuming that only thermal noise is present, so 
at the BSC transition probability for a chip is given by 
 
 
th
0
0
2
b
E
p
Q
N L









 
(4.5-17) 
here N0 is the one-sided noise spectral density of thermal noise. The transition probability p1 for a chip is 
ased on assuming that thermal noise plus jamming is present, so that its value is gi en by 
 
w
b
v
 
 
1
0
0
(
)
J
p
Q
N
N
L








 
where N0J is the jammer spectral density. The bit error rate bound of 
2
b
E

 
(4.5-18) 
 
(4.2-109) simplifies to  
 
( )
( , )
PE
P
L
b
Jd



 
(4.5-19) 
where  is the fraction of the band that is jammed, and there is only one term in the series of 
 
(4.2-109). Note 
that d(0,1) = L in this case of repeat coding, and there is only one term left in the series. Furthermore, since 
there is only one term in the union bound of (4.2-109), it then becomes equality, rather than a bound. The bit 
rror pro
e
bability can be evaluated from (4.2-107), which in this case becomes 
 
 
[ ,
]
Jd
n
0
( , )
(1
)
Jd
Jd
L
n
L
Jd
n
Jd
L
w
Jd
P
L
n














PE
L n
 
(4.5-20) 
 
where PEw[L, nJd] is evaluated from
), a
( ,
)
(
', )
w
Jd
w
PE
L n
P m
m


z
 (4.2-102
nd using 
 produces 
0
J
 
  
 
1
0
1
1
0
1
0
1
1
0
0
0
0
1
( ,
)
(
,
)
(1
)
(1
  
J
w
Jd
d
d
PE
L n
d d
p
p
p
d
d

0)
J
J
n
L n
J
J
n
d
d
L n
d
d
L
n
n
p























 
(4.5-21) 
 
in which d0 and d1 have the same meaning as in (4.2-93). That is 
1
0
(
,
)
1
d d

 if 
( ,
)
Jd
L n



, 
1
0
(
,
)
1/ 2
d d


 if 
( ,
)
Jd
L n



, and 
1
0
(
,
)
0
d d


 if 
( ,
)
Jd
L n



. Further  and 
( ,
)
Jd
L n

 are defined 
by 
 
 
0
1
0
1
0
1
ln
ln
1
1
p
p
d
d
p
p

















 
(4.5-22) 
 
and  
0
1
0
( ,
)
ln
ln
2
1
2
1
Jd
Jd
Jd
L
n
p
n
p
L n
p
















 
1p


 
(4.5-23) 
 
The bit error rate probability may be determined from the use of (4.5-19)–(4.5-23) as a function of 
 
the jammer parameter . The dependence on  simplifies if one assumes that  is optimized for each SNR, 
and recall that the optimum value of is obtained from 
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           265 
 
0
0
(
/
)
opt
b
J
y
E
N


 
(4.5-24) 
 
where y0 is found in Table 3.3-1 of Chapter 3. In the case of the repeat code, with the assumption that the 
mmer operates on each chip, Eb is replaced with the chip energy (i.e., Eb/L for each repetition of
 
code). 
ow consider the L-repeat code for the case of FFH/MFSK modulation with soft-decision decoding and 
mmer state information z = (z1, z2, z3,…zL) with worst-case parti
soft decision SFH/MFSK demodulator of Figure 4.5-2 has an output of the vector y, where  
ja
 the repeat
 
 
4.5.4.3 Soft-Decision BER Performance of FFH/MFSK with RC and with JSI 
 
N
ja
al band or a worst-case pulsed jammer. The 
 
 
( (1), (2), (3)
( ))
L

y
e
e
e
...e
 
(4.5-25) 
nd e(k) is expressed by 
 
a
 
 
1
2
3
( )
( ( ),
( ),
( )...
( ))
M
k
e k e k e k
e
k

e
 
(4.5-26) 
 
Hence y is a vector of L vectors, each one having M components, corresponding to the M FSK frequencies. 
Hence ej(k) is the j-th frequency output at the k-th chip time. Given the channel state information vector z, 
nd y, the decoder’s function is to estimate the transmitted code word. This problem
a
n
 has been treated by a 
umber of authors [52, 58–64]. These analyses are beyond the scope of this book; however, the results will 
e summarized in what follows. The results indicated here are based on [15
assumes that the system is operating at very high SNR so that the thermal noise can be neglected. Thus if any 
f the L chips are detected without jamming, the decoder is able to make a perfect decision, in the sense that 
nnel state information vector
ced by the 
ceiver f r each received symbol e(k) and declare zk = 0 if a single energy detector is high and zk = 1 if two 
r more energy detectors are high. Note that the only way this detector can make an error is if all the L 
ceived symb ls are jammed. If all the L received symbols are jammed, the decoder th
summation value 
 
(4.5-27) 
 
all the possible m values m = 1, 2, 3, …M, and outputs the value of m for which m is the largest. The 
act error probability” under these ideal conditions of no thermal noise has been shown to be given by [64] 
b
], [52], and [64]. This analysis 
o
no error is committed. Additionally assume that the cha
 z is produ
o
re
o
re
o
en examines the 
 
1
( )
m
m
k
e
k



for 
ex
L
“
 
0
2
(log (
))
L
J
b
b
LN
P
M
E







 
 
(4
whenever Eb/N0J >, in which  and  are listed in Table 4.5-3 for selected values of L from 2 to 10 and M 
om 2 to 32. It is to be noted that  
 
.5-28) 
 
fr
 
0
b
J
b
E
PW
 with RC without JSI and soft decision with RC and 
ith JSI for the FFH/FSK spread spectrum modulation scheme for worst-case partial-band or pulse noise 
jamming. The dotted curves represent the bit error probability for the case of Section 4.5.4.2 for BSC without 
N
JR

 
(4.5-29) 
 
Figure 4.5-9 illustrates the results for the BSC
w

 266                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
J
eter L. The solid lines represent the bit error 
p
ion and for the case that the thermal noise is 
SI, with repeat coding for various values of repeating param
robability for the case that JSI is available with soft decis
egligible, and is based on Section 4.5.4.2. Clearly the soft-decision case with JSI is superior based on the 
n
curves which are valid for Eb/N0J > , with  being listed in Table 4.5-3.  
 
Table 4.5-3 Parameters for the Exact Bit Error Performance of FFH/MFSK with L-Repeat Code in Worst-Case Partial Band Jamming 
 
7.8
61.6169
8.7
30.2829
9.8
16.5774
11.5
8.8385
14.5
4.6110
10
6.8
24.0142
7.7
0997
14.
8.9
8.0165
10.5
4.4101
13.5
2.3584
8
5.7
10.3502
6.5
6.4370
7.6
3.8464
9.2
2.2245
12.1
5.9
1.8320
7.4
1.1401
10.2
0.6797
4
3.0
2.5937
3.7
1.8198
4.6
1.2565
6.1
0.8265
8.8
0.5210
3

(dB)

1.2392
6
4.1
4.1493
4.8
2.8251
1.4
1.3659
2.0
1.0796
2.8
0.8575
4.2
0.5959
6.7
0.4168
2
(dB)
(dB)
(dB)
(dB)








L
M = 2
M = 4
M = 8
M = 16
M = 32
7.8
61.6169
8.7
30.2829
9.8
16.5774
11.5
8.8385
14.5
4.6110
10
6.8
24.0142
7.7
0997
14.
8.9
8.0165
10.5
4.4101
13.5
2.3584
8
5.7
10.3502
6.5
6.4370
7.6
3.8464
9.2
2.2245
12.1
5.9
1.8320
7.4
1.1401
10.2
0.6797
4
3.0


1.2392
6
4.1
4.1493
4.8
2.8251
2.5937
3.7
1.8198
4.6
1.2565
6.1
0.8265
8.8
0.5210
3
1.4
1.3659
2.0
1.0796
2.8
0.8575
4.2
0.5959
6.7
0.4168
2
(dB)
(dB)
(dB)
(dB)
(dB)








L
M = 2
M = 4
M = 8
M = 16
M = 32
 
 
 
Finally the dashed curve on the left of the figure illustrates the bit error probability performance for 
the case of broadband noise jamming spread over the hopping bandwidth W.  
 
10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
PW/(JRb)
rror Probability
Bit E
L=1
L=3
L=5
L=7
BSC 
no JSI

Soft dec. 
with JSI

L=2
L=4
L=8
BFSK Broadband noise jamming
PW/(JRb)
B
probability
it error 
10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
PW/(JRb)
rror Probability
Bit E
L=1
L=3
L=5
L=7
BSC 
no JSI

Soft dec. 
with JSI

L=2
L=4
L=8
BFSK Broadband noise jamming
PW/(JRb)
10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
PW/(JRb)
rror Probability
Bit E
L=1
L=3
L=5
L=7
BSC 
no JSI

Soft dec. 
with JSI

L=2
L=4
L=8
BFSK Broadband noise jamming
10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50
1 10 6
1 10 5
1 10 4
1 10 3
0.01
0.1
1
PW/(JRb)
rror Probability
Bit E
L=1
L=3
L=5
L=7
BSC 
no JSI

Soft dec. 
with JSI

L=2
L=4
L=8
BFSK Broadband noise jamming
PW/(JRb)
B
probability
 
state partial band jamming or pulsed noise jamming versus the number of repeat coding 
ing or worst-case pulse noise jamming. 
4.6 SHANNON’S CAPACITY THEOREM, THE CHANNEL CODING THEOREM, AND 
      BANDWIDTH EFFICIENCY 
Equation
it error 
 
Figure 4.5-9 FFH/BFSK BER for the two-
alues L for the worst-case partial band jamm
v
 
 
  
 Section (Next) 
We have discussed the performance enhancement that is obtainable with forward error correction coding and 
interleaving, and it has been dramatic in some cases, justifying the use of coding. In this section we will 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           267 
discuss the theorem that provides an existence statement on codes that exist to obtain very good performance, 
and we will discuss the bandwidth efficiency, or spectral efficiency, of the coded and uncoded digital 
transmission systems. This efficiency is useful in comparing combined coding and modulation schemes to 
see how power efficiency trades with bandwidth (BW) efficiency.  
 
 
.6.1 Shannon’s Capacity Theorem 
 
In 1948 Claude Shannon [65] derived the following channel capacity formula for the AWGN channel 
 
 
4


2
log
1
/
    bits/s
C
W
S N


 
(4.6-1) 
 
where W is the channel bandwidth in Hz, S is the signal power in watts, and N is the total noise power of the 
channel in watts.  
 
Example 21 Determine the channel capacity in bits/sec for the case that the channel bandwidth is 20 kHz and 
the signal-to-noise ratio is 30 dB. From (4.6-1) one has that W = 20,000 and S/N = 1,000 so that  
 
 
 
4.6.2 Channel Coding Theorem 
he impo
t error rates as the code length 
. The converse part states that for Rb
 the bit and block error rates are strictly bounded away 
from zero for any coding scheme. Thus the channel coding theorem established strict limits on the maximal 
supportable bit rate of an AWGN channel in terms of bandwidth and power.  
 
 
4.6.3 Bandwidth Efficiency 
 
Bandwidth efficiency, , characterizes how efficiently the communication system uses its allocated 
bandwidth and is defined as 
 
 
20000(9,967)
200,200 Hz
C 

 
 
T
rtance of the channel capacity is best illustrated by the channel coding theorem. This theorem, due 
to Shannon [66], can be broken down into the direct part and the converse part. The direct part states that for 
a bit rate of Rb < C there exists a coding system with arbitrary low block and bi
 
 
C

n
data rate
bits/s
 = 
   
channel bandwidth
Hz
b
R
W








 
(4.6-2) 
 
From the bandwidth efficiency we compute the Shannon Limit as 
 
 


max
2
bits/s
log
1
/
    
Hz
S N









 
(4.6-3) 
ant by the bandwidth W. One common 
efinition is the 99% bandwidth, although 95% has been used also. The average signal power is defined by  
 
n order to use this definition it is necessary to define what is me
I
d
 
 
b
s
kE
S
T

 
(4.6-4) 
 

 268                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
where k is the number of bits per symbol, Eb is the bit energy, and Ts is the symbol time. Let N0 denote the 
one-sided noise spectral density. Hence (4.6-3) can be written as 
 
 
max
2
0
log
1
b
b
R E





 
N W




(4.6-5) 
 Problem 10(a) it is shown that Eb/N0 can be solved for from (4.6-5) to yield the Shannon bound on 
 
In
required signal-to-noise ratio 
 
max
0
max
2
1
b
E
N




 
 
imit is obtained for the case that the bandwidth increases without bound and therefore max 
pproaches zero. From Problem 10(b) it is shown that  
(4.6-6) 
 
The fundamental l
a
 
0
max
max
0
max
ln(
 
2)
1.59 dB
2
1
lim
b
E
N











 
(4.6-7) 
e of signal energy to noise spectral density ratio that is required to reliably 
 APP
ded BPSK with applications of 
rror control coding to satellite or space probe communication links includes the (32,6) Reed Muller bi-
n the 1969 Mariner Mars missions developed at the Jet Propulsion 
0 of 6.4 dB to achieve an error rate of 10–5.  
rocess.  
Voyagers 1 and 2 were launched in 1977 and utilized maximum likelihood Viterbi decoding with 
onsystematic convolutional codes of constraint length 7, with rate 1/2. T
Eb/N0 of 4.5 dB. Although this code was not as powerful as the Pioneer code, it did not suffer long decoding 
elays and was less complex in decoder implementation.  
 on Planetary Standard Systems (CCSDS) 
onsisted of a convolutional K = 7 rate 1/2 code concatenated with a (255,233) Reed-Solomon code that 
eved a BER of 10–5 at Eb/N0 of 2.5 dB.  
Taking advantage of improved technology led to the Big Vite
, rate 1/4 convolutional encoder with a Viterbi decoder. It achieved a BER of 10–5 at Eb/N0 of 1.7 dB. 
 
ER of 10–5 at an Eb/N0 of 0.7 dB! It is to be noted that turbo codes cause a long delay in obtaining the 
ecoded bits. However these delays are not always impor
lower SNRs (below 0.7 dB) where the bit error probability is not very good.  



 
his is the absolute minimum valu
T
transmit information.  
 
 
4.7
LICATIONS OF ERROR CONTROL CODING 
 
 
In this section we will present some codes [67] that have been used in the past and some codes that are being 
onsidered in the future. One of the earliest attempts on improving on unco
c
e
orthogonal codes that were used i
aboratory. It required an Eb/N
L
In 1972 and 1973 the Pioneer spacecraft utilized a constraint length 32, rate 1/2 convolutional 
encoder and achieved a BER of 10-5 at an Eb/N0 of 2.7 dB! A modified sequential decoder of the Fano type 
as utilized in the decoding p
w
n
he BER of 10–5 was obtained at a 
d
 
The concatenated scheme of the Consultative Committee
c
achi
 
rbi Decoder (BVD) which used a K = 
15
 
Globalstar and Iridium satellite networks utilize two convolutional codes, the first a K= 9, rate 1/2 
code and the second a K = 7, rate 3/4 code. 
 
A turbo code with rate 1/2 and information blocks of N16 = 65,536 bits with 18 iterations achieved a
B
d
tant except for voice transmission and operation at 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           269 
 
High-speed memories utilize forward error correcting codes. Many of these codes are constructed 
from Reed-Solomon (RS) or BCH codes over GF(2b). If each sym
b
b
bol of GF(2 ) is expressed as a b-bit byte, 
en RS codes or 2 -ary BCH codes having minimum distance dmin = 4 are called SbEC/DbED codes. 
Magnetic/optical discs utilize RS codes. The CD fo
terleaved RS codes (CIRC), which is a combination of two
dmin = 5 over GF(28). The information sequence is first encoded with a (28,24) code and then by a (32,28) 
anese language, which has ideograms called Kanji and the occurrence of even 
ne error in the character may make the text incomprehensible. For the stated reasons a (273,191) code 
hortened to a (272,190) was selected to fit the data 
ansmission. 
For mobile communications Global System for Mobile Communications (GSM) utilizes a K = 5, 
-95) is based on an outer convolutional code that has 
 K = 9 and rate 1/3 and an inner 64-ary orthogonal modulation scheme.  
CRC codes are often used in applications including CRC-4, CRC-7
RC-CCITT, CRC-SDLC, CRC-24, and CRC-32 (three distinct type
applications include, (1) the use of CRCs in disk drives: each block of data (commonly 512 bytes) is 
protected by a CRC code, so that bit errors in the block are protected, and (2) CRCs are used in data 
etworks. In a data network each packet of data is terminated with check bits of the CRC. In both 
efects in the drive, and burst errors are likely in networks due to noise bursts in 
ommunication links. 
 of codes used in practice but was not meant to 
n studying most communication systems, 
References 
[3] 
W. Peterson and E. Weldon, Error-Correction Codes, 2nd ed., Cambridge, MA: MIT Press, 1972. 
 
[4] 
R. F. Blahut, Theory and Practice of Error Control Codes, Reading, MA: Addison-Wesley, 1983. 
th
 
rmat uses a coding system called cross-
in
 shortened RS codes of minimum distance  
code. In addition CIRC utilizes a CRC code. 
 
The need for a powerful code arose in the use of FM multiplexed digital audio broadcasting when it 
was desired to transmit the Jap
o
s
format of the teletext for digital audio/video 
tr
 
rate 1/2 nonsystematic code for speech coding. It is to be noted that GSM utilizes frequency hopping as part 
of its communication system. Other FEC schemes include rate 1/2, 1/3, and 1/6.  
 
The FEC used in the CDMA mobile system (IS
a
, CRC-8, CRC-12, CRC-ANSI, 
C
s). In particular two important 
n
applications the CRCs were selected for their burst error detecting capabilities. In addition to single bit errors 
they can detect multiple bit errors that are clustered together within the disk or block. Burst errors are likely 
 disk drives due to d
in
c
This sampling was meant to give a flavor of the type
sing. Further examples can be noted i
be all encompas
communication textbooks, or coding textbooks.  
 
4.8 SUMMARY 
 
This chapter dealt with bit error rate performance with various types of jammers and various types of coding 
and interleaving. The various types of jammers useful to jam the signal were presented. First interleavers 
were discussed, including the various types that have been used in practice. Then linear block coding was 
presented along with some important properties of linear block codes. Following this decoding rules were 
discussed with and without jammer side information, including both hard and soft decisions. Word and bit 
error probability bounds were then discussed. Block codes were followed by convolutional codes. The trellis 
diagram for convolutional codes was presented along with a discussion of the Viterbi decoding algorithm. 
Iteratively decoded codes, such as the turbo code, were then discussed. Then a number of important codes 
used in applications, such as the Reed-Solomon, BCH, CRC, and convolutional codes, were presented. Next 
BER performance for various codes and jamming environments with and without JSI being available were 
analyzed with their performance plotted.  
 
The hope is that the student will have gained some understanding of how important channel coding 
is and how it greatly improves the BER of properly designed codes.  
 
 
 
[1] 
G. Clark and J. Cain, Error-Correction Coding for Digital Communications, New York and London: Plenum Press, 1981. 
 
[2] 
S. Lin and D. Costello, Error Control Coding Fundamentals and Applications, Englewood Cliffs, NJ: Prentice-Hall: 1983. 
 

 270                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
[5] 
L. Hanzo, C. H. Wong, and M. S. Yee, Adaptive Wireless Transceivers Turbo-Coded, Turbo-Equalized and Space-Time Coded 
TDMA, CDMA, and OFDM Systems, New York: IEEE Press and John Wiley & Sons, 2002. 
 
[6
. Olsen, “A Hybrid Interleaving Scheme That Enables Packet Switching on Multiple-Access Radio Communication 
Channels,” IEEE Trans. on Communications, Vol. 47, No. 12, December 1999. 
 
[7] 
S. Benedetto, D. Divsalar, G. Montorsi, and Pollara, “Serial Concatenation of Interleaved Codes: Performance Analysis, Design, 
and Iterative Decoding,” IEEE Trans. on Informatio
] 
D. P
tober 1971, pp. 772–781. 
& Sons, Chapter 5, 2002. 
York: Wiley-Interscience, John-Wiley & Sons, 1982. 
unication Systems, 3rd ed., New York: John Wiley & Sons, Chapter 11, 1994. 
269. 
7] L. R. Bahl, J. Cocke, F. Jelinek, and J. Raviv, “Optimal Decoding of Linear Codes for Minimizing Symbol Error Rate,” IEEE 
Trans. on Information Theory, March 1974, pp. 284–28
 
[28] H. Ma and J. K. Wolf, “On Tail Biting Convolutional Codes,” 
EE Trans. on Communications, Vol. COM-34, February 1986. 
9] S. Crozier, A. Hunt, K. Gracie, and J. Lodge, “Performance and Complexity Comparison of Block Turbo-Codes, Hyper-Codes, 
rentice-Hall, 1987. 
 2, No. 4, 1966, pp. 13–25. 
n Theory, Vol. 44, No. 3, May 1998, pp. 909–926. 
 
[8] 
A. S. Barbulescu and S. S. Pietrobon, “Terminating the Trellis of Turbo-Codes in the Same State,” Electronics Letters, Vol. 31, 
issue 1, 1995, pp. 22–23. 
 
[9] 
G. D. Forney, “Burst-Error Correction Codes for the Classic Bursty Channel,” IEEE Trans. Communications Technology, Vol. 
COM-19, Oc
 
[10] J. L. Ramsey, “Realization of Optimum Interleavers,” IEEE Trans. on Information Theory, IT-16, May 1970, pp. 338–345. 
 
[11] J. G. Proakis, Digital Communications, 4th ed., New York: McGraw-Hill, 2001. 
 
[12] R. H. Morelos-Zaragoza, The Art of Error Correction Coding, New York: John Wiley 
 
[13] S. Haykin, Communication Systems, 3rd ed., New York: John Wiley & Sons, Chapter 11, 1994.  
 
[14] A. Papoulis, Probability, Random Variables, and Stochastic Processes, New York: 2nd ed., McGraw-Hill, 1984. 
 
[15] R. Peterson, R. Ziemer, and D. Borth, Introduction to Spread Spectrum Communications, Upper Saddle River, NJ: Prentice Hall, 
1995. 
 
[16] A. J. Viterbi and J. Omura, Principles of Digital Communication and Coding, New York: McGraw-Hill, 1979. 
 
[17] J. P. Oldenwalder, Data Communications, Networks, and Systems, 2nd ed., Carmel, IN: Sams, Chapter 10, 1991. 
 
[18] W. E. Stark, “Coding for Frequency-Hopped Spread-Spectrum Communication with Partial-Band Interference: Part II Coded 
Performance,” IEEE Trans. on Communications, Vol. COM-33, October 1985, pp. 1045–1057. 
 
[19] J. K. olmes, Coherent Spread Spectrum Systems, New 
H
 
20] S. Haykin, Comm
[
 
[21]  A. J. Viterbi, “Error Bounds for Convolutional Codes and an Asymptotically Optimum Decoding Algorithm,” IEEE Trans. on 
Information Theory, Vol. IT-13, April 1967, pp. 260–269. 
 
[22]  G. D. Forney, Jr., “The Viterbi Algorithm,” Proc. IEEE Vol. 61, April 1967, pp. 268–278. 
 
[23]  A. J. Viterbi, “Convolutional Codes and Their Performance in Communication Systems,” IEEE Trans. on Communications Tech., 
Vol. COM-19, October 1971, pp. 751–772. 
 
[24] J. A. Heller and I. M. Jacobs, “Viterbi Decoding for Satellite and Space Communication,” IEEE Trans. on Communications, 
Technology, October 1971. 
 
[25] A. J. Viterbi, “Error Bounds for Convolutional Codes and an Asymptotically Optimum Decoding Algorithm,” IEEE Trans. on 
Information Theory, Vol. IT-13, 1967, pp. 260–
 
[26] G. D. Forney, Jr., “The Viterbi Algorithm,” Proc. of the IEEE, Vol. 61, 1973 pp. 268–278.  
 
[2
7. 
IE
 
[2
and Tail-Biting Convolutional Codes,” 19th Symposium on Communications, Kingston, Canada, June 1998, pp. 84–88. 
 
[30] S. Benedetto, E. Bigleri, and V. Castellani, Digital Transmission Theory, Upper Saddle River, NJ: P
 
[31] K. S. Zigangirov, “Some Sequential Decoding Procedures,” Probl. Peredach Inform. (in Russian), Vol.

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           271 
 
[32] J. A. Heller, “Feedback Decoding of Convolutional Codes,” Advances in Communication Systems, Vol. 4, A. J. Viterbi, editor, 
New York: Academic Press, 1975, pp. 261–278. 
 
[33] A. J. Viterbi and I. M. Jacobs, “Advances in Coding and Modulation for Noncoherent Channels Affected by Fading, Partial Band, 
and Multiple-Access Interference,” in Advances in Communication Systems, Vol. 4, A. J. Viterbi, editor, New York: Academic 
Press, 1975. 
6] C. Berrou, A. Glavieux, and P. Thitimashima, “Near Shannon Limit Error-Correcting Coding and Decoding: Turbo Codes,” IEEE 
7]  C. Berrou and A. Glavieux, “Near Optimum Error Correcting Coding and Decoding: Turbo Codes,” IEEE Trans. on 
lel Concatenated Coding Schemes,” IEEE Trans. 
on Information Theory, Vol. 42, 1996, pp. 409–428. 
9]  W. E. Ryan, “A Turbo Code Tutorial,” unpublished paper located on the New Mexico State University Web site, circa 1998. 
0]  J. Hagenauer, E. Offer, and L. Papke, “Iterative Decoding of Binary Block and Convolutional Codes,” IEEE Trans. on 
y,” IEEE Trans. on Information Theory, Vol. IT-28, 1999, pp. 793–799. 
 Codes,” Prob. 
Pered. Inform. Vol. 11, No. 1, 1975, pp. 26–36 (in Russian). 
ation Theory, Vol. IT-27, No. 5, 
September 1981, pp. 533–547. 
5] D. J. C. MacKay and R. M. Neal, “Near Shannon Limit Performance of Low-Density Parity Check Codes,” Electronics Letters, 
g Irregular Low-Density Parity-Check 
Codes,” IEEE Trans. on Information Theory, Vol. 47, No. 2, February 2001, pp. 619–637. 
nvolutional Codes,” Ph.D. Dissertation, University of California, 1970. 
, Vol. COM-33, October 1985, pp. 1045–1057. 
4–133. 
rsity Combining Against Worst Case 
Partial-Band Noise Jamming of Frequency-Hopping MFSK Systems,” IEEE Trans. on Communications, Vol. COM-36, April 
2]  M. K. Simon, J. K. Omura, R. A. Scholtz, and B. K. Levitt, Spread Spectrum Communications, Vols. I, II, and III, Rockville, MD: 
unications, 
Vol. COM-32, May 1984, pp. 574–582. 
 
[34] P. Elias, “Error-Free Coding,” IRE Trans., Vol. PGIT-4, 1954, pp. 29–37. 
 
[35] G. D. Forney, Jr., Concatenated Codes, Cambridge, MA: MIT Press, 1966. 
 
[3
Proc. of the International Conf. on Communications, Geneva, Switzerland, May 1993, pp. 1064–1070. 
 
[3
Communications, Vol. 44, No. 10, October 1996, pp. 1261–1271. 
 
[38] S. Benedetto and G. Montorsi, “Unveiling Turbo Codes: Some Results on Paral
 
[3
 
[4
Information Theory, Vol. 42, March 1996. 
 
[41]  F. Daneshgaran and M. Mondin, “Design of Interleavers for Turbo Codes: Iterative Interleaver Growth Algorithms of Polynomial 
Complexit
 
[42] R. G. Gallager, “Low Density Parity-Check Codes,” IRE Trans. Info. Theory, Vol. 8, No. 1, 1962, pp. 21–28. 
 
[43] V. V. Zyablov and M. S. Pinsker, “Estimation of the Error-Correction Complexity for Gallagher Low-Density
 
[44] R. M. Tanner, “A Recursive Approach to Low Complexity Codes,” IEEE Trans. on Inform
 
[4
Vol. 32, 1966, pp. 1645–1646. 
 
[46]  D. J. C. MacKay, “Good Error-Correcting Codes Based on Very Sparse Matrices,” IEEE Trans. on Information Theory, Vol. 45, 
No. 2, 1996, pp. 399–432. 
 
[47]  T. J. Richardson, M. A. Shokrollahi and R. L. Urbanke, “Design of Capacity-Approachin
 
[48]  J. P. Oldenwalder, “Optimal Decoding of Co
 
[49]  W. E. Stark, “Coding for Frequency-Hopped Spread Spectrum Communications with Partial-Band Interference: Part II Coded 
Performance,” IEEE Trans. on Communications
 
[50]  H. H. Ma and M. A. Poole, “Error-Correcting Codes Against Worst-Case Partial Band Jammer,” IEEE Trans. on 
Communications, Vol. COM-32, February 1984, pp. 12
 
[51]  J. S. Lee, R. H. French, and L. E. Miller, “Error-Correcting Codes and Nonlinear Dive
1988, pp. 471–478. 
 
[5
Computer Science Press, 1985. 
 
[53]  M. B. Pursley, and W. E. Stark, “Performance of Reed-Solomon Coded Frequency-Hop Spread-Spectrum in Partial Band 
Interference,” IEEE Trans. on Communications, Vol. COM-33, August 1985, pp. 858–862. 
 
[54]  D. J. Torrieri, “Frequency Hopping with Multiple Frequency Shift Keying and Hard Decisions,” IEEE Trans. on Comm
 

 272                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
[55]  B. K. Levitt, “Use of Diversity to Improve FH/MFSK Performance in Worst Case Partial Band Noise and Multitone Interference,” 
6] W. E. Stark, “Coding for Frequency-Hopped Spread-Spectrum Communications with Partial-Band Interference: Part I. Capacity 
b, L. D. Baumert, M. F. Easterling, J. J. Stiffler, and A. Viterbi, Digital Communications with Space Applications, 
Englewood Cliffs, NJ: Prentice-Hall, Chapter 7, 1964. 
8] A. J. Viterbi,, “A Robust Ratio-Threshold Technique to Mitigate Tone and Partial Band Jamming in Coded MFSK Systems,” Conf. 
.4-1 to 22.4-5. 
 Decision Receiver,” IEEE 
Trans. on Communications, Vol. COM-32, June 1984, pp. 645–653. 
ysis of BFSK Frequency-Hopping system with Diversity under 
Partial-Band Jamming Interference: Part I. Performance of Square-Law Nonlinear Combining Soft Decision Receiver,” IEEE 
1] B. K. Levitt, “FH/MFSK Signaling with Diversity in Worst-Case Partial-Band Noise,” IEEE Journal of Selected Areas of 
ing,” TRW Internal 
Memorandum, June 1981. 
Bell System Technical Journal, Vol. 27, Part I, pp. 379–423, Part II, 
pp. 623–656. 
bs, Principles of Communication Engineering, New York: Wiley, 1965. 
 1998. 
Selected Bibliography 
da, AB,  
dations of Mobile Radio Engineering, Boca Ratan, FL: CRC Press, Chapter 6, 1993. 
Problems 
1. Using the property that the sum of two linear codes produces a word, show that the minimum 
Conf. Rec. 1982, IEEE Military Communications Conference, October 1982, pp. 28.2-1 to 28.2-5. 
 
[5
and Cutoff Rate,” IEEE Trans. on Communications, Vol. COM-33, October 1985, pp. 1036–1044. 
 
[57]  S. W. Golom
 
[5
Rec., 1982 IEEE Military Communications Conference, October 1982, pp. 22
 
[59] J. S. Lee, R. H. French, and L. E. Miller, “Probability of Error Analysis of BFSK Frequency-Hopping System with Diversity 
Under Partial-Band Jamming Interference: Part I. Performance of Square-Law Linear Combining Soft
 
[60] J. S. Lee, L. E. Miller, and Y. K. Kim, “Probability of Error Anal
Trans. on Communications, Vol. COM-32, December 1984, pp. 1243–1250. 
 
[6
Communications, Vol. SAC-3, September 1985, pp. 622–626. 
 
[62] B. K. Levitt, “FH/MFSK Performance in Multitone Jamming,” IEEE Journal of Selected Areas of Communications, Vol. SAC-3, 
September 1985, pp. 627–643. 
 
[63] C. M. Keller and M. B. Pursley, “Clipped Diversity Combining for Channels with Partial-Band Interference,” IEEE Journal of   
Selected Areas of Communications, Vol. SAC-5, February 1987, pp. 248–260. 
 
[64] B. Trumpis, “On the Optimum Detection of Fast Frequency Hopped MFSK Signals in Worst Case Jamm
 
[65] C. E. Shannon, “A Mathematical Theory of Communication,” 
 
[66]  J. M. Wozencraft and I. M. Jaco
 
[67]  D. J. Costello Jr., J. Hagenauer, H. Imai, and S. B. Wicker, “Applications of Error-Control Coding,” IEEE Trans. on Information 
Theory, Vol. 44, No. 6, October
 
 
 
         J. P. Oldenwalder, Error Control Coding Handbook, Final report, Linkabit Corporation, for the U.S. Air Force, July 15, 1976. 
 
         C. Schlegel, Lecture notes, Winter term 2003, EE 780 on “Error Control Coding,” University of Alberta, Edmonton Cana
         Canada. 
 
         B. Sklar, Digital Communications Fundamentals and Applications, 2nd ed., Englewood Cliffs, NJ: Prentice-Hall, 2000. 
 
         J. K. Wolf, A. M. Michelson, and A. H. Levesque, “On the Probability of Undetected Error for Linear Block Codes,” IEEE Trans.  
        on Communications, Vol. COM-30, No. 2, February 1982. 
 
         J. K. Wolf and R. D. Blackeney II, “An Exact Evaluation of the Probability of Undetected Error for Certain Shortened Binary CRC  
        Codes,” MILCOM 88, 1988, pp. 15.2.1–15.2.6. 
 
     M. D. Yacoub, Foun
    
 
 
 
 
distance is just the smallest nonzero code word weight.  
 

 
                                            Jamming Performance of Coded Spread Spectrum Systems 
 
 
           273 
2. Starting with (4.2-55), which is based on the white Gaussian noise channel, show that an 
equivalent calculation requires that the correlation be maximized; that is, choose the decoded code 
word based on 
1
ˆ
max
{
}
n
l
k
mk
m
k
C
y c



 where the cmk take on the values of 1
. 
 
3. Consider the encoder shown here. It has parameters K = 3, k = 1, and n = 3 and is a rate 1/3 
convolutional code. Determine the tree diagram, the trellis diagram, and the state diagram, for this 
encoder. What is the output coded bits when an all-ones input occurs? 
 
+
Input
bits
+
Output 
encoded 
bits
Input
+
bits
+
Output 
encoded 
bits
 
 
Figure for Problem 5 illustrating a rate 1/3, constraint length 3, convolutional code. 
 
 
4. Show that the transfer function for the encoder of Figure 4.3-8 is given by 
 
 
5
ND
 
T( ,
)
D N 1 2ND

(P4-1) 
5. Consider the encoder of Example 14, shown in Figure 4.3-2, and consider the input coded 
sequence given by
 
 1100010000.... Show that the Viterbi algorithm, for the hard-decision channel, 
does not correctly decode the correct path in this case. 
7. Show that when one divides x3+x+1 into b x5+b x4+b x3 that the quotient is given by 
2
) . Hint: 
9. Establish the relationship for orthogonal MFSK modulation between the bit error rate and the 
gonal coding, since 
all the errors are equally probable, the expected number of bits in error when a k-bit (M = 2k) code 
word has been detected incorrectly is g
 
6. Construct the addition and multiplication tables for the GF(5) field using the elements {0,1,2,3,4}. 
 
2
1
0
2
(
)
b x
b x
b
b



 and the remainder is given by 
2
(
)
(
)
(
b
b x
b
b
b x
b
b






2
1
0
1
2
0
1
2
0
2
Order the polynomials starting on the left with the highest order in x and perform the long division. 
 
8. Show that 1 + x + x3 divides x7–1. 
 
symbol error rate, (4.5-6), by showing the following [57]. Show that for ortho
iven by 
 

 274                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
1
1
1
j
j

(2
)
2
1
k
k
k
k
i
k
i
k
i
k









 
(P4-2) 



 
 
Thus conclude that the conditional probability that a given bit is in error when the k-bit word within 
which it was encoded is incorrect is given by 
 
1
1
1
(2
)
2
(
/ 2)
2
1
2
1
(
1)
k
k
k
k
k
M
k
M












 
(P4-3) 
 
Finally conclude that the word error probability is related to the bit error probability by  
 
 
(
/ 2)
(
1)
b
s
M
PE
P
M


E  
(P4-4) 
 
10. Solve for the values of ai for i = 1, 2, and 3, from the values of the bi in (4.2-37) by combining the 
three equations in three unknowns 
 
2
 
1
0
1
b
a
a
0
0
2
1
b
a
b
a
a

 
(P4-5) 




 

 
                                     275 
CHAPTER 5 
Carrier Tracking Loops and Frequency Synthesizers 
 
 
5.0 INTRODUCTION 
Equation Chapter (Next) Section 1 
This chapter will address carrier-tracking loops for residual carrier signals, as well as for the coherent 
reception of MPSK signals, and it will also address frequency synthesis. The starting point in our discussion 
will be the phase locked loop (PLL). Later, useful forms, such as the Costas loop and the Squaring loop, that 
are applicable to tracking suppressed carrier signals, such as for BPSK signaling, will be discussed. After the 
concept of coherent tracking loops has been presented, a discussion of frequency synthesis will be developed. 
A brief presentation of the following types of synthesizers will then be discussed: (1) digital frequency 
synthesis, (2) direct frequency synthesis, and (3) indirect frequency synthesis. The last portion of this chapter 
will address tracking loops for N >2 for N-phase modulation systems. 
 
 
5.1 TRACKING OF RESIDUAL CARRIER SIGNALS 
 
In many phase modulation schemes the modulation approach is such that there remains a residual line 
spectral component after modulating the signal onto the carrier. For example consider a simple phase 
modulation case in which the phase modulation index is θ . It follows that the transmitted signal is of the 
form 
 
0
( )
2
sin(
( ))
s t
P
t
d t
ω
θ
=
+
 
(5.1-1) 
 
Expanding the sine wave term in terms of both of its components produces the result 
 
 
(
)
0
0
( )
2
sin
cos(
( ))
cos(
)sin(
( ))
s t
P
t
d t
t
d t
ω
θ
ω
θ
=
+
⎡
⎤
⎣
⎦ 
(5.1-2) 
 
Simplifying leads to the following form 
 
 
(
)
0
0
( )
2
cos( )sin
( )sin( )cos(
)
s t
P
t
d t
t
θ
ω
θ
ω
=
+
⎡
⎤
⎣
⎦ 
(5.1-3) 
 
From (5.1-3) it is clear that the transmitted signal is composed of the sum of a BPSK signal, having power 
Psin(  )2, and an unmodulated tone (spectral line) having the power of Pcos(  )2. Thus this latter signal could 
be tracked with a PLL, since it is an unmodulated tone. When 
90
θ =
º, the unmodulated component 
disappears, and the only component would be a BPSK signal (suppressed carrier). Later we will show that it 
is necessary to use a suppressed carrier type of loop carrier tracking loop to track a fully suppressed BPSK 
signal.  
 
 
 
 
 

 276                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
5.2 PLL FOR TRACKING A RESIDUAL CARRIER COMPONENT 
Equation Section (Next) 
In this section we will derive the mathematical basis for the device known as a phase locked loop (PLL). The 
PLL is a device that is capable of tracking the phase of a sinusoidal signal, such as the first signal term in 
(5.1-3).  
 
 
5.2.1 The Likelihood Function for Phase Estimation 
 
The two basic criteria that are used in signal parameter estimation is (1) maximum a posteriori probability 
(MAP) estimation approach and (2) the maximum-likelihood (ML) approach [1]. The signal parameter θ  to 
be estimated is modeled as a random variable and is assumed to have an a priori probability density function 
( )
p θ . Let the received signal be described as  
 
 
(
)
0
( )
( , )
( )
2
cos
( )
y t
s t
n t
P
t
n t
θ
ω
θ
=
+
=
+
+
 
(5.2-1) 
 
where n(t) is a white Gaussian noise process, P is the received signal power, and  0 is the carrier radian 
frequency.  
 
Using an orthonormal series expansion of N orthonormal functions {fn(t)}, y(t) may be represented 
by the N component vector y =(y1, y2,… yN). The ML estimate of θ  is that value of θ  that maximizes 
(
)
p
θ
y
. However the MAP estimate is the estimate of θ  that maximizes the value of the a posteriori 
probability density function 
 
 
(
) ( )
(
)
( )
p
p
p
p
θ
θ
θ
=
y
y
y
 
(5.2-2) 
 
 
Now note that if the variable θ  is assumed to be uniformly distributed over its range of operation, 
and since p(y) does not depend on θ , then maximizing 
(
)
p
θ
y
 and 
(
)
p θ y  lead to the same estimate. In 
our derivation of the optimum estimator it will be assumed that θ  is an unknown constant and the ML 
criterion will be used to obtain the optimum estimate. The time duration of T seconds will be assumed as the 
estimation observation interval.  
 
Now let us consider a time continuous representation of the maximization of 
(
)
p
θ
y
. Since n(t) is 
assumed to be a white Gaussian random process, having a zero mean value, the joint probability density 
function can be written as 
 
 
(
)
(
)
2
2
1
( )
1
(
)
exp
2
2
N
n
n
N
i
y
s
p
θ
θ
σ
πσ
=
⎡
⎤
−
=
−
⎢
⎥
⎢
⎥
⎣
⎦
∑
y
 
(5.2-3) 
 
where yn and sn(θ ) are defined by 
 
 
    
( )
( )
( )
( , )
( )
n
n
T
n
n
T
y
y t f t dt
s
s t
f t dt
θ
θ
=
=
∫
∫
 
(5.2-4) 
 
and T is the integration interval used in the expansion of y(t) and s(t,θ ). The functions fn(t) are orthonormal 
functions having the property 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            277
 
1  for 
( )
( )
0  for 
n
m
T
m
n
f t f
t dt
m
n
=
⎧
= ⎨
≠
⎩
∫
 
(5.2-5) 
 
 
In the limit, as N increases without bound, the series in (5.2-3) can be shown to converge to a 
functional of the form 
 
 
[
]
[
]
2
2
2
1
0
1
1
lim
( )
( )
( , )
2
N
n
n
T
N
i
y
s
y t
s t
dt
N
θ
θ
σ
→∞
=
⎛
⎞
−
=
−
⎜
⎟
⎝
⎠∑
∫
 
(5.2-6) 
 
where N0 is the one-sided noise spectral density of the noise. From (5.2-3) it is clear that maximization of 
(
)
p
θ
y
 is equivalent to maximization of the likelihood function given by 
 
 
{
}
2
0
1
( )
exp
( )
( , )
T y t
s t
dt
N
θ
θ
⎡
⎤
Λ
=
−
−
⎢
⎥
⎣
⎦
∫
 
(5.2-7) 
 
 
5.2.2 The Maximum-Likelihood Estimation of Carrier Phase 
 
Now we are in a position to determine the optimum estimator of the received signal carrier phase,  . To 
proceed, expand (5.2-7) to produce 
 
 
{
}
2
2
0
1
( )
exp
( )
2 ( ) ( , )
( , )
T y t
y t s t
s t
dt
N
θ
θ
θ
⎡
⎤
Λ
=
−
−
+
⎢
⎥
⎣
⎦
∫
 
(5.2-8) 
 
Both the first and third terms do not depend on the value of  . The third integral of the squared signal is 
constant, independent of  . Consequently these terms may be neglected in the search for the optimum value. 
It follows that the likelihood function can be expressed as  
 
 
0
2
( )
exp
( ) ( , )
T
C
y t s t
dt
N
θ
θ
⎡
⎤
Λ
=
⎢
⎥
⎣
⎦
∫
 
(5.2-9) 
 
where C is a fixed constant.  
 
The maximum-likelihood estimate of    which we denote by ˆθ , can be obtained from the log-
likelihood function, since the logarithm is a monotonic function of its argument. Thus it is sufficient to 
consider the log-likelihood function 
 
 
log
0
2
( )
( ) ( , )
T y t s t
dt
N
θ
θ
Λ
=
∫
 
(5.2-10) 
 
Using the definition of s(t, ) from (5.2-1) yields, for the log-likelihood, the functional 
 
 
log
0
0
2
( )
( ) 2
cos(
)
T y t
P
t
dt
N
θ
ω
θ
Λ
=
+
∫
 
(5.2-11) 
 
 
A necessary condition to find the maximum is given by the condition 

 278                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
log
ˆ
( )
0
d
d
θ θ
θ
θ
=
Λ
=
 
(5.2-12) 
 
Differentiating (5.2-11) produces  
 
 
0
ˆ
( )sin(
)
0
T y t
t
dt
ω
θ
+
=
∫
 
(5.2-13) 
 
Expanding (5.2-13) produces  
 
 
0
0
ˆ
ˆ
cos( )
( )sin(
)
sin( )
( )cos(
)
T
T
y t
t dt
y t
t dt
θ
ω
θ
ω
= −
∫
∫
 
(5.2-14) 
 
Solving for the estimate, ˆθ , produces 
 
 
0
1
0
( )sin(
)
ˆ
tan
( )cos(
)
T
T
y t
t dt
y t
t dt
ω
θ
ω
−⎡
⎤
⎢
⎥
= −
⎢
⎥
⎣
⎦
∫
∫
 
(5.2-15) 
 
Thus (5.2-15) is an estimate that requires a pair of quadrature carriers to obtain the received carrier phase 
estimate. However, (5.2-13) suggests that a closed-loop form can be utilized to estimate the carrier phase. 
Figure 5.2-1 illustrates the PLL based on the ML estimate.  
 
0
ˆ
sin(
)
t
ω
θ
+
VCO
(.)
T
dt
∫
y(t)
0
ˆ
sin(
)
t
ω
θ
+
VCO
(.)
T
dt
∫
y(t)
 
 
Figure 5.2-1 The estimate of the phase based on the ML estimate of an unmodulated carrier signal. 
 
 
where VCO stands for a voltage controlled oscillator and the circle with two crossed lines denotes 
multiplication of the two signals that are input to it. 
The upper block denotes a filter that has a bandwidth proportional to the reciprocal of the integration 
time T. In practice the loop filter contains a term that represents integration plus other components. Loop 
filter types will be discussed later in this section.  
 
 
5.2.3 Long Loops and Short Loops  
 
Before we delve into the details of the PLL operation, we shall first define what we mean by a short and a 
long loop structure. The term short loop denotes that there is only one multiplication of the signals, such as is 
shown in Figure 5.2-1. A long loop is a loop that has more than one multiplier. Since all phase locked loops 
can be modeled as short loops, we will confine our study to short loops in what follows. Figure 5.2-2 
illustrates an example of a long loop. 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            279
RF
Ampl.
First
IF
X16
VCO
Loop
filter
(24 MHz)
Predet.
filter
Second
IF
BP
Lim.
Osc.
(10 MHz)
X6
384 MHz
434 MHz
RF
Ampl.
First
IF
First
IF
X16
VCO
Loop
filter
(24 MHz)
Predet.
filter
Second
IF
Second
IF
BP
Lim.
Osc.
(10 MHz)
X6
384 MHz
434 MHz
 
 
Figure 5.2-2 Long loop model of a PLL showing two IFs. 
 
As can be seen in Figure 5.2-2 there are three multiplications, and thus it is a long loop. Almost all 
practical receivers that employ PLLs utilize long loops. Implementation advantages occur with a long loop. It 
is to be noted that it is always possible to find an equivalent short PLL of a long PLL, for the purposes of 
analysis. 
 
 
5.2.4 The Stochastic Differential Equation of Operation 
 
As before, we model the input to the PLL as a sinusoid signal plus thermal noise of the form 
 
 
0
( )
2
sin(
)
( )
y t
P
t
n t
ω
θ
=
+
+
 
(5.2-16) 
 
in which the received power is P (W), the carrier frequency is f0= 0/(2 ) Hz, the carrier phase is θ  radians, 
and the white Gaussian noise process with power spectral density N0/2 W/Hz is represented by n(t). The short 
loop version of a PLL, which we will use as our model, is shown in Figure 5.2-3.  
 
1
0
ˆ
( )
2
cos(
( ))
V t
K
t
t
ω
θ
=
+
VCO
y(t)
Loop
filter
e(t)
Z(t)
Mixer (multiplier)
1
0
ˆ
( )
2
cos(
( ))
V t
K
t
t
ω
θ
=
+
VCO
y(t)
Loop
filter
e(t)
Z(t)
Mixer (multiplier)
 
 
Figure 5.2-3 The basic PLL in its short form as the model to ascertain its equation of operation. 
 
 
In all of the work to follow on tracking loops, only the analog loop model will be discussed. 
However most modern phase lock loops are implemented digitally. The basic concepts can be presented in 
analog form without loss of generality. Because digital PLLs operate much like analog loops, if designed 
properly, they will not be treated separately here. In fact the analog PLL can be viewed as an approximate 
upper bound on the performance of a digital PLL. Of course quantization, aliasing, and other issues must be 
dealt with in a digital phase locked loop design. 

 280                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
It is assumed that the VCO output includes the loop estimate of the carrier phase, ˆθ , which is the 
estimate of the unknown carrier phase,  , at the receiver. The VCO output is modeled as [2, 3] 
 
 
1
0
ˆ
( )
2
cos(
( ))
V t
K
t
t
ω
θ
=
+
 
(5.2-17) 
 
with ˆθ  being the estimate of  , and K1 is the VCO signal rms voltage. See in addition [4–6]. The WGN 
process can be written in terms of its in-phase and quadrature components as  
 
 
(
)
(
)
0
0
( )
2
( )cos
2
( )sin
c
s
n t
n t
t
n t
t
ω
ω
=
+
 
(5.2-18) 
 
The input to the loop filter, which is the product of the input signal plus noise and the VCO signal, provides 
the input to the loop filter. Thus  
 
 
{
}
1
0
'
'
1
1
'
1
0
ˆ
ˆ
( )
( ) ( )
sin(
( ))
sin(2
( )
ˆ
ˆ
                             
( )cos( ( ))
( )sin( ( ))
ˆ
                             
( )sin(2
( ))
                             
m
m
c
s
s
e t
K V t y t
PK K
t
t
t
K n t
t
K n t
t
K n t
t
t
θ
θ
ω
θ
θ
θ
θ
ω
θ
=
=
−
+
+
+
+
−
+
+
+
'
1
0
ˆ
( )cos(2
( ))
c
K n t
t
t
ω
θ
+
 
(5.2-19) 
 
where 
'
1
1
m
K
K K
=
 and Km is the multiplier gain. The product 
1
m
PK K = K   is the phase detector gain and 
has dimensions of V/rad. Typically the mixer and the loop filter cannot respond significantly to the sum   
  
frequency terms in (5.2-19) so that (5.2-19) can be well approximated by  
 
 
1
1
1
ˆ
( )
sin(
( ))
ˆ
ˆ
        
( )cos( ( ))
( )sin( ( ))
m
m
c
m
s
e t
PK K
t
K K n t
t
K K n t
t
θ
θ
θ
θ
=
−
+
−
 
(5.2-20) 
 
Oftentimes in actual loop design a low-pass filter, which is wide compared to the loop noise bandwidth, is 
used to suppress the sum frequency. Normally it is chosen to have negligible effect on the loop response. 
Denoting the noise term as n’(t) as the sum of the two noise terms in (5.2-20) allows us to write 
 
 
'
1
1
( )
sin( ( ))
( )
m
m
e t
PK K
t
K K n t
φ
=
+
 
(5.2-21) 
 
where we have denoted the phase error as 
ˆ
( )
( )
t
t
φ
θ
θ
=
−
. It can be shown [7] that n’(t) has the same 
statistics as nc(t) or ns(t), and therefore has two-sided noise spectral density of N0/2, as long as ( )t
φ
 is slowly 
varying compared to the noise process bandwidth.  
 
The VCO has as an output phase estimate of the form 
 
 
0
ˆ( )
( )
t
vco
t
K
Z u du
θ
= ∫
 
(5.2-22) 
 
where Z(t) is the output of the loop filter, and Kvco is the VCO gain constant which has dimensions of radian 
frequency/V. Equation (5.2-22) can be conveniently represented in operator notation as 
 
 
ˆ( )
( )
vco
K
t
Z t
s
θ
=
 
(5.2-23) 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            281
where s is the La Place transform variable, and by comparing (5.2-22) with (5.2-23) it can be seen that 
(1/s)(g(t)) denotes integration of g(t) and sg(t) denotes the derivative of g(t); that is, 
( )
dg t
dt
. Using operator 
notation the signal out of the loop filter is given by 
 
 
'
1
( )
( ) ( )
( )
sin( ( ))
( )
m
Z t
F s e t
F s K K
P
t
n t
φ
⎡
⎤
=
=
+
⎣
⎦ 
(5.2-24) 
 
From (5.2-23) it follows that 
 
 
'
1
ˆ( )
( )
( )
sin( ( ))
( )
vco
vco
m
K
K
t
Z t
F s K K
P
t
n t
s
s
θ
φ
⎡
⎤
=
=
+
⎣
⎦ 
(5.2-25) 
 
Now since ˆ( )
( )
t
t
θ
θ
φ
=
−
 it follows that (5.2-25) can be written as 
 
 
'
( )
( )
sin( ( ))
( )
K
t
F s
P
t
n t
s
θ
φ
φ
⎡
⎤
=
+
+
⎣
⎦ 
(5.2-26) 
 
where 
1
m
vco
K
K K K
=
is the open loop gain and has dimensions of radian frequency (rad/s). Equation 
(5.2-26) is the basic stochastic differential equation of operation. Multiplying both sides of (5.2-26) by s 
produces the equivalent equation  
 
 
'
( )
( )
( )
sin( ( ))
( )
t
t
KF s
P
t
n t
θ
φ
φ
⎡
⎤
=
+
+
⎣
⎦
&
&
 
(5.2-27) 
 
 
The equivalent baseband nonlinear model for this equation is shown in Figure 5.2-4. In this model 
and the previous equation we have allowed θ  to be slowly dependent on time and have denoted it by  (t) to 
account for transient errors. 
 
+
vco
K
s
-
sin(.)
P
'( )
n t
( )t
θ
ˆ( )t
θ
+
-
1
( )
m
K K F s
+
vco
K
s
vco
K
s
-
sin(.)
P
'( )
n t
( )t
θ
ˆ( )t
θ
+
-
1
( )
m
K K F s
 
 
Figure 5.2-4 The baseband PLL nonlinear model. 
 
 
5.2.5 The Linear Model of the PLL with Noise 
 
Now we turn our attention to the linear model of the PLL. In normal operation it is desirable to make sure the 
phase error is small so that demodulation will not induce much degradation to the demodulated bit error rate 

 282                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
(BER). If we assume that the error does not exceed 0.8 rad then the relative error between φ  and sin( )
φ  is no 
greater than 10%. Under this assumption one can write 
 
 
sin( ( ))
( )
t
t
φ
φ
≅
 
(5.2-28) 
 
 
From the basic loop equation, (5.2-26), one has 
 
 
'
( )
( )
( )
( )
( )
K
t
t
F s
P
t
n t
s
θ
φ
φ
⎡
⎤
=
+
+
⎣
⎦ 
(5.2-29) 
 
This can be rewritten as 
 
 
'
( )
( )
( )
( )
( )
s
K
PF s
K
PF s n t
t
t
s
s
P
θ
φ
+
=
+
 
(5.2-30) 
 
Rearranging this equation produces 
 
 
( )
'
( )
( )
( )
( )
( )
n t
s
K
PF s
t
t
s
K
PF s
s
K
PF s
P
φ
θ
=
−
+
+
 
(5.2-31) 
 
Now using the fact that 
ˆ
( )
( )
( )
t
t
t
φ
θ
θ
=
−
 allows us to write (5.2-31) as 
 
 
( ) /
ˆ( )
( )
1
( ) /
PKF s
s
t
t
PKF s
s
θ
θ
=
+
 
(5.2-32) 
 
Thus we see that we can write the output phase estimate in terms of the input phase process via 
 
 
ˆ( )
( ) ( )
t
H s
t
θ
θ
=
 
(5.2-33) 
 
where H(s) is known as the closed-loop transfer function. Let ( )s
ϕ
 denote the La Place transform of  (t)  
and let ˆ( )s
ϕ
 denote the La Place transform of ˆ( )t
θ
. The closed-loop transfer function can be written as  
 
 
ˆ
( ) /
( )
( )
( )
1
( ) /
PKF s
s
s
H s
s
PKF s
s
ϕ
ϕ
=
=
+
 
(5.2-34) 
 
Equation (5.2-31) can be written in terms of H(s) and 1−H(s) using the results of Problem 1, as follows 
 
 
[
]
'( )
( )
1
( )
( )
( ) n t
t
H s
t
H s
P
φ
θ
=
−
−
 
(5.2-35) 
 
If the derivation included transmitter oscillator phase noise  VCO(t) then it is easy to show that (5.2-35) 
generalizes to the form 
 
 
[
]
[
]
'( )
( )
1
( )
( )
( )
1
( )
( )   rad
VCO
n t
t
H s
t
H s
H s
t
P
φ
θ
θ
=
−
−
−
−
 
(5.2-36) 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            283
which is the error process based on a linear model of the PLL. The first term yields the error due to the phase 
process due to relative movement between the receiver and the transmitter, the second term is the effects of 
thermal noise at the input of the PLL, and the last term is the effect of oscillator phase noise of the transmitter 
on the loop error. The linearized PLL baseband model is shown in Figure 5.2-5. 
 
+
vco
K
s
-
sin(.)
P
'( )
n t
( )t
θ
ˆ( )t
θ
+
-
1
( )
m
K K F s
+
vco
K
s
vco
K
s
-
sin(.)
P
'( )
n t
( )t
θ
ˆ( )t
θ
+
-
1
( )
m
K K F s
 
 
Figure 5.2-5 The baseband PLL linear model. 
 
 
5.2.6 The Various Loop Filter Types 
 
So far we have not discussed the loop filter. There are many types of loop filters, designed for many different 
requirements. The first-order phase locked loop occurs when the loop filter is of the form 
 
 
( )
1
F s =  
(5.2-37) 
 
which actually is no filter at all, just a constant. The corresponding closed-loop transfer function (CLTF) is 
given by 
 
 
( )
PK
H s
s
PK
=
+
 
(5.2-38) 
 
The reason that this CLTF is called a first-order loop is because the denominator of the closed-loop transfer 
function is first-order.  
 
There are two basic types of second-order filters that are used as models. The first type of loop filter 
leads to a passive second-order loop and is of the form 
 
 
2
1
1
( )
1
s
F s
s
τ
τ
+
=
+
 
(5.2-39) 
 
The circuit shown in Figure 5.2-6 can implement this loop filter. 
 
R1
R2
C
2
2
1
1
2
(
)
R C
R
R C
τ
τ
=
=
+
R1
R2
C
2
2
1
1
2
(
)
R C
R
R C
τ
τ
=
=
+
 
 
Figure 5.2-6 Loop filter for the passive second-order PLL. 

 284                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
The corresponding CLTF of the passive second-order loop is given by inserting (5.2-39) in (5.2-34) to 
produce 
 
 
2
2
2
1
1
( )
1
(
1/
)
(
/
)
s
H s
PK s
PK s
τ
τ
τ
+
=
+
+
+
 
(5.2-40) 
 
To simplify this notation [3] let 
 
 
2
2
1
2
1
2
2
1
n
n
PK
r
PK
PK
τ
τ
ω
τ
ς
τ
ω
=
=
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
(5.2-41) 
 
Then it is possible to express the CLTF in standard control theory format of the form 
 
 
(
)
2
2
2
2
2
(
/
)
( )
2
n
n
n
n
n
s
PK
H s
s
s
ω ζ
ω
ω
ω ζ
ω
−
+
=
+
+
 
(5.2-42) 
 
where  n is the natural frequency (rad/s) and ς  is the damping factor (no dimensions). 
 
The second type of loop filter, the (ideal) active loop filter, has a transfer function of the form 
 
 
2
1
1
( )
s
F s
s
τ
τ
+
=
 
(5.2-43) 
 
The corresponding CLTF in this case is given by inserting (5.2-43) in (5.2-34) and yields 
 
 
2
2
2
1
1
( )
1
(
/
)
s
H s
s
PK s
τ
τ
τ
+
=
+
+
 
(5.2-44) 
 
An active amplifier of the form [2] shown in Figure 5.2-7 can implement this loop filter. 
The transfer function, expressed in the damping factor,ς , and the natural frequency,
n
ω , is 
expressed by 
 
 
2
2
2
2
( )
2
n
n
n
n
s
H s
s
s
ω ζ
ω
ω ζ
ω
+
=
+
+
 
(5.2-45) 
where 
 
 
2
1
2
1
2
n
PK
PK
ω
τ
τ
ς
τ
=
=
 
(5.2-46) 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            285
Now consider a third-order PLL. Based on the optimum Jaffe-Rechtin optimization for a third-order 
PLL,1 to a frequency ramp (quadratic in phase), yields a loop filter which is of the idealized form 
 
-A
R1
R2
C
2
2
1
1
R C
R C
τ
τ
=
=
-A
-A
R1
R2
C
2
2
1
1
R C
R C
τ
τ
=
=
 
 
Figure 5.2-7 The filter for a second-order (active) PLL. 
 
 
 
3
2
2
2
2
2
( )
n
n
n
s
s
PKF s
s
ω
ω
ω
+
+
=
 
(5.2-47) 
 
From Problem 2, using (5.2-34) for the definition of H(s) produces the closed-loop transfer function  
 
 
3
2
2
3
2
2
3
2
2
( )
2
2
n
n
n
n
n
n
s
s
H s
s
s
s
ω
ω
ω
ω
ω
ω
+
+
=
+
+
+
 
(5.2-48) 
 
For this loop BL = (5/6) n = 5.236fn. This is very similar functionally to the filter discussed in (5.2-47). 
Problem 2 also shows that the response to phase noise is given by 
 
 
6
2
6
6
1
( )
n
f
H f
f
f
−
=
+
 
(5.2-49) 
 
 
An equivalent form of the loop filter, utilizing another set of parameters, is of the form [8] 
 
 
2
2
1
1 2
1
1
( )
2
s
F s
s
s
τ
τ
τ τ
+
=
+
 
(5.2-50) 
 
Since it is not possible to synthesize perfect integrators (all have finite gain), the loop filter of (5.2-50) was 
modified to 
 
 
2
1
1
3
1
1
( )
1
(1
)(
)
s
F s
s
s
s
τ
τ
τ
δ
τ
+
=
+
+
+
+
 
(5.2-51) 
 
This loop filter approximates (5.2-50) except at f = 0 Hz. Note that 1/δ  is assumed to be large number. 
Tausworthe and Crow [8] have used the following loop filter, which is essentially equivalent to (5.2-51) 
 
 
1
2
2
4
1
3
(1
)(1
)
( )
(1
)(1
)
T s
T s
F s
T s
T s
κ κ
+
+
=
+
+
 
(5.2-52) 
 
where [8] 
 
                                                          
1 This method minimizes the mean squared tracking error plus the time integral (0 to ∞) of the transient error squared. 

 286                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
1
1
1
2
3
1
3
2
3
1
2 3
2
4
2
3
3
5
6
2
3
2
2
4
3
4
6
2
2
4
2
2
1
2
2
4
3
1
1
2
2
                         
(
)
/
                     
       
(
)
1
  
1
        
(
)
1
1           
3
T
T
R
R C
T
T
R C
T T
T
R
R C
T
T
T
R C
T T
R
k
T
T
R
τ
τ
δ
τ τ
τ τ
δ
τ
τ δ
τ
δ
τ
κ
τ
δ
κ κ
κ
δ
δ
=
=
+
=
=
=
≅
=
+
+
+
+
=
≅
=
+
=
=
=
+
+
=
≅
5
4
R
R
=
 
(5.2-53) 
 
Figure 5.2-8 illustrates the loop filter model for this third-order PLL. Abramovitch [9] and Cahn [10] have 
discussed other forms of third-order loop filters. 
 
-A
-A
R1
R3
R2
R5
R6
R4
C1
C2
-A
-A
-A
R1
R3
R2
R5
R6
R4
C1
C2
  
 
Figure 5.2-8 One implementation of the third-order loop filter F(s). 
 
 
5.2.7 Transient Response of a Second-Order Loop 
 
Oftentimes it is useful to determine the transient response of a PLL when subject to various dynamical 
Doppler excitations. Let us now consider the often-utilized perfect second-order PLL. Based on (5.2-45) the 
error transfer function, 1−H(s), for this loop can be written as 
 
 
2
2
2
1
( )
2
n
n
s
H s
s
s
ω ζ
ω
−
=
+
+
 
(5.2-54) 
 
This function characterizes the phase error function within the linear region. Equation (5.2-35) characterizes 
the transient phase error response versus time, in terms of the natural frequency (
n
ω ) and the damping factor 
(ζ ), when noise is neglected. Equation (5.2-35) repeated here is given by 
 
 
[
]
( )
1
( )
( )
t
H s
t
φ
θ
=
−
 
(5.2-55) 
 
Now consider the phase error for the perfect second-order PLL with (5.2-54) defining the 1−H(s) function. 
The input phase function is given by 
 
 
2
0
0
0
( )
( )
( )
(1/ 2)
( )
t
u t
tu t
t u t
θ
θ
=
+ Ω
+
Λ
 
(5.2-56) 
 
where the first term (u(t)) denotes a phase step starting at time t = 0 and the phase step has magnitude 
0
θ  in 
rad, the second term (
0
Ω tu(t)) denotes a frequency step of magnitude of 
0
Ω  in rad/s, and the third term 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            287
((1/2)
0
Λ t2u(t)) denotes a frequency ramp 
0
Λ  in rad/s2. Table 5.2-1 illustrates the transient responses for each 
input for a perfect second-order loop with natural frequency  n, and damping factor ζ  [4].  
 
Table 5.2-1 Transient Phase Error for Various Dynamics for the Perfect Second-Order PLL 
 
Frequency Ramp
(rad/s2)
Frequency Step     
(rad/s)
Phase Step
(rad)
Damping
factor
0
θ
0
Ω
1
ζ <
1
ζ =
1
ζ >
(
)
(
)
2
0
2
0
2
cos
1
sin
1
1
n
n
t
n
t
n
t e
t e
ζω
ζω
θ
ζ ω
θ ζ
ζ ω
ζ
−
−
−
−
−
−
(
)
2
0
2
1
sin
1
1
nt
n
n
t
e ζω
ζ ω
ω
ζ
−
⎛
⎞
Ω ⎜
⎟
−
⎜
⎟
−
⎝
⎠
(
)
0 1
nt
nt e ω
θ
ω
−
−
(
)
0
nt
nt e
ω
ω
−
Ω
(
)
(
)
2
0
2
0
2
cosh
1
sinh
1
1
n
n
t
n
t
n
t e
t e
ζω
ζω
θ
ζ
ω
θ ζ
ζ
ω
ζ
−
−
−
−
−
−
(
)
2
0
2
1
sin
1
1
nt
n
n
t
e ζω
ζ
ω
ω
ζ
−
⎛
⎞
Ω ⎜
⎟
−
⎜
⎟
−
⎝
⎠
0
Λ
(
)
(
)
n
n
2
0
0
2
2
2
0
2
2
cos
1
sin
1
1
t
n
n
n
t
n
n
t e
t e
ζω
ζω
ζ ω
ω
ω
ς
ζ ω
ζ ω
−
−
Λ
Λ
−
−
Λ
−
−
−
(
)
0
0
2
2 1
nt
n
n
n
t e ω
ω
ω
ω
−
Λ
Λ
−
+
(
)
(
)
n
n
2
0
0
2
2
2
0
2
2
cosh
1
sinh
1
1
t
n
n
n
t
n
n
t e
t e
ζω
ζω
ζ
ω
ω
ω
ζ
ζ
ω
ζ
ω
−
−
Λ
Λ
−
−
Λ
−
−
−
Frequency Ramp
(rad/s2)
Frequency Step     
(rad/s)
Phase Step
(rad)
Damping
factor
0
θ
0
Ω
1
ζ <
1
ζ =
1
ζ >
(
)
(
)
2
0
2
0
2
cos
1
sin
1
1
n
n
t
n
t
n
t e
t e
ζω
ζω
θ
ζ ω
θ ζ
ζ ω
ζ
−
−
−
−
−
−
(
)
2
0
2
1
sin
1
1
nt
n
n
t
e ζω
ζ ω
ω
ζ
−
⎛
⎞
Ω ⎜
⎟
−
⎜
⎟
−
⎝
⎠
(
)
0 1
nt
nt e ω
θ
ω
−
−
(
)
0
nt
nt e
ω
ω
−
Ω
(
)
(
)
2
0
2
0
2
cosh
1
sinh
1
1
n
n
t
n
t
n
t e
t e
ζω
ζω
θ
ζ
ω
θ ζ
ζ
ω
ζ
−
−
−
−
−
−
(
)
2
0
2
1
sin
1
1
nt
n
n
t
e ζω
ζ
ω
ω
ζ
−
⎛
⎞
Ω ⎜
⎟
−
⎜
⎟
−
⎝
⎠
0
Λ
(
)
(
)
n
n
2
0
0
2
2
2
0
2
2
cos
1
sin
1
1
t
n
n
n
t
n
n
t e
t e
ζω
ζω
ζ ω
ω
ω
ς
ζ ω
ζ ω
−
−
Λ
Λ
−
−
Λ
−
−
−
(
)
0
0
2
2 1
nt
n
n
n
t e ω
ω
ω
ω
−
Λ
Λ
−
+
(
)
(
)
n
n
2
0
0
2
2
2
0
2
2
cosh
1
sinh
1
1
t
n
n
n
t
n
n
t e
t e
ζω
ζω
ζ
ω
ω
ω
ζ
ζ
ω
ζ
ω
−
−
Λ
Λ
−
−
Λ
−
−
−
 
 
 
As can be seen in the table three cases are delineated: (1) the damping factor less than unity, (2) the 
damping factor equal to unity, and (3) the damping factor greater than unity. The results only apply for the 
case that the phase errors remain in the linear region. 
 
 
5.2.8 Steady State Tracking Error When the Phase Error Is Small 
 
Now consider the tracking error that manifests itself when relative motion (dynamics) between the 
transmitter and the receiver occur. Under the assumption that φ (t) is small, the error can be written as 
indicated in (5.2-35), with the noise set equal to zero 
 
 
[
]
( )
1
( )
( )
( )
( )
s
t
H s
t
t
s
PKF s
φ
θ
θ
=
−
=
+
 
(5.2-57) 
 
where 
( )t
φ
 is the error due to the dynamically induced phase modulation 
( )t
θ
. In order to determine the 
long-term (t →∞) tracking error in steady state assume that the phase modulation can be written as, starting 
at time zero, the form 
 
 
2
0
0
0
( )
( )
( )
(1/ 2)
( )
t
u t
tu t
t u t
θ
θ
Λ
=
+ Ω
+
 
(5.2-58) 
 
where, as noted before, u(t) denotes the unit step function starting at time t = 0. Based on this model the 
instantaneous angular frequency at t > 0, is given by 
 
 
( )
0
0
t
+ Λ t
θ
= Ω
g
 
(5.2-59) 

 288                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
where the dots over θ  denote the time derivatives with one dot denoting the first derivative, two dots the 
second derivative, and so on. Clearly the instantaneous angular frequency rate is given by 
 
 
( )
0
t
Λ
θ
=
gg
 
(5.2-60) 
 
The final value theorem of La Place transform theory allows us to compute the steady state phase 
error. Let 
( )s
Φ
 denote the La Place transform of ( )t
φ
. The final value theorem of La Place transform theory 
states that the steady state value of the phase error is given by  
 
 
[
]
0
( )
lim
ss
s
s
s
φ
Φ
→
=
 
(5.2-61) 
 
Therefore, in our case, using (5.2-57) in (5.2-61) produces the result 
 
 
2
0
( )
lim
( )
ss
s
s
s
s
PKF s
φ
Φ
→
⎡
⎤
⎛
⎞
=
⎢
⎥
⎜
⎟
+
⎢
⎥
⎝
⎠
⎣
⎦
 
(5.2-62) 
 
Our three-term polynomial of (5.2-58) is 
 
 
0
0
0
2
3
( )s
s
s
s
θ
Ω
Λ
Φ
=
+
+
 
(5.2-63) 
 
 
Now consider the first-order loop for which the loop filter is of the form F(s) = 1. For this loop we 
must let 
0
0
Λ =
. We have from (5.2-62) and (5.2-63), and using the fact that F(s) = 1 produces 
 
 
2
0
0
0
2
0
lim
ss
s
s
s
s
s
PK
PK
θ
Ω
Ω
φ
→
⎡
⎤
⎛
⎞⎛
⎞
=
+
=
⎢
⎥
⎜
⎟⎜
⎟
+
⎝
⎠
⎝
⎠
⎣
⎦
 
(5.2-64) 
 
when 
0
Λ  is zero and the steady state error is unbounded when 
0
Λ  is not zero.  
 
Now consider the passive second-order PLL case, for which F(s) = (1+ 2s)/(1+ 1s). Again let 
0
0
Λ =
. The steady state phase error in this case is given by 
 
 
2
0
0
0
2
0
2
1
lim
1
1
ss
s
s
s
s
PK
s
s
PK
s
θ
Ω
Ω
φ
τ
τ
→
⎡
⎤
⎛
⎞
⎢
⎥
⎜
⎟⎛
⎞
⎢
⎥
⎜
⎟
=
+
=
⎜
⎟
⎢
⎥
⎜
⎟
⎛
⎞
+
⎝
⎠
+
⎢
⎥
⎜
⎟
⎜
⎟
⎜
⎟
+
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
 
(5.2-65) 
 
which is the same result as for the first-order loop.  
 
Now consider the active second-order PLL case. In this case the loop filter transfer function is given 
by F(s) = (1+ 2s)/( 1s). It therefore follows from (5.2-62) that the steady state phase error is given by 
 
 
2
0
0
0
0
0
2
3
2
0
2
1
lim
1
ss
s
n
s
s
s
s
PK
s
s
PK
s
1
θ
Ω
Λ
Λ τ
Λ
φ
ω
τ
τ
→
⎡
⎤
⎛
⎞
⎢
⎥
⎜
⎟⎛
⎞
⎢
⎥
⎜
⎟
=
+
+
=
=
⎜
⎟
⎢
⎥
⎜
⎟
⎛
⎞
+
⎝
⎠
+
⎢
⎥
⎜
⎟
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
 
(5.2-66) 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            289
 
where  n is the loop natural frequency and will be discussed shortly.  
 
Now consider the Jaffe-Rechtin optimum third-order loop which has a loop filter transfer function 
of the form 
3
2
2
2
( )
(
2
2
) /
n
n
n
PKF s
s
s
s
ω
ω
ω
=
+
+
. Consider an extension to the definition of the dynamic 
phase input process of (5.2-58) to the form 
 
 
2
3
0
0
0
0
( )
( )
( )
(1/ 2)
( )
(1/ 6)
( )
t
u t
tu t
t u t
t u t
θ
θ
ω
Λ
Ψ
=
+
+
+
 
(5.2-67) 
 
where a rate of change of the rate of change term has been added. The corresponding third derivative of the 
phase input function is given by 
 
 
( )t
θ
=
&&&
0
Ψ  
(5.2-68) 
 
The corresponding La Place transform of the phase process is therefore given by 
 
 
0
0
0
0
2
3
4
( )s
s
s
s
s
θ
Ω
Λ
Ψ
Φ
=
+
+
+
 
(5.2-69) 
 
Therefore the steady state phase error follows from (5.2-62) so that 
 
 
2
0
0
0
0
0
2
3
4
3
3
2
2
0
2
lim
2
2
ss
s
n
n
n
n
s
s
s
s
s
s
s
s
s
θ
Ω
Λ
Ψ
Ψ
φ
ω
ω
ω
ω
→
⎡
⎤
⎛
⎞
⎢
⎥
⎜
⎟⎛
⎞
⎢
⎥
⎜
⎟
=
+
+
+
=
⎜
⎟
⎢
⎥
⎜
⎟
⎛
⎞
+
+
⎝
⎠
+
⎢
⎥
⎜
⎟
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
 
(5.2-70) 
 
Thus the ideal third-order loop can track dynamics that have a constant third derivative. 
 
The results for the steady state phase error for the types of loops we have discussed are indicated in 
Table 5.2-2. 
 
Table 5.2-2 Steady State Phase Error for Various Loop Types and Dynamics 
 
First
order
Passive
second order
Active
second order
Jaffee-Rechtin
third order
Type
Dynamics
Step 
0
θ
Step 
0
Ω
Step 
0
Λ
Step 
0
Ψ
0 
0 
0 
0 
0 /(
)
PK
Ω
0 /(
)
PK
Ω
0 
0 
Unbounded
Unbounded
Unbounded
Unbounded
2
0 /
n
Λ
ω
3
0 /
n
Ψ
ω
0 
Unbounded
First
order
Passive
second order
Active
second order
Jaffee-Rechtin
third order
Type
Dynamics
Step 
0
θ
Step 
0
Ω
Step 
0
Λ
Step 
0
Ψ
0 
0 
0 
0 
0 /(
)
PK
Ω
0 /(
)
PK
Ω
0 
0 
Unbounded
Unbounded
Unbounded
Unbounded
2
0 /
n
Λ
ω
3
0 /
n
Ψ
ω
0 
Unbounded
 
 
Thus it is seen that the higher order loops will tolerate higher order dynamics, as would be expected. 
 
 
 
 

 290                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
5.2.9 The Variance of the Linearized PLL Phase Error Due to Thermal Noise 
 
Now consider the effects of thermal noise on the PLL tracking error. As we shall see both relative dynamics 
and thermal noise affect the loop tracking error. From (5.2-36) one has that the phase error due to thermal 
noise is given by 
 
 
'( )
( )
( )
   rad
n t
t
H s
P
φ
= −
 
(5.2-71) 
 
Since we have modeled the thermal noise as white and Gaussian, if we assume that the error is small, we can 
determine that the variance of the phase error is given by 
 
 
2
2
2
0
( 2
)
  rad
2
N
H i
f
df
P
φ
σ
π
∞
−∞
= ∫
 
(5.2-72) 
 
This can be simplified to  
 
 
2
2
0
1
=
     rad
L
N B
P
φ
σ
ρ
=
 
(5.2-73) 
 
where    is the PLL SNR and where BL is the one-sided loop noise bandwidth, and is defined by 
 
 
2
2
( 2
)
   Hz
L
B
H i
f
df
π
∞
−∞
= ∫
 
(5.2-74) 
 
Equation (5.2-73) is a very basic result that states for small errors that the PLL phase error variance in rad2 
due to thermal noise is equal to the inverse signal-to-noise ratio in the one-sided loop noise bandwidth (BL).  
 
Example 1 Suppose that a first-order PLL has a one-sided loop noise bandwidth of 5 Hz, and that the signal 
it is tracking has a received power of –180 dBW, and assume that the white Gaussian noise has spectral 
density of –202 dBW/Hz. Using linear theory estimate the one sigma tracking error in degrees, due to 
thermal noise.  
 
First compute the loop signal-to-noise ratio (SNR) to be  
 
 
(dB)
202 180 10 log(5)
15 dB
ρ
=
−
−
×
=
 
(5.2-75) 
 
Obtaining ρ  in arithmetic terms yields the value 
31.6
ρ =
. Since the inverse of ρ  is the variance of the 
tracking error, compute 
 
 
2
2
1/31.6  rad
φ
σ
=
 
(5.2-76) 
 
Taking the square root and converting to degrees yields 
10.9
φ
σ =
°. 
 
 
In order to tabulate the noise bandwidth for various cases, define the closed-loop transfer function 
H(s) by 
 
 
2
1
0
1
2
1
2
0
1
2
...
( )
...
n
n
n
n
C
C s
C s
C
s
H s
d
d s
d s
d s
−
−
+
+
+
+
=
+
+
+
+
 
(5.2-77) 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            291
 
Lindsey and Simon [11] have compiled closed-loop noise bandwidths up to order 3, and we have added the 
fourth-order case to produce Table 5.2-3. 
 
Now consider the first-order PLL, which has a loop filter transfer function of F(s) = 1, so that 
 
( )
PK
H s
s
PK
=
+
 
(5.2-78) 
 
Table 5.2-3 Loop Noise Bandwidths for First to Fourth-Order Loops 
 
2
0
1
0
1
2
2
L
C
B
d d
=
2
2
0
2
1
0
2
0
1
2
2
2
L
C d
C d
B
d d d
+
=
2
2
2
2
0
1
1
0
2
0
3
0
2
3
3
0
3
1
2
0
3
(
2
)
2
2
(
)
L
C d d
C
C C d d
C d d
B
d d d d
d d
+
−
+
=
−
2
2
2
2
2
2
3
0
1
2
0
3
2
1
3
0
1
4
1
0
2
0
3
4
0
2
3
4
1
4
4
2
2
0
4
1
2
3
1
4
0
3
(
)
(
)
(
2
)
(
)
2
2
(
)
L
C
d d d
d d
C
C C d d d
C
C C d d d
C
d d d
d d
B
d d
d d d
d d
d d
−
+
−
+
−
+
−
=
−
−
2
0
1
0
1
2
2
L
C
B
d d
=
2
2
0
2
1
0
2
0
1
2
2
2
L
C d
C d
B
d d d
+
=
2
2
2
2
0
1
1
0
2
0
3
0
2
3
3
0
3
1
2
0
3
(
2
)
2
2
(
)
L
C d d
C
C C d d
C d d
B
d d d d
d d
+
−
+
=
−
2
2
2
2
2
2
3
0
1
2
0
3
2
1
3
0
1
4
1
0
2
0
3
4
0
2
3
4
1
4
4
2
2
0
4
1
2
3
1
4
0
3
(
)
(
)
(
2
)
(
)
2
2
(
)
L
C
d d d
d d
C
C C d d d
C
C C d d d
C
d d d
d d
B
d d
d d d
d d
d d
−
+
−
+
−
+
−
=
−
−
 
 
 
From Table 5.2-3 it follows that  
 
1
2
2
L
PK
B
=
 
(5.2-79) 
or  
 
 
1
4
L
PK
B
=
 
(5.2-80) 
 
From Problem 3, for the second-order passive loop filter, we have the result 
 
 
2
1
2
2
2
2
1
1
1    
   
4
4
1
L P
r
r
B
for
r
τ
τ
τ
τ
τ
τ
+
+
=
≅
⎛
⎞
+
⎜
⎟
⎝
⎠
 
(5.2-81) 
 
Additionally, for the second-order passive loop filter, from (5.2-40) if we set  
 
 
2
2
1
1
2
    and        
n
n
PK
PK
ς
ω
τ
τ
ω
⎛
⎞
=
+
=
⎜
⎟
⎝
⎠
 
(5.2-82) 
 
then the closed-loop response H(s) can be written as 
 
 
(
)
2
2
2
2
/(
)
( )
2
n
n
n
n
s
PK
H s
s
ςω
ω
ςω
ω
−
=
+
+
 
(5.2-83) 

 292                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
which is in standard control theory notation. Note that the natural frequency,  n, is given by 
 
 
1
n
PK
ω
τ
=
 
(5.2-84) 
 
and the loop damping factor is given by 
 
 
2
1
1
2
PK
PK
ς
τ
τ
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
(5.2-85) 
 
 
Now consider the active second-order PLL. Using Table 5.2-3, one obtains the loop noise 
bandwidth of  
 
2
2
1
4
L A
r
B
τ
+
=
 
(5.2-86) 
 
which is almost the same as the passive filter second-order PLL closed-loop noise bandwidth. 
 
The optimum Jaffe-Rechtin third-order loop noise bandwidth which can be obtained via Table  
5.2-3, using (5.2-48), from Problem 4 yields 
 
 
3
5
6
n
L
B
ω
=
 
(5.2-87) 
 
 
5.2.10 Frequency Response of the Active Filter Second-Order PLL 
 
Now consider the frequency response of the second-order PLL with an active filter. From (5.2-44) and 
making the following substitutions 
 
 
1
2
1
2
n
PK
PK
ω
τ
τ
ς
τ
=
=
 
(5.2-88) 
 
where 
n
ω  is the loop natural frequency in radians/sec and ς  is the loop damping factor (a number without 
units). It is shown in Problem 5 that the closed-loop transfer function, H(s), can be written as  
 
 
2
2
2
2
( )
2
n
n
n
n
s
H s
s
s
ω ς
ω
ω ς
ω
+
=
+
+
 
(5.2-89) 
 
and it follows that 
 
 
2
2
2
1
( )
2
n
n
s
H s
s
s
ω ς
ω
−
=
+
+
 
(5.2-90) 
 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            293
Letting 
2
s
i
f
π
=
 in (5.2-89) produces the responses for the case 
0.707
ς =
 
 
 
2
2
4
4
2
4
4
1
2(
/
)
( )
1 (
/
)
1
( )
n
n
n
f
f
H f
f
f
f
H s
f
f
+
=
+
−
=
+
 
(5.2-91) 
 
Both H(f) and 1−H(f), for the second-order ideal filter PLL, with   = 0.707, are plotted in Figure 5.2-9. It 
can be that 
( )
H f
 is a low-pass response, whereas 1
( )
H f
−
 is a high-pass response. 
 
0
1
2
3
4
5
6
7
8
9
10
20
15
10
5
0
5
f /fn
H(f)  dB
1-H(f)  dB
H(f)
1-H(f)
0
1
2
3
4
5
6
7
8
9
10
20
15
10
5
0
5
f /fn
H(f)  dB
H(f)  dB
1-H(f)  dB
1-H(f)  dB
H(f)
H(f)
1-H(f)
1-H(f)
 
 
Figure 5.2-9 Magnitude response of H(f) and 1 −H(f) for ς =0.707. 
 
 
Example 2 Determine the value of f for the second-order ideal loop response with a damping factor of 0.707 
and a BL= 5 Hz that is 3 dB down for (a) 
( )
H f
 and (b) 1
( )
H f
−
. 
From the results of Problem 5 we have that 
(
)
1/(4 )
L
n
B
f
π
ζ
ς
=
+
. For 
0.707
ζ =
 one has that 
3.33
L
n
B
f
=
, 
so that when BL = 5 Hz, fn =1.5 Hz. From (5.2-91) one has that (a) f /fn = 2.0558 or f = 3 Hz for the low-pass 
response and (b) f /fn = 1.0012 or f = 1.5 Hz for the high-pass response. 
 
 
5.2.11 Phase Noise Effects of the Total Phase Error in the PLL 
 
Consider the effects of phase noise on the received carrier and the PLL VCO. From (5.2-36) it is seen that the 
phase noise the PLL VCO contributes to the phase error through the filtered response 
 
 
2
2
2
1
( )
( )
  rad
VCO
VCO
H f
S
f df
σ
∞
−∞
=
−
∫
 
(5.2-92) 
 
and the effect of the carrier phase noise on the phase error is given by 
 
 
2
2
2
1
( )
( )
 rad
H f
S
f df
θ
θ
σ
∞
−∞
=
−
∫
 
(5.2-93) 
 

 294                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
As can be seen from Figure 5.2-9 1
( )
H f
−
 is a high pass filter function that filters out the low-frequency 
components of the phase noise due to both the VCO and carrier phase noise components. The total phase 
noise due to thermal noise, carrier, and VCO oscillator noise is given by the sum of the variances 
 
 
2
2
2
2
2
 rad
T
VCO
θ
φ
σ
σ
σ
σ
=
+
+
 
(5.2-94) 
 
where 
2
φ
σ  is given by (5.2-73). Designing the PLL loop closed-loop noise bandwidth to minimize the overall 
tracking error variance depends on the actual phase noise spectral density characteristics of both the carrier 
and the VCO.  
Phase noise is normally characterized in two different ways. The first characterization is based on a 
spectral plot in dBc. The letters dBc denote decibels below the carrier signal. The second method of 
characterizing the phase noise is based on the Allan variance.  
Consider the first characterization via the dBc specification. Consider the carrier signal only, 
without thermal noise, which can be written as  
 
 
[
]
0
0
( )
2
sin
( )
y t
P
t
t
ω
θ
θ
=
+
+
 
(5.2-95) 
 
The following heuristic argument describes the meaning of term dBc. Expand (5.2-95) to yield 
 
 
(
)
(
)
0
0
0
0
( )
2
sin
cos( ( ))
2
cos
sin( ( ))
y t
P
t
t
P
t
t
ω
θ
θ
ω
θ
θ
=
+
+
+
 
(5.2-96) 
 
If the variance of ( )t
θ
 is small then one can write the approximation 
 
 
(
)
(
)
0
0
0
0
( )
2
sin
2
cos
( )
y t
P
t
P
t
t
ω
θ
ω
θ
θ
≅
+
+
+
 
(5.2-97) 
 
If the phase process is stationary then one can write 
 
 
0
0
( )
cos(
)
( )cos(
)
y
R
P
Rθ
τ
ω τ
τ
ω τ
=
+
 
(5.2-98) 
 
It follows that the power spectral density is given by 
 
 
[
]
[
]
0
0
0
0
( )
(
)
(
)
(
)
(
)
2
2
y
P
P
S
f
f
f
f
f
S
f
f
S
f
f
θ
θ
δ
δ
=
+
+
−
+
+
+
−
 
(5.2-99) 
 
Thus if one specifies the one-sided phase noise power spectral density relative to the one-sided carrier power, 
it is clear that the phase noise spectral density is going to be “down” from the carrier power by 
10log(
( ))
S
f
θ
 in dB or dB below the carrier (i.e., dBc).  
 
Example 3 Determine the phase error variance seen by an ideal second-order phase locked loop with natural 
frequency fn and damping factor 
0.707
ς =
 to the following single-sided phase noise spectral density model 
[12] 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            295
 
2
4
1
4
3
1
2
3
2
2
3
2
1
3
4
0
4
5
rad /Hz
           0
         
( )
        
   
         
         
k
f
f
f
k
f
f
f
f
k
S
f
f
f
f
f
k
f
f
f
f
k
f
f
f
θ
⎧
≤
≤
⎪
⎪
⎪
≤
≤
⎪
⎪
⎪
=
≤
≤
⎨
⎪
⎪
≤
≤
⎪
⎪
⎪
≤
≤
⎪⎩
 
(5.2-100) 
 
where the phase noise spectral density is continuous at the ends of the piecewise linear segments, so that it 
follows that 
 
 
3
3
4
2
2
1
1
0
4
3
3
2
2
1
1
1
1
2
2
3
3
4
, 
, 
, 
k
k
k
k
k
k
k
k
f
f
f
f
f
f
f
=
=
=
=
 
(5.2-101) 
 
The figure for the example is shown next 
 
( )
S
f
θ
f
f1
f2
f3
f4
f5
1/f 4
1/f 3
1/f 2
1/f
1/f 0
( )
S
f
θ
f
f1
f2
f3
f4
f5
1/f 4
1/f 3
1/f 2
1/f
1/f 0
 
 
Figure for Example 3 showing the one-sided phase noise spectral density as a function of f. 
 
 
To obtain the solution we must integrate the phase noise one-sided spectral density to obtain 
 
 
2
2
2
2
0
0
1
( )
( )
2 1
( )
( )
   rad
H f
S
f df
H f
f df
θ
θ
σ
∞
∞
=
−
=
−
∫
∫
L
 
(5.2-102) 
 
where ( )
f
L
 is the single sideband phase noise power spectral density. Commonly, the single sideband phase 
noise power spectral density is specified; however, 
( )
S
f
θ
 can easily be obtained from it via 
( )
2 ( )
S
f
f
θ
= L
. 
From (5.2-91) we have that 
 
 
4
2
4
4
1
( )
n
f
H s
f
f
−
=
+
 
(5.2-103) 
 
Hence the phase error variance due to carrier phase noise is given by 
 

 296                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
   
3
5
1
2
4
1
2
3
4
4
4
4
4
4
2
3
4
2
1
0
4
4
4
4
4
3
4
4
2
4
4
4
4
0
f
f
f
f
f
n
n
n
n
n
f
f
f
f
k
k
k
k
f
f
f
f
f
df
df
df
df
k df
f
f
f
f
f
f
f
f
f
f
f
f
f
f
θ
σ
=
+
+
+
+
+
+
+
+
+
∫
∫
∫
∫
∫
 (5.2-104) 
 
This expression can be evaluated numerically by commercial software computational packages or with the 
use of integration tables.  
The two-sample Allan variance is a measure of short-term oscillator stability. Let the signal be 
specified by  
 
 
(
)
0
( )
2 sin 2
( )
V t
f t
t
π
θ
=
+
 
(5.2-105) 
 
where f0 is the center frequency and ( )t
θ
 is the phase noise on the carrier. The two sample Allan variance is 
defined by 
 
 
(
)
2
1
2( )
2
k
k
y
y
y
σ
τ
+ −
=
 
(5.2-106) 
 
in which 
 denotes the time average, and where ( )
y t  is given by 
 
 
0
1
( )
( )
2
d
t
y t
f
dt
θ
π
=
 
(5.2-107) 
 
and is the fractional instantaneous frequency deviation. In addition 
ky  is the   second average frequency and 
is defined by 
 
1
( )
k
k
t
k
t
y
y t dt
τ
τ
+
=
∫
 
(5.2-108) 
 
This model assumes that all the yk samples are contiguous. A more general N sample variance with T–  
seconds between samples is given by 
 
 
2
2
1
1
1
1
(
, , )
1
N
N
y
n
k
n
k
N T
y
y
N
N
σ
τ
=
=
⎛
⎞
=
−
⎜
⎟
−
⎝
⎠
∑
∑
 
(5.2-109) 
 
Cutler [13] has shown that the two sample Allan variance with adjacent samples can be evaluated in terms of 
the two-sided phase noise spectral density as 
 
 
2
4
2
0
0
2 
( )
( )sin(
)
(
)
max
f
y
S
f
f
df
f
θ
σ
τ
π τ
π
τ
=
∫
 
(5.2-110) 
 
where f0 is the center frequency expressed in Hz,   is the averaging time, fmax is the upper frequency limit 
determined by receiver filters, and 
( )
S
f
θ
 is the two-sided noise spectral density. Note that the Allan 
variance is a normalized variance, with the normalization being the actual carrier frequency. 
 
 
 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            297
 
5.2.12 Nonlinear PLL Results 
 
Now consider the performance of PLLs in the region where the nonlinear behavior is important. 
 
 
5.2.12.1 PLL Mean Time to Loss of Lock 
 
One important parameter is the mean time to lose lock. By losing lock we mean reaching either +2  or –2  
radians phase error. Viterbi [7] has shown that the mean time to reach 2π
±
 for the first-order PLL is given 
by 
 
2
2
2
2
2
2
0
( )
( )
2
exp
exp
L
G
G x
B T
d dx
π
π
φ
π
φ
φ
σ
σ
σ
−
⎛
⎞
⎛
⎞
=
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
∫∫
 
(5.2-111) 
 
where G(x) = cos(x) is the integral of the phase error S curve, normalized to unit slope at x = 0. Note that this 
expression is unitless. This double integral expression can be evaluated to produce the result 
 
 
2
2
0
2
2
1
2
L
B T
I
π
σ
σ
⎛
⎞
=
⎜
⎟
⎝
⎠
 
(5.2-112) 
 
where I0 is the modified Bessel function of zeroth order. This result only strictly applies to the first-order 
loop; however, it would be an approximation to both types of second-order loops also, but with a degradation 
of 1 dB to the loop SNR. If one uses the asymptotic approximation for I0(x) of the form 
0( )
/
2
I
eρ
ρ
πρ
≅
, 
one can approximate (5.2-112) by 
2
(
1/
)
ρ
σ
=
 
 
 
2
2
2
exp
2
L
B T
π
σ
⎛
⎞
≅
⎜
⎟
⎝
⎠
 
(5.2-113) 
 
Viterbi [7] has shown that the cycle slipping rate is the inverse of the mean time to slip, so that the mean 
cycle slipping rate is given by 
 
 
-1
1/
   s
slip
R
T
=
 
(5.2-114) 
 
where T  is given by (5.2-112). In addition Smith [14] has shown that the slip process is approximately 
Poisson distributed, so that the probability of not slipping in t seconds is given by  
 
 
(
)
 
exp
not slipping
slip
P
R
t
=
−
 
(5.2-115) 
 
And the probability of K slips in t seconds is given by  
 
 
(
)
(
)
exp
(
, )
!
K
slip
slip
slip
R
t
R
t
P
K t
K
−
=
 
(5.2-116) 
 
Example 4 Determine the mean time to lose lock for a first-order PLL in which 
0.707
ς =
, BL=10 Hz, and 
C/N0 = 25 dB/Hz. Utilize the asymptotic form for simplicity. To use (5.2-113) it is necessary to determine 
2
σ  first. From (5.2-73) we compute
2
σ
 = 10/(102.5) = 0.0317 rad2.. From (5.2-113) it follows that 
T = 1.98*1026 s, or 5.5*1022 h! 
 

 298                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
5.2.12.2 PLL Acquisition by Sweeping the VCO 
 
Loop acquisition can be obtained by sweeping at a constant rate the VCO frequency from one end of the 
expected frequency range to the other. Although there is not much analysis in the way of acquisition 
performance, there is an approximate model that is based on the Frazier-Page simulation study [15]. Their 
result states that the sweep rate in Hz/s, for a 90% chance of being successful in acquisition, for a second-
order loop, is given by  
 
 
(
)
(
)
2
90
1
2
     Hz /
2
1
)
n
R
s
d
φ
σ
ω
π
−
=
+
 
(5.2-117) 
 
where d is given by 
 
 
2
exp
      
1
1
1                                 
1
d
d
ζ
π
ζ
ζ
ζ
⎛
⎞
⎜
⎟
=
−
<
⎜
⎟
−
⎝
⎠
=
≥
 
(5.2-118) 
 
and where 
φ
σ  is the one sigma value of phase error from the linear model. Faster rates will produce lower 
probabilities of success and slower sweep rates a higher probability of success. 
 
 
5.2.12.3 Steady State PLL Phase Error Distribution 
 
Based on the Fokker-Planck method of obtaining the probability density function from the stochastic 
differential equation of PLL operation in steady state, Tikhonov [16] and Viterbi [7] have derived the phase 
error probability density function for the first-order PLL, with the phase error reduced modulo 2 . The result, 
assuming no dynamically induced phase error, is given by 
 
 
(
)
0
exp
cos( )
( )
     
2
( )
p
I
ρ
φ
φ
φ
π
π
ρ
=
≤
 
(5.2-119) 
 
It can be shown that the phase error density can be approximated as a Gaussian random variable, by 
 
 
2
2
2
exp
2
( )
2
p
φ
φ
φ
σ
φ
πσ
⎛
⎞
−
⎜
⎟
⎜
⎟
⎝
⎠
≅
 
(5.2-120) 
 
when 
2
φ
σ  is small or when 
2
1/
φ
ρ
σ
=
 is large. 
 
 
5.2.12.4 Phase Error Performance with a BPF Limiter in Front of the PLL 
 
The question arises of what is the effect when a bandpass filter and limiter is placed in front of the phase 
detector of a PLL. Figure 5.2-10 illustrates a PLL with a bandpass filter prior to the limiter, which is placed 
in front of the phase detector (mixer).  
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            299
VCO
y(t)
Limiter
F(s)
BPF
VCO
y(t)
Limiter
Limiter
F(s)
BPF
BPF
 
 
Figure 5.2-10 PLL showing the insertion of a limiter before the phase detector. 
 
 
For one thing, the amplitude variation is limited to a small range (about 3 dB) if the input signal to 
noise ratio is at least unity. This is useful since it minimizes the need for a coherent automatic gain control 
(AGC) circuit, which is used to maintain a constant output signal level, and therefore the damping factor and 
the loop noise bandwidth will be constant. Forney, in an unpublished report, has shown that the phase error 
variance is unaffected by the limiter at high input signal-to-noise ratios in the input bandpass filter (BPF) 
bandwidth. In other words no degradation in tracking error performance occurs when a high input SNR is 
chosen in the design, when a BPF-limiter system is inserted in front of the PLL. In addition, he showed that 
there is no enhancement in tracking performance when a limiter is inserted in front of a PLL. 
 
 
5.3 FREQUENCY SYNTHESIZERS 
 
A frequency synthesizer is a device capable of generating many precise frequencies from a single or few very 
stable oscillator source(s) [17–19]. System applications include frequency hopping and dehopping, frequency 
division multiple access in satellite communications, test equipment, and HF radio.  
 
There are three methods of frequency synthesis: (1) direct, (2) indirect (PLL based), and (3) digital 
(table lookup). This section follows Egan [6] in part. 
 
 
5.3.1 Digital Frequency Synthesis 
Equation Section (Next) 
The digital frequency synthesizer is based on utilizing a lookup table to construct the signal segment by 
segment [6, 17]. A simplified block diagram model is illustrated in Figure 5.3-1. The description follows 
Egan [6]. Every clock cycle (fclock) 
θ
Δ
 is shifted into the accumulator, which adds 
θ
Δ
 radians to the 
previous accumulation to obtain the total phase θ . The output of the accumulator is a step-wise 
approximation to a linear phase ramp. The output phase consists of changes by 
θ
Δ
 radians every 
(Tclock=1/fclock) seconds, as seen in Figure 5.3-2. The value of θ  serves as the address for the cos(θ ) memory, 
which is output in discrete approximation form to the digital to analog (D/A) converter. The signal, which is 
a discrete approximation to a cosine wave, is filtered by the low-pass filter, rendering it an analog cosine 
wave. 
 
Accumulator
Clock
Accumulate
Memory
D/A
Low-pass
filter
shift out
θ
Δ
fsyn
fclock
θ
address
cos( )
θ
Accumulator
Clock
Accumulate
Memory
D/A
Low-pass
filter
shift out
θ
Δ
fsyn
fclock
θ
address
cos( )
θ
 
 
Figure 5.3-1 Block diagram model of a digital synthesizer. 
 
 

 300                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
The accumulator contains N bits of resolution, so that there are nC = 2N levels of the phase output. 
The capacity of the accumulator is 2  radians. Let ni be the input number that corresponds to the desired 
input phase change per clock period. Since the accumulator rolls over (counts modulo 2 ) it is clear that the 
output frequency is just the ratio 
 
 
2
i
i
syn
clock
clock
N
c
n
n
f
f
f
n
=
=
 
(5.3-1) 
 
Thus, controlling the value of the input number (ni) controls the output frequency (fsyn). The frequency 
resolution is given by the minimum size of ni which is one; thus 
 
 
1
1
2
res
clock
clock
N
c
f
f
f
n
=
=
 
(5.3-2) 
 
The highest practical synthesized frequency, to allow reasonable low pass filtering is about 
 
 
max
4
clock
f
f
=
 
(5.3-3) 
 
even though the theoretical limit is twice that of (5.3-3), since N = 1 corresponds to the case of two phase 
values per clock period. Figure 5.3-2 illustrates an example of the type of output obtained from a digital 
frequency synthesizer. The step-wise function shown at the bottom of the figure illustrates the approximate 
linear increase in phase with time, until the value of    is reached, and then it is reset to zero. Each step is 
one step of the clock. After passing the signal through the memory, a step-wise approximation to the cosine 
of the phase function is constructed. Finally the D/A converter signal is fed into the low-pass filter and the 
approximate cosine function is generated, as shown in the top of the figure.  
 
Example 5 Assume that a digital synthesizer will be used to generate a 500-Hz frequency resolution and that 
10 bits are used in the accumulator. Determine the clock frequency needed to produce a 500-Hz resolution. 
Also, based on this clock frequency, what input value must be added to the input of the accumulator to 
produce an output frequency of 50 kHz? 
 
Output
cosine
approx.
1/fclock
ni
Output
accumulator
phase approx.
0
2π
Phase
Cos(phase)
approx.
t
Cos(phase)
t
Output
cosine
(desired 
signal)
Output
cosine
approx.
1/fclock
ni
Output
accumulator
phase approx.
0
2π
Phase
Cos(phase)
approx.
t
Cos(phase)
t
Output
cosine
(desired 
signal)
 
 
 
Figure 5.3-2 Evolution of the cosine function from the accumulated phase of a digital synthesizer. 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            301
 
 
First note that (5.3-2) relates the frequency resolution so that 
 
 
10
2 (500)
512,000 
C
clock
res
f
f
n
Hz
=
=
=
 
 
Now the input level needed follows from (5.3-1) so that the input needed is  
 
 
10
50,000
100
/
512,000/ 2
C
syn
i
clock
f
n
f
n
=
=
=
 
 
 
5.3.2 Direct Frequency Synthesis 
 
A direct frequency synthesizer (DFS) is a synthesizer that utilizes mixing, multiplication, and division to 
generate the desired output frequency from a single or limited number of frequency sources. Figure 5.3-3 
illustrates how a frequency can be synthesized. Switches denoted “SW” may connect one of the ten possible 
frequencies for all “a” through “g” connections (seven in total). One of the frequencies is switched on in the 
first mixer (multiplier) and is added to the 3-MHz signal. The added frequency “a” has a value of 0–9 MHz. 
The resulting frequency, which has value 3a MHz, is divided by 10 to yield a frequency of 3.a MHz. Next the 
second switch is set to produce 3b.a MHz. Note that we are neglecting the sum frequencies in this discussion 
and retaining only the difference frequencies. This process continues until the next to last (ninth) mixer is 
used to create the frequency 3g.fedcba MHz. The last mixer converts the final output frequency to the value 
of g.fedcba MHz. Greater frequency precision can be obtained by adding more switches and mixers. Note 
that in this process “a” through “g” can take on the values of “0” to “9.”  
 
3 MHz
27 MHz
28
29
30
31
32
33
34
35
36 MHz
0
1
2
3
4
5
6
7
8
9
Line no.
(27+a) MHz
10
÷
10
÷
(27+b) MHz
(27+c) MHz
(27+g) MHz
(g.fedcba) MHz
(3a) MHz
(3.a) MHz (3b.a) MHz
(3.ba) MHz (3c.ba) MHz
(3g.fedcba) MHz
Final output
frequency
SW
SW
SW
SW: denotes a switch
3 MHz
27 MHz
28
29
30
31
32
33
34
35
36 MHz
0
1
2
3
4
5
6
7
8
9
Line no.
(27+a) MHz
10
÷
10
÷
(27+b) MHz
(27+c) MHz
(27+g) MHz
(g.fedcba) MHz
(3a) MHz
(3.a) MHz (3b.a) MHz
(3.ba) MHz (3c.ba) MHz
(3g.fedcba) MHz
Final output
frequency
SW
SW
SW
SW: denotes a switch
 
 
Figure 5.3-3 Simplified direct synthesis synthesizer concept. 
 
 
Example 6 Determine the necessary switch closures and mathematical process required to produce the 
frequency of 6.353 891 MHz. First we notice that the following is true: g = 6, f = 3, e = 5, d = 3, c = 8, b = 9, 
and a = 1. Figure 5.3-4 illustrates the connections that are needed to make the desired frequency. 
 
 

 302                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
3 MHz
27 MHz
28
29
30
31
32
33
34
35
36 MHz
0
1
2
3
4
5
6
7
8
9
Line no.
(27+1) MHz
10
÷
10
÷
(27+9) MHz
(27+8) MHz
(27+6) MHz
(6.353891) MHz
(31) MHz
(3.1) MHz (39.1) MHz(3.91) MHz (38.91) MHz
(36.353891) MHz
Final output
frequency
SW
SW
SW
3 MHz
27 MHz
28
29
30
31
32
33
34
35
36 MHz
0
1
2
3
4
5
6
7
8
9
Line no.
(27+1) MHz
10
÷10
÷
10
÷
(27+9) MHz
(27+8) MHz
(27+6) MHz
(6.353891) MHz
(31) MHz
(3.1) MHz (39.1) MHz(3.91) MHz (38.91) MHz
(36.353891) MHz
Final output
frequency
SW
SW
SW
 
 
Figure 5.3-4 Example of generating via direct synthesis the frequency 6.63489 MHz. 
 
 
 
The systems shown in Figures 5.3-4 and 5.3-5 are not very practical due to the fact that it is difficult 
to remove the mixer input in the 27–36-MHz range from the synthesized output frequency, since the input 
frequency overlaps the output frequency. Figure 5.3-5 illustrates a more practical implementation. Note that 
filters are normally utilized in the design, but are not illustrated in the figure.  
 
All of these systems are based on a decimal scheme, in which one of ten frequencies are chosen and 
the divisions are by 10, however other schemes such as binary [19] and BCD [20] can be used. One 
advantage of a direct synthesizer is the fact that it can switch frequencies at the speed of the switches and any 
associated filters used in the design. Switching in less than a few microseconds is usually feasible. Another 
advantage of DFS is the fact that the output spectral density can be very clean, basically a replica of the 
reference oscillator, but with the FM sidebands increased by the effective multiplication ratio from the input 
to the output. One disadvantage with DFSs is the fact that they consume considerable power and are 
relatively bulky, since a large number of local oscillators (LOs) are needed.  
 
3.0 MHz
3.1
3.2
3.3
3.4
3.5
3.6
3.7
3.8
3.9 MHz
0
1
2
3
4
5
6
7
8
9
Line
no.
10
÷
10
÷
27 MHz
24 MHz
(3a) MHz
(3b) MHz
(30.a) MHz
(3.0a) MHz
(27.0a) MHz
(30.ba) MHz
(27.0ba) MHz
(3.0ba) MHz
SW
SW
3.0 MHz
3.1
3.2
3.3
3.4
3.5
3.6
3.7
3.8
3.9 MHz
3.0 MHz
3.1
3.2
3.3
3.4
3.5
3.6
3.7
3.8
3.9 MHz
0
1
2
3
4
5
6
7
8
9
Line
no.
10
÷10
÷
10
÷10
÷
27 MHz
24 MHz
(3a) MHz
(3b) MHz
(30.a) MHz
(3.0a) MHz
(27.0a) MHz
(30.ba) MHz
(27.0ba) MHz
(3.0ba) MHz
SW
SW
 
 
Figure 5.3-5 First portion of a direct synthesis synthesizer that avoids the mixer feed-through problem. 
 
 
It is to be noted that ideal multipliers do not exist. Thus when two signals are “multiplied” they 
produce the desired multiplication product plus a multitude of other frequencies. If the reference frequencies 
are labeled “r” and the mixer frequencies are labeled “m” then it is true that 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            303
 
 
out
r
m
f
nf
mf
=
+
 
(5.3-4) 
 
where fout is the output frequency and n and m are integers. Commonly only the frequency given by  
fout = fr + fm is desired. 
 
 
5.3.3 Indirect Frequency Synthesis 
 
Indirect frequency synthesis is also known as phase locked loop synthesis, because it is based on using a PLL 
to generate the desired frequencies. Figure 5.3-6 illustrates a PLL synthesizer (PLLS) that uses a divide ratio 
to multiply up the reference frequency. It is clear that for the loop to be locked the output frequency must be 
related to the input frequency by 
 
 
1
2
/
/
out
ref
f
N
f
N
=
 
(5.3-5) 
 
where N1 is the divide ratio in the feedback loop and N2 is the divide ratio in the input; both numbers are 
integers. The VCO is represented by the VCO parameter Kv and the integration by 1/s. The loop divider has a 
ratio of N1. The loop filter has the function of suppressing the undesirable FM on the VCO. From (5.3-5) it 
follows that 
 
 
1
2
out
ref
N
f
f
N
=
 
(5.3-6) 
 
.
Det
φ
Loop Filter
VCO
1
N
÷
fout
fref
2
N
÷
.
Det
φ
Loop Filter
VCO
1
N
÷
fout
fref
2
N
÷
fref
2
N
÷
 
 
Figure 5.3-6 Synthesizer model of a PLLS. 
 
 
 
The minimum frequency increment is given by 
 
 
2
1
out
ref
f
f
N
=
 
(5.3-7) 
 
 
A practical synthesizer may have a number of additional features, such as a voltage source based on 
a D/A converter to drive the VCO to the nominal correct frequency, so as to increase the speed of the PLL 
synthesizer. Another feature that is commonly used in the implementation is a phase/frequency detector to 
speed up the switch from the last frequency to the next frequency [21]. The PLLS is slow compared to both 
the DFS and the direct frequency synthesizers.  
 
Clearly combinations of these three techniques can be utilized in a synthesizer design.  
 
 
 
 
 

 304                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
5.3.4 Indirect Frequency Synthesis Transfer Functions 
 
Now consider the various transfer functions that apply for different sources of noise and phase noise. Figure 
5.3-7 illustrates a second-order indirect PLL frequency synthesizer. 
 
F(s)
_
iθ
vco
K
s
+
nvco(t)
out
θ
1/N1
2
1
1
( )
s
F s
s
τ
τ
+
=
F(s)
_
iθ
vco
K
s
+
nvco(t)
out
θ
1/N1
1/N1
2
1
1
( )
s
F s
s
τ
τ
+
=
 
 
Figure 5.3-7 Baseband phase model of a second-order PLL synthesizer. 
 
 
Let us determine the transfer function of Figure 5.3-7 from the VCO noise to the output, which is 
out
θ
 in the figure. Redraw the figure in terms of a forward and a feedback term as shown in Figure 5.3-8.  
 
_
iθ
+
out
θ
B(s)
A(s)
0
ref
θ
( )t
φ
_
iθ
+
out
θ
B(s)
B(s)
A(s)
0
ref
θ
( )t
φ
 
 
Figure 5.3-8 Redrawn baseband model of a second-order PLL synthesizer in terms of phase. 
 
 
In Figure 5.3-8 the forward path, which includes the loop filter and the VCO, is denoted by A(s), 
and the division by N1 is denoted by B(s). The actual input is set to “0” whereas the VCO noise is labeled as 
iθ . Now let us determine the transfer function from the VCO noise (
iθ ) to the output 
out
θ
. Note all the phase 
and phase error terms are a function of time. The following four equations can be obtained from Figure 5.3-8. 
 
 
0
0
(1)    ( )
( )
(2)   
( )
( ) ( )
(3)   
( )
( )
( )
(4)   
( )
( )
( )
ref
vco
vco
i
ref
t
t
t
A s
t
t
t
t
t
B s
t
φ
θ
θ
φ
θ
θ
θ
θ
θ
= −
=
=
+
=
 
(5.3-8) 
 
From (1) and (2) one obtains 
 
 
(5)   
( )
( )
( )
vco
ref
t
A s
t
θ
θ
= −
 
(5.3-9) 
 
From (5) and (3) one obtains 
 
 
0
(6)  
( )
( )
( )
( )
ref
i
t
A s
t
t
θ
θ
θ
= −
+
 
(5.3-10) 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            305
 
Combining (4) and (6) yields 
 
 
0
(7)  
( )
( ) ( ) ( )
( )
i
i
t
A s B s
t
t
θ
θ
θ
= −
+
 
(5.3-11) 
 
Let 
0( )s
ϕ
 denote the La Place transform 
0( )t
θ
 and 
( )
i s
ϕ
 denote the La Place transform of 
( )
i t
θ
. From (7) 
one can solve for the ratio of 
0( )s
ϕ
 to 
( )
i s
ϕ
 to yield 
 
 
0( )
1
( )
1
( ) ( )
i
s
s
A s B s
ϕ
ϕ
= +
 
(5.3-12) 
 
which can be rewritten as 
 
 
2
0
2
2
( )
( )
2
i
n
n
s
s
s
s
s
ϕ
ϕ
ω ς
ω
=
+
+
 
(5.3-13) 
 
Note that if a linearizer is used in front of the VCO, then the linearizer noise, since the VCO is modeled as 
Kvco/s, has transfer function given by 
 
 
0
2
2
( )
( )
2
vco
i
n
n
s
K
s
s
s
s
ϕ
ϕ
ω ς
ω
=
+
+
 
(5.3-14) 
 
because passing through to the output of the VCO one multiplies the output by Kvco/s. In fact it is possible to 
extend this analysis to cover other sources of noise in a PLL, and this is listed in Table 5.3-1 [22, 23]. Note 
that a perfect second-order PLL has been assumed. The parameter Km is the multiplier gain in the phase 
detector. 
 
Table 5.3-1 Summary of the Transfer Function for Various Noise Sources 
 
2
2
2
2
n
n
s
s
s
ω ς
ω
+
+
2
2
2
vco
n
n
K
s
s
s
ω ς
ω
+
+
2
1
2
2
2
2
n
n
n
n
s
N s
s
ω ς
ω
ω ς
ω
+
+
+
2
1
2
2
2
2
n
n
n
n
m
s
N
s
s
K
P
ω ς
ω
ω ς
ω
+
+
+
Noise Source
Resultant Transfer 
Function
Filter Response
VCO
Linearizer
Coarse tuning DAC
Phase detector
Reference OSC
High-pass
Bandpass
Low-pass
Low-pass
2
2
2
2
n
n
s
s
s
ω ς
ω
+
+
2
2
2
vco
n
n
K
s
s
s
ω ς
ω
+
+
2
1
2
2
2
2
n
n
n
n
s
N s
s
ω ς
ω
ω ς
ω
+
+
+
2
1
2
2
2
2
n
n
n
n
m
s
N
s
s
K
P
ω ς
ω
ω ς
ω
+
+
+
Noise Source
Resultant Transfer 
Function
Filter Response
Noise Source
Resultant Transfer 
Function
Filter Response
VCO
Linearizer
Coarse tuning DAC
Phase detector
Reference OSC
High-pass
Bandpass
Low-pass
Low-pass
 
 
 
Thus it is clear that the transfer functions varies from bandpass to low-pass to high-pass filter 
response depending on where the noise source is located in the loop. 
 
 

 306                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
5.4 TRACKING OF BPSK SIGNALS 
Equation Section (Next) 
Now consider the types of tracking loops needed to track suppressed carrier signals. In particular we consider 
BPSK modulated signals, and then later we consider multiphase signals.  
 
 
5.4.1 Tracking a BPSK Signal with a Squaring Loop 
 
The simplest way to track a BPSK, suppressed carrier signal is to square the BPSK signal and track the 
resulting carrier, which occurs at twice the input frequency. This is the basis of the squaring loop. Numerous 
authors have analyzed the squaring loop [2, 21–28]. Now consider a model of a squaring loop illustrated in 
Figure 5.4-1. 
 
BPF
(W Hz)
(.)2
WB BPF
F(s)
VCO
y(t)
x(t)
u(t)
z(t)
r(t)
( )t
ε
BPF
(W Hz)
(.)2
WB BPF
F(s)
VCO
y(t)
x(t)
u(t)
z(t)
r(t)
( )t
ε
 
 
Figure 5.4-1 Model of a squaring loop in the short loop form. 
 
 
 
The basic elements of a squaring loop include the bandpass filter (BPF), followed by a squaring 
device, which mathematically squares the input signal plus noise, followed by a wideband zonal filter to 
remove the dc component out of the squaring device. The squaring system is then fed into a PLL, which is 
tuned to twice the input frequency.  
 
First we develop the stochastic differential equation (SDE) governing the operation of the phase 
error process of the squaring process. Let the input signal be described by 
 
 
0
0
( )
2
( )sin(
)
( )
y t
Pd t
t
n t
ω
θ
=
+
+
 
(5.4-1) 
 
where P is the signal power in watts, n(t) is modeled as a white Gaussian noise (WGN) process, 
0
ω  is the 
angular carrier frequency of the input BPSK signal, 
0
θ  is the carrier phase at the input of the receiver, and 
d(t) is the baseband data sequence that is modeled by 
 
 
( )
(
)
k
b
k
d t
d p t
kT
∞
=−∞
=
−
∑
 
(5.4-2) 
 
In (5.4-2) it is assumed that dk is a random bit sequence that takes on the values of 1
±  with probability 1/2 
and the sequence is assumed to be statistically independent from bit to bit. The function p(t) is a unit 
amplitude pulse that exists for t
(0,
)
bT
∈
 and is zero otherwise. The time period Tb is the bit duration, in 
seconds. For coded systems, the symbol period would be substituted for the bit period. The WGN process is 
modeled as  
 
 
0
0
0
0
( )
2
( )cos(
)
2
( )sin(
)
c
s
n t
n t
t
n t
t
ω
θ
ω
θ
=
+
+
+
 
(5.4-3) 
 
where nc(t) and ns(t) and statistically independent WGN processes, spectrally located at baseband, and each 
has a two-sided noise spectral density of N0/2.  

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            307
 
 
After filtering by the bandpass filter (BPF) the received signal plus noise is given by 
 
           
0
0
0
0
0
0
( )
2
( )sin(
)
( )
2
( )cos(
)
2
( )sin(
)
c
s
y t
Pd t
t
n t
n t
t
n t
t
ω
θ
ω
θ
ω
θ
=
+
+
+
+
+
+
%
%
%
 
(5.4-4) 
 
where 
( )
d t
%
 is the filtered version of d(t), and the two baseband noise terms are the filtered versions of the 
respective unfiltered noise terms. That is,  
 
 
( )
( ) (
)
LP
d t
h
d t
d
ξ
ξ
ξ
∞
−∞
=
−
∫
%
 
(5.4-5) 
 
and for each noise component (c or s) 
 
,
,
( )
( )
(
)
c s
LP
c s
n
t
h
n
t
d
ξ
ξ
ξ
∞
−∞
=
−
∫
%
 
(5.4-6) 
 
where 
( )
LP
h
u  is the equivalent low-pass impulse response function [29]. After squaring the output, the 
following results 
 
 
2
0
0
0
0
2
0
0
0
0
2
0
0
0
0
( )
( )
cos(2
2
)
2
( )
( )sin(2
2
)
        
2
( )
( )cos(2
2
)
( )cos(2
2
)
        
( )cos(2
2
)
2
( )
( )sin(2
2
)
        
 
c
s
c
s
s
c
x t
Pd t
t
Pd t n t
t
Pd t n t
t
n t
t
n t
t
n t n t
t
baseband signals
ω
θ
ω
θ
ω
θ
ω
θ
ω
θ
ω
θ
⎡
⎤
= −
+
+
+
⎣
⎦
−
+
+
+
−
+
+
+
+
%
%
%
%
%
%
%
%
%
 
(5.4-7) 
 
It is seen that if the squared term in front of the 
0
0
cos(2
2
)
t
ω
θ
+
 term has a mean value (which, by 
definition, it does), a line component exists at 2 0. The wideband (zonal) bandpass filter removes the 
baseband terms leaving  
 
 
2
0
0
0
0
2
0
0
0
0
2
0
0
0
0
( )
( )
cos(2
2
)
2
( )
( )sin(2
2
)
        
2
( )
( )cos(2
2
)
( )cos(2
2
)
        
( )cos(2
2
)
2
( )
( )sin(2
2
)
c
s
c
s
s
c
z t
Pd t
t
Pd t n t
t
Pd t n t
t
n t
t
n t
t
n t n t
t
ω
θ
ω
θ
ω
θ
ω
θ
ω
θ
ω
θ
⎡
⎤
= −
+
+
+
⎣
⎦
−
+
+
+
−
+
+
+
%
%
%
%
%
%
%
%
%
 
(5.4-8) 
 
Now denote 
0
0
t
ω
θ
+
 by 
( )t
Φ
 and 
1
ˆ
t
ω
θ
+
 by ˆ ( )t
Φ
. The reference signal can be modeled by  
 
 
(
)
1
ˆ
( )
2
sin 2 ( )
r t
K
t
=
Φ
 
(5.4-9) 
 
and 
1
2K  is the rms voltage of the reference signal. The loop error control signal out of the phase detector 
(multiplier) is given by 
 
 
( )
( ) ( )
m
t
K z t r t
ε
=
 
(5.4-10) 
 
Therefore the error signal becomes  
 

 308                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
(
)
{
}
{
}
2
2
2
1
( )
( )
2
( )
( )
( )
( ) sin(2 ( ))
         
2
( )
( )
2
( )
( ) cos(2 ( ))
m
s
c
s
c
c
s
t
K K
P d t
Pd t n t
n t
n t
t
Pd t n t
n t n t
t
ε
φ
φ
=
+
−
+
+
+
%
%
%
%
%
%
%
%
%
 
(5.4-11) 
 
where 
( )
( )
( )
t
t
t
φ
= Φ
−Φ
 is the instantaneous phase error at time t. Note that by viewing the signal 
component of the error signal it is seen that any dynamics present on the input phase process (due to 
dynamics) is effectively doubled in the loop (sin(2 ( ))
t
φ
, and this must be accounted for in determining the 
loop noise bandwidth. The PLL portion of the squaring loop operates at 2 0, so that the instantaneous 
frequency of the VCO is given by 
 
 
( )
( )
2
2
( ) ( )
vco
d
t
d
t
K
F s
t
dt
dt
ε
Φ
Φ
−
=
%
 
(5.4-12) 
 
When the local VCO and the received frequencies are the same, 
0 = 
1, then (5.4-12) becomes 
 
 
2 ( )
( ) ( )
vco
t
K
F s
t
φ
ε
= −
&
 
(5.4-13) 
 
Assuming that 
0 = 
1, then using (5.4-11) in (5.4-13) produces 
 
 
(
)
{
}
2
2 ( )
( )
( )
sin(2 ( ))
( ,2 ( ))
t
KF s
P d t
t
N t
t
φ
φ
φ
= −
+
%
&
 
(5.4-14) 
 
where K = K1KmKvco and where the noise process is defined by 
 
 
{
}
{
}
2
2
( , ( ))
2
( )
( )
( )
( ) sin(2 ( ))
                
2
( )
( )
2
( )
( ) cos(2 ( ))
s
c
s
c
c
s
N t
t
Pd t n t
n t
n t
t
Pd t n t
n t n t
t
φ
φ
φ
=
−
+
+
+
%
%
%
%
%
%
%
%
 
(5.4-15) 
 
If we let 
( )
2 ( )
e t
t
φ
Φ
=
 be effective phase error in the loop, we can write 
 
 
(
)
2
( )
( )
( )
sin(
( ))
( )
( ,
( ))
e
e
e
t
KPF s
d t
t
KF s N t
t
Φ
+
Φ
= −
Φ
%
&
 
(5.4-16) 
 
To simplify the analysis it is expeditious to replace (
)
2
( )
d t
%
 with its average (assumes that all the components 
besides the dc component are filtered out by the loop) 
 
 
{
}
2
2
( ( ))
( )
( )
d
LP
E
d t
S
f
H
f
df
α
∞
−∞
=
=
∫
%
 
(5.4-17) 
 
That is simply the amount of power that passes through the BPF equivalent low-pass filter response 
( )
LP
H
f . 
This approximation neglects self-noise that could be an issue at very high signal-to-noise ratios (SNR), but 
can be neglected at thermal noise dominated levels. Thus (5.4-16) can be approximated at low SNRs by 
 
 
2
( )
( ) sin(
( ))
( )
( ,
( ))
e
e
e
t
KPF s
t
KF s N t
t
α
Φ
+
Φ
= −
Φ
&
 
(5.4-18) 
 
 
In order to analyze the linearized model, we must linearize (5.4-18) to obtain 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            309
 
( ,
( ))
( )
( )
( )
e
e
N t
t
KPF s
t
s
KPF s
P
α
α
α
Φ
⎡
⎤
Φ
=
⎢
⎥
+
⎣
⎦
 
(5.4-19) 
 
Note that we have used the fact that ( )
( )
x t
sx t
=
&
 in (5.4-19). We can view the operator in front of 
the noise term in brackets as the closed-loop response that has a noise bandwidth of 2BL Hz. Consequently if 
we obtain the noise spectral density, normalized by  P, we can determine the tracking error variance as  
 
 
2
2
2
2
(0)
e
L
N
B S
P
σ
α
Φ =
 
(5.4-20) 
 
Thus, to continue, the spectral density of the noise process at f = 0 Hz in (5.4-19) must be obtained, 
under the assumption that W >> BL. Now let us determine the autocorrelation function of 
( ,
( ))
e
N t
t
Φ
. 
Consider 
( ,
( ))
e
N t
t
Φ
 near 
( )
e t
Φ
= 0. In this case 
( ,0)
N t
 becomes  
 
 
{
}
( ,0)
( )
2
( )
( )
2
( )
( )
c
c
s
N t
N t
Pd t n t
n t n t
=
=
+
%
%
%
%
 
(5.4-21) 
 
The autocorrelation function becomes 
 
 
{
}
( )
( )
(
)
N
R
E N t N t
τ
τ
=
+
 
(5.4-22) 
 
Since the expectation of an odd number of zero mean Gaussian random variables is zero one has 
 
 
2
( )
4
( )
( )
4
( )
c
c
N
n
n
d
R
PR
R
R
τ
τ
τ
τ
=
+
%
%
%
 
(5.4-23) 
 
since 
( )
( )
c
s
n
n
R
R
τ
τ
=
%
%
. It follows that the spectral density at f = 0 is given by 
 
 
2
(0)
4
( )
( )
4
( )
c
c
N
n
n
d
S
P
R
R
d
R
d
τ
τ
τ
τ
τ
∞
∞
−∞
−∞
=
+
∫
∫
%
%
%
 
(5.4-24) 
 
Using Parseval’s theorem one obtains 
 
 
2
4
4
2
0
0
2
sin(
)
(0)
2
( )
( )
(
)
N
LP
LP
fT
S
N P
T
H
f
df
N
H
f
df
fT
π
π
∞
∞
−∞
−∞
=
+
∫
∫
 
(5.4-25) 
 
which can be written as 
 
 
'
2
'
0
0
(0)
2
2
N
LP
S
N P
N B
α
=
+
 
(5.4-26) 
 
With 
 
 
2
4
'
2
sin(
)
( )
(
)
LP
fT
T
H
f
df
fT
π
α
π
∞
−∞
= ∫
 
(5.4-27) 
 
and  
 

 310                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
4
'
2
( )
LP
LP
B
H
f
df
∞
−∞
= ∫
 
(5.4-28) 
 
From (5.4-20) it follows that the effective2 linearized squaring loop tracking error variance is given by 
 
 
(
)
'
2
'
0
0
2
2
2
4
4
e
LP
L
N P
N B
B
P
α
σ
α
Φ
+
=
 
(5.4-29) 
 
which can be simplified to  
 
'
'
2
0
0
4
e
L
LP
N B
N B
P
P
α
σ
α
α
α
Φ
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
(5.4-30) 
 
When comparing this expression to the PLL result, (5.2-73), it is seen that the effective linearized squaring 
loop tracking error variance is at least four times as large. However, if the term in the parenthesis is larger, 
then the tracking error variance could be more than four times as large. The term in parentheses together with 
the factor of 4 is termed the squaring loss. It is clear that if threshold occurs at a particular error variance and 
if the term in parentheses is near unity, then the squaring loop has an approximate 6 dB poorer threshold. It is 
clear from (5.4-30) that to obtain the actual linearized tracking error, we let ( )
( ) / 2
e
t
t
φ
= Φ
. Therefore 
 
 
'
'
2
0
0
L
LP
N B
N B
P
P
φ
α
σ
α
α
α
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
(5.4-31) 
 
The effective tracking error variance, not the actual linear tracking error variance, is the important parameter 
with regard to threshold loss of lock conditions. However, the actual linearized tracking error is applicable to 
BER degradation, for example. 
 
 
5.4.2 Tracking a BPSK Signal with an Integrate-and Dump Costas Loop 
 
Another tracking loop that can track BPSK signals is the Costas loop. The basic Costas loop is shown in 
Figure 5.4-2. The VCO feeds the 90º phase splitter, which produces two signals, 90º apart in phase. Both of 
the signals are fed into the integrate-and-dump (I & D) filters and held in the sample and hold (S & H) 
devices. They are multiplied together to drive the loop filter and in turn the VCO. When I & D filters are 
used it is necessary to have timing information fed back from the bit synchronizer. If this is not feasible then  
 
 
I & D
900
F(s)
VCO
y(t)
detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
I & D
Yc(t)
Ys(t)
Output
symbols
Z(t)
Zc(t)
Zs(t)
S & H
S & H
I & D
I & D
900
900
F(s)
F(s)
VCO
VCO
y(t)
detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
I & D
I & D
Yc(t)
Ys(t)
Output
symbols
Z(t)
Zc(t)
Zs(t)
S & H
S & H
S & H
S & H
 
 
Figure 5.4-2 Costas loop with I & D filters in the arms. 
                                                          
2 By effective we mean in relationship to threshold conditions such as loss of lock. 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            311
 
the passive filter Costas loop is the best choice (see Section 5.4.3). The phase detector is the upper multiplier 
and the coherent amplitude detector (CAD) the lower. 
 
Various versions of the Costas loop exist. Riter [30] has shown that the optimum device for tracking 
suppressed carrier signals at low SNRs is either a Costas loop or a squaring loop. He showed that the inphase 
arm (with the CAD) should be weighted by tanh(cI(t)), where c is a constant dependent on the SNR and I(t) 
is the inphase arm output. It can be shown that when the SNR in the I & D filter output is low the hyperbolic 
tangent becomes linear, and the weighting becomes unimportant. Also at high SNRs the hyperbolic tangent 
becomes a limiter function and again the weighting function becomes unimportant. In this book only the 
linear inphase arm case will be considered in detail. It will be assumed that the signals are NRZ-L symbols 
(i.e., rectangular symbols) [2].  
 
Let the received BPSK modulated signal plus noise be modeled as 
 
 
(
)
0
0
( )
2
( )sin
( )
y t
Pd t
t
n t
ω
θ
=
+
+
 
(5.4-32) 
 
where P is the received signal power in watts, and d(t) is the baseband 1
±  valued NRZ-L data stream. Again 
the noise can be written in terms of its in-phase and quadrature phase noise components if the form 
 
 
(
)
(
)
0
0
( )
2
( )cos
2
( )sin
c
s
n t
n t
t
n t
t
ω
θ
ω
θ
=
+
+
+
 
(5.4-33) 
 
in which both nc(t) and ns(t) are modeled as statistically independent processes having two-sided power 
spectral density of N0/2. At the phase detector output one has 
 
 
(
)
(
)
(
)
0
0
0
ˆ
( )
( )sin( ( ))
( )sin 2
( )
ˆ
         
( )cos( ( ))
( )cos 2
( )
ˆ
         
( )sin( ( ))
( )sin 2
( )
c
c
c
s
s
Z t
Pd t
t
Pd t
t
t
n t
t
n t
t
t
n t
t
n t
t
t
φ
ω
θ
θ
φ
ω
θ
θ
φ
ω
θ
θ
=
+
+
+
+
+
+
+
+
+
+
+
 
(5.4-34) 
 
in which 
ˆ
( )
( )
t
t
φ
θ
θ
=
−
 is the instantaneous phase error. For notational simplicity the loop will be analyzed 
during the time between t = 0 and t = T seconds. At the output of the I & D filter, neglecting the double 
frequency terms since they will be filtered out produces  
 
 
(
)
( )
( ) sin( ( ))
( )cos
( )
( )sin( ( ))
c
c
s
Y t
Pd T T
T
N T
T
N T
T
φ
φ
φ
=
+
+
 
(5.4-35) 
 
where Nc(t) and Ns(t) are independent Gaussian random variables that change their value every T seconds, 
and both have zero means and variances of N0T/2. Now the output of the CAD is given by 
 
 
(
)
(
)
(
)
0
0
0
ˆ
( )
( )cos( ( ))
( )cos 2
( )
ˆ
        
( )sin( ( ))
( )sin 2
( )
ˆ
       
( )cos( ( ))
( )cos 2
( )
s
c
c
s
s
Z t
Pd t
t
Pd t
t
t
n t
t
n t
t
t
n t
t
n t
t
t
φ
ω
θ
θ
φ
ω
θ
θ
φ
ω
θ
θ
=
−
+
+
−
+
+
+
+
−
+
+
 
(5.4-36) 
 
After the I & D filter, and neglecting the double frequency terms, yields 
 
 
(
)
( )
( ) cos( ( ))
( )cos
( )
( )sin( ( ))
s
c
s
Y t
Pd T T
t
N T
t
N T
t
φ
φ
φ
=
−
+
 
(5.4-37) 
 
with the understanding that d(T) denotes the value of d at 
 ,
t
T −
=
 that is, just before T seconds. Now Z(t) is 
the product of Ys(t) and Yc(t), so that 

 312                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
(
)
2
2
2
(
( ))
( )
sin(2 ( ))
( )
( )sin(2 ( ))
sin(2 ( ))
2
2
(
( ))
       
sin(2 ( ))
( )
( )
( )cos(2 ( ))
2
s
s
c
s
c
N T
PT
Z t
t
PTd T N t
t
t
N t
t
PTd T
N T
N T
t
φ
φ
φ
φ
φ
=
+
+
−
−
+
 
(5.4-38) 
 
Now the output of the VCO is given by  
 
ˆ( )
( )
vco
m
K
K
t
Z t
s
θ
=
 
(5.4-39) 
where Km is the multiplier coefficient of the multiplier that outputs Z(t). Letting K denote the product  
K = KmKvco (we have assumed that K1 = 1 here) and assuming that ( )
0
t
θ
=
&
, one has 
 
 
(
)
(
)
2
2
2
( )
( )
( )
( ) sin(2 ( ))
( )
2
( )
( )
2
( )
( )
( )
( ) cos 2 ( )
c
s
s
c
c
s
N
T
N
T
PTd T N T
t
PT KF s
t
KF s
PTd T N T
N T N T
t
φ
φ
φ
⎧
⎫
⎛
⎞
−
−
⎪
⎪
⎜
⎟
⎪
⎪
⎝
⎠
+
=
⎨
⎬
⎪
⎪
⎡
⎤
−
+
⎪
⎪
⎣
⎦
⎩
⎭
&
 
(5.4-40) 
 
Again letting 
( )
2 ( )
t
t
φ
Φ
=
 we have 
 
(
)
(
)
2
2
2
( )
( )
2
( )
( ) sin(
( ))
( )
( )sin(
( ))
( )
2
( )
( )
( )
( ) cos(
( ))
c
s
s
c
c
s
N
T
N
T
PTd T N T
t
s
t
PT KF s
t
KF s
PTd T N T
N T N T
t
⎧
⎫
−
−
Φ
⎪
⎪
Φ
+
Φ
=
⎨
⎬
−
+
Φ
⎪
⎪
⎩
⎭
 
(5.4-41) 
 
Denoting the term inside the brackets as N(T), then letting 
( )
1
t
Φ
<<  produces the linearized equation of 
operation 
 
 
2
2
2
( )
( )
( )
( )
PT KF s
N T
t
s
PT KF s
PT
⎡
⎤⎡
⎤
Φ
= ⎢
⎥⎢
⎥
+
⎣
⎦
⎣
⎦
 
(5.4-42) 
 
where it is understood that the S & H function only allows the noise process to change every T seconds. It 
follows that the equivalent tracking error variance is given by  
 
 
(
)
'
2
0
2
4
L
N B
P T
σ Φ =
 
(5.4-43) 
 
in which BL is defined by 
 
 
2
2
2
( 2
)
  
2
( 2
)
L
PT KF i
f
B
df
Hz
i
f
PT KF i
f
π
π
π
∞
−∞
=
+
∫
 
(5.4-44) 
 
and 
'
0
N  is the one-sided noise spectral density of N(T), assuming that N(T) changes every T seconds and 
therefore is a step-wise constant function with time. As long as 
1
L
TB <<  then the delay in the loop, due to 
the bit decision, will not affect loop performance. To finish the calculation of the effective phase error 
variance, we must determine the spectral density of the noise term N(T). In Problem 8 it is shown that the 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            313
autocorrelation function of a random amplitude, fixed duration, rectangular signal pulse (that is, statistically 
independent from pulse to pulse) is given by 
 
 
2
( )
1
    
              0                     
N
N
R
T
T
T
τ
τ
σ
τ
τ
⎛
⎞
=
−
≤
⎜
⎟
⎝
⎠
>
 
(5.4-45) 
 
where 
N
σ
 is the standard deviation of the noise process. The Fourier transform of (5.4-45) yields 
 
 
(
)
(
)
2
2
2
sin
( )
N
N
fT
S
f
T
fT
π
σ
π
=
 
(5.4-46) 
 
At f = 0 the spectral density becomes  
 
 
2
(0)
N
N
S
T
σ
=
 
(5.4-47) 
 
The only parameter needed to evaluate the spectral density of the noise process at f = 0 is 
2
N
σ . Consider 
2
N
σ . 
Therefore  
 
 
2
2
( )
N
E N T
σ
⎡
⎤
=
⎣
⎦ 
(5.4-48) 
 
Evaluating from (5.4-41), and assuming 
( )
T
Φ
 is near zero, and is approximated as zero, one obtains 
 
 
(
)
(
)
(
)
2
2
2
2
2
2
2
2
2
4
4
N
c
s
c
c
s
PT N
N N
PT N
N
σ
=
+
=
+
 
(5.4-49) 
 
Noting that for Gaussian random variables that 
 
 
2
2
0
2
c
s
N T
N
N
=
=
 
(5.4-50) 
 
and that  
 
3
2
2
2
0
0
4
2
4
N
PN T
N T
σ
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
(5.4-51) 
 
Hence from (5.4-47) it follows that 
 
 
'
4
2
3
0
0
0
(0)
2
2
N
N
S
PN T
N T
=
=
+
 
(5.4-52) 
 
Using (5.4-52) in (5.4-43) produces our result for the I & D Costas loop linear effective phase error variance 
 
 
2
2
0
0
4
1
    rad
2
L
N B
N
P
PT
σ Φ
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
(5.4-53) 
 

 314                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
It is to be noted that the Costas loop also doubles the input dynamics, and this must be accounted for 
when determining the Costas loop noise bandwidth BL. The actual phase error variance is given by 
 
 
2
2
0
0
1
   rad
2
L
N B
N
P
PT
φ
σ
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
(5.4-54) 
 
When comparing the Costas loop performance of (5.4-54) to the squaring loop tracking error 
performance, (5.4-30), it can be shown that the Costas loop has slightly lower tracking error. Moreover the 
Costas loop is much more commonly implemented in practice, since the processing is at baseband and is 
more easily implemented digitally.  
 
5.4.3 Tracking a BPSK Signal with a Passive Arm Filter Costas Loop 
 
One disadvantage of the I & D Costas loop is the fact that bit or symbol timing must be provided to the loop 
to provide the timing needed for the filters. The passive filter Costas loop utilizes a filter that does not require 
timing. There is a small loss in this case, but it simplifies the Costas loop acquisition process since during 
carrier acquisition the bit or symbol timing is not known, and therefore acquisition of the I & D Costas loop 
is more difficult. Figure 5.4-3 illustrates a passive filter Costas loop. 
 
LPF
900
F(s)
VCO
y(t)
Detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
LPF
Output
symbols
Yc(t)
Ys(t)
Z(t)
Zc(t)
Zs(t)
I&D
(
)
0
( )
2
( )sin
( )
y t
Pd t
t
n t
ω
θ
=
+
+
Chopper
multiplier
LPF
900
900
F(s)
F(s)
VCO
VCO
y(t)
Detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
LPF
LPF
Output
symbols
Yc(t)
Ys(t)
Z(t)
Zc(t)
Zs(t)
I&D
(
)
0
( )
2
( )sin
( )
y t
Pd t
t
n t
ω
θ
=
+
+
Chopper
multiplier
 
 
Figure 5.4-3 Costas loop with low pass filters in the arms. 
 
 
One solution is to use passive filters for the Costas loop acquisition and then switch to I & D filters 
in the tracking mode, when bit timing in available. Figure 5.3-11 illustrates the passive filter Costas loop 
model.  
The solution to the linearized tracking error variance with passive filters, in the Costas loop, is very 
similar to the analysis of the squaring loop model and will be summarized here [2]. The effective tracking 
error variance of the passive filter Costas loop is given by  
 
 
'
2
2
0
0
4
'
   rad
L
LP
N B
N B
P
P
α
σ
α
α
α
Φ
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(5.4-55) 
 
where α , 
'
α , and 
'
L
B  are defined in (5.4-17), (5.4-27), and (5.4-28). The actual tracking error variance is 
given by 
 
 
'
2
2
0
0
'
   rad
L
LP
N B
N B
P
P
φ
α
σ
α
α
α
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(5.4-56) 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            315
Thus if the low pass equivalent filter of the squaring loop is the same as the low pass filter of the Costas loop 
the performance is identical.  
 
 
5.4.4 Steady State Tracking Error for the Costas and Squaring Loops 
 
We have mentioned earlier that the effective dynamics are doubled relative to a PLL. Thus, for either the 
squaring loop or the Costas loop, the fact that the error signal is proportional to sin(2 )
φ  means that any 
perturbation in φ  is doubled, so that any offset due to dynamics is doubled, as far as loop threshold is 
concerned. This applies to noise performance and noise threshold also, as was determined in the expressions 
for the effective tracking error variance. Thus from Table 5.2-1 if the steady state tracking error is required 
for either a Costas or a squaring loop, the entries in the table must be doubled when compared to a PLL.  
 
 
5.4.5 Costas Loop with Hard-Limited In-Phase Arm Processing 
 
Often Costas loops have the in-phase arm hard limited to improve the performance and also to allow the use 
of a chopper multiplier to be used in lieu of an analog multiplier, as seen in Figure 5.4-4. 
 
LPF
900
F(s)
VCO
y(t)
Detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
LPF
Output
symbols
Yc(t)
Ys(t)
Z(t)
Zc(t)
Zs(t)
I&D
(
)
0
( )
2
( )sin
( )
y t
Pd t
t
n t
ω
θ
=
+
+
Chopper
multiplier
LPF
900
900
F(s)
F(s)
VCO
VCO
y(t)
Detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
LPF
LPF
Output
symbols
Yc(t)
Ys(t)
Z(t)
Zc(t)
Zs(t)
I&D
(
)
0
( )
2
( )sin
( )
y t
Pd t
t
n t
ω
θ
=
+
+
Chopper
multiplier
 
 
Figure 5.4-4 Costas loop with a hard-limited in-phase arm.  
 
 
Simon [31] has shown that for a one-pole arm filter Costas loop, the tracking error variance is at 
most 1.08 dB greater than the linear (limiter removed) Costas loop. At nominal Eb/N0 values of 6 dB, the 
tracking error variance of the hard-limited version is about 0.5 dB smaller. In conclusion the hard limiter in 
the inphase arm of a Costas loop can improve or diminish the performance of the tracking loop, depending on 
the arm filter SNR. However, the hardware implementation is simplified with the use of a chopper multiplier 
(hard limiter) as the third multiplier in the loop.  
 
5.4.6 Improved Frequency Acquisition of a Passive Filter Costas Loop  
 
Cahn [32] has observed that removing one of the low pass filters of an analog Costas loop improves the 
frequency acquisition performance and diminishes the likelihood of false lock (this will be discussed shortly). 
In effect Cahn has shown that by removing the quadrature arm filter, the loop acts like a hybrid frequency 
and phase tracking loop. This loop has been called the modified Costas loop. Figure 5.4-5 illustrates the hard-
limited Costas loop (modified Costas loop) with no quadrature arm filter. Another method of obtaining 
frequency acquisition is to add an additional delay in one arm relative to the other. This alternate approach 
will not be pursued here, however. 
 
 

 316                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
900
F(s)
VCO
y(t)
Detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
Output
symbols
Yc(t)
Ys(t)
Z(t)
Zc(t)
Zs(t)
I&D
(
)
0
( )
2
( )sin
( )
y t
Pd t
t
n t
ω
θ
=
+
+
Chopper
multiplier
1
1
s
τ
+
900
900
F(s)
F(s)
VCO
VCO
y(t)
Detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
Output
symbols
Yc(t)
Ys(t)
Z(t)
Zc(t)
Zs(t)
I&D
(
)
0
( )
2
( )sin
( )
y t
Pd t
t
n t
ω
θ
=
+
+
Chopper
multiplier
1
1
s
τ
+
 
 
Figure 5.4-5 Hard-limited Costas loop with no quadrature arm filter. 
 
 
 
As can be seen in the figure the arm filter in the inphase channel is a one-pole low pass filter, and 
the quadrature arm has no filter. If the input frequency   is not equal to the loop frequency estimate ˆω , so 
that a frequency error ω
Δ
 exists, then Cahn has shown that the time average of the error signal, Z(t), is given 
by  
 
 
2
2
( )
1
(
)
Z t
ωτ
π
ωτ
Δ
=
+ Δ
 
(5.4-57) 
 
which exhibits a restoring force related to the frequency error. However, as noted by Cahn, when the 
frequency error is small and approaches zero, the phase error dominates, and tracking is controlled by the 
phase error rather than the frequency error. Thus the modified Costas loop has the advantage of combining a 
frequency lock loop with a Costas loop, with the disadvantage of not being able to control the automatic 
frequency control (AFC) independently from the Costas loop transfer function. Based on (5.4-57) and 
assuming a second-order Costas loop, the linearized AFC loop, assuming that 
1
ωτ
Δ
<< , has the transfer 
function 
 
(
)
2
2
ˆ
2
2
1
2 2
/
2
/
n
n
n
n
s
s
ω
ω
ω
τ
ω
π
τω
π
τω
π
+
=
+
+
 
(5.4-58) 
 
To a rough approximation this loop appears to be a first-order AFC loop (for small frequency errors) with the 
AFC natural frequency given by 
 
 
(
)
2
2 /
nAFC
n
ω
τ π ω
=
 
(5.4-59) 
 
Thus the AFC natural frequency is proportional to the square of the Costas natural frequency. One might ask 
what the price is of leaving off one arm filter. The answer is given in Problem 11 where it is shown that the 
effective tracking phase error variance is given by 
 
 
2
0
0
4
1
L
LP
N B
N B
P
P
σ
α
α
Φ
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(5.4-60) 
 
where BLP is defined by 
 
2
2
( )
LP
LP
B
H
f
df
∞
−∞
= ∫
 
(5.4-61) 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            317
This analysis is for the nonhard-limited in-phase channel processing assumption with a one-pole Butterworth 
filter. When comparing (5.4-60) with (5.4-55) it is seen that at low SNR the effective tracking error variance 
is increased by the ratio  
 
 
2
1
2
'
2
1
fil
LP
fil
LP
B
B
σ
σ
Φ
Φ
=
≥ 
(5.4-62) 
 
which is the ratio of the effective tracking error variance of a linear Costas loop with one arm filter to a linear 
Costas loop with both LPFs in place. In Problem 12 
'
LP
B
 has been evaluated for an n pole Butterworth filter 
and it was shown that 
 
'
1
1
2
LP
LP
B
B
n
⎛
⎞
=
−
⎜
⎟
⎝
⎠
 
(5.4-63) 
 
where n is the order of the Butterworth arm filter. Thus for the case on a one-pole arm filter it is seen that 
 
 
'
/ 2
LP
LP
B
B
=
 
(5.4-64) 
or  
 
2
1
2
2
2
fil
fil
σ
σ
Φ
Φ
=
 
(5.4-65) 
 
at low loop SNR. At high SNR values it can be shown that by comparing (5.4-60) with (5.4-55) it is seen that  
 
2
1
2
'
2
1
fil
fil
σ
α
σ
α
Φ
Φ
=
≥ 
(5.4-66) 
 
When f0/R varies between 1 and 3 the ratio of (5.4-66) varies from 1.72 dB to 0.43 dB for a one-pole 
Butterworth arm filter [33].  
 
 
5.4.7 Lock Detectors for Costas and Squaring Loops 
 
The reality of communication system design is that every loop must have some type of monitor, or lock 
detector, to indicate whether or not synchronization lock has been achieved and maintained. Normally the bit 
synchronizer should not attempt to obtain time synchronization until the carrier loop has been successful in 
acquisition. Often the signal generated for use in the lock detector can be used to drive a coherent automatic 
gain control (AGC) circuit. Consider the squaring loop lock detector of Figure 5.4-6. 
 
BPF
(W Hz)
(.)2
WB BPF
F(s)
VCO
y(t)
u(t)
z(t)
( )t
ε
900
LPF
Th
Lock
( )
y t
%
0
ˆ
2 sin(2
2 ( ))
t
t
ω
θ
+
0
ˆ
2 cos(2
2 ( ))
t
t
ω
θ
+
BPF
(W Hz)
(.)2
WB BPF
F(s)
VCO
y(t)
u(t)
z(t)
( )t
ε
900
900
LPF
Th
Th
Lock
( )
y t
%
0
ˆ
2 sin(2
2 ( ))
t
t
ω
θ
+
0
ˆ
2 cos(2
2 ( ))
t
t
ω
θ
+
 
 
Figure 5.4-6 Model of a squaring loop with a lock detector. 
 
 
 

 318                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
As mentioned earlier the squaring loop basically squares the input signal to yield a tone at 2 0 from 
the input signal operating at  0, which can be tracked by a PLL operating at 2 0, as shown in Figure 5.4-6. 
Assume that the input is BPSK modulation so that out of the bandpass filter is the received signal plus noise 
 
 
0
0
0
( )
2
( )cos(
)
2
( )cos(
)
2
( )sin(
)
c
s
y t
Pd t
t
n t
t
n t
t
ω
θ
ω
θ
ω
θ
=
+
+
+
+
+
%
%
%
%
 
(5.4-67) 
 
where the terms with tildes imply the low pass equivalent version of the original signal or noise term. Upon 
squaring ( )
y t
%
 the following is obtained 
 
 
2
2
2
2
0
0
0
0
0
0
( )
( ) cos(2
2 )
( )cos(2
2 )
( )cos(2
2 )
         
2
( )
( )cos(2
2 )
2
( )
( )sin(2
2 )
         
2
( )
( )in(2
2 )
dc terms
c
s
c
s
s
c
y t
Pd t
t
n t
t
n t
t
Pd t n t
t
Pd t n t
t
n t n t
t
ω
θ
ω
θ
ω
θ
ω
θ
ω
θ
ω
θ
=
+
+
+
−
+
+
+
+
+
+
+
+
%
%
%
%
%
%
%
%
%
%
 
(5.4-68) 
 
After multiplying by the in-phase reference at 2
0, into the low-pass filter (LPF) denoted as z(t) in the figure, 
one obtains the result 
 
 
2
2
2
( )
( )
( )
2
( )
( )
( )
2
c
s
c
Pd t
n t
n t
Pd t n t
z t
+
−
+
=
%
%
%
%
%
 
(5.4-69) 
 
Note that z(t) has a mean signal component when it is present, but the noise terms have zero mean 
value. Thus when the signal appears and is locked, the output will have mean value proportional to the signal 
power. This process can be analyzed to determine the loss of performance in terms of false alarm probability 
and detection probability. 
Now consider two types of lock detectors for a Costas loop. Figures 5.4-7(a) and 5.4-7(b) illustrates 
two different lock detector block diagrams. In Figure 5.4-7(a), a Costas loop lock detector has zero mean 
value output, only when noise is present; when signal plus noise is present the output is nonzero. When the 
signal (and noise) is present and synchronized by the Costas loop, the output becomes positive. However, the 
lock detector of Figure 5.4-7(b) has an output that is positive even when the signal is not present at the input. 
When the signal is present at the input, the mean output is proportional to the sum of the signal and the noise 
out of the arm low-pass filter, and therefore the threshold must be placed between the noise only and the 
signal plus noise levels. 
 
LPF
900
F(s)
VCO
y(t)
Detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
LPF
Yc(t)
Ys(t)
Z(t)
Zc(t)
Zs(t)
-
LPF
Th
LPF
900
900
F(s)
F(s)
VCO
VCO
y(t)
Detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
LPF
LPF
Yc(t)
Ys(t)
Z(t)
Zc(t)
Zs(t)
-
LPF
LPF
Th
Th
 
 
Figure 5.4-7 (a) Costas loops with first lock detector model. 
 
 
5.4.8 False Lock in Costas Loops 
 
False (frequency) lock is a phenomenon that allows a loop to stably “track” a received signal at the wrong 
carrier frequency. The wrong carrier frequency means not tracking the center frequency of the signal. In 
Costas loops there are at least four mechanisms that can be identified and can lead to false lock. One 
mechanism is due to spurious oscillations (resulting from mixers, for example), which can generate sufficient 
voltage to provide a stable lock point to that spurious oscillation. Another mechanism is due to the 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            319
accumulated delay in a longloop implementation. A method of analyzing this has been reported in  
[4, 34–37] and others. A third mechanism is due to periodic motion of the receive antenna (or transmit 
antenna). The fourth mechanism is data related and is the subject of this section. The principal reason for 
data-related false lock is distortion due to filtering of the frequency-offset signal.  
 
 
LPF
900
F(s)
VCO
y(t)
Detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
LPF
Yc(t)
Ys(t)
Z(t)
Zc(t)
Zs(t)
LPF
Th
LPF
900
900
F(s)
F(s)
VCO
VCO
y(t)
Detector
φ −
CAD
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
0
ˆ
2 sin(
( ))
t
t
ω
θ
+
LPF
LPF
Yc(t)
Ys(t)
Z(t)
Zc(t)
Zs(t)
LPF
LPF
Th
Th
 
 
Figure 5.4-7 (b) Costas loop with second lock detector model.  
 
 
 
It will be seen that widening the arm filter bandwidth will weaken the false lock tracking capability, 
however, it has been found that keeping the arm filter bandwidth near the data rate bandwidth optimizes the 
tracking performance due to thermal noise. Thus a compromise may be required in the selection of the arm 
filter bandwidth when false lock can occur. It is to be noted that reducing the frequency uncertainty also 
reduces the possibility of false lock.  
 
The results given here closely follow an original study by Hedin, Holmes, Lindsey, and Woo [38] 
that was later published as a journal paper [39].  
 
 
5.4.8.1 Costas Loop Error Signal when in False Lock 
 
Consider the low-pass filter model of a Costas loop with linear in-phase arm processing (no limiter) shown in 
Figure 5.4-8. 
 
LPF
900
F(s)
VCO
y(t)
'
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
'
0
ˆ
2 sin(
( ))
t
t
ω
θ
−
+
LPF
yc(t)
ys(t)
zc(t)
zs(t)
( )t
ε
LPF
900
900
F(s)
F(s)
VCO
VCO
y(t)
'
0
ˆ
2 cos(
( ))
t
t
ω
θ
+
'
0
ˆ
2 sin(
( ))
t
t
ω
θ
−
+
LPF
LPF
yc(t)
ys(t)
zc(t)
zs(t)
( )t
ε
 
Figure 5.4-8 Costas loop model for false lock analysis. 
 
 
 
In this analysis noise will not be considered, so that only the signal will be modeled. Let the 
received signal be represented by 
 
 
(
)
0
( )
2
( )cos
s t
Pd t
t
ω
θ
=
+
 
(5.4-70) 
 
in which 
0
ω  is the input frequency in radians/second and θ  is the input carrier phase in radians, P is the 
received power in s(t) (W), and d(t) is the 1
±  data bit stream which has data rate of Rb bps. Let the local 
oscillator operate at 
'
0
ω  radians/second. The two reference signals are represented by 
 

 320                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
(
)
(
)
 
'
0
'
0
ˆ
( )
2 cos
ˆ
( )
2 sin
c
s
r t
t
r t
t
ω
θ
ω
θ
=
+
= −
+
 
(5.4-71) 
 
Let 
'
c
c
ω
ω
ω
Δ
=
−
 be the frequency error between the input signal and the frequency of the receiver VCO 
frequency, and let ( )t
φ
 be the phase difference between θ  and ˆ( )t
θ
 so that 
ˆ
( )
( )
t
t
φ
θ
θ
=
−
. We will assume 
that ( )t
φ
 is essentially a constant, with value φ . If we neglect the double frequency terms then we can write 
 
 
(
)
(
)
( )
( )cos
Re
( )
1
( )
( )sin
Re
( )
j
j
t
c
j
j
t
s
z t
d t
t
d t e e
z t
d t
t
d t e e
j
φ
ω
φ
ω
ω
φ
ω
φ
Δ
Δ
⎡
⎤
=
Δ
+
=
⎣
⎦
⎡
⎤
=
Δ
+
=
⎢
⎥
⎣
⎦
 
(5.4-72) 
 
where of course Re[x] is the real part of x. Note that the signals written in (5.4-72) are bandpass signals with 
complex envelopes d(t) and (1/j)d(t), respectively. Let D( ) be the Fourier transform of the baseband signal 
d(t): 
 
( )
( )
j t
D
d t e
dt
ω
ω
∞
−
−∞
= ∫
 
(5.4-73) 
 
It follows that  
 
(
)
(
)
(
)
(
)
*
*
( )
1/ 2
(
)
1/ 2
(
)
( )
1/ 2
(
)
1/ 2
(
)
j
j
c
j
j
s
Z
D
e
D
e
Z
D
e
j D
e
φ
φ
φ
φ
ω
ω
ω
ω
ω
ω
ω
ω
ω
ω
−
−
=
−Δ
+
−
−Δ
=
−Δ
+
−
−Δ
 
(5.4-74) 
 
where Zc( ) and Zs( ) are the Fourier transforms of zc(t) and zs(t), respectively. Now let H( ) be the transfer 
function of the each arm filter. Let yc(t) and ys(t) have the following spectra: 
 
 
(
)
(
)
(
)
(
)
*
*
( )
1/ 2
(
)
( )
1/ 2
(
)
( )
( )
1/ 2
(
)
( )
1/ 2
(
)
( )
j
j
c
j
j
s
Y
D
e H
D
e
H
Y
j D
e H
j D
e
H
φ
φ
φ
φ
ω
ω
ω
ω
ω
ω
ω
ω
ω
ω
ω
ω
ω
ω
−
−
=
−Δ
+
−
−Δ
=
−Δ
+
−
−Δ
 
(5.4-75) 
 
Now it is true that for a real filter 
*
( )
(
)
H
H
ω
ω
=
−
, where the asterisk denotes the complex 
conjugate. Therefore, (5.4-75) can be written as  
 
 
(
)
(
)
(
)
(
)
*
*
( )
1/ 2
(
)
1/ 2
(
)
( )
1/ 2
(
)
1/ 2
(
)
j
j
c
j
j
s
Y
D
e
D
e
Y
j D
e
j D
e
φ
φ
φ
φ
ω
ω
ω
ω
ω
ω
ω
ω
ω
ω
−
−
=
−Δ
+
−
−Δ
=
−Δ
−
−
−Δ
%
%
%
%
 
(5.4-76) 
 
in which the following defines 
( )
D ω
%
 
 
 
( )
( )
(
)
D
D
H
ω
ω
ω
ω
=
+ Δ
%
 
(5.4-77) 
 
Note that 
*
( )
(
)
D
D
ω
ω
≠
−
%
%
 since 
*
(
)
(
)
H
H
ω
ω
ω
ω
+ Δ
≠
−
+ Δ
 if the frequency error,   , is not zero. 
However, if we define the complex envelope ( )
d t
%
 to be the inverse transform of 
( )
D ω
%
 where 
 
 
1
( )
( )
2
j t
d t
D
e
d
ω
ω
ω
π
∞
−∞
=
∫
%
%
 
(5.4-78) 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            321
then since 
( )
cY ω  and 
( )
sY ω  indicated in (5.4-76) have the same form as zc(t) and zs(t) defined in (5.4-72), 
they are also bandpass signals and can be represented analogously as  
 
 
(
)
(
)
( )
Re
( )
1
( )
Re
( )
j
c
j
s
y t
d t e
y t
d t e
j
ω φ
ω φ
Δ +
Δ +
⎡
⎤
=
⎣
⎦
⎡
⎤
=
⎢
⎥
⎣
⎦
%
%
 
(5.4-79) 
 
Now using the complex identity 
 
 
[ ]
[
]
[
]
(
)
*
1
2
1
2
1
2
1
Re
Re
Re
Re
2
Z
Z
Z Z
Z Z
⎡
⎤
=
+
⎣
⎦ 
(5.4-80) 
 
the Costas loop error signal, ( )t
ε
, can be determined from the product of yc(t) and ys(t) from (5.4-79) as  
 
 
(
)
2
2(
)
1
1
( )
( )
( )
Re
( )
2
j
t
c
s
t
y t y t
d t
e
j
ω
φ
ε
Δ
+
⎡
⎤
=
=
⎢
⎥
⎣
⎦
%
 
(5.4-81) 
 
Equation (5.4-81) can be rewritten in the form 
 
 
(
)
2
2(
)
1
( )
Im
( )
2
j
t
t
d t
e
ω
φ
ε
Δ
+
⎡
⎤
=
⎢
⎥
⎣
⎦
%
 
(5.4-82) 
 
where Im[x] denotes the imaginary part of x. Since 
2
( )
d t
%
 is in general complex (except when 
0
ω
Δ
=
), the 
Costas error signal can be written as  
 
 
(
)
(
)
2
1
( )
( )
sin 2(
)
( )
2
t
d t
t
t
ε
ω
φ
ς
=
Δ
+
+
%
 
(5.4-83) 
 
where 
2
( )
d t
%
 has been written in its magnitude and phase angle form 
 
 
2
2
( )
( )
( )
j
t
d t
d t
e ς
=
%
%
 
(5.4-84) 
 
Clearly, when 
0
ω
Δ
=
 so that true lock can be achieved, 
( )
d t
%
 is real, so that the error signal has the well-
known form 
(
)
(1/ 2) sin 2
α
φ , and   is the average power loss through the LPF. However when 
0
ω
Δ
≠
 the 
error signal has phase variation ( )t
ς
 as well as amplitude variation, so that false lock is a very complex 
process.  
 
During sweeping for carrier acquisition the main effect that controls the loop to complete the phase 
acquisition process is dc component in 
( )t
ε
. During false lock the data term 
2
( )
d t
 has a dc value and 
harmonics, which can “beat” with the sine term in (5.4-83) to yield a dc component that can sustain false 
lock.  
 
 
5.4.8.2 Costas Loop False Lock Levels for Random Data with One-Pole Arm Filters  
 
Now consider an application of the derived equations to understand what the false lock levels are. It will be 
assumed that nonreturn to zero (NRZ) symbols are being transmitted, and each symbol (or bit if not coded) 
takes on the value of 1
±  with equal probability. From (5.4-82) we have shown that  
 

 322                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
(
)
2
2(
)
1
( )
Im
( )
2
j
t
t
d t
e
ω
φ
ε
Δ
+
⎡
⎤
=
⎢
⎥
⎣
⎦
%
 
(5.4-85) 
 
Now write the data explicitly as 
 
 
( )
(
)
k
k
d t
d p t
kT
∞
=−∞
=
−
∑
 
(5.4-86) 
 
where dk takes on the values 1
±  with equal probability, and p(t) is an NRZ pulse of amplitude 1 and duration 
T seconds. Since D( ) is the Fourier transform of d(t) we have 
 
 
( )
( )
jk T
k
k
D
d P
e
ω
ω
ω
∞
−
=−∞
= ∑
 
(5.4-87) 
 
It follows that 
( )
D ω
%
 is given by 
 
 
( )
( )
(
)
jk T
k
k
D
d P
H
e
ω
ω
ω
ω
ω
∞
−
=−∞
=
+ Δ
∑
%
 
(5.4-88) 
 
From (5.4-88) it is clear that the Fourier transform of 
( )
D ω
%
 is given by 
 
 
( )
(
)
k
k
d t
d q t
kT
∞
=−∞
=
−
∑
%
 
(5.4-89) 
 
where q(t) is defined from 
 
 
1
( )
(
) ( )
2
j t
q t
H
P
e
d
ω
ω
ω
ω
ω
π
∞
−∞
=
+ Δ
∫
 
(5.4-90) 
 
since 
(
)
H ω
ω
+ Δ
 is not symmetric with respect to zero frequency when 
0
ω
Δ
≠
, q(t) is not real in the 
general case. From (5.4-89) it follows that 
 
 
2
2
( )
(
)
(
) (
)
k n
k
n
k
k
n
d t
q t
kT
d d q t
kT q t
nT
≠
∞
∞
∞
=−∞
=−∞
=−∞
⎡
⎤=
−
+
−
−
⎣
⎦
∑
∑∑
%
 
(5.4-91) 
 
The first term in (5.4-91) is a complex periodic function with period T. This periodicity will give rise to line 
spectra with harmonics at the symbol rate. For the case of random data, the second term of (5.4-91) only 
gives rise to continuous spectra. In the case under study, in which the dk take on the values of 1
±  with equal 
probability and are statistically independent of each other, the second term has zero mean and does not affect 
false lock. Thus in the case of random data the loop error signal is equal to  
 
 
2
2(
)
1
( )
Im
(
)
2
j
t
k
t
q t
kT
e
ω
φ
ε
∞
Δ
+
=−∞
⎡
⎤
⎛
⎞
=
−
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
∑
 
(5.4-92) 
 
Equation (5.4-92) is our general result for false lock in a Costas loop with passive arm filters.  

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            323
 
Since the function 
2
(
)
k
q t
kT
∞
=−∞
−
∑
 is periodic in period T, it can be represented by a Fourier 
series of the form 
 
 
(
)
2
/
2
(
)
e
j
n t T
n
k
n
q t
kT
C
π
∞
∞
=−∞
=−∞
−
=
∑
∑
 
(5.4-93) 
 
where the coefficients Cn are given by 
 
 
2
2
/
1
( )
n
n T
C
q t
T
ω
π
=
⎡
⎤
=
⎣
⎦
F
 
(5.4-94) 
 
where F [q(t)2] denotes the Fourier transform of q(t)2. It turns out that it is easier to compute F [q(t)2] by first 
computing the time domain function q(t)2. The calculation will only be carried out for the case of a one-pole 
low pass arm filter, of the form 
 
 
(
)
0
1
( )
1
/
H
j
ω
ω ω
= +
 
(5.4-95) 
 
in which  0 = 1/RC is the 3-dB cutoff of the filter in radians/second. We will evaluate false lock in a Costas 
loop for the case that NRZ3 symbols are used in the symbol stream, and Manchester4 symbols will be 
considered in a problem. Now 
 
 
[
]
( )
( )
( )
(
)
Q
q t
P
H
ω
ω
ω
ω
=
=
+ Δ
F
 
(5.4-96) 
 
or 
 
0
1
1
( )
1
1
j T
Q
e
j
j
ω
ω
ω
ω
ω
ω
−
⎛
⎞
⎡
⎤
=
−
⎜
⎟
⎣
⎦
⎛
⎞
+ Δ
⎝
⎠+ ⎜
⎟
⎝
⎠
 
(5.4-97) 
 
Taking the inverse Fourier transform, after a little algebra 
 
 
(
) (
)
1
0
0
1
1
( )
( )
1
1
j T
q t
p t
e
j
j
j
ω
ω
ω
ω
ω
ω
−
−
⎡
⎤
⎧
⎫
⎛
⎞
⎪
⎪
=
−
−
⎢
⎥
⎜
⎟
⎨
⎬
⎜
⎟
Δ
+ Δ
+
⎢
⎥
⎪
⎪
⎝
⎠
⎩
⎭
+
⎣
⎦
F
 
(5.4-98) 
 
where F –1(x) is the inverse Fourier transform of x. Evaluating the inverse transform yields 
 
 
(
)
(
)
0
0
(
)
0
1
( )
( )
( )
(
)
1
j
t
j
t T
q t
p t
e
U t
e
U t
T
j
ω
ω
ω
ω
ω
ω
−
+ Δ
−
+ Δ
−
⎡
⎤
=
−
+
−
⎣
⎦
⎛
⎞
Δ
+ ⎜
⎟
⎝
⎠
 
(5.4-99) 
 
in which U(t) is the unit step function, starting at t = 0. Letting 
0
j
γ
ω
ω
=
+ Δ
 allows us to write (5.4-99) as 
                                                          
3 A nonreturn to zero (NRZ) symbol is simply a pulse that is either +1 or –1 over the symbol time. 
4 A Manchester symbol is a symbol that for the first half of the symbol is +1 and the second half –1, or just the reverse (i.e., +1 to –1). 

 324                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
(
)
0
1
( )
( )
( )
(
)
1
t
t T
q t
p t
e
U t
e
U t
T
j
γ
γ
ω
ω
−
−
−
⎡
⎤
=
−
+
−
⎣
⎦
⎛
⎞
Δ
+ ⎜
⎟
⎝
⎠
 
(5.4-100) 
 
which is clearly complex. Forming  
 
 
 
{
}
(
)
(
)
2
2
0
1
1
2
2
1
1
( )
1
1
2
1
2
j T
T
j T
j T
T
j T
e
e
e
j T
j
T
q t
T
j
e
e
e
j
T
ω
γ
ω
ω
γ
ω
ω
γ
ω
ω
γ
ω
ω
−
−
−
−
−
−
⎧
⎫
⎡
⎤
−
⎡
⎤
+
−+
⎪
⎪
⎢
⎥
⎣
⎦
+
⎪
⎪
⎣
⎦
=
⎨
⎬
⎡
⎤
Δ
⎪
⎪
⎡
⎤
+
+
−
+
⎣
⎦
⎢
⎥⎪
⎪
+
⎩
⎭
⎣
⎦
F
 
(5.4-101) 
 
Therefore Cn , after some algebra, is given by 
 
 
(
)
(
)
2
2
2
2
0
1
( 1)
2
2
1
1
1
2
1
2
2
sinc(
)
2
T
j n
j
n
T
j
n
n
n
e
e
T
j
n
j
e
e
e
T
j
n
n
C
γ
π
π
γ
π
γ
π
ω
γ
π
ω
π
−
−
−
−
−
−
+
+
Δ
+
+
−
+
+
⎧
⎫
⎡
⎤
−
⎣
⎦
⎪
⎪
⎪
⎪
=
⎨
⎬
⎡
⎤⎪
⎪
⎡
⎤
⎣
⎦
⎢
⎥⎪
⎪
⎩
⎭
⎣
⎦
 
(5.4-102) 
 
Let  
 
0
0
2
T
R
f T
ω
π
=
=
 
(5.4-103) 
 
where 
0
0
/(2 )
f
ω
π =
 is the 3-dB frequency of the LPF. Note that since the harmonics of { }
n
C
 are separated 
by 1/T, the possible values of 
ω
Δ
, which give rise to a dc component in the error signal and thus create an 
error voltage that drives the loop into lock, are at multiples of half the symbol rate. That is  
 
 
 
0, 
1, 
2,...
k
k
T
π
ω
Δ
=
=
±
±
 
(5.4-104) 
 
or equivalently 
/(2 )
f
k
T
Δ =
. That is to say that the false lock points are located at multiples of one-half of 
the bit rate. Clearly ω
Δ
 = 0 is true lock, and all the other values of k correspond to the false lock phenomena. 
After some algebra one can write 
 
 
(
)
(
)
(
)
2
2
2
1
( 1)
2
2
(2
)
1
1
2
2
1
4
2 (
)
2
sinc(
)
1
2
( 1)
R
R
k
n
k
n
k
e
R
j
n
k
jk
e
R
j
n
k
R
n
C
π
π
π
π
π
π
π
−
−
−
+
+
+
+
−
+
+
+
⎧
⎫
⎡
⎤
−
−
⎪
⎪
⎣
⎦
⎪
⎪
=
⎨
⎬
⎡
⎤⎪
⎪
⎡
⎤
−
⎣
⎦
⎢
⎥⎪
⎪
⎣
⎦⎩
⎭
 
(5.4-105) 
 
Now let k =−n to get the false lock points, hence 
 
 
(
)
(
)
(
)
2
2
2
1
( 1)
2
2
1
1
2
2
1
4
2
sinc(
)
1
2
( 1)
R
R
k
k
k
k
e
R
jk
jk
e
R
R
k
C
π
π
π
π
π
π
−
−
−
−
−
−
+
−
+
⎧
⎫
⎡
⎤
−
−
+
⎪
⎪
⎣
⎦
⎪
⎪
=
⎨
⎬
⎡
⎤⎪
⎪
⎡
⎤
−
⎣
⎦
⎢
⎥⎪
⎪
⎣
⎦⎩
⎭
 
(5.4-106) 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            325
Note that when 
/
k
T
ω
π
Δ
=
 the false lock point is always real. Hence 
k
C− is actually the magnitude of the 
loop error signal; that is, 
 
 
1
( )
sin(2 )
2
k
dc
t
C
ε
φ
−
=
 
(5.4-107) 
 
Evaluating C–k for k = 0, produces the value 
 
 
2
0
1
1
1
2
R
C
e
R
π
α
π
−
⎡
⎤
= −
−
=
⎣
⎦
 
(5.4-108) 
 
where   is the power loss of the baseband signal through a one-pole low-pass filter.  
For odd values of k, it can be shown [39] that 
 
 
(
)
2
2
1
    odd,    
/(2 )
2
1
2
R
k
FL
e
C
k
f
k
T
k
R
R
π
π
−
−
−
+
=
Δ
=
⎡
⎤
⎛
⎞
+ ⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
 
(5.4-109) 
 
where 
2  
FL
FL
f
ω
π
Δ
=
Δ
 is the angular false lock frequency, and 
1, 
3, 
5,...
k = ±
±
±
  Now for k even and not 
equal to zero we have 
 
 
(
)
2
2
1
     even and
0,   
/(2 )
2
1
2
R
k
FL
e
C
k
f
k
T
k
R
R
π
π
−
−
−
−
=
≠
Δ
=
⎡
⎤
⎛
⎞
+
⎢
⎥
⎜
⎟
⎝
⎠
⎢
⎥
⎣
⎦
 
(5.4-110) 
 
where 
2, 
4, 
6,...
k = ±
±
±
.  Note that the false lock level is the same for k
±  values. Figure 5.4-9 illustrates 
the levels, expressed in dB, for k = 0 through 5. 
 
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
35
30
25
20
15
10
5
0
R = f0T
Relative dc magnitude levels (dB)
0
C
1
C
2
C
3
C
4
C
5
C
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
35
30
25
20
15
10
5
0
R = f0T
Relative dc magnitude levels (dB)
0
C
1
C
2
C
3
C
4
C
5
C
 
 
Figure 5.4-9 Relative false lock levels for different lock frequencies, NRZ symbols, and a one-pole LPF. 
 
 

 326                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
Clearly the largest false lock point occurs at the offset frequency of 1/(2T) and is about 6 dB weaker 
than true lock (k = 0). As the 3-dB bandwidth increases, the false lock signal level diminishes, at least when 
R = f0T is greater than some number between 1 to 2. In fact it is possible to plot the protection as the 
difference to true lock and false lock. Define the protection level of the k-th false lock level as the ratio 
 
 
0
10log
k
k
C
PL
C
⎛
⎞
=
⎜
⎟
⎜
⎟
⎝
⎠
 
(5.4-111) 
 
These values are plotted for the five levels in Figure 5.4-10. 
 
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
0
5
10
15
20
25
30
R = f0T
False lock protection levels (dB)
0
1
/
C
C
0
2
/
C
C
0
3
/
C
C
0
4
/
C
C
0
5
/
C
C
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
5.5
6
6.5
7
7.5
8
0
5
10
15
20
25
30
R = f0T
False lock protection levels (dB)
0
1
/
C
C
0
2
/
C
C
0
3
/
C
C
0
4
/
C
C
0
5
/
C
C
 
 
Figure 5.4-10 Relative false lock protection levels for different lock frequencies, NRZ symbols, and a one-pole LPF. 
 
 
 
It can be seen that for R
0.5
≥
 the protection level is at least 6 dB for the strongest line component at 
1/(2 )
FL
f
T
Δ
=
, and increases for the higher order false lock points. Shown in Table 5.4-1 are the false lock 
levels for Manchester (Bi-φ -L) symbols in a Costas loop with one-pole arm filters, based on the results of 
Problem 13. 
It should be noted that periodic data can also cause false lock and has been analyzed in [39] and [2]. 
 
 
5.4.9 Decision-Directed Feedback Loops 
 
Consider the decision-directed feedback loop (DDFL), which also tracks a BPSK signal. The loop operates 
by estimating the modulation and then multiplies it by a delayed version of the input to remove it. The loop 
model is shown in Figure 5.4-11. 
 
Model the received signal plus thermal noise, expressed as in-phase and quadrature components in 
the form 
 
 
0
0
0
( )
2
( )sin(
)
2
( )cos(
)
2
( )sin(
)
c
s
y t
Pd t
t
n t
t
n t
t
ω
ω
ω
=
+
+
 
(5.4-112) 
 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            327
Table 5.4-1 Table of False Lock Levels at the Given Lock Frequencies for Manchester Symbols and a One-Pole LPF 
 
False Lock Offset (Hz)
0 (true lock)
f
Δ =
/(2 )    odd
f
k
T
k
Δ = ±
/(2 )    even, 
0
f
k
T
k
Δ = ±
≠
k
C
2
1
1
3
4
2
R
R
e
e
R
π
π
π
−
−
⎡
⎤
−
−
+
⎣
⎦
2
2
1
2
1
2
R
e
k
R
R
π
π
−
+
⎡
⎤
⎛
⎞
+
⎢
⎥
⎜
⎟
⎝
⎠
⎢
⎥
⎣
⎦
/ 2
2
2
3
( 1)
4
2
1
2
k
R
R
e
e
k
R
R
π
π
π
−
−
−−
+
⎡
⎤
⎛
⎞
+
⎢
⎥
⎜
⎟
⎝
⎠
⎢
⎥
⎣
⎦
False Lock Offset (Hz)
0 (true lock)
f
Δ =
/(2 )    odd
f
k
T
k
Δ = ±
/(2 )    even, 
0
f
k
T
k
Δ = ±
≠
k
C
2
1
1
3
4
2
R
R
e
e
R
π
π
π
−
−
⎡
⎤
−
−
+
⎣
⎦
2
2
1
2
1
2
R
e
k
R
R
π
π
−
+
⎡
⎤
⎛
⎞
+
⎢
⎥
⎜
⎟
⎝
⎠
⎢
⎥
⎣
⎦
/ 2
2
2
3
( 1)
4
2
1
2
k
R
R
e
e
k
R
R
π
π
π
−
−
−−
+
⎡
⎤
⎛
⎞
+
⎢
⎥
⎜
⎟
⎝
⎠
⎢
⎥
⎣
⎦
 
 
 
Delay =Ts
900
VCO
(
)
0
2 cos
t
ω
φ
−
(
)
0
2 sin
t
ω
φ
−
Symbol
estimator
(delay = Ts)
F(s)
ˆ(
)
s
d t
T
−
( )t
ε
(
)
s
t
T
ε
−
y(t)
z(t)
Delay =Ts
900
VCO
(
)
0
2 cos
t
ω
φ
−
(
)
0
2 sin
t
ω
φ
−
Symbol
estimator
(delay = Ts)
F(s)
ˆ(
)
s
d t
T
−
( )t
ε
(
)
s
t
T
ε
−
y(t)
Delay =Ts
900
VCO
(
)
0
2 cos
t
ω
φ
−
(
)
0
2 sin
t
ω
φ
−
Symbol
estimator
(delay = Ts)
F(s)
ˆ(
)
s
d t
T
−
( )t
ε
(
)
s
t
T
ε
−
y(t)
z(t)
 
 
Figure 5.4-11 Decision-directed feedback loop with delay. 
 
 
in which P is the received signal power in s, d(t) is the 1
±  valued baseband data stream,  0 is the carrier 
angular frequency in radians/second, and ns(t) and nc(t) are the quadrature noise terms in the white Gaussian 
noise model. The symbol duration is assumed to be Ts seconds. The term φ  is the slowly varying phase error 
of the loop. The error signal,  (t), generated from the upper arm (neglecting the double frequency) is given 
 
 
( )
( )sin( )
( )
( )cos( )
c
s
t
Pd t
n t
n t
ε
φ
φ
=
+
+
 
(5.4-113) 
 
The symbol estimator, derived from the lower arm, which is commonly a matched filter, produces the 
delayed estimate ˆ(
)
s
d t
T
−
, which is multiplied by  (t−Ts) to form the error control signal z(t) 
 
 
[
]
ˆ
( )
(
) (
)sin( )
ˆ
          
(
)
(
)cos( )
(
)sin( )
s
s
s
c
s
s
s
z t
Pd t
T d t
T
d t
T
n t
T
n t
T
φ
φ
φ
=
−
−
+
−
−
+
−
 
(5.4-114) 
 
Under the normal condition that the symbol rate is much greater than the loop noise bandwidth, the delay can 
be neglected as far as tracking performance is considered, so that one can write 

 328                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
ˆ
( )
(
) (
)sin( )
ˆ
          
(
)
(
)
s
s
s
c
s
z t
Pd t
T d t
T
d t
T n t
T
φ
=
−
−
+
−
−
 
(5.4-115) 
 
in which it has been noted that the noise properties are independent of φ  so that the noise term can be 
written as one baseband noise term (nc(t)). Now consider the product ˆ(
) (
)
s
s
d t
T d t
T
−
−
. Since the loop has 
many symbols within the loop memory, we can approximate the product with the time and ensemble average: 
 
 
ˆ(
) (
)
1
2
( )
s
s
E d t
T d t
T
PE
φ
φ
⎡
⎤
−
−
≅−
⎣
⎦
 
(5.4-116) 
 
where 
( )
x t
 denotes the time average of x(t), and PE(φ ) is the symbol error rate of a BPSK signal in white 
Gaussian noise. With this approximation, (5.4-115) becomes  
 
 
[
]
( )
1
2
( ) sin( )
ˆ
          
(
)
(
)
s
c
s
z t
P
PE
d t
T n t
T
φ
φ
=
−
+
−
−
 
(5.4-117) 
 
 
Now to close the loop we write 
 
 
ˆ( )
vco
K
t
s
θ
=
 
(5.4-118) 
 
Noting that in this case since we have defined the input phase as zero, that 
ˆ
( )
( )
t
t
φ
θ
= −
 and  
 
 
[
]
(
)
( )
( )
1 2
( ( )) sin( ( ))
c
s
vco
n t
T
t
K
PF s
PE
t
t
P
φ
φ
φ
−
⎧
⎫
= −
−
+
⎨
⎬
⎩
⎭
&
 
(5.4-119) 
 
where the product of the baseband delayed noise and data estimate has been approximated as the noise alone, 
since the input noise is assumed to be very broadband compared to the data process, and F(s) is the loop filter 
transfer function, expressed in the La Place variable s. It is to be noted that the quantity 
[
]
1 2
( ( )) sin( ( ))
PE
t
t
φ
φ
−
 is periodic in   radians, and therefore the DDFL has the same   radian ambiguity as 
the Costas and squaring loops.  
 
In order to analyze the control loop that is nonlinear in the error signal, it is necessary to compute 
the linear equivalent gain of the loop. This is obtained from 
 
 
[
]
{
}
0
1
2
( ) sin( )
e
d
A
PE
d
φ
φ
φ
φ
=
=
−
 
(5.4-120) 
 
In (5.4-120) ( )t
φ
 is viewed as a variable that depends negligibly on time. For matched filter detection of PSK 
data in white Gaussian noise (WGN), the symbol probability of error is given by 
 
 
(
)
2
2
cos( )
1
( )
exp
/ 2
2
cos( )
2
R
PE
t
dt
Q
R
φ
φ
φ
π
∞
⎡
⎤
=
−
=
⎣
⎦
∫
 
(5.4-121) 
 
where 
0
/
s
R
E
N
=
 is the symbol energy to one-sided noise spectral density ratio. Evaluation of Ae leads to  
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            329
 
(
)
1 2
eA
Q
R
⎡
⎤
=
−
⎣
⎦ 
(5.4-122) 
 
Hence the linearized loop equation from (5.4-119) becomes 
 
 
(
)
( )
( ) ( )
c
s
vco
e
n t
T
s
t
K
A
PF s
t
P
φ
φ
−
+
=
 
(5.4-123) 
 
Solving for ( )t
φ
 produces 
 
 
( )
(
)
( )
( )
e
vco
s
e
vco
e
A
PK
F s
n t
T
t
s
A
PK
F s
A
P
φ
−
=
+
 
(5.4-124) 
 
The phase error variance is obtained from (5.4-124) as the product of the one-sided noise spectral density and 
the one-sided noise loop noise bandwidth, and is given by 
 
 
(
)
2
2
2
2
0
0
1
1
  rad
1
2 ( 2
L
L
e
N B
N B
P
A
P
Q
R
φ
σ
⎡
⎤
⎛
⎞
⎢
⎥
=
=
⎜
⎟
⎜
⎟
⎢
⎥
−
⎝
⎠
⎣
⎦
 
(5.4-125) 
 
From Problem 13 one has for R≥2 that the following approximation is applicable 
 
 
2
2
2
0
1
1
exp(
)
  rad
2
L
N B
R
P
R
φ
σ
π
⎡
⎤
≅
+
−
⎢
⎥
⎣
⎦
 
(5.4-126) 
 
Example 7 It is of interest to plot the variance of the tracking error of the DDFL and the I & D Costas loop, 
assuming the following parameters, Rs = 50 symbols/sec, BL=5 Hz, and variable C/N0 values. The results are 
shown in Figure 5.4-12. 
 
 
10
15
20
25
30
35
40
1  10 4
1  10 3
0.01
0.1
1
10
DDFL
I & D Costas
C/N0 (dB-Hz)
Variance of tracking error (radians2)
10
15
20
25
30
35
40
1  10 4
1  10 3
0.01
0.1
1
10
DDFL
I & D Costas
C/N0 (dB-Hz)
Variance of tracking error (radians2)
 
 
Figure 5.4-12 Comparison of the DDFL and I & D Costas loops for tracking error variance as a function of C/N0. 
 
 
It can be seen that the DDFL provides lower (better) tracking error performance below about 25  
dB-Hz, for the parameters assumed in this example. 

 330                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
5.5 MULTIPHASE TRACKING LOOPS 
Equation Section (Next) 
Now we consider multiphase tracking loops. Since multiphase modulation is quite commonly used in 
communication systems, carrier tracking for this signal is required for coherent reception.  
 
 
5.5.1 The N-th Power Loop 
 
Consider an N (= M) phase signal (MPSK) of the form 
 
 
0
0
2
( )
2
sin
(
1)
  
1, 2, 3...
s t
P
t
n
n
N
N
π
ω
θ
⎛
⎞
=
+
−
+
=
⎜
⎟
⎝
⎠
 
(5.5-1) 
 
where N is normally a power of 2 (i.e., N = 2n) where n is an integer. If it is desired to track an N phase 
signal, it is sufficient to form the N-th power of the signal, which produces a trackable (unmodulated tone) 
signal. For the N phase case there will be N possible lock points that must be resolved with some additional 
information, such as a phase coded synchronization word. One of the problems in forming high powers of the 
received signal plus noise is the fact that there are high losses associated with large values of N. Figure 5.5-1 
illustrates a N-th power loop.  
 
BPF
(.)N
BPF
F(s)
VCO
N
÷
To data
demod.
Input
BPF
BPF
(.)N
(.)N
BPF
F(s)
VCO
VCO
N
÷
To data
demod.
Input
 
 
Figure 5.5-1 N-th power loop and the reference for data demodulation. 
 
 
It is seen that the N-th power of the signal plus noise is formed and then filtered to N 0, where  0 is the 
original angular carrier frequency.  
As a concrete example consider a quadriphase (N = 4) encoded signal of the form 
 
 
0
0
( )
2
sin
(
1)
  
1, 2, 3, 4
2
s t
P
t
n
n
π
ω
θ
⎛
⎞
=
+
−
+
=
⎜
⎟
⎝
⎠
 
(5.5-2) 
 
Taking the fourth power of s(t) produces 
 
 
(
)
2
4
0
0
0
( )
cos 4
(
1)2
4
non 4
 terms
2
P
s t
t
n
ω
π
θ
ω
=
+
−
+
+
 
(5.5-3) 
 
Notice that the 2 (n−1) term can be removed from the expression, since for any value of n (1, 2, 3, 4) the 
angle equals zero modulo 2 . Thus (5.5-3) can be simplified for terms near 4 0 by 
 
 
(
)
0
2
4
0
0
4
( )
cos 4
4
2
near
P
s t
t
ω
ω
θ
=
+
 
(5.5-4) 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            331
which is an unmodulated tone operating at 4 0, and thus can be tracked by a PLL tuned to 4 0. Of course 
taking the fourth power of the input signal plus noise causes a very significant fourth power loss similar to, 
but more severe than, the squaring loop squaring loss. In addition a more severe threshold will occur due to 
the fact that the error signal will contain a term of the form sin(4 ), with    the phase error. Thus one can 
expect at least a 12 dB loss in threshold for the fourth power tracking loop, when compared to a PLL. 
 
 
5.5.2 The N-Phase Costas Loop 
 
The N-phase Costas loop is a generalization of the biphase Costas loop. Figure 5.5-2 illustrates the 
quadriphase Costas loop.  
 
Data
filter
Data
filter
Data
filter
Data
filter
135º
F(s)
VCO
90º
45º
y(t)
Data
filter
Data
filter
Data
filter
Data
filter
Data
filter
Data
filter
Data
filter
Data
filter
Data
filter
135º
135º
F(s)
F(s)
VCO
VCO
90º
90º
45º
45º
y(t)
 
 
Figure 5.5-2 The quadriphase Costas loop for tracking quadriphase data signals. 
 
 
 
It is seen that the quadriphase loop needs 4 multipliers plus the final multiplier, for a total of 5. The 
error signal is proportionate to sin( Nφ ), where φ  is the phase error in the loop and N = 4 in the figure. This 
loop can be generalized to an N phase loop in which N reference signals of the form (k/N)180º are the angles 
used in the loop, and k = 1, 2, …N−1.  
 
 
5.5.3 Demod-Remod Quadriphase Tracking Loop 
 
The demod-remod quadriphase tracking loop is another type of loop that will successfully track a 
quadriphase signal. Figure 5.5-3 illustrates the demod-remod quadriphase loop. The loop works by 
estimating the data polarity on both I and Q arms, in the demodulation section, and then remodulating the 
data in the remodulation section [40] onto a locally generated carrier reference signal. This reference signal, 
when multiplied by a delayed version of the input, produces an appropriate signal for phase tracking.  
 
 
5.5.4 Modified Four-Phase Costas Loop-SQPSK Modulation 
 
Now consider a tracking loop that was used on the TDRSS multiple access ground receiver for tracking both 
a balanced and an unbalanced quadriphase signal. The signal structure is staggered quadriphase (SQPSK) 
modulation. Braun and Lindsey [41] have shown that the closed-loop approximation to the maximum a 
posteriori probability (MAP) estimate leads to a carrier demodulator, at high Eb/N0, as shown in Figure 5.5-4, 
for both balanced and unbalanced quadriphase signals.  
 

 332                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
LPF
sgn
LPF
sgn
90º
900
-
VCXO
F(s)
Delay
line
-
+
0º
90
Demodulation
Remodulation
Carrier reference
y(t)
LPF
sgn
sgn
LPF
sgn
LPF
sgn
sgn
90º
90º
90º
900
900
900
-
VCXO
VCXO
F(s)
F(s)
Delay
line
Delay
line
-
+
0º
90
Demodulation
Remodulation
Carrier reference
y(t)
 
 
Figure 5.5-3 Demod-remod quadriphase tracking loop. 
 
 
εQ
LPF
sgn
LPF
sgn
-
VCXO
F(s)
-
+
90º
0º
90º
y(t)
LQ
LI
εI
Av
/
v
Q
I
A
P
P
=
(
)
0
ˆ
2 sin
( )
t
t
ω
θ
+
(
)
0
ˆ
2 cos
( )
t
t
ω
θ
+
εQ
LPF
sgn
sgn
LPF
sgn
sgn
-
VCXO
VCXO
F(s)
F(s)
-
+
90º
90º
0º
90º
y(t)
LQ
LI
εI
Av
Av
/
v
Q
I
A
P
P
=
(
)
0
ˆ
2 sin
( )
t
t
ω
θ
+
(
)
0
ˆ
2 cos
( )
t
t
ω
θ
+
 
 
Figure 5.5-4 Modified four-phase Costas loop with arbitrary PQ/PI ratio. 
 
 
 
It is assumed that the power in the Q channel is at least as large as the I channel (that is, 
Q
I
P
P
≥
). 
It is assumed that the noise bandwidth of the low-pass filters (LPFs) is B Hz. The input quadriphase signal is 
assumed to be of the form 
 
 
(
)
(
)
0
0
( )
2(1
)
( )sin
2
( )cos
( )
Q
I
y t
Pd
t
t
Pd t
t
n t
α
ω
θ
α
ω
θ
=
−
+
+
+
+
 
(5.5-5) 
 
and the thermal noise is assumed to be expressed in terms of its in-phase and quadrature components of the 
form 
 
 
0
0
( )
2
( )cos(
)
2
( )sin(
)
c
s
n t
n t
t
n t
t
ω
θ
ω
θ
=
+
+
+
 
(5.5-6) 
 
in which nc(t) and ns(t) are white Gaussian noise processes, statistically independent of each other, and each 
has a two-sided power spectral density of N0/2. In (5.5-5) the following applies 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            333
 
 P 
is the power in the I channel (
1/ 2
α ≤
 to insure that 
Q
I
P
P
≥
) 
 
(1− )P is the power in the Q channel 
 
dQ(t) 
is the Q channel data stream 1
± , symbol duration TQ seconds 
 
dI(t) 
is the I channel data stream 1
± , symbol duration TI seconds 
 Q(t) 
is the Q channel data rate ( Q =1/TQ) 
 I(t) 
is the I channel data rate ( I =1/TI) 
Notice that in Figure 5.5-4 as PQ /PI increases the gain in the lower arm increases. The reference signals are 
given by 
 
0
ˆ
( )
2 sin(
( ))
sr t
t
t
ω
θ
=
+
 
(5.5-7) 
and  
 
0
ˆ
( )
2 cos(
( ))
cr t
t
t
ω
θ
=
+
 
(5.5-8) 
 
The output of the LPFs, which are assumed to be one-pole RC filters, are given by 
 
 
(
)
( )
1
( )cos( )
( )sin( )
( )sin( )
( )cos( )
Q
Q
I
c
s
t
Pd
t
Pd t
n t
n t
ε
α
φ
α
φ
φ
φ
=
−
−
−
+
%
%
%
%
 
(5.5-9) 
 
 
(
)
( )
1
( )sin( )
( )cos( )
( )cos( )
( )sin( )
I
Q
I
c
s
t
Pd
t
Pd t
n t
n t
ε
α
φ
α
φ
φ
φ
=
−
+
+
+
%
%
%
%
 
(5.5-10) 
 
where 
 
( )
cn t
%
 
 
is the filtered version of 
( )
cn t , 
2
0
(
)
cn
N B
σ
=
%
 
 
( )
sn t
%
 
 
is the filtered version of 
( )
sn t , 
2
0
(
)
sn
N B
σ
=
%
 
 
( )
Q
d
t
%
 
 
is the filtered version of 
( )
Q
d
t  
 
( )
Id t
%
 
 
is the filtered version of 
( )
Id t  
 
B 
 
is the arm filter noise bandwidth in Hz 
 
ˆ
φ
θ
θ
=
−
 
is the phase error in radians and assumed to be a slow function of time (the  
                            dependence on time has been suppressed) 
 
 
Out of the hard limiters we have 
 
 
(
)
( )
sgn
( )
Q
Q
L
t
d
t
=
%
 
(5.5-11) 
and  
 
(
)
( )
sgn
( )
I
I
L t
d t
=
%
 
(5.5-12) 
 
 
The error control signal, which is used to control the VCO, is given by 
 
 
( )
( )
( )
( )
( )
v
I
Q
Q
I
C
A
t L
t
t L t
φ
ε
ε
=
−
 
(5.5-13) 
 
Using (5.5-9), (5.5-10), (5.5-11), and (5.5-12) produces 
 
 
 
(
)
(
)
'
( )
1
( )sgn(
( ))sin( )
( )sgn(
( ))cos( )
         
1
( )sgn(
( ))cos( )
( )sgn(
( ))sin( )
( )
v
Q
Q
v
I
Q
Q
I
I
I
C
A
Pd
t
t
A
Pd t
t
Pd
t
t
Pd t
t
n t
φ
α
ε
φ
α
ε
φ
α
ε
φ
α
ε
φ
=
−
+
−
−
+
+
%
%
%
%
 
(5.5-14) 
where 

 334                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
'( )
( )
sgn(
( ))cos( )
sgn(
( )sin( )
        
( )
sgn(
( ))sin( )
sgn(
( )cos( )
c
v
Q
I
s
v
Q
I
n t
n t
A
t
t
n t
A
t
t
ε
φ
ε
φ
ε
φ
ε
φ
⎡
⎤
=
+
⎣
⎦
⎡
⎤
+
+
⎣
⎦
%
%
 
(5.5-15) 
 
Having the equations for the error signal, it is possible to obtain the closed-loop tracking error curve ( )
S φ  so 
that the gain—the slope of ( )
S φ that is at 
0
φ =
—can be obtained. Denote the S-curve (tracking curve) as 
 
 
{
}
( )
(
)
S
E S
φ
φ φ
=
 
(5.5-16) 
 
where E{x} denotes the expectation of x. In order to process with the solution, it is necessary to make the 
following approximations  
 
 
( )
( )
Q
Q
Q
d
t
d
t
γ
=
%
 
(5.5-17) 
and  
 
( )
( )
I
I
I
d t
d
t
γ
=
%
 
(5.5-18) 
 
in which the filtered symbols are approximated by the unfiltered symbols, but the voltage attenuation of the 
signals are accounted for. In other words, the distortion in the filtered pulsed symbols are neglected. The 
parameter γ  is the relative power loss; that is, 
 
 
,
2
,
( )
( )
I Q
I Q
d
S
f
H f
df
γ
∞
−∞
= ∫
 
(5.5-19) 
 
in which H(f) is the low-pass filter transfer function. This approximation allows us to use conditional 
expectations on random variables, rather than on random processes. With this assumption it can be shown 
[42, 43] that 
 
 
( )
(1
)
 
sin( )
        
(1
)
sin( )
 
cos( )
( )
        
(1
)
sin( )
 
cos( )
( )
        
(1
)
cos( )
 
sin( )
( )
        
(1
)
cos( )
 
sin( )
v
Q
I
v
Q
I
v
Q
I
Q
I
Q
I
S
A
P
P
A
P
P
Q F
A
P
P
Q G
P
P
Q A
P
P
φ
α γ
α γ
φ
α γ
φ
α γ
φ
γ γ
φ
α γ
φ
γ γ
φ
α γ
φ
γ γ
φ
α γ
φ
⎡
⎤
=
−
+
⎣
⎦
⎡
⎤
+
−
−
+
⎣
⎦
⎡
⎤
−
−
+
⎣
⎦
⎡
⎤
+
−
−
⎣
⎦
−
−
+
( )
Q B
⎡
⎤
⎣
⎦
 
(5.5-20) 
where 
 
 
2
1
cos( )
2
sin( )
2
1
cos( )
2
sin( )
Q
I
Q
I
F
R
R
G
R
R
α
φ
α
φ
α
φ
α
φ
=
−
+
=
−
−
 
(5.5-21) 
and 
 
2
cos( )
2
(1
) sin( )
2
cos( )
2
(1
) sin( )
I
Q
I
Q
A
R
R
B
R
R
α
φ
α
φ
α
φ
α
φ
=
+
−
=
−
−
 
(5.5-22) 
with the definition  
 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            335
 
2
exp(
/ 2)
( )
2
x
t
Q x
dt
π
∞
−
= ∫
 
(5.5-23) 
 
For the two-arm filter SNR parameters, we obtain 
 
 
0
0
2
2
Q
Q
I
I
P
R
N B
P
R
N B
γ
γ
=
=
 
(5.5-24) 
 
in which B is the one-sided noise bandwidth of the one-pole arm filters. The S-curves (discriminator curves) 
are plotted in Figures 5.5-5 through 5.5-8 for both cases.  
 
 
 
Figure 5.5-5 Normalized S-curve with balanced data rates at low SNR 
I
Q
γ
γ
=
. 
 
 
Figure 5.5-6 Normalized S-curve for the balanced case at high SNR. 

 336                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
Figure 5.5-7 Normalized S-curve for the unbalanced case at low SNR. 
 
 
 
 
Figure 5.5-8 Normalized S-curve for the unbalanced case at high SNR. 
 
 
The range of R in the balanced data and power case is 0–5 dB on Figure 5.5-5 and Figure 5.5-6, whereas it is 
10–30 dB for Figures 5.5-7 and 5.5-8. The value of R in the figures is actually the range of 
(
)
Q
I
R
R
≥
. Notice 
that stable lock points for the balanced case occur at 0º, 90º, 180º, and 270º. Thus the correct carrier phase 
must be determined from the four possible, unless four-phase differential coding is used.  
 
In the case when the data and the power are in the ratio of four to one, for the unbalanced case, only 
two stable lock points exist at 0º and 180º. Thus the receiver only has to resolve the two stable lock points via 
a correlation word, for example.  

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            337
 
Now consider the linearized tracking error variance performance. To do so it is necessary to obtain 
the slope of the S-curve at the origin, which we shall call 
'(0)
S
. It has been shown in [42] for the balanced 
case that  
 
(
)
2
'(0)
2
1 2
exp(
/ 2)
S
P
Q
R
R
R
γ
π
⎡
⎤
=
−
−
−
⎢
⎥
⎣
⎦
 
(5.5-25) 
 
where   is defined in (5.5-19) with the  understanding that  I =  Q. To compute the tracking error variance it is 
convenient to obtain the stochastic differential equation of operation. Note that the control signal can be 
written as 
 
 
( )
( )
( )
( )
S
S
S
S
φ
φ
φ
φ
⎡
⎤
=
+
−
⎣
⎦ 
(5.5-26) 
 
that is in terms of the mean value and the variation around the mean. The second term can be viewed as the 
noise on the error signal and will be denoted by N(t,φ ). It is convenient to express the error signal in terms 
of the unit gain at 
0
φ =
. Define the unit slope S-curve by 
( )
n
g φ , where it is defined through 
 
 
( )
'(0)
( )
n
S
S
g
φ
φ
=
 
(5.5-27) 
 
so that 
 
'(0)
1
n
g
=  
(5.5-28) 
 
has unit slope. Let Kv denote the VCO gain in Hz/second. Then the loop phase estimate can be expressed as  
 
 
'(0)
( )
( , )
ˆ
( )
'(0)
v
n
S
K F s
N t
g
s
S
φ
θ
φ
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(5.5-29) 
 
Now since the phase error is defined by  
 
 
ˆ
φ
θ
θ
=
−
 
(5.5-30) 
 
We can write (5.5-29) as 
 
 
'(0)
( )
( , )
( )
'(0)
v
n
S
K F s
N t
g
s
S
φ
θ
φ
φ
⎡
⎤
−
=
+
⎢
⎥
⎣
⎦
 
(5.5-31) 
 
In order to proceed it is convenient to linearize the loop and assume that 
0
θ =
. Hence (5.5-31) can be 
written in linearized form as 
 
 
'(0)
( )
( , )
'(0)
v
S
K F s
N t
s
S
φ
φ
φ
⎡
⎤
−=
+
⎢
⎥
⎣
⎦
 
(5.5-32) 
 
Solving for φ  produces the result 
 
 
( , )
( )
'(0)
N t
H s
S
φ
φ
⎡
⎤
= −
⎢
⎥
⎣
⎦
 
(5.5-33) 
 

 338                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
where H(s) is defined as 
 
 
'(0) ( )
( )
'(0) ( )
v
v
K S
F s
H s
s
K S
F s
=
+
 
(5.5-34) 
 
the closed-loop transfer function. It follows that the variance of the phase error is given by 
 
 
[
]
2
2
2
2
( 2
)
( )
     rad
'(0)
N
H j
f
S
f df
S
φ
π
σ
∞
−∞
= ∫
 
(5.5-35) 
 
where j = 
1
−, and SN(f) is the power spectral density of the equivalent noise process. Under the assumption 
that SN(f) is constant near f = 0, one can accurately approximate the variance of the phase error as  
 
 
[
]
2
2
2
(0)(2
)   rad
'(0)
N
L
S
B
S
φ
σ
=
 
(5.5-36) 
 
where BL is the closed-loop noise bandwidth and is defined by 
 
 
2
2
( 2
)
L
B
H j
f
df
π
∞
−∞
= ∫
 
Hz 
(5.5-37) 
 
 
In order to compute the tracking error variance, it is necessary to evaluate the autocorrelation 
function of the effective noise process. First consider the balanced case with NRZ symbols. The auto-
correlation function of the equivalent noise is defined by  
 
 
{
}
( , )
( , )
( , )
( ,
)
( ,
)
N
R
E
S
t
S
t
S
t
S
t
φ τ
φ
φ
φ
τ
φ
τ
⎡
⎤⎡
⎤
=
−
+
−
+
⎣
⎦⎣
⎦ 
(5.5-38) 
 
Weber [40] has shown to a good approximation that  
 
 
( , )
( )
N
N
R
R
τ φ
τ
≅
 
(5.5-39) 
 
that is at 
0
φ =
. 
Using the approximation of (5.5-39) and others with a considerable amount of algebra, it can be 
shown that  
 
 
(
)
(
)
(
)
(
)
2
2
2
2
3
2
4
/ 2
2
2
3
2
4
2
( )
( )
( )
( )
( )
2
( )
           
e
( )
2
1
3
4 2
           
( )
( )
/ 2
2
( )
          
2
( ) ( )
/ 2
( )
( )
2
( )
( )
         
2
3
R
R
n
N
n
R
n
R
n
R
n
n
R
n
R
R
e
R
R e
R
R
R
R
R
R
e
erf
R
R
R
erf
R
e
R
e
R
τ
τ
τ
τ
τ
π
π
σ
τ
τ
π
σ
τ
τ
π
τ
τ
τ
ρ τ
τ
π
τ
ρ τ
π
−
−
−
−
−
−
=
Λ
+
Λ
+
Λ
−
+
−
Λ
+
Λ
+
Λ
+
−
%
%
%
%
%
%
%
(
)
1
R +
 
(5.5-40) 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            339
where the following definitions have been used: 
 
 
( )
1
    ,
       
 0              ,
T
T
T
τ
τ
τ
τ
Λ
= −
≤
=
>
 
(5.5-41) 
 
 
2
0
N B
σ
=
 
(5.5-42) 
 
 
( )
2
0
2
x
t
erf x
e
dt
π
−
=
∫
 
(5.5-43) 
 
 
4
2
0
( )
( )
B
n
R
N Be
τ
τ
σ ρ τ
−
=
=
%
 
(5.5-44) 
 
In (5.5-44) the arm filters were assumed to be one-pole RC (Butterworth) filters. Now the power spectral 
density of the noise process is given by 
 
 
{
}
0
(0)
( )
N
N
f
S
R
τ
=
= F
 
(5.5-45) 
 
Evaluating (5.5-40), after some algebra yields 
 
    
(
)
(
)
(
)
(
)
(
)
2
/ 2
0
2
12
12
0
0
0
0
8
2
0
0
0
0
2
2
2
2
4
4 2
(0)
Re
2
/ 2
/ 2
2
2
2
          
e
2
1
1
3
6
72
6
72
2
          
4
16
128
128
    
R
R
N
R
R
BT
BT
BT
R
N
R
S
erf
R
e
erf
R
N
N
N
N
R
R
R
R
e
e
e
BT
BT
N
N
N
N e
R e
BT
B T
B T
γ
π
π
π
π
π
−
−
−
−
−
−
−
−
⎡
⎤
=
−
⎢
⎥
⎣
⎦
⎧
⎫
⎡
⎤
⎡
⎤
+
−
+
+
−
−
+
+
⎨
⎬
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
⎩
⎭
⎡
⎤
⎡
⎤
+
−
+
−
⎢
⎥
⎢
⎥
⎣
⎦⎣
⎦
(
)
2
0
2
      
2
1
3
8
R
N
e
R
R
π
−
⎡
⎤
+
−
+
⎢
⎥
⎣
⎦
 
(5.5-46) 
 
Finally using (5.5-36), (5.5-25), and (5.5-46) yields our result for the variance of the phase tracking error for 
the balanced case, when NRZ symbols are used 
 
(
)
(
)
2
/ 2
2
2
12
12
0
2
/2
8
2
2
2
2
2
2
8
e
(
/ 2)
(
/ 2)
1
e
2
1
3
1
1
1
1
(1
)
3
36
3
36
1 2 (
)
2
/
1
1
1
1
2
8
64
64
1
12
R
R
R
R
BT
BT
L
R
BT
R
R
R
R
erf
R
e
erf
R
R
R
R
R
e
N B
e
e
BT
BT
P
Q
R
R
e
e
R e
BT
B T
B T
e
φ
γ π
π
π
π
σ
γ
π
π
π
−
−
−
−
−
−
−
−
−
−
⎡
⎤
+
−
⎢
⎥
⎣
⎦
⎡
⎤
+
−
+
+
⎢
⎥
⎣
⎦
⎡
⎤
⎛
⎞
=
−
−
+
+
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
⎡
⎤
−
−
⎣
⎦
⎛
⎞
⎛
⎞
+
−
+
−
⎜
⎟
⎜
⎟
⎝
⎠⎝
⎠
+
g
(
)
2
2
1
R
R
⎧
⎫
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎬
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎡
⎤
⎪
⎪
−
+
⎢
⎥
⎪
⎪
⎣
⎦
⎩
⎭
 
(5.5-47) 
 

 340                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
It is not hard to show that when R becomes large,  
 
 
2
0
L
N B
P
φ
σ →
 
(5.5-48) 
 
 
In a similar manner to the balanced case, consider the 4 to 1 unbalanced case, for which  Q = 4 I (  
=1/5 in this case). The loop gain is given by 
 
 
(
)
(
)
(
)
(
)
'(0)
(1
)
2 (1
)
2
(1
)
2
4
(1
)
2
2
2 (1
)
4
(1
)
v
Q
I
Q
Q
v
Q
Q
I
I
I
Q
I
Q
S
A
P
P
PQ
R
A
PQ
R
R
PQ
R
PQ
R R
α γ
αγ
α γ
α
αγ
α α
αγ
α
α γ
α
α
⎡
⎤
=
−
+
⎣
⎦
⎡
⎤
−
−
−
⎢
⎥
+
⎢
⎥
+
−
⎢
⎥
⎣
⎦
⎡
⎤
+ −
+
−
−
⎣
⎦
 
(5.5-49) 
 
It can be shown that the phase error variance is given by (5.5-50) for unbalanced NRZ data in which 
 Q(t) is the Q channel data rate, ( Q =1/TQ), and  I is the I channel data rate, ( I =1/TI), and 
 Q= 4 I. 
This expression is obviously very messy, but is an expression of the tracking error variance of the 
modified Costas loop for NRZ signals when the power ratio of the Q channel to I channel is four and the data 
rate satisfies  Q= 4 I. Further results for the case of Manchester symbols are contained in [2, 42, 43]. 
 
(
)
(
)
(
)
(
)
(
)
(
)
(
)
2
2
2
/5
/5
2
8
/5
4
/5
8
2
/5
2
0
2
16
1
4
1
5
5
5
3
16
16
4
/5
4
4
/5
5
5
8
16
/5
/5
5
5
64
4
25
'(0)
I
I
Q
Q
I
Q
Q
I
I
Q
Q
Q
Q
I
Q
Q
R
R
Q
Q
Q
Q
R
R
I
Q
I
I
R
I
Q
L
R
T
R
erf
R
erf
BT
T
R
R e
erf
R
e
erf
R
R
R e
erf
R
e
erf
R
R R
e
e
N B
S
φ
γ
γ
γ
γ
π
π
γ
π
π
π
σ
−
−
−
−
−
−
⎛
⎞
⎡
⎤
⎛
⎞
−
−
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
⎝
⎠
⎡
⎤
⎢
⎥
+
−
+
⎢
⎥
⎣
⎦
⎡
⎤
⎢
⎥
+
−
+
⎢
⎥
⎣
⎦
+
+
=
(
)
/5
2
4
8
/5
5
2
/5
2
8
/5
2
/5
2
8
/5
2
/5
1
1
1
1
1
8
64
256
4
1
4
32
16
2
1
1
1
5
30
5
3
36
16
2
8
1
5
30
5
Q
I
Q
Q
I
Q
I
Q
I
R
Q
I
I
Q
R
R
R
R
R
Q
Q
R
I
Q
R
Q
R
I
Q
T
T
B
B T T
e
e
e
R
R
e
e
R
BT
R
R e
e
R
π
π
π
π
π
π
π
+
⎡
⎤
−⎢
⎥
−
−
⎣
⎦
−
−
−
−
⎡
⎤
⎛
⎞
−
+
+
⎢
⎥
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
⎧
⎫
⎪
⎪
+
−
⎨
⎬
⎪
⎪
⎩
⎭
⎡
⎤⎛
⎞
⎛
⎞
+
−
−
⎜
⎟
⎢
⎥
⎜
⎟
⎜
⎟
⎝
⎠
⎢
⎥⎝
⎠
⎣
⎦
⎡
⎛
⎞
+
−
⎜
⎟
⎝
⎠
⎣
2
2
8
/5
2
/5
1
1
3
36
1
2
1
8
1
1
12
5
3
5
Q
I
I
R
R
I
Q
BT
e
R
e
R
π
π
−
−
⎧
⎫
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎬
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎤⎛
⎞
⎪
⎪
−
⎢
⎥⎜
⎟
⎪
⎪
⎢
⎥⎝
⎠
⎦
⎪
⎪
⎪
⎪
⎡
⎤
⎛
⎞
⎛
⎞
⎪
⎪
−
+
−
⎢
⎥
⎜
⎟
⎜
⎟
⎪
⎪
⎝
⎠
⎝
⎠
⎢
⎥
⎣
⎦
⎩
⎭
 
(5.5-50) 
 
 
5.6 FREQUENCY LOCKED LOOPS 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            341
 
Commonly a phase locked loop cannot handle the frequency acquisition problem readily unless augmented 
by some acquisition aid such as a frequency sweep across the frequency band of interest. Normally, only 
when the carrier loop (PLL, squaring, or Costas, for example) is within the frequency error of the one-sided 
loop noise bandwidth does frequency and phase acquisition occur quickly. Consequently frequency locked 
loops (FLL) are often employed for initial (frequency) acquisition, and then the loop configuration is 
switched to a carrier tracking loop (phase tracking). Whenever the carrier tracking loop is detected to have 
lost track, the FLL will be configured to aid in the frequency reacquisition. Now we will consider a FLL 
configuration.  
 
 
5.6.1 The Cross Product FLL 
Equation Section (Next) 
The cross product FLL (CPFLL) is a useful discriminator model for tracking BPSK signals. Let the input 
signal plus white Gaussian noise be modeled as 
 
 
(
)
0
( )
2
( )cos
( )
y t
Pd t
t
n t
ω
θ
=
+
+
 
(5.6-1) 
 
where P is the received signal power in W, and d(t) is the NRZ data bits with data bit duration Tb. In addition 
  is the fixed unknown phase of the carrier, and n(t) is the white Gaussian noise process with two-sided noise 
spectral density N0/2. Assume that the arm integrators are T seconds long and exactly KT integration 
comprises one bit duration, so that  
 
 
bT
KT
=
 
(5.6-2) 
 
The model for the CPFLL is shown in Figure 5.6-1 [44–46]. For spread spectrum systems the timing of the 
data will be known very accurately after code acquisition, since the data is related to the direct sequence 
code. Therefore integrators can be used in the arm filters for frequency tracking applications. Bit timing is 
assumed to be known in what follows. Notice that each output is multiplied by the delayed version of the 
other branch, which is then differenced to form the error control signal. This is enhanced by summing for K’ 
samples where K’ can be equal to K or some smaller value depending on the frequency range of the 
discriminator that is needed.  
 
y(t)
( )
1
1
k
k
t
t
dt
T
−∫
A/D
A/D
Delay=T
Delay=T
-
+
-
( )
'
1
.
K
∑
Loop
filter
F(z)
NCO
0
1
2 cos(
)
t
ω
θ
+
0
1
2 sin(
)
t
ω
θ
+
( )
1
1
k
k
t
t
dt
T
−∫
y(t)
( )
1
1
k
k
t
t
dt
T
−∫( )
1
1
k
k
t
t
dt
T
−∫
A/D
A/D
Delay=T
Delay=T
Delay=T
Delay=T
-
+
-
( )
'
1
.
K
∑
Loop
filter
F(z)
Loop
filter
F(z)
NCO
NCO
0
1
2 cos(
)
t
ω
θ
+
0
1
2 sin(
)
t
ω
θ
+
( )
1
1
k
k
t
t
dt
T
−∫( )
1
1
k
k
t
t
dt
T
−∫
 
 
Figure 5.6-1 The cross product FLL (CPFLL) block diagram. 
 
 
 
Natali [46] has shown that the discriminator function for this FLL is given by 

 342                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
2
( )
(
/ 2)sinc
sin(
)
2
T
D
P
T
ω
ω
ω
Δ
⎛
⎞
=
Δ
⎜
⎟
⎝
⎠
 
(5.6-3) 
 
where    is the angular frequency error (rad./s) and T is the integration time of the integrate-and-dump 
filters. The discriminator function when P = 1 and T = 0.02 second is plotted in Figure 5.6-2. 
 
50
40
30
20
10
0
10
20
30
40
50
0.6
0.4
0.2
0
0.2
0.4
0.6
Δf (Hz)
Discriminator output, D(ω)
50
40
30
20
10
0
10
20
30
40
50
0.6
0.4
0.2
0
0.2
0.4
0.6
Δf (Hz)
Discriminator output, D(ω)
 
 
Figure 5.6-2 The discriminator function for the CPFLL with T = 20 ms. 
 
 
 
Natali has also shown that the variance of the tracking error is given by the expression 
 
                
[
]
2
2
2
2
1
1
1
1
1
   Hz , 
2
2
1
2
1
2
f
T
L
T
K
K
N
SNR
KB T
K
K
K
SNR
σ
π
Δ
⎡
⎤
−
⎛
⎞
⎛
⎞
=
+
≥
⎢
⎥
⎜
⎟
⎜
⎟
−
−
⎝
⎠
⎝
⎠
⎣
⎦
 
(5.6-4) 
 
where BL is the one-sided loop noise bandwidth of the FLL and 
0
(
/
)
T
SNR
PT N
=
 is the signal-to-noise 
ratio in the T second integration time. Other configurations are possible but will not be discussed here. Refer 
to [45, 47] for other configurations. Sometimes the loop configuration is modified to avoid computing the 
cross product over two adjacent bits. If the bit changes sign during the computation, it will introduce a small 
error; usually this term is dropped to avoid this problem. An arc-tangent detector is discussed in [47].  
 
Normally the carrier loop will be fed back to mixer located before the code tracking loop. This 
provides for the carrier to be where it should be and prevents correlation loss due to carrier frequency errors. 
 
In Section 5.4.6 a modified Costas loop was described that has better frequency tracking capabilities 
and diminishes the propensity for false lock, but has somewhat poorer phase tracking capabilities when 
compared to a similar unmodified Costas loop.  
 
 
5.7 SUMMARY 
 
This chapter dealt with carrier tracking, including residual carrier signal tracking, and suppressed carrier 
signal tracking, and a brief summary of frequency synthesizers. First, the structure of a phase locked loop 
(PLL) was derived from maximum-likelihood theory. Then the stochastic differential equation was derived 
for the PLL. This was followed by linear and nonlinear results for the PLL. A discussion of frequency 
synthesizers was presented discussing: (1) digital frequency synthesis, (2) direct frequency synthesis, and (3) 
indirect frequency synthesis.  

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            343
Various loop configurations for tracking suppressed carrier signals were presented, including 
various forms of a Costas loop, along with a discussion of lock detectors for these loops. A theory of false 
(frequency) lock in a Costas loop was presented. Finally multiphase tracking loops including the N-phase 
Costas loop and the demod-remod loop, followed by a detailed analysis of the tracking performance of the 
modified four phase loop, were presented.  
We concluded our discussion of tracking loops by presenting a cross product frequency lock loop 
indicating the variance of its frequency error.  
 
References 
[1] 
J. G. Proakis, Digital Communications, 4th ed., New York: McGraw-Hill, 2001, Chapter 6. 
 
[2] 
J. K. Holmes, Coherent Spread Spectrum Systems, New York: Wiley-Interscience, 1982. 
 
[3] 
R. C. Tausworthe, “Theory and Practical Design of Phase-Locked Receivers” Jet Propulsion Lab. Tech., Vol. 1, Report No. 
32-819, February 15, 1966. 
 
[4] 
F. M. Gardner, Phaselock Techniques, 2nd ed., New York: Wiley-Interscience, 1979. 
 
[5] 
A. Blanchard, Phase-Locked Loops Application to Coherent Receiver Design, New York: Wiley-Interscience Publication, 
1976. 
 
[6] 
W. F. Egan, Frequency Synthesis by Phase Lock, New York: Wiley-Interscience Publication, John Wiley & Sons, 1981. 
 
[7] 
A. J. Viterbi, Principles of Coherent Communication, New York: McGraw-Hill, 1966. 
 
[8] 
R. C. Tausworthe and R. B. Crow, “Practical Design of Third-Order Tracking Loops,” JPL Interim Report 900-450, April 27, 
1971. 
 
[9] 
D. Y. Abramovitch, “Analysis and Design of a Third Order Phase-Lock Loop,” 1988 IEEE Military Communications 
Conference, October 1988, pp. 23–26. 
 
[10] C. Cahn, “Spread Spectrum Applications and State-of-the-Art Equipments,” Paper no. 5, AGARD-NATO Lecture series, No. 
58, May 29–June 6, 1973. 
 
[11] W. C. Lindsey and M. Simon, Telecommunication Systems Engineering, Englewood Cliffs, NJ: Prentice-Hall, 1973. 
 
[12]  E. Drucker, “Model PLL Dynamics and Phase-Noise Performance, Model PLL Dynamics, Part 2,” Microwaves & RF, 
February 2000.  
 
[13] L. S. Cutler and C. L. Searle, “Some Aspects of the Theory and Measurement of Frequency Standards,” Proc. IEEE, Vol. 54, 
1966. 
 
[14] B. M. Smith, “The Phase Lock Loop with Filter: Frequency of Skipping Cycles-Theoretic Considerations,” Letters to the 
Editor, Proc. of IEEE, 1966, pp. 295. 
 
[15] J. P. Frazier and J. Page, “Phase-Lock Loop Frequency Acquisition Study,” IRE Trans. on Space Electronics and Telemetry, 
SET-8, September 1962, pp. 210–227. 
 
[16] V. I. Tikhonov, “The Operation of Phase and Automatic Frequency Control in the Presence of Noise,” Automation and 
Remote Control, Vol. 21, No. 3, 1960, pp. 209–214. 
 
[17] R. Peterson, R. Ziemer, and D. Borth, Introduction to Spread Spectrum Communications, Englewood Cliffs, NJ: Prentice-
Hall, 1995. 
 
[18] V. Manassewitsch, Frequency Synthesizers: Theory and Practice, 2nd ed., New York: John Wiley & Sons, 1976. 
 
[19] F. Oropeza and J. P. Schoenberg, “Binary Frequency Synthesis,” Frequency, September/October 1976, pp. 14–17.  
 
[20] R. Papaiech and R. Coe, “New Technique Yields Superior Frequency Synthesis at Lower Cost,” Electronic Design News, 
October 20, 1975, pp. 73–79. 
 
[21] U. L. Rhode, Microwave and Wireless Synthesizer Theory and Design, New York: Wiley-Interscience, 1997. 

 344                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
[22] C. Diorni and T. Humes, TRW notes posted on the Internet. 
 
[23] TRW notes on indirect synthesizer phase noise, circa 1970. 
 
[24] R. L. Didday and W. C. Lindsey, “Subcarrier Tracking Methods and Communication System Design,” IEEE Trans. on 
Communications Technology, Vol. 16, August 1968. 
 
[25] H. L. Van Trees, “Optimum Power Division in Coherent Communication Systems,” Lincoln Lab., Lexington, MA, Technical 
Report 301, 1963. 
 
[26] A. J. Viterbi, Principles of Coherent Communications, New York: McGraw-Hill, 1966. 
 
[27] J. W. Layland, “An Optimum Squaring Loop Prefilter,” IEEE Trans. on Communications Technology, October 1970. 
 
[28] J. J. Stiffler, Theory of Synchronous Communications, Chapter 8, Englewood Cliffs, NJ: Prentice-Hall, 1971. 
 
[29] J. G. Proakis, Digital Communications, 2nd ed., New York: McGraw-Hill, 1989. 
 
[30] S. Riter, “An Optimum Phase Reference Detector for Fully Modulated Phase Shift Keyed Signals,” IEEE AES-5, No. 4, July 
1969. 
 
[31] M. K. Simon, “Tracking Performance of Costas Loops with Hard-Limited In-Phase Channels,” IEEE Trans. on 
Communications, April 1978. 
 
[32] C. Cahn, “Improving Frequency Acquisition of a Costas Loop,” IEEE Trans. on Communications, Vol. COM-25, No. 12, 
December 1977. 
 
[33] J. K. Holmes, “Unpublished Notes on the Effective Tracking Error Variance Effect of Removing One Arm Filter for the 
Costas Loop,” August 23, 1977.  
 
[34] R. Leonhardt and H. H. Fleischmann, “Pull-In Range of Phase-Lock Circuits with Arbitrary Feedback Filter,” The Radio and 
Electronic Engineer, August 1978. 
 
[35]  W. C. Lindsey, Synchronization Systems in Communication and Control, Englewood Cliffs, NJ: Prentice-Hall, 1972.  
 
[36] J. A. Develet, Jr., “The Influence of Time Delay on Second-Order Phase-Locked Loop Acquisition Range,” STL Report No. 
9332.6-9, September 1962. 
 
[37] R. C. Tausworthe, “Acquisition and False-Lock Behavior of Phase Locked Loops with Noisy Inputs,” JPL SPS 37-46, Vol. 
IV. 
 
[38] G. Hedin, J. K. Holmes, W. C. Lindsey, and K. T. Woo, “Analysis of False Lock Phenomena in Costas Loops During 
Acquisition,” TRW Systems Memo SCT-50-76-249/KTW, July 15, 1976. 
 
[39] G. Hedin, J. K. Holmes, W. C. Lindsey and K. T. Woo, Theory of False Lock in Costas Loops, IEEE Trans. on 
Communications Vol. COM-26, No. 1, January 1978, pp. 1–12. 
 
[40] C. Weber, D. Vandervoet, R. Salcedo, and D. Jarett, “Spacecraft Switched TDMA Analyses and Laboratory Demonstration,” 
TRW Final report, Vol. II, No. 25588-6001-RV-00, February 1976. 
 
[41] W. R. Braun and W. C. Lindsey, “Carrier Synchronization Techniques for Unbalanced QPSK Signals, Parts I & II,” IEEE 
Trans. on Communications, September 1978. 
 
[42] J. K. Holmes and H. C. Osborne, “DG-2 Modified Costas Loop Tracking Performance, Part I, Balanced QPSK,” TRW Memo 
No. LRD-78-200-035, November 1978. 
 
[43] J. K. Holmes and H. C. Osborne, “DG-2 Modified Costas Loop Tracking Performance, Part II, Unbalanced QPSK,” TRW 
Memo No. LRD-78-200-036, November 1978. 
 
[44] F. D. Natalie, “AFC Tracking Algorithms,” IEEE Trans. on Communications, Vol. COM-32, No. 8, August 1984. 
 
[45] L. H. Enloe, “Decreasing the Threshold in FM by Frequency Feedback,” Proc. IRE, Vol. 50, January 1962. 
 
[46] F. D. Natali, “Noise Performance of a Cross-Product AFC with Decision Feedback for DPSK Signals,” IEEE Trans. on 
Communications, Vol. COM-34, No. 3, March 1986, pp. 303–307. 
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            345
[47] G. McGraw and B. Schnaufer, “A Modified Frequency-Locked Loop for Improved WAAS Carrier Tracking,” Proceedings 
of the ION GPS-95, 8th International Meeting, Palm Springs CA, Part 2 of 2, September 12–15, 1995. 
 
Problems 
 
1. Starting with (5.2-31), (5.2-34), and the fact that 
ˆ
φ
θ
θ
=
−
, show that (5.2-35) follows. 
 
2. Using (5.2-34) and letting  
 
 
3
2
2
2
2
2
( )
n
n
n
s
s
PKF s
s
ω
ω
ω
+
+
=
 
(P5-1) 
 
show that the Jaffe-Rechtin closed-loop transfer function is given by 
 
3
2
2
3
2
2
3
2
2
( )
2
2
n
n
n
n
n
n
s
s
H s
s
s
s
ω
ω
ω
ω
ω
ω
+
+
=
+
+
+
 
 
 
 
(P5-2) 
 
In addition, show that 
2
6
6
6
1
( )
/(
)
n
H f
f
f
f
−
=
+
 for this third-order loop. 
 
3. For the passive second-order PLL show that  
 
2
1
2
2
2
2
1
1
1
2
    
   
2
2
1
L P
r
r
B
for
r
τ
τ
τ
τ
τ
τ
+
+
=
≅
⎛
⎞
+
⎜
⎟
⎝
⎠
?
 
 
     (P5-3) 
 
where  
 
2
2
1
PK
r
τ
τ
=
 
1
1
2
2
2
(
) ,  
R
R C
R C
τ
τ
=
+
=
 
(P5-4) 
 
4. Starting from (5.2-48) show that the two-sided loop noise bandwidth for the Jaffe-Rechtin third-
order PLL is given by 
 
 
3
3
5
5
2
   or    
3
6
n
n
L
L
B
B
ω
ω
=
=
 
(P5-5) 
 
5. Show that for the ideal second-order PLL of (5.2-44) the loop noise bandwidth can be written as  
 
 
2
1
2
4
n
L I
B
ω
ς
ς
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
(P5-6) 
where  
 
 
1
2
1
2
n
PK
PK
ω
τ
τ
ς
τ
=
=
 
(P5-7) 
 
 
Hint: Use the same definition of r as in Problem 3. 
 

 346                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
6. Show that the steady state probability density for the first-order PLL can be approximated by a 
Gaussian probability density for small phase error variance. 
 
7. Show that for when the low-pass equivalent of the n-pole Butterworth filter bandpass filter has 
magnitude squared response of 
 
 
2
2
0
1
( )
1
LP
n
H
f
f
f
=
⎛
⎞
+ ⎜
⎟
⎝
⎠
 
(P5-8) 
 
where f0 is the 3-dB bandwidth, then 
'
LP
B
 is given by 
 
 
'
1
1
2
LP
LP
B
B
n
⎛
⎞
=
−
⎜
⎟
⎝
⎠
 
(P5-9) 
 
and the equivalent linearized tracking error variance of the squaring loop is given by 
 
 
'
2
2
0
0
1
1
    rad
2
2
e
L
N B
N W
P
P
n
α
σ
α
α
α
Φ
⎡
⎤
⎛
⎞
=
+
−
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
 
(P5-10) 
 
8. Show that the autocorrelation function of a random amplitude, fixed duration, rectangular signal 
pulse that is statistically independent from pulse to pulse is given by 
 
 
2
( )
1
    
              0                     
N
N
R
T
T
T
τ
τ
σ
τ
τ
⎛
⎞
=
−
≤
⎜
⎟
⎝
⎠
>
 
(P5-11) 
 
9. Determine the linearized tracking performance of the modified Costas loop, with a one-pole 
Butterworth arm filter. Assume that no frequency error exists. Model the received signal plus WGN 
as  
 
 
(
)
0
( )
2
( )sin
( )
y t
Pd t
t
n t
ω
θ
=
+
+
 
 
        10. Using Figure 5.4-5, show that the error signal is given by  
 
 
 
(P5-12) 
 
                  
sin(2 )
( )
( ) ( )
( )
( )sin( )
( )
( )cos( )
( )
( )
2
s
c
c
s
Z t
Pd t d t
Pd t n t
Pd t n t
n t n t
φ
φ
φ
=
+
+
+
%
%
%
%
           (P5-13) 
 
where 
2
m
k  has been assumed to be unity for convenience, and the tildes denote filtering by the low 
pass filters. Letting 2φ = Φ  show that the differential equation of operation is given by 
 
                                    
(
)
( )
( )
( ) ( )sin(
( ))
( ) ( )
( )
( )
c
c
s
t
KF s Pd t d t
t
Pn t d t
n t n t
Φ
+
Φ
= −
−
%
%
&
%
                  (P5-14) 
 
Now show that the time average of ( ) ( )
d t d t
%
 has the value of  
 

 
                                                    Carrier Tracking Loops and Frequency Synthesizers 
    
 
            347
 
*
*
*
1
( ) ( )
( )
( )
( )
( )
( )
d
d t d t
P f H
f P
f df
S
f H
f df
T
∞
∞
−∞
−∞
=
=
∫
∫
%
 
(P5-15) 
 
Evaluate the above average by noting that 
 
 
{
}
*
*
2
0
*
2
2
0
0
0
1
1
1
Re
( )
Re
Re
( )
1
1
1
f
j f
H
f
H f
f
f
f
j f
f
f
⎧
⎫
⎧
⎫
⎛
⎞
⎛
⎞
⎪
⎪
−
⎪
⎪
⎜
⎟
⎜
⎟
⎪
⎪
⎪
⎪
⎝
⎠
⎜
⎟
=
=
=
=
⎨
⎬
⎨
⎬
⎜
⎟
⎛
⎞
⎛
⎞
⎪
⎪
⎪
⎪
+
⎜
⎟
+
+
⎜
⎟
⎜
⎟
⎪
⎪
⎪
⎪
⎝
⎠
⎩
⎭
⎝
⎠
⎝
⎠
⎩
⎭
 
(P5-16) 
 
Based on this show that  
 
 
2
( ) ( )
( )
( )
d
d t d t
S
f
H f
df
α
∞
−∞
=
=
∫
%
 
(P5-17) 
Now show that  
 
 
( ) ( )
( )
( )
( )
( )
( )
c
c
s
Pn t d t
n t n t
PKF s
t
s
PKF s
P
α
α
α
⎡
⎤
−
−
Φ
=
⎢
⎥
+
⎣
⎦
%
%
 
(P5-18) 
 
Finally, show that the linearized effective tracking error variance is given by 
 
 
2
0
0
4
1
L
LP
N B
N B
P
P
σ
α
α
Φ
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(P5-19) 
 
11. Show that the relationship between the two bandwidths used in the linearized tracking error variance   
LP
B
 and 
'
LP
B
 (see (5.4-28)) for a Butterworth arm filter is given by 
 
 
'
1
1
2
LP
LP
B
B
n
⎛
⎞
=
−
⎜
⎟
⎝
⎠
 
(P5-20) 
 
where the low pass Butterworth filter has a frequency response given by 
 
 
2
2
0
1
( )
1
LP
n
H
f
f
f
=
⎛
⎞
+ ⎜
⎟
⎝
⎠
 
(P5-21) 
 
where f0 is the 3 dB bandwidth of the low pass filter. 
 
     12. Consider the false lock of a Costas loop when Manchester symbols are used. Following the  
            approach in the book for the NRZ symbols show that 
 
 
2
2
1
1
sin(
)
1
2
( 1)
1
2( 1)
4
cos
( 1)
2
2
1
1
2
2
k
k
R
k
R
k
k
j
k
k
R
C
e
e
k
k
k
R
j
j
R
R
π
π
π
π
π
π
−
−
−
⎛
⎞
⎛
⎞
+
⎜
⎟
⎜
⎟⎡
⎤
⎧
⎛
⎞
⎜
⎟
=
−
−
+
−
+
+ −
⎨
⎜
⎟
⎜
⎟
⎢
⎥
⎛
⎞
⎜
⎟⎩
⎝
⎠
⎣
⎦
⎜
⎟
−
+ ⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎝
⎠
    (P5-22) 

 348                                     Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
From this result show that the false lock levels of Table 5.4-1 follow. 
 
13. Consider the approximate performance for the DDFL (Section 5.4-8) when R ≥2. Note that  
 
 
2
1
( )
exp(
/ 2)
2
Q x
x
R
π
≅
−
 
(P5-23) 
 
 
is a good approximation when R≥2. Also note that  
 
 
 
1
1
1
x
x ≅+
−
 
(P5-24) 
 
for small x. Using these two approximations, show that the tracking error variance is given by  
 
 
 
2
2
0
1
1
exp(
)
2
L
N B
R
P
R
φ
σ
π
⎡
⎤
≅
+
−
⎢
⎥
⎣
⎦
 
(P5-25) 
 
when R≥2. 
 

CHAPTER 6 
Code Acquisition in Direct Sequence Receivers 
 
 
6.0 INTRODUCTION 
Equation Chapter 6 Section 0 
Thischapter deals with pseudonoise (PN) code acquisition techniques based primarily on both active search 
methods and passive matched filter search methods; however, other approaches to achieving acquisition will 
also be discussed. By code acquisition we mean the aligning of the local receiver PN code with the received 
PN code to within a fraction of a code chip (of duration Tc seconds). Complete synchronization is effected 
when both code acquisition has been accomplished and the code loop acquisition transient has settled out into 
steady state tracking. 
 
Within the realm of active search methods for obtaining acquisition, both fixed dwell time methods, 
including single and double dwell time schemes, as well as variable dwell time methods will be discussed. 
Parallel processing will be analyzed, which is the method of choice for modern code acquisition systems, 
when acquisition time is important. Although most of the development in this chapter is for PN code 
acquisition, there is also a brief section on acquisition of frequency-hopped systems. 
 
There are a number of parameters to consider when designing an acquisition system for a spread 
spectrum receiver. The frequency uncertainty and time uncertainty are two parameters that are of major 
importance in acquisition performance. Another design parameter, for example, is the receiver front-end 
bandwidth. This bandwidth is a function of both the signal spread spectrum bandwidth and the difference 
between the received signal carrier frequency and the receiver oscillator heterodyning frequency. The time 
uncertainty that is an important parameter includes both the actual clock uncertainties between the 
transmitted clock and the receiver clock and the range uncertainty. The larger the effective time uncertainty, 
the greater the time it will take to achieve acquisition, or the greater parallel searching is required for a given 
acquisition time requirement. The data rate also affects the performance of the link, since the greater the data 
rate the greater the required signal power to maintain a reasonable bit error rate, and in some situations the 
shorter the coherent correlation time available.  
 
In addition to the parameters described earlier, the type of acquisition circuit that is used also affects 
the acquisition time performance. Of course the greater the number of acquisition circuits that are used in 
parallel, the faster the acquisition of the PN signal is accomplished.  
 
One common method to obtain code acquisition that only utilizes a single correlator is to first 
advance the local code relative to the received code the maximum expected amount (minimum delay). Then 
the product of the local receiver code and the received code is correlated and filtered to the data bandwidth 
and detected with a square law detector. For baseband implementations this is done at baseband with a two 
channel I-Q arrangement, and for bandpass implementations only one RF channel is needed. The resultant 
signal is then integrated for a fixed time duration that is known as the coherent dwell time (or correlation 
time). In many designs a number of these coherent integrations are added noncoherently to form a 
noncoherent integration period. At the end of the integration period the output of the noncoherent sum is 
compared to a fixed, known threshold. If the output is greater than the threshold the system declares, the 
signal is synchronized. If the output is not greater than the threshold, it is presumed that the signal is not 
located at that time delay and the system retards the code phase by some fraction of a code chip (usually one 
half of a code chip) and the process starts over at this code phase. 
This process continues until either the code is detected or the whole time uncertainty is searched, 
and the process is started over again by advancing the local code the maximum expected amount repeating 
 
                                               
349

 350                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
the process. This method of acquisition is known as an active search method and the system that obtains 
acquisition is known as a conventional sliding correlator. Typically in modern receivers sliding correlators 
are implemented digitally, with many operating in parallel. 
 
Another method that is used in code acquisition is passive matched filtering. Here the local code (or 
a segment of it) is stored in a register and a chip-by-chip comparison is made (by summing the chip-by-chip 
comparison up). The result is that when the received code and the local code are lined up in time, a large 
pulse occurs at the output of the correlator, which signifies the occurrence of code acquisition (code 
alignment). This method is typically much faster than a single active search method but may not be 
applicable to all systems depending on the interference environment which may include jamming. Passive 
matched filters are commonly implemented digitally and commonly at baseband so that both an I and Q 
correlator are needed. 
 
A simplified pseudonoise binary phase shift keyed (PN BPSK) acquisition and tracking system, 
along with the transmitter and receiver, is shown in Figure 6.0-1. In Figure 6.0-1(a) a bandpass version is 
shown.  
 
Message
modulator
Carrier 
generator
Phase 
modulator
PN code
generator
Bandpass
filter
BPF
(mod. BW)
Search
Mode
o
o
PN code
gener.
BPF
BPF
Loop
filter
o
BPF
Carrier
tracking
loop
Matched
filter
Bit
sync
Data
estimate
Acquisition
Tracking
-
L
E

 
0
.
d
dt

qq
Acq
Trk
( )2
( )2
o
<  Th ?
No
Switch
to
track
mode
Yes
>
1
(.)
nc
N
k 
sw
Transmitter
( )2
Receiver
Message
modulator
Carrier 
generator
Phase 
modulator
PN code
generator
Bandpass
filter
BPF
(mod. BW)
Search
Mode
o
o
PN code
gener.
BPF
BPF
Loop
filter
o
BPF
Carrier
tracking
loop
Matched
filter
Bit
sync
Data
estimate
Acquisition
Tracking
-
L
E

 
0
.
d
dt

qq
Acq
Trk
( )2
( )2
( )2
( )2
o
<  Th ?
No
Switch
to
track
mode
Yes
>
1
(.)
nc
N
k 
sw
Transmitter
( )2
( )2
Receiver
 
 
Figure 6.0-1 (a) BPSK transmitter and receiver with acquisition and tracking functions using a bandpass acquisition system.  
 
 
The bandpass version of the acquisition and tracking model processes the signal at the carrier (or 
IF). First consider the acquisition circuit. The filtered signal plus noise and possible interference and 
jamming is multiplied by the local code set to the minimum delay possible; it then filters it to a bandwidth 
that depends on the modulation bandwidth plus the Doppler frequency offset. In this introduction it is 
assumed that there is no carrier frequency error. The resulting signal plus noise (or noise plus interference 
plus jamming if they are present) is integrated for d seconds, which is called the correlation time. Nnc 
noncoherent correlations are summed (thus, 
'
D
= NncD is the total noncoherent correlation time), and this 
summation is compared to a predetermined threshold. If the noncoherent sum exceeds the threshold, a 
detection is assumed, and the code tracking function is initiated. Otherwise it is assumed that the local code 
was not sufficiently close to the received code, and the received code delay is advanced a small fraction of a 
code symbol (commonly 1/2 of a code symbol) and the process is tried again on the new code timing 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          351 
hypothesis. If the noncoherent correlation signal is above the threshold the code loop is turned on and a 
longer correlation is tried to hopefully verify the first “hit.” If the signal-to-noise ratio is sufficient, then 
normally the code loop will lock on to the received code and the second noncoherent correlation will verify 
the true “hit.” Code-tracking loops will be discussed in the next chapter; however, the lower portion of the 
block diagram shows the elements of the code tracking loop. Once code loop synchronism is obtained the 
carrier loop will be initiated, and when it has stabilized the data can be demodulated. Normally bit timing can 
be obtained from the code itself. When the carrier frequency error between the received signal and the local 
receiver frequency is not negligible, both time uncertainty and frequency uncertainty must be searched. 
In Figure 6.0-1(b) a baseband version is illustrated. The description of its operation is very similar to the 
bandpass version, except the processing is done at baseband with I and Q baseband processes. Modern day 
receivers usually process the signals at baseband. 
 
AMP
OSC
PN code
generator
No
Yes
Decision
1
(.)
nc
N
k 
BPF
BPF
Carrier
tracking
loop
Matched
filter
Bit
sync
Data
estimate
I&D
I&D
Loop
filter
Tracking
-
L
E
( )2
( )2
...
sw
Acq
Trk
Acquisition
Switch
to
track
mode
Data demodulation
and detection
Square
(
1)
(.)
b
b
kT
k
T
dt

0
2 cos(
)
r
t



Square
(
1)
(.)
b
b
kT
k
T
dt

0
2 sin(
)
r
t




Search
mode
}
}
}
AMP
OSC
PN code
generator
No
Yes
Decision
1
(.)
nc
N
k 
BPF
BPF
Carrier
tracking
loop
Matched
filter
Bit
sync
Data
estimate
I&D
I&D
Loop
filter
Tracking
-
L
E
( )2
( )2
( )2
( )2
...
sw
Acq
Trk
Acquisition
Switch
to
track
mode
Data demodulation
and detection
Square
(
1)
(.)
b
b
kT
k
T
dt

Square
(
1)
(.)
b
b
kT
k
T
dt

(
1)
(.)
b
b
kT
k
T
dt

0
2 cos(
)
r
t



Square
(
1)
(.)
b
b
kT
k
T
dt

(
1)
(.)
b
b
kT
k
T
dt

0
2 sin(
)
r
t




Search
mode
}
}
}
 
 
Figure 6.0-1 (b) Baseband acquisition system of the receiver for BPSK PN code modulation. 
 
 
For both figures the modulator modulates both data and the PN signal onto the transmitted BPSK 
carrier by means of phase modulation. The received signal is of the form 
 
 
0
( )
2
( )
( )cos(
)
( )
y t
Pd t PN t
t
n t





 
(6.0-1) 
 
where P is the received signal power, PN(t) is the unit amplitude PN code process, d(t) is the unit amplitude 
(
) data process, 0 is the carrier angular frequency in radians/second, 
1

 is carrier phase, and n(t) is the 
noise process corrupting the reception of the signal. 
 
Before embarking on the theory of active and passive acquisition, some other PN code acquisition 
techniques will be discussed that are neither active nor passive correlation methods, but offer the potential for 
fast acquisition. Basically these approaches attempt to determine the state of the PN encoder in order to 
obtain quick acquisition. An approach that was introduced by Ward [1] obtains synchronization by loading n 
samples of the received chip sequence signal plus noise (assumed to be at baseband) into the n-stage linear 
PN code shift register, which defines the initial state of the shift register. Figure 6.0-2 illustrates the 
acquisition block diagram. Then, after the first n chips are loaded into the local shift register, the clock starts 
the local shift register that is correlated against the incoming signal. The basic idea is that knowing the initial 
sequence of the PN code generator is all that is needed to continue to generate the sequence. After a period of  

 352                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
time the lock detector decides if the local code is matching the incoming code; if not, a new set of samples of 
the chip sequence are input to the local chip generator. This process continues until the lock detector 
indicates that the signal is present. When this occurs, the chip sequence is then used as the code sequence for 
the code-tracking loop.  
 
LPF
Limiter
/2 Delay
LPF
In-lock
threshold
Gate
Examination
period 
generator
Reload Inhibit
-
-
+
Filter
Voltage
controlled
oscillator
(VCO)
+
1
2
3
...
...
L
n-1
n
...
...
A
B
Input signal plus noise
n bit
counter
Clock pulses
Reload pulses
Mod 2
Reload pulses
LPF
Limiter
/2 Delay
/2 Delay
LPF
In-lock
threshold
In-lock
threshold
Gate
Gate
Examination
period 
generator
Examination
period 
generator
Reload Inhibit
-
-
+
Filter
Voltage
controlled
oscillator
(VCO)
Voltage
controlled
oscillator
(VCO)
+
1
2
3
...
...
L
n-1
n-1
n
...
...
A
B
Input signal plus noise
n bit
counter
Clock pulses
Reload pulses
Mod 2
Reload pulses
 
 
Figure 6.0-2 The rapid acquisition by sequential estimation (RASE) scheme. 
 
 
This acquisition method is known as the rapid acquisition by sequential estimation (RASE) method. 
This scheme only works for an unmodulated baseband system, since with BPSK the actual sequence or its 
inverse could be received and the inverted code initial state will not generate the inverted sequence. The 
RASE system makes its best estimate of the first n received code chips, loads the receiver sequence generator 
with that estimate, and starts the operation of the code generator and the code tracking circuits. If the correct 
estimate is loaded, tracking will occur.  
At the same time a cross-correlation is performed between the input signal plus noise and the local 
code generator. If the cross-correlation indicates the receiver has the correct sequence and tracking is 
occurring, no further action is taken. If the cross-correlation indicates that an incorrect state is loaded, a new 
estimate is made, loaded, and tracked. This process continues until true lock occurs. The low pass filter on 
the input and the limiter form the estimate of the individual chips. The n cycle shift register is tried for the 
examination period (Te seconds). 
When the estimate is finished, the loading switch is changed to disconnect the local code generator 
from the limiter and close the feedback loop. The local code generator then produces the sequence starting 
from the initial state with which it was loaded. The delay lock loop consists of a VCO, a loop filter, and a 
differential correlator, which uses reference signals from taps of adjacent storage elements of the local code 
generator. As noted earlier code-tracking loops will be discussed in the next chapter. 
 
In summary the RASE system makes estimates of the present state of the input sequence, starts the 
local sequence code generator at that present state, and attempts tracking from that condition. New estimates 
are made at a rate controlled by an examination period code generator until an in-lock detector determines 
that the estimate was made. Further discussion can be found in [1]. 
 
A modification of this technique known as RARASE or recursion-aided RASE involves a 
preliminary determination of the shift register contents to determine if it is a likely candidate or not. If not, it 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          353 
is rejected quickly and a new initial condition is loaded into the chip sequence register. This method is 
described in Ward and Yiu [2]. This method also is dependent on having a baseband signal present at the 
input. The RARASE method provides better performance than RASE at high SNRs, but requires a significant 
amount of logic hardware. 
 
Kilgus [3] has improved on these two acquisition techniques by using a portion of the 2n–1 chips in 
a maximal length sequence and obtaining a number of independent estimates of the n chips of the initial state. 
The chip estimates are 1-bit estimates. The estimates for the initial state are majority voted and the resultant 
initial state is then loaded into the local shift register generator. When the number of estimates is equal to 
one, it reduces to the Ward acquisition system. Kilgus notes that the probability of acquisition can be made 
close to unity for moderate channel SNRs. Kilgus did not compare his approach with the sliding correlator 
method.  
 
Another modification of the RASE technique is due to Chiu and Lee [4]. Their scheme works with 
modulated signals, which is a big advantage over the three schemes, which don’t work with data modulation. 
Basically Chiu and Lee developed an extended characteristic polynomial that will generate the PN sequence 
or the inverted PN sequence, depending upon the initial condition or its inverse. As with the other techniques 
discussed, the scheme works best when the chip SNR (PTc/N0) is above –15 dB. Thus this scheme will work 
for BPSK signals and is not restricted to baseband use, as are the other three methods [1–3] described earlier.  
 
Another offshoot of the Ward approach is the one due to Rawlins, Koller, and Belkerdid [5], which 
is based on digital technologies. This method does work with BPSK signaling. Again a chip detector is used 
to estimate the chip sequence off of the in-phase arm of a Costas loop, which is in turn fed into an “algebraic 
despreader.” This algebraic despreader controls a chip clock phase locked loop. The code acquisition is 
nestled inside of a Costas loop. The chip phase lock loop has as an input, the estimated chip sequence and has 
a clock signal that is fed back to the algebraic despreader. The algebraic despreader is composed of two local 
PN generators, two dot product calculators, and a smoothing filter. The authors have built this acquisition 
device and have shown that it works. The fact that this technique is contained inside a Costas loop suggests 
that it will not work well at low SNR. Based on the data in their paper it appears that it works best above –10 
dB. More details are given in their paper. 
 
A set of three direct sequence spread spectrum code phase acquisition schemes have been proposed 
by Dodds and Zhang [6] that use cyclic accumulation and a matched filter to provide a rapid estimate of the 
correct code phase. The authors claim that the proposed schemes will achieve much better acquisition time 
performance than the other methods. More details are contained in [6].  
 
Stiffler [7] has suggested another approach to fast acquisition, while at the Jet Propulsion 
Laboratory (JPL). This method was used for ranging code acquisition, which allowed acquisition of the code 
by steps in which n = log2(N) binary decisions need be made to search a code of length of N = 2n. When N is 
large and the time uncertainty is on the order of N chips, the improvement in the Stiffler method can be 
considerable. This approach may not be useful for code multiple access without major modification; it was 
designed for a single code stream acquisition problem. 
Curry, Schwartz, and Collins [8] have developed an approach related to the Ward approach, with the 
added feature of searching the code states with the aid of a trellis search using an extension of the Fano 
search algorithm. Their method is called the state transition assisted receiver/synchronizer (STARS). 
 
Figure 6.0-3 illustrates the relationships for the various types of noncoherent acquisition detectors. 
Code acquisition detectors can be subdivided into four groups: active searches, passive searches (matched 
filter searches), code state searches, and transform searches.  
Active code searches can be further subdivided into fixed dwell times (fixed correlation times) and 
variable dwell times. Variable dwell time schemes are easier to implement with a single correlator. However 
fixed dwell time methods are commonly used in highly parallel correlator designs. 
Matched filter acquisition can be done with or without the aid of an FFT (fast Fourier transform) to 
search frequency.  
Code state estimators are acquisition techniques that attempt to determine the shift register state of 
the PN sequence as opposed to the standard sliding correlator that searches over the actual sequence in a 
serial manner. We have discussed a few in the above discussions.  

 354                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Finally transform acquisition procedures are based on taking the complex conjugate of the FFT1 of 
the input sequence and then storing it in memory. Then an FFT is performed on the code to be searched. 
Then the two FFTs are multiplied point by point and the inverse FFT is taken. Searching this product of FFTs 
for the maximum value yields the time and frequency of the received signal. 
The remainder of this chapter will be concerned with the active and passive code searches and the 
transform method. Typically active searches are done in a highly parallel manner, with as many as thousands 
or hundreds of thousands of correlators (effective correlators) used in parallel.  
 
Noncoherent
detectors
Active
search
Passive
search
Fixed
dwell time
Variable
dwell time
Single
dwell
Multiple
dwell
Sequential
detection
Code state
estimators
Tong
detector
Passive
matched
filter (PMF)
PMF
with FFT
aiding
Transform
search
Noncoherent
detectors
Active
search
Passive
search
Fixed
dwell time
Variable
dwell time
Single
dwell
Multiple
dwell
Sequential
detection
Code state
estimators
Tong
detector
Passive
matched
filter (PMF)
PMF
with FFT
aiding
Transform
search
 
 
Figure 6.0-3 Pseudonoise noncoherent code acquisition detector types. 
 
 
6.1 THE ACQUISITION PROBLEM 
Equation Chapter 6 Section 1 
PN code acquisition can be specified in various different ways. For example, “the mean time to acquire is 10 
seconds” is a valid statistical specification for acquisition time performance. On the other hand the 
requirements of “acquisition in 18 seconds with a probability of 0.9” is an equally reasonable specification. 
What is not mathematically acceptable is to state that the acquisition time is 10 seconds. Mathematically or 
statistically this is nonsense. Either some statistic associated the acquisition time (mean or mode time and so 
forth), or else a time along with an associated probability, must be specified. It is not uncommon to see 
specifications for system performance that state the acquisition time in so many seconds, under some initial 
time and frequency uncertainty, without a mean or probability specified. 
 
The first topic to be addressed will be the mean time to acquisition for serial search acquisition 
schemes (conventional sliding correlator) with a single channel system. It is to be noted that this theory is not 
limited to BPSK signals; the only requirement is that the acquisition process be characterized as a discrete 
time Markov process. It will be assumed that the detection probability (PD) and the false alarm probability 
(PFA) or the effective false alarm probability2 is known and is constant in what follows.  
 
 
6.2 ACTIVE SEARCH ACQUISITION (SLIDING CORRELATOR)  
Equation Chapter 6 Section 2 
The first problem that we now consider is how long it takes to align the receiver code timing to some 
accuracy with the received code; this time is defined as the acquisition time. Normally it is desirable to align 
the timing of the local code to within 1/2 to 1/4 of a chip (code symbol)3 error for an active correlation 
system. We assume an additive white Gaussian noise (WGN) channel, the actual acquisition time is a random 
                                                          
1 FFT denotes the fast Fourier transform. 
2 The effective false alarm probability will be discussed later in the chapter. 
3 For BPSK, by chip we mean the smallest duration for which the baseband waveform is constant. Manchester symbols are an example 
in which the symbol has two chips. Thus symbol duration is a more general term than chip duration. Of course, for NRZ symbols the 
symbol duration is equal to the chip duration. 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          355 
variable and therefore it must be characterized by statistical techniques. This analysis follows the work of 
Holmes and Chen [9] for the single correlator model for BPSK code acquisition, without noncoherent 
combining. Before delving into the theory, let us consider a simple example to clarify the concepts. 
 
Example 1 Assume that the time and range uncertainty corresponds to N PN code chips or NTc = T seconds 
of time uncertainty, where Tc is the code chip duration and there is no carrier frequency uncertainty. Assume 
that the probability of detection at the correct hypotheses is one (PD =1), the probability of false alarm at any 
incorrect hypotheses is zero (PFA = 0), and the dwell time (correlation or the integration time) is D seconds 
(coherent correlation only). Figures 6.0-1(a) and 6.0-1(b) indicate representative bandpass and baseband code 
acquisition systems. It is also assumed that there is no transmitter or receiver oscillator jitter or time drift. In 
addition it will be assumed that the timing search update is in one half-chip increments, so that 2N timing 
positions (timing hypotheses) have to be searched. The time to search all N cells (2N timing positions) is 
given by  
 
 
2
   (s
acq
D
T
N
)


 
(6.2-1) 
 
Thus, in this case of the example, the probability of acquisition in Tacq seconds is one. The mean acquisition 
time is therefore given by one half of Tacq, or  
 
 
   (s)
acq
D
T
N

 
(6.2-2) 
 
Unfortunately, in general, the detection probability PD is not one, the false alarm probability is not 
zero, and the calculation for the mean acquisition time is not nearly as simple for a nonideal system. 
 
It should be noted that the N chips that are to be searched over (correlated) in our model are 
physically determined from the timing uncertainty between the transmitter and the receiver clocks and the 
position uncertainty between the transmitter and the receiver. Since position uncertainty can also be 
expressed as a time uncertainty in chips, the value of N chips reflects the totality of position and timing 
uncertainty, expressed in chips. 
 
We now develop the expression for the mean time to acquire the PN code with a single correlator 
and without noncoherent combining. Readers not familiar with flow graph manipulations and construction 
should consider reading the appendix to this chapter or some other source for an introduction to flow graph 
theory. 
 
 
6.2.1 Mean Acquisition Time Model for an Active Search System 
 
We initially assume that the signal, be it BPSK, QPSK, OQPSK, or MSK, is immersed in additive white 
Gaussian noise (AWGN), and is centered at some frequency 0 with some signal power P. In the case of 
BPSK code modulation, the filter, square, and integrate detector acquisition system is shown in Figure 6.2-1 
for the baseband version. 
 
VCXO
PN
code
generator
Amplifier
(
1)
(.)
b
b
kT
k
T
dt

Square
OSC
Square
(
1)
(.)
b
b
kT
k
T
dt

0
2 cos(
)
r
t



0
2 sin(
)
r
t




No
Yes
Decision
1
(.)
nc
N
k 
Update control
VCXO
PN
code
generator
Amplifier
(
1)
(.)
b
b
kT
k
T
dt

Square
OSC
Square
(
1)
(.)
b
b
kT
k
T
dt

0
2 cos(
)
r
t



0
2 sin(
)
r
t




No
Yes
Decision
1
(.)
nc
N
k 
Update control
 
 
Figure 6.2-1 A baseband version of a PN code acquisition system for BPSK modulation. 

 356                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
The effective noncoherent dwell time is taken as 
'
D

4 (
'
D
 = NncTb ) seconds for the code acquisition 
system. We follow the method of [9–11] in the analysis to follow. The baseband and a bandpass version will 
be roughly similar if the baseband filters are approximate translates of the bandpass filter.  
If QPSK, OQPSK, or MSK were used for the code modulation the detector system would differ, but 
the algorithm and model and the results that will be derived in the following still apply. 
 
Our model is as follows. Assume that due to timing and range uncertainty there are N code chips of 
time uncertainty to be searched. It is assumed that there is no frequency error between the receiver and the 
received signal. In addition assume that the N code chips result in q code phases to be searched, where q may 
be equal to the number of PN code chips to be searched, or some multiple of it. For example if the code is 
searched in one-half chip steps then q = 2N and in one-third chip steps q = 3N, and so forth. Further, it is 
assumed that if a “hit” occurs (the output is above the threshold), the system goes into a verification mode 
that may include both an extended duration noncoherent dwell time and an initiation of the code loop-
tracking mode. In any event, we model the associated “penalty of time” of verifying a false alarm as K
'
D

 
seconds (the time needed to determine that it was a false alarm and not a true detection), where K is a number 
typically larger than one. If a true “hit” (signal is present) is observed, the system has acquired the signal, and 
the search is completed. 
 
Assume that the false alarm probability is PFA and the probability of detection is PD, and they are 
both given. Clearly the time to obtain acquisition (a true hit) is a random variable. Although the problem of 
obtaining the distribution function of the acquisition time is obtainable in principle, it is very difficult to 
obtain in practice, at least in closed form. Consequently we shall be content with the mean and variance of 
the acquisition time at this time. 
 
Initially we shall assume that Doppler effects (carrier frequency error) are not present; later we will 
relax this assumption. Also we will assume that the correlation error in the acquisition search will be fixed at 
one-half the update size, and the update size is often chosen to be one-half of a code chip, so that the 
correlation error would then be one-fourth of a chip. This assumption implies that PD is a constant (time 
invariant) and as a consequence, the analysis of the model can be carried out. A basic assumption is that the 
detection and false alarm probabilities are constant with time. 
 
 
6.2.2 Analysis of the Active Search System 
 
In this section the mean time to acquire the PN code, using a flow graph method to determine the generating 
function of the acquisition process, will be used. Let each cell to be searched be numbered from left to right 
(from 1 to q) so that the k-th cell has an a priori probability of having the signal being located in that cell, 
given that it was not present in cells 1 through k–1, of 
 
 
1
 
 ,     1
 1
 
kP
k
q
q
k





 
(6.2-3) 
 
The generating function flow graph diagram is given in Figure 6.2-2 using the rule that at each node the sum 
of the probabilities emanating from the node equals unity. The S denotes the start position, and the F denotes 
the final (acquisition) position. 
 
Consider node 1. The a priori probability of having the signal actually located in state one is P1=1/q, 
and the probability of it not being present in the node 1 is 1–P1 or (q–1)/q. Suppose the signal were not 
present. Then we advance to the next node (node 1a); since it corresponds to a probabilistic decision and not 
a unit time delay, no z multiplies the branch going to it. A z in any path denotes one unit delay (one dwell 
time, 
D
'  seconds). At node 1a either a false alarm occurs with probability of PFA =  which requires one 
unit of time to determine (
D
'  seconds) and then K units of time (K
D
'  seconds) are needed to verify that 
                                                          
4 In general, we will use 
D
 for the coherent dwell time and 
'
D
 for the noncoherent dwell time, that is, for multiple dwell times. 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          357 
there was only a false alarm, or alternatively there is no false alarm with probability (1–), which takes one 
dwell time to determine, and which requires the (1–)z branch going to node 2. 
 
S
1- P1 .
1a
.
(1-)z
z .
zK
2
1b
1- P2.
.
.
(q-1)a
(1-)z .q
1
zK+1
.
P1
.
2a
.
(1-)z
2b
z
zK
P2
…….
3
1- P3
q-1
P3
(1-PD)z
.
.
q
zK+1
PDz
F
2
.
. 3
(1-)z
(1-)z
4
zK+1
zK+1
(1-PD)z
.
.
.
q
zK+1
PDz
4
.
.
5
6
zK+1
zK+1
(1-PD)z
.
(1-)z
.
.
q
zK+1
PDz
F
3
.
. 4
5
zK+1
zK+1
.
PDz.
.
1
PDz
1
(1-)z
(1-)z
F
F
F
(1-)z
(1-)z
(1-)z (1-)z
1-Pq-1
Pq-1
S
1- P1
1- P1 .
1a
.
(1-)z
z .
zK
2
1b
1- P2.
.
.
(q-1)a
(1-)z .q
1
zK+1
.
P1
.
2a
.
(1-)z
2b
z
zK
P2
…….
3
1- P3
q-1
P3
(1-PD)z
.
.
q
zK+1
PDz
F
2
.
. 3
(1-)z
(1-)z
4
zK+1
zK+1
(1-PD)z
.
.
.
q
zK+1
PDz
4
.
.
5
6
zK+1
zK+1
(1-PD)z
.
(1-)z
.
.
q
zK+1
PDz
F
3
.
. 4
5
zK+1
zK+1
.
PDz.
.
1
PDz
1
(1-)z
(1-)z
F
F
F
(1-)z
(1-)z
(1-)z (1-)z
1-Pq-1
Pq-1
 
 
Figure 6.2-2 Flow graph diagram for determining acquisition time via the generating function. 
 
 
Now consider the situation at node 1 when the signal does occur there. If the signal is detected then 
acquisition, as we have defined it, occurs and the process is terminated, hence the node F denoting “finish.” 
If the signal was not detected at node 1 (the integrator output was below the threshold), which occurs with 
probability 1– PD, one unit of time would be consumed. This is represented by the branch (1– PD)z, leading to 
node 2. 
 
At node 2 (assuming that the signal was present in cell 1) in the upper left part of the diagram, either 
a false alarm occurs with a probability  and a delay of (K+1) units occurs, or a false alarm does not occur 
with probability of 1- and a delay of one unit occurs. The remaining portion of the generating function flow 
graph is a repetition of the portion just discussed with the appropriate node number changes. 
 
In order to obtain the transfer function of the flow graph we shall reduce it by combining sections at 
a time. Let  
 
 
 1
( )
 (1
)
K
H z
z
z






 
(6.2-4) 
 
Then the flow graph can be drawn as shown in Figure 6.2-3. Letting =1- PD and letting 
 
 
 1
( )
1
 (
( ))q
z
Q z
H z
z



 
(6.2-5) 
 
we can reduce the flow graph to that of Figure 6.2-4, since Q(z) takes into account the feedback loops in the 
path to the finish (F, or acquisition). 
 
Define  
 
 
1
(1
 )
( )
(1
) ( )
1
 
(
( ))
l
l
l
q
P
z
B z
P
Q z
z H z








 
(6.2-6) 
 
and 

 358                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
( )
(1
 )
( )
l
l
A z
P H z


 
(6.2-7) 
 
.
.
.
.
S
.
(1-P1)H(z)
(1-P3)H(z)
(1-P2)H(z)
.
P1
.
P2
.
P3
….. .
q
PDz
PDz
PDz
.
(1-PD)z[H(z)]q-1
PDz
.
1
F
1
2
3
4
F
F
F
(1-PD)z[H(z)]q-1
(1-PD)z[H(z)]q-1
(1-PD)z[H(z)]q-1
.
.
.
.
S
.
(1-P1)H(z)
(1-P3)H(z)
(1-P2)H(z)
.
P1
.
P1
.
P2
.
P2
.
P3
.
P3
….. .
q
PDz
PDz
PDz
PDz
.
PDz
PDz
.
(1-PD)z[H(z)]q-1
PDz
.
PDz
PDz
.
1
F
1
2
3
4
F
F
F
(1-PD)z[H(z)]q-1
(1-PD)z[H(z)]q-1
(1-PD)z[H(z)]q-1
 
 
Figure 6.2-3 Partially reduced flow graph for the determination of acquisition time. 
 
....
....
F (acq.)
P
Q z

b
g ( )
P
Q z

b
g ( )
P
Q z

b
g ( )
(1
) ( )
Q z


1
(1
)
( )
P H z

2
(1
)
( )
P H z

3
(1
)
( )
P H z

1
1
1
S
q
1
2
3
....
....
F (acq.)
P
Q z

b
g ( )
P
Q z

b
g ( )
P
Q z

b
g ( )
(1
) ( )
Q z


1
(1
)
( )
P H z

2
(1
)
( )
P H z

3
(1
)
( )
P H z

1
1
1
S
q
1
2
3
 
 
Figure 6.2-4 A further reduction of the signal flow graph for acquisition time. 
 
 
            By inspection the flow graph, from the start to finish, is given by  
 
 
 
(6.2-8) 
1
1
2
1
2
3
1
2
3
4
1
 1
( )
...
...
q
U z
B
A B
A A B
A A A B
A
A
B







q
 
or 
 
 
2
1
1
2
1
2
3
1
1
1
2
1
(1
)
( )
[
(1
)
( )
(1
)(1
)
( )
1
( )
           +...+(1
)(1
)...(1
)
( )
]
q
q
q
z
U z
P
P H z P
P
P P H z
zH z
P
P
P
H z
















 
(6.2-9) 
 
Writing Pi and 1
Pi in terms of q, from 

(6.2-3), we have 
 
 
1
2
1
(1
)
1
( )
1
( )
( )
( )
...
1
 
( )
q
q
z
H z
H z
U z
H z
z H z
q
q
q
q
















 
(6.2-10) 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          359 
Summing the terms yields 
 
 
1
1
0
(1
)
1
( )
(  )
1
( )
q
l
q
l
z
U z
H
z
zH z
q















 
(6.2-11) 
 
As a check U(1) should be unity, since the probability of acquiring in infinite time is one; therefore, 
 
 
 
1
0
(1
 )/
(1)
1
1
1 
 
q
l
q
U















 
(6.2-12) 
 
The mean acquisition time is given by (after some algebra) 
 
 
'
1
2
(2
)(
1)(1
)
ln
( )
2
D
'
FA
D
D
z
D
P
q
KP
d
U z
T
dz
P









 
(6.2-13) 
 
with 
'
D
 included in the formula to relate back from the unit time flow graph calculations to the actual 
'
D
 
second time period. To reiterate the meaning of the terms in (6.2-13) 
'
D
 is the (noncoherent) dwell time, PD 
is the detection probability, PFA is the false alarm probability, and K is the false alarm penalty (in units of 
'
D

) and is the time it takes to determine that a false alarm is not a true detection. As a partial check on 
(6.2-13) let PD = 1 and PFA = 0. Then we have from (6.2-13) that  
 
 
'
1
 
2
D
q
T



 
(6.2-14) 
 
This result can be obtained by direct calculation by noting that the mean time to acquire is given by (the a 
priori probability is 1/q) 
 
 
'
'
1
2
...
'
D
D
q
T
q
q
q
D






 
(6.2-15) 
 
Summing this finite series produces the result 
 
 
'
'
(
1)
1
2
2
D
D
q q
q
T
q






 
(6.2-16) 
 
Now looking at (6.2-13) for the case when q >> 1 (the usual case), the mean acquisition time is well 
approximated by5  
 
 
'
(2
)(1
) (
2
D
FA
)
D
D
P
KP
T
P
q



 
(6.2-17) 
 
The variance of the acquisition time is given by 
 
 
2
2
2
1
 
 (
)2
z
d U
dU
dU
dz
dz
dz











 
(6.2-18) 
                                                          
5 For the result with coherent correlation, replace 
'
D
 with 
D
. 

 360                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
or alternately by the equivalent, but usually simpler formula (when U(1) = 1) 
 
 
2
2
2
1
ln
ln
 
z
d
U
d
U
dz
dz










 
(6.2.19) 
 
Using the simpler expression (6.2.19) it can be shown that the expression for the variance of the acquisition 
time, 2, is given by (q >>1) 
 
 

2
'
2
2
2
2
2
2
FA
2
1
1
1
(
)
(1
)
(
 
 
)
6 [
(
1)
(2
)
12
(1
)
         +(1+P
)(4
2
)]
 
}
D
FA
FA
D
D
D
D
D
D
D
D
KP
q
q K K
P
P
P
P
P
P
K
P
P
P













 
(6.2-20) 
 
When 1<<K<< q, and KPFA<<1, then the variance of the acquisition time can be simplified to 
 
 
2
'
2
2
2
2
1
1
1
(
) (1
)
 
 
12
D
FA
D
D
KP
q
P
P











 
(6.2-21) 
 
As a partial check on the results for the variance of the acquisition time, let PFA = 0 and PD = 1. Then we have 
the result 
 
 
'
2
2
(
)
12
D
q


 
(6.2-22) 
 
which is the variance of the uniformly distributed random variable, as one would expect for the limiting case. 
Equations (6.2-13) and (6.2-17) are the main results for the mean time to acquire and (6.2-20) and (6.2-21) 
are the main results for the variance of the acquisition time, again for a single correlator model. 
These results provide a useful estimate of the mean acquisition time for all systems that use an 
active search PN-type acquisition system with a fixed dwell time with a single correlator and which can be 
characterized as a discrete time Markov process. In addition, it is necessary that PD and PFA be assumed to be 
constant during the code search. Some basic modifications can be made to adjust the acquisition time 
estimates to reflect some nonidealized conditions that real systems operate in. 
 
The first effect that will be considered is Doppler. The result of code Doppler is to “smear” the 
relative code phase during the acquisition dwell time, which increases or reduces the probability of detection 
depending on the code phase and the algebraic sign of the code Doppler rate. The Doppler also affects the 
effective sweep rate, which in the extreme case can reduce the code sweep rate to zero, to cause the search 
time to increase without bound. This topic will be discussed in the next section. 
 
The second refinement to the model concerns the handover process between acquisition and 
tracking. Typically after a “hit” the code-tracking loop is turned on to attempt to pull the code into tight code 
lock. In low SNR systems, where both an acquisition (pull-in) bandwidth and a tracking bandwidth are often 
used, multiple code loop tracking bandwidths may be utilized in order to soften the transition from the 
acquisition to the tracking modes. Consequently, the probability of going from the acquisition bandwidth to 
the final tracking bandwidth may occur with a probability less than one.  
 
The estimation of the probability of making the bandwidth transition is a difficult task. At high 
SNRs the probability quickly converges to unity so this is not an issue. In any case the probability of 
detection PD should be replaced with the product PD and PHO of the form 
 
 
'
D
D
HO
P
P P

 
(6.2-23) 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          361 
where PHO is the probability of making the bandwidth transition (hand over) and maintaining code lock with 
the code-tracking loop, given that the signal has been detected. PD is the probability of detection of the signal 
as before. At moderate SNRs PHO is essentially one, but under high jamming this may not be the case and 
will affect acquisition, since acquisition is not finished until the code loop is tracking in a stable manner. 
 
 
6.2.3 Single Dwell Mean Acquisition Time Formula with Doppler 
 
It is possible to account for code Doppler effects, as far as sweep rate is concerned, in the following way [9]. 
Define 
 
      N = number of chips to be searched 
 
     Tc/Tc= step size of search in fractions of a chip (typically 1/2) 
 
     fc= code Doppler in chips per second 
     fc
'
D

= PN code phase timing shift due to code Doppler during the noncoherent dwell the time 
 
     fcK
'
D

= code phase shift during hit verification 
 
      PFA = probability of a false alarm 
 
     PD = probability of detection 
The mean (search phase) update timing change, accounting for code Doppler is given by 
 
 
'
'
c
D
c
D
c
c
T
FA
f
K
f P
T









 
(6.2-24) 
 
We have, therefore, as an approximation to the mean acquisition time, the expression 
 
 
'
'
'
(2
)(1
)(
)
2
D
FA
D
c
D
D
c
D
c
FA
c
P
KP
N
T
T
P
f
K
f P
T











 
(6.2-25) 
 
And using the same type of argument for the variance produces the expression 
 
 
2
2
2
'
'
2
1
1
1
(1
)
(
 
 
)
12
(
)
(
)
FA
D
D
D
c
D
c
D
c
FA
c
KP
N
P
P
T
f
K
f P
T
'
2













 
(6.2-26) 
 
In this expression N is the number of chips to be searched, and not the timing positions (q) to be searched. 
The denominator accounts for this conversion. 
In (6.2-25) and (6.2-26), the algebraic sign of the code Doppler must be assigned so that the search 
is (apparently) speeded up by the code Doppler (fc) when it is positive, and the search is slowed down if it is 
negative. Note that when fc = 0 then q = N/(Tc /Tc), and the result collapses to the previous results of 
(6.2-17) and (6.2-21). Actually, the two Doppler effects tend to counteract each other to a certain extent, 
since when the search is speeded up (due to Doppler) the correlation values tend to be reduced.  
If the code change per update is larger than the search step size, then acquisition may not occur. 
Furthermore if large code Doppler is expected, it is possible to predict out a fair amount of the code Doppler 
and thereby reduce the effect of the code Doppler on the search rate.  
 
 

 362                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
6.2.4 Mean Acquisition Time for the Double Dwell Time Search 
 
A simple conceptual generalization of the single dwell time acquisition system produces the double dwell 
time system. It has two integration periods, one to search the code phase quickly 
'
1
D

 is small), and the 
second (
'
2
D

) to provide a “better” estimate of whether the “in-sync” code phase has been found. The basic 
idea is to apportion some of the false alarm protection in the first integration and place the remaining false 
alarm protection in the second integration, with 
'
1
D

< 
'
2
D

. 
 
Generally speaking this double dwell time procedure reduces acquisition time. The amount of 
improvement depends upon the parameters involved. The system model is shown in Figure 6.2-5 for a BPSK 
modulated code. In the figure the i i =1, 2, 3 are the three thresholds used in this approach. This approach 
can be used for QPSK, OQPSK, MSK, and any other code modulation format with the appropriate system 
model changes and the appropriate values of PD and PFA. 
 
VCXO
PN
code
gen.
Amplif.
Yes
No
0
2 cos(
)
r
t



0
2 sin(
)
r
t




OSC
(.)2
(
1)
(.)
b
b
kT
k
T
dt

1
1
(.)
nc
N
k 
(.)2
(
1)
(.)
b
b
kT
k
T
dt

1

No
(.)2
(
1)
(.)
b
b
kT
k
T
dt

2
1
(.)
nc
N
k 
(.)2
(
1)
(.)
b
b
kT
k
T
dt

2


Search next cell
Start correlation
of second correlator
yes
Lock
detector
verified?
(e03> 3)
No
yes
Initiate
code
tracking
e01
e02
VCXO
VCXO
PN
code
gen.
Amplif.
Yes
No
0
2 cos(
)
r
t



0
2 sin(
)
r
t




OSC
OSC
(.)2
(.)2
(
1)
(.)
b
b
kT
k
T
dt

(
1)
(.)
b
b
kT
k
T
dt

1
1
(.)
nc
N
k 
(.)2
(.)2
(
1)
(.)
b
b
kT
k
T
dt

(
1)
(.)
b
b
kT
k
T
dt

1

No
(.)2
(.)2
(
1)
(.)
b
b
kT
k
T
dt

(
1)
(.)
b
b
kT
k
T
dt

2
1
(.)
nc
N
k 
(.)2
(.)2
(
1)
(.)
b
b
kT
k
T
dt

(
1)
(.)
b
b
kT
k
T
dt

2


Search next cell
Start correlation
of second correlator
yes
Lock
detector
verified?
(e03> 3)
No
yes
Initiate
code
tracking
e01
e02
 
 
Figure 6.2-5 Double dwell acquisition time system model. 
 
 
 
The system can be best understood by looking at the acquisition track algorithm shown in Figure  
6.2-6. Typically the search starts by advancing the reference code phase to the minimum time delay end of 
the extremity of the range ambiguity region; then a trial integration of 
1
D
'  seconds is made on the received 
signal plus noise. 
 
If the threshold is not exceeded, then the reference (system) code is delayed, for example, by one 
half chip, and again the dwell (integration) time is 
1
D
'  seconds. The process continues in this manner until a 
hit (threshold is exceeded) occurs. Then without changing the code phase, the integration time is increased to 
2
D
'
. This dwell time provides both a higher probability of detection and a lower probability of false alarm. If 
the second threshold is exceeded, typically the code loop is activated and a third integration (the lock detector 
function) of the input signal and noise is performed (in practice it could be the same duration as 
2
D
'
 or 
longer). If the threshold were not exceeded at this point, the search would continue. This final integration 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          363 
period forms the basis of a lock detector. Note that this example lock detector algorithm requires three 
consecutive misses before it declares loss of lock. 
 
Start
Integrate
sec
Is
e01 
?
Integrate
sec
Is
e02 
?
Engage
code
loop
Integrate
sec
Is
e03 
?
Count 
consecutive
misses
Count
misses
  ?
Yes
No
Delay
code loop
1/2 chip
No
Yes
No
No
Yes
Yes
e
e
e
1
D
'
2
D
'
3
D
'
Start
Integrate
sec
Is
e01 
?
Integrate
sec
Is
e02 
?
Engage
code
loop
Integrate
sec
Is
e03 
?
Count 
consecutive
misses
Count
misses
  ?
Yes
No
Delay
code loop
1/2 chip
No
Yes
No
No
Yes
Yes
e
e
e
1
D
'
2
D
'
3
D
'
 
 
Figure 6.2-6 Double integration flow graph. 
 
 
 
A slight modification of DiCarlo’s [12] results produce the following results for mean acquisition 
and variance of this double dwell time scheme: 
 
 
1
2
1
2
2
[
(1
)] ,    >> 1
2
D
D
D
FA
FA
D
P
T
P
KP
q
P






'
'
q
 
(6.2-27) 
 
and 
 
   
 
2
2
2
2
2
2
1
2
2
2
1
1
1
(
)
(
)
(1
)
(
 
 
),      >>
(
1)
12
D
D
FA
FA
FA2
D
D
P
KP
q
q
P
K K
P
P









'
'
 
(6.2-28) 
 
This result is an approximation that is accurate when the conditions on q are satisfied. In the previous two 
equations 
 
 
1
D
' = first noncoherent dwell time 
 
2
D
'
= second noncoherent dwell time 
 
PD = PD1 PD2  the overall detection probability 
 
PD1 = the detection probability of the first dwell 
 
PD2 = the detection probability of the second dwell 
 
PFA1 = false alarm probability of the first dwell 

 364                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
PFA2 = false alarm probability of the second dwell 
 
q = number of cells to be searched 
 
K = penalty for a false alarm at the second detector (number of 
2
D
'
 units of time) 
 
In the previous equations the conditions q >> 1 and q >> PFA2 K(K+1) are normally met. The more 
exact results can be found in DiCarlo [12]. Notice, as a check, if 
1
D
' = 0 and PFA1 = 1, then the system 
collapses to the single dwell time system and the analytic results agree with those of the single dwell time 
system. 
 
In the same manner as the single dwell time acquisition system the double dwell time system can be 
modified to include Doppler, with the mean code search phase update being given by 
 
 
1
1
2
1
2
2
c
D
c
FA
D
c
FA
FA
D
c
T
c
f
P
f
P
P
K
T












'
'
'
f  
(6.2-29) 
 
Therefore the mean and variance of the acquisition time with Doppler, letting N be the number of chips to be 
searched, become 
 
 
1
2
1
2
1
1
2
2
1
2
[
(1
)]
2
(
/
)
D
D
D
FA
FA
D
c
c
D
c
FA
D
c
D
c
FA
FA
P
P
KP
N
T
P
T
T
f
P
f
K
f P
P
















'
'
'
'
'
2
 
(6.2-30) 
 
 
2
2
1
2
1
2
2
2
2
1
2
1
2
1
2
1
1
1
[
(1
)] (
 
 
12
[
]
D
D
FA
FA
D
D
c
D
c
D
c
FA
D
c
FA
FA
c
N
P
KP
)
P
P
T
f
f P
K
f P
P
T


















'
'
'
'
'
 
(6.2-31) 
 
Again with the algebraic sign of the code Doppler assigned such that when the search is speeded up by the 
code Doppler, fc is positive and vice versa. 
 
Further work in the area of acquisition time calculations, can be found in [13–15] and the appendix 
of this chapter. 
 
 
6.2.5 Active Acquisition System Structures Used for Acquisition for BPSK, QPSK, OQPSK, and MSK 
 
In this section active acquisition system models for BPSK, QPSK, OQPSK, and MSK chip modulations will 
be discussed. 
 
 
6.2.5.1 Active Acquisition System Structures for BPSK 
 
RF and baseband I-Q system acquisition models have already been presented in Section 6.0 for BPSK spread 
spectrum modulated signals with BPSK data modulation and will be discussed further. The signal model for 
BPSK is given by 
 
 
0
( )
2
( )
(
)cos(
)
s t
Pd t PN t
T
t





 
(6.2-32) 
 
Figures 6.0-1(a) and 6.0-1(b) are bandpass and I-Q versions of the same basic acquisition detection 
system along with code tracking and data demodulation for BPSK.  
 
BPSK code modulation is quite commonly used in direct sequence spread spectrum (DSSS) 
systems. Our discussion is centered on the acquisition portion of the system (for the baseband version that is 
much more common in practice) and the acquisition system is indicated in the middle of Figure 6.0-1(b). 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          365 
Typically the SS code minimum delay expected, based on both lack of precise transmitter and 
receiver clock time and precise range, is set into the acquisition system. The integrate-and-dump filters (Tb 
seconds duration) are set to integrate over the coherent integration (or correlation) time which is upper 
bounded by the bit duration (it is possible to correlate for less than but not more than the bit duration). In 
general either the carrier Doppler or the bit duration will set the upper limit of the coherent correlation time. 
The I and Q components are then squared and Nnc integrations are added in the noncoherent adder. The Nnc 
sum of the noncoherent integrations is called the noncoherent integration time. The noncoherent integration 
time is limited by code Doppler rates and transmitter and receiver oscillator stability. Basically the change in 
code time slippage should be limited by some fraction of a chip, say, about 0.4 of a chip. Thus if the code 
slippage rate (between the received code rate and the receiver code rate) is, for example, 0.1 chip/sec, then 
the total noncoherent summation time cannot exceed 4 seconds.  
The noncoherent sum is compared to the search threshold and a decision is made on whether the 
local code and the received code are in approximate alignment. If the threshold is exceeded then the code 
tracking loop and a verification dwell time are turned on, and if the verification threshold is not exceeded the 
local code is delayed one half chip and the process is continued until the search threshold is exceeded. As we 
have seen in this discussion for BPSK SS code modulation, only one I-Q pair is needed to for code 
acquisition.  
 
 
6.2.5.2 Active Acquisition System Structures for QPSK 
 
Quadriphase modulation with equal inphase and quadrature phase power is sometimes used, because they are 
harder to detect when used in low probability of detection applications and are more resistant to some types 
of jammers. When QPSK SS PN code and QPSK data are used in a balanced quadriphase SS signaling 
format, the received signal can be written in the form 
 
 
1
1
0
2
2
0
( )
( )
(
)cos(
)
( )
(
)sin(
) 
s t
Pd t PN t
T
t
Pd t PN t
T
t










 
(6.2-33) 
 
where P is the power of the signal in watts, 0 is the angular frequency in radians/sec, is the fixed RF 
phase of the carrier, di(t) (i is 1 or 2) are the two 1
 valued data signals and PNi(t) are the two 
 valued 
pseudonoise coded, baseband spread spectrum signals, which are normally selected to be approximately 
orthogonal over a correlation time. Sometimes the same data is placed on both phases of the signal. However, 
it will be assumed that they are different in this discussion. It should be noted that in general, the power in 
either carrier phase does not have to be the same value, for simplicity here it will be assumed that they are. 
The generalization to two different power levels is easy to accomplish. This quadriphase signal can also be 
viewed as two, essentially independent BPSK signals that are in phase quadrature.  
1

 
Figure 6.2-7 illustrates an acquisition system for QPSK DSSS signals. The acquisition system 
consists of two BPSK acquisition detectors that have their I2 + Q2 sum for the first SS code added to the  
I2 + Q2 sum for the second SS code to drive the noncoherent integration (the summer in the figure). It is 
assumed that the cross correlation over a bit time of the two codes is low. This arrangement has better signal 
to noise performance than the more simply implemented system shown in Figure 6.2-8. In the simpler system 
of Figure 6.2-8 it is shown in Problem 6 that the performance is inferior to that of Figure 6.2-7. In fact it is 
shown that the signal power into the coherent summer is the same for both configurations, but the system of 
Figure 6.2-8 has the same noise terms as the system in Figure 6.2-7 plus additional noise terms, and therefore 
has inferior acquisition performance. If a “hit” occurs the tracking loop and lock detector are initiated and 
otherwise the code delay is increased by, say, 1/2 of a code chip.6 
If offset QPSK (OQPSK) is used, then the Figure 6.2-7 has to be slightly modified. The signal 
structure for offset QPSK is the same as indicated in (6.2-33) except that the second (for example) code is 
delayed one half of a code chip relative to the first code (normally the second channel data is offset one half 
of a code chip also). 
                                                          
6 When we refer to a chip, we are assuming NRZ formatting; in a more general case the term symbol should be used (for example, with 
Manchester coding). 

 366                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Amp.
Square
Yes
No
OSC
Square
Square
Quadriphase
code gener.
VCXO
Hybrid
2sin(ot)
2cos(ot)
1
ˆ
(
)
PN t
T

2
ˆ
(
)
PN
t
T

Square
(
1)
1
(.)
b
b
kT
b
k
T
dt
T

1
1
(.)
nc
N
k
nc
N

?
h
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

2cos(ot)
2sin(ot)
Amp.
Square
Yes
No
OSC
Square
Square
Quadriphase
code gener.
VCXO
Hybrid
2sin(ot)
2sin(ot)
2cos(ot)
2cos(ot)
1
ˆ
(
)
PN t
T

2
ˆ
(
)
PN
t
T

Square
(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

1
1
(.)
nc
N
k
nc
N

?
h
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

2cos(ot)
2cos(ot)
2sin(ot)
2sin(ot)
 
 
Figure 6.2-7 An acquisition system for balanced QPSK direct sequence modulation. 
 
 
 
When OQPSK is received, it can be written in the form 
 
 
1
1
0
2
2
0
( )
( )
(
)cos(
)
(
/ 2)
(
/ 2)sin(
) 
c
c
s t
Pd t PN t
T
t
Pd t
T
PN t
T
T
t












 (6.2-34) 
 
Normally when using OQPSK DSSS modulation, the power in each phase of the carrier is the same 
and the data rates are the same. If the powers are not equal, spectral regrowth7 will be more pronounced. An 
alternative acquisition system for QPSK modulation is illustrated in Figure 6.2-8.  
 
Amp.
OSC
I&D
I&D
Square
Square
No
Yes
1
1
(.)
nc
N
k
nc
N

PN code
generator
?
h
T

1
2
ˆ
ˆ
(
)
(
)
PN t
T
PN
t
T



Amp.
OSC
I&D
I&D
Square
Square
No
Yes
1
1
(.)
nc
N
k
nc
N

PN code
generator
?
h
T

1
2
ˆ
ˆ
(
)
(
)
PN t
T
PN
t
T



 
 
Figure 6.2-8 Alternative code acquisition system for balanced QPSK. 
 
 
The acquisition system for OQPSK is shown in Figure 6.2-9. Note that the delays in the integrators 
are set to Tc/2 seconds and the upper code branch is delayed by Tc/2 seconds. 
 
                                                          
7 Spectral regrowth refers to the fact that when transmitting a filtered, nonconstant amplitude signal, through a nonlinear power 
amplifier, the spectrum “regrows” or tends to revert back to the unfiltered version. 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          367 
Amp.
Square
Yes
No
OSC
Square
Square
Quadriphase
code gener.
VCXO
Hybrid
2sin(ot)
2cos(ot)
2sin(ot)
2cos(ot)
1
ˆ
(
)
PN t
T

2
ˆ
(
/ 2)
c
PN
t
T
T


Square
(
1)
1
(.)
b
b
kT
b
k
T
dt
T

/ 2
(
1)
/ 2
1
(.)
b
c
b
c
kT
T
b
k
T
T
dt
T



1
1
(.)
nc
N
k
nc
N

?
hT

Delay
Tc/2
(
1)
1
(.)
b
b
kT
b
k
T
dt
T

/ 2
(
1)
/ 2
1
(.)
b
c
b
c
kT
T
b
k
T
T
dt
T



Amp.
Square
Yes
No
OSC
Square
Square
Quadriphase
code gener.
VCXO
Hybrid
2sin(ot)
2sin(ot)
2cos(ot)
2cos(ot)
2sin(ot)
2sin(ot)
2cos(ot)
2cos(ot)
1
ˆ
(
)
PN t
T

2
ˆ
(
/ 2)
c
PN
t
T
T


Square
(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

/ 2
(
1)
/ 2
1
(.)
b
c
b
c
kT
T
b
k
T
T
dt
T



/ 2
(
1)
/ 2
1
(.)
b
c
b
c
kT
T
b
k
T
T
dt
T



1
1
(.)
nc
N
k
nc
N

1
1
(.)
nc
N
k
nc
N

?
hT

Delay
Tc/2
(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

/ 2
(
1)
/ 2
1
(.)
b
c
b
c
kT
T
b
k
T
T
dt
T



/ 2
(
1)
/ 2
1
(.)
b
c
b
c
kT
T
b
k
T
T
dt
T



 
 
Figure 6.2-9 Acquisition system for offset balanced OQPSK. 
 
 
6.2.5.3 Active Acquisition System Structures for MSK 
 
When minimum shift keying is used for the code modulation, the received signal structure is given by 
 
    


1
0
2
( )
2
( )
( )cos(
/
)cos(
)
( )sin(
/
)sin(
)
c
s t
Pd t
PN t
t T
t
PN t
t T
t
0
c










 
(6.2-35) 
 
where P is the total power in the MSK DSSS signal, Tc is the chip duration, 0 is the carrier frequency in 
radians per second, and PN1(t) and PN2(t) are the two direct sequence codes used for spreading. First it will 
be shown that the power in the received signal is in fact P watts. Consider the mean square power 
 
 
2
0
1
( )
c
T
rms
c
P
s t dt
T


 
(6.2-36) 
 
Applying (6.2-35) to (6.2-36) produces the result 
 
 
2
2
2
2
0
0
1
2
cos(
/
) cos(
)
sin(
/
) sin(
)
c
T
rms
c
c
c
0
P
P
t T
t
t T
t
T











dt  
(6.2-37) 
 
where we have neglected the cross term, since it will be assumed that the two codes are nearly orthogonal. In 
addition the fact that the square of PN(t) is unity for either code and the square of d(t) is also unity also was 
used. Expanding the cosine and sine terms at the carrier frequency, one obtains 
 
 
2
2
0
1
2
cos(
/
) (1/ 2)
sin(
/
) (1/ 2)
c
T
rms
c
c
c
P
P
t T
t T
T


dt







 
(6.2-38) 
 
which can be evaluated to  
 

 368                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
rms
P
P

 
(6.2-39) 
 
as was claimed. Some approximations were used in this calculation; however it is an accurate estimate as 
long as the two codes are essentially orthogonal. Figure 6.2-10 can be used to acquire an MSK direct 
sequence SS system. Consider now the signal coming out of the summer in Figure 6.2-10. In Problem 7 it is 
found that the input to the noncoherent summer has a signal of the form 2P(Td)2. Thus the signal is 
independent of the carrier phase and proportional to the signal power P, and can be successfully used for 
acquisition of MSK SS signals. 
 
Amp.
Yes
No
Decision
Quadriphase
code gener.
VCXO
PN1(t)
PN2(t)
Hybrid
2sin(ot)
Square
2cos(ot)
2cos(
/
)
c
t T

(
1) (.)
d
d
kT
k
T
dt


Square
2cos(
/
)
c
t T

From
Osc.
Hybrid
2sin(ot)
Square
2cos(ot)
2sin(
/
)
c
t T

Square
2sin(
/
)
c
t T

From
Osc.
Osc.
yI1(0)
yQ1(0)
yQ2(0)
yI2(0)
1
1
(.)
nc
N
k
nc
N

(
1) (.)
d
d
kT
k
T
dt


(
1) (.)
d
d
kT
k
T
dt


(
1) (.)
d
d
kT
k
T
dt


Amp.
Yes
No
Decision
Quadriphase
code gener.
VCXO
PN1(t)
PN2(t)
Hybrid
2sin(ot)
2sin(ot)
Square
2cos(ot)
2cos(ot)
2cos(
/
)
c
t T

(
1) (.)
d
d
kT
k
T
dt


Square
2cos(
/
)
c
t T

From
Osc.
Hybrid
2sin(ot)
2sin(ot)
Square
2cos(ot)
2cos(ot)
2sin(
/
)
c
t T

Square
2sin(
/
)
c
t T

From
Osc.
Osc.
Osc.
yI1(0)
yQ1(0)
yQ2(0)
yI2(0)
1
1
(.)
nc
N
k
nc
N

1
1
(.)
nc
N
k
nc
N

(
1) (.)
d
d
kT
k
T
dt


(
1) (.)
d
d
kT
k
T
dt


(
1) (.)
d
d
kT
k
T
dt


 
 
Figure 6.2-10 Acquisition system for MSK modulation. 
 
 
6.3 ACQUISITION PROBABILITY VERSUS TIME FOR ACTIVE CORRELATION 
Equation Chapter 6 Section 3 
We have determined how to compute the mean time to acquire for active correlation single dwell time 
systems in Section 6.2 with no carrier frequency error. In this section we will approximate the probability of 
acquisition versus time for the single dwell time, active acquisition system. Often, in practice, the probability 
of acquisition is specified, rather than the mean time to obtain code acquisition. So this analysis is an 
approximation that will allow the acquisition probability to be approximated. 
 
It is assumed that PD and PFA are given and constant. As in Section 6.2 we will assume that the 
search starts from the minimum possible delay point in time and the timing is retarded in code phase, to 
reduce the chance of acquiring a multipath signal. After q cell checks the code phase uncertainty will have 
been searched one time, assuming that there are q cells in the search uncertainty. As the search passes 
through the code phase uncertainty more times the probability of acquisition accumulates. 
 
To clarify the difference between PD and the acquisition probability we consider the following. The 
symbol PD denotes the probability of detection given that the signal is present and it is checked at that code 
phase position. Let PACQ(n
SW
T
) denote the probability of acquisition after n searches or n
SW
T
 seconds 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          369 
through the uncertainty region, in terms of the mean sweep time
SW
T
.8 PACQ(n
SW
T
) depends on PD and will 
be larger than PD if more than one complete search of the code uncertainty is made.  
 
If n complete searches of the time uncertainty have been made, the probability of acquisition, at the 
end of the n-th search, is given by 
 
 
2
1
(
)
(1
)
(1
)
...
(1
)
1 (1
)
n
ACQ
SW
D
D
D
D
D
D
D
D
n
P
nT
P
P
P
P
P
P
P
P










 
(6.3-1) 
 
where n is the number of complete searches through the code phase uncertainty (or timing uncertainty) and 
D
P   is the probability of detection, given that the signal is present at that tested code phase. Another way to 
derive this equation is to note that (1–PD) is the probability of not detecting the signal; (1–PD)n is the 
probability of not detecting the signal in n sweeps (searches through the code phase uncertainty). Thus  
1–(1-PD)n is the probability of detecting the signal in n sweeps of the uncertainty. Figure 6.3-1 illustrates how 
the acquisition probability “builds up” as the number of complete sweeps is completed, under the assumption 
of uniform a priori timing uncertainty. It is to be noted that if the a priori probability density of the signal 
timing location is assumed to be uniform in the timing uncertainty range, then the probability of acquisition 
increases linearly between the full sweeps as shown in Figure 6.3-1. 
 
The acquisition time for a given probability of acquisition (PACQ(n
SW
T
)) can be written in terms of 
the mean sweep time (
SW
T
) and n by the expression 
 
 
( )
SW
ACQ
T
n
nT

 
(6.3-2) 
 
where  
 
 
 
n 
is the number of sweeps (integer or not) 
 
 
 
SW
T
 
is the mean time to search the search one sweep  
 
0
PD
PD+PD(1-PD)+PD(1-PD)2
1
PACQ(t)
TSW
2TSW
3TSW
4TSW
t
1
2
3
4
5
5TSW
2
3
(1
)
(1
)
(1
)
D
D
D
D
D
D
D
P
P
P
P
P
P
P






(1
)
D
D
D
P
P
P


...
0
PD
PD+PD(1-PD)+PD(1-PD)2
PD+PD(1-PD)+PD(1-PD)2
1
PACQ(t)
TSW
TSW
2TSW
3TSW
3TSW
4TSW
4TSW
t
1
2
3
4
5
5TSW
5TSW
2
3
(1
)
(1
)
(1
)
D
D
D
D
D
D
D
P
P
P
P
P
P
P






(1
)
D
D
D
P
P
P


......
 
 
Figure 6.3-1 Illustration of how the acquisition probability accumulates with time. 
 
 
                                                          
8 Note that 
'
(1
)
SW
FA
D
T
KP
q



 for the single active search approach, where 
'
D

 is the noncoherent dwell time, K is the false alarm 
penality in dwell times for a false alarm, and q is the number of hypotheses to be searched. 

 370                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
When the desired acquisition probability does not correspond to (6.3-1) for some integer n, then it is 
necessary to interpolate between multiple sweep times to find the actual n needed to achieve that probability 
of acquisition. 
 
We will develop the equations for the case in which the desired acquisition probability 
(
(
ACQ
SW
P
nT
) ) is not satisfied by (6.3-1) for an integer value of n. In region 1 of Figure 6.3-1 we have 
 
 
( )
    when   
  and when 
1
D
ACQ
D
ACQ
SW
ACQ
D
D
P
T
n
T
P
P
n
P


 
(6.3-3) 
 
where 
 
 
 (n) is the acquisition time at the desired probability of acquisition 
ACQ
T
D
ACQ
P
 
 
 
D
ACQ
P
= PACQ(n
SW
T
) is the desired acquisition time probability 
 
 
PD is the probability of detection when the local code and the   
 
 
 
 
received code are aligned at a single correlation 
The 
regions 
are 
indicated 
with 
numbers 
with 
circles 
around 
them 
in 
Figure 
6.3-1. For region 2 of Figure 6.3-1 we have 
 
    
(
)
( )
(1
)
   when  
(1
) 
 1
2
(1
)
D
ACQ
D
D
ACQ
SW
D
ACQ
D
D
D
D
D
P
P
T
n
T
P
P
P
P
P
and
n
P
P










 
(6.3-4) 
 
 
For region 3 we have 
 
 
2
(
(1
))
( )
(2
)
(1
)
D
ACQ
D
D
D
ACQ
SW
D
D
P
P
P
P
T
n
T
P
P






 
(6.3-5) 
 
when
. For region 4 we have 
2
(1
)
(1
)
(1
) and 2
3
D
D
D
D
ACQ
D
D
D
D
P
P
P
P
P
P
P
P
n










 
 
2
3
(
(1
)
(1
)
( )
(3
)
(1
)
D
ACQ
D
D
D
D
D
ACQ
SW
D
D
P
P
P
P
P
P
T
n
T
P
P








 
(6.3-6) 
 
when
. 
2
2
(1
)
(1
)
(1
)
(1
)
(1
)  and 3
4
D
D
D
D
D
D
ACQ
D
D
D
D
D
D
D
P
P
P
P
P
P
P
P
P
P
P
P
P
n














3
 
For region 5 we have 
 
 
2
3
4
(
(1
)
(1
)
(1
)
( )
(4
)
(1
)
D
ACQ
D
D
D
D
D
D
D
ACQ
SW
D
D
P
P
P
P
P
P
P
P
T
n
T
P
P










 
(6.3-7) 
 
when
. 
2
3
4
(1
)
(1
)
(1
)
...
(1
)  and 4
5
D
D
D
D
D
D
D
D
ACQ
D
D
D
P
P
P
P
P
P
P
P
P
P
P
n













 
From Section 6.2 it can be deduced that the mean sweep time (assuming no acquisitions) is given by 
 
 
(1
)
sw
FA
D
T
kP
q


'  
(6.3-8) 
 
 
If
D
D
ACQ
P
P

, the desired acquisition probability can be achieved by employing multiple sweeps to 
build up to
D
ACQ
P
. If 
D
D
ACQ
P
P

 then only one sweep or less is required.  

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          371 
 
Let n be the solution to the number of sweeps needed to achieve the desired acquisition 
probability
D
ACQ
P
. Then the acquisition time is given by  
 
 
( )
SW
ACQ
T
n
nT

 
(6.3-9) 
 
which produces an acquisition probability of
( )
D
ACQ
ACQ
P
P
n

. 
 
Example 2 As an example of this theory suppose that 
1
SW
T
 second and PD = 0.9 and it is desired to achieve 
an acquisition probability of 0.99. After one complete sweep of the uncertainty region PACQ(1) = 0.9. After 
two complete sweeps PACQ(2) = 0.99 according to (6.3-1). Hence the solution, in this case, is that it takes 2 
seconds to achieve a probability of acquisition of 0.99. In general noninteger values of sweeps will be 
required to achieve a specific value of
D
ACQ
P
. In this case one of the (6.3-3) to (6.3-7) must be used to 
determine n, then TACQ is given by (6.3-7). 
 
 
An alternative to evaluating (6.3-3) to (6.3-7) is to (“solve” (6.3-1)) directly for n to obtain 
 
 
log(1
)
log(1
)
D
ACQ
D
P
n
P



 
(6.3-10) 
 
where n should be greater than or equal to 2 to be a satisfactory approximation.  
 
From our Example 2 above we can solve for n from (6.3-10) to find 
 
 
log(1 .99)
2
log(1 .9)
n




 
(6.3-11) 
 
which fortuitously agrees exactly with our previous calculation. The larger the value of n, the better the 
accuracy of (6.3-9) along with (6.3-10). A more complete approach to the time to first fix (TTFF) which 
includes code acquisition of at least four codes and reading the data necessary for acquisition has been 
presented recently in Holmes et al. [16].  
 
 
6.4 PARALLEL METHODS OF ACTIVE CODE ACQUISITION 
Equation Chapter 6 Section 4 
Typically, modern SS acquisition methods are based on digitizing the incoming signal and performing the 
correlation, or correlations, digitally. Usually the sample rate is taken to be a little more than twice the chip 
rate. From hardware considerations it is desirable to minimize the sampling rate and the number of bits per 
sample, which minimizes the number of bits to be processed for the correlation (or correlations). Baseband 
filtering of the received signal normally limits the spectral content to the first nulls (with NRZ formatting) in 
order to sample the baseband chip sequence at a little over twice the chip rate for BPSK, to avoid aliasing 
problems. 
 
If the approach is done digitally at slightly over the Nyquist rate of two samples per chip, then the 
baseband signal has to be filtered appropriately (to the first null of a BPSK signal, for example). Then the 
correlation search can be done in time increments of about 1/2 chip. This poses no problem since most active 
searches are done in 1/2-chip increments anyway. Oftentimes, these code acquisition systems will utilize a 
fast Fourier transform (FFT) to search frequency, so that both time and frequency can be searched 
simultaneously. 
 
Figure 6.4-1 illustrates a parallel digital correlator model in which parallel processing is used to 
speed up the acquisition time.  

 372                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
A/D
A/D
PN1


L=2
k
Point
FFT
PN2


PNR


Input signal 
plus noise
Correlates on 0
to T/R seconds
Correlates on 
T/R to 2T/R 
seconds
Correlates on
(R-1)T/R to T
seconds
I1 Corr.
Q1 Corr.
I2 Corr.
Q2 Corr.
IR Corr.
QR Corr.
BPF
90º
LPF
LPF
2
2
?
h
T


1
.
c
N
i
?
h
T

2
2
?
h
T

?
h
T

2
2
?
h
T

?
h
T


1
.
c
N
i

1
.
c
N
i

1
.
c
N
i

1
.
c
N
i

1
.
c
N
i
L=2
k
Point
FFT
L=2
k
Point
FFT
A/D
A/D
A/D
A/D
A/D
PN1
PN1


L=2
k
Point
FFT
L=2
k
L=2
k
Point
FFT
PN2
PN2


PNR
PNR


Input signal 
plus noise
Correlates on 0
to T/R seconds
Correlates on 
T/R to 2T/R 
seconds
Correlates on
(R-1)T/R to T
seconds
I1 Corr.
Q1 Corr.
I2 Corr.
Q2 Corr.
IR Corr.
QR Corr.
BPF
90º
LPF
LPF
2
2
?
h
T


1
.
c
N
i
?
h
T

2
2
?
h
T

?
h
T

2
2
?
h
T

?
h
T


1
.
c
N
i

1
.
c
N
i

1
.
c
N
i

1
.
c
N
i

1
.
c
N
i
L=2
k
Point
FFT
L=2
k
L=2
k
Point
FFT
L=2
k
Point
FFT
L=2
k
L=2
k
Point
FFT
 
 
Figure 6.4-1 Parallel correlator model.  
 
 
In this model R correlators are arranged so as to assign the first correlator to search the first (T/R) 
seconds of the time uncertainty. The second correlator searches the T/R to 2T/R seconds of time 
uncertainty, and so on. until the R-th correlator searches the last segment of time uncertainty, which is (R–1) 
T/R seconds to T seconds. Thus, the time uncertainty is divided by R, which speeds up the time search by 
a factor of about R, for R parallel correlators. In reality a slight overlap in time of the time uncertainty 
intervals is necessary to compensate for any code drift during the search time. Let the correlation time of 
each correlator be Ti0. When the bit time is Ti, seconds the number of points a nonzero padded FFT (the FFT 
adds the Ti0 segments to form a Ti second correlation) satisfies  
 
 
0
FFT
i
i
N
T
T

 
(6.4-1) 
 
where typically Ti = Tb, the bit duration (or coded symbol when a coded system is used). A frequency search 
can also be accomplished with the FFTs, as will be discussed in the Section 6.5. The correlators could also be 
utilized to search frequency in parallel or a combination of frequency and time in parallel. 
It must be noted that with multiple correlators, especially with each correlator having an FFT, the 
likelihood of having a false alarm is much higher than with a single correlator. Therefore the threshold must 
be set somewhat higher to reduce the individual false alarm probability so that the aggregate false alarm 
probability is kept to the desired level.  
 
 
6.4.1 Active Search Mean Acquisition Time with Parallel Processing  
 
In this section the single active correlator will be generalized to the important case when multiple frequency 
and time hypotheses are tested simultaneously [17]. Section 6.2.3 considered the case in which only one time 
hypothesis was tested at a time. It will be assumed that both time and frequency will be searched in parallel 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          373 
in this section. Parallel processing is used, for example, in Global Positioning System (GPS) receivers to 
speed acquisition time.  
 
Consider Figure 6.4-2 which illustrates the time and frequency uncertainty that the receiver has to 
contend with at initial acquisition. Let T denote the total uncertainty in seconds, which is based on the clock 
time uncertainty plus range equivalent time uncertainty. Let T = 2t, so that the time uncertainty can be 
described as 
 seconds. Let t denote the separation in time between consecutive time hypotheses in 
seconds (in our last example it was 1/2 of a chip, which can be related to seconds) and N the number of 
hypothesis per PN code chip. N is typically 2 in many receivers. It follows that the total number of time cells 
to be searched is  
t

 
 
/
ct
c
c
T
T
N
t
T
N

NR
T






 
(6.4-2) 
 
where 
 is the code chip rate, in chips per second.
1/
c
R 
cT
9 Now consider the frequency search in which F 
is the total frequency uncertainty in Hz, and f is the separation between hypotheses in Hz. Let F = 2fm. 
where fm is the maximum frequency error to be searched. The total number of frequency cells to be 
searched is given by 
 
 
cf
F
N
f



 
(6.4-3) 
 
Therefore the total number of time and frequency cells to be searched is given by  
 
 
c
ct
cf
c
F
N
N N
NR
T
f





 
(6.4-4) 
 
 
Now assume that Mc cells can be searched in parallel, in other words on every correlation Mc cells 
are searched (in both frequency and time) as shown in Figure 6.4-2.  
 
T
F
t
f
Mc
cells
T
F
t
f
Mc
cells
 
 
Figure 6.4-2 Time and frequency uncertainties showing a search of Mc cells. 
 
                                                          
9 When the code format is not NRZ, then the chip is the smallest time period for which the symbol is constant. If the code is based on 
one squarewave then a chip will be one half of the squarewave period. 

 374                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Further assume that Mc divides10 Nc. It follows that a total of 
 
 
'
c
c
c
N
N
M

 
(6.4-5) 
 
blocks of cells must be tested in order to search the whole time-frequency uncertainty. 
 
When Mc cells are searched in parallel, each cell can have a false alarm. It will be assumed here 
that verifying11 one or more false alarms requires K 
D
 seconds, where K is a number that is typically greater 
than one and 
D
 is the coherent dwell time. Mc separate verification channels must verify false alarms in 
order to determine whether the correct signal or a false alarm has occurred. It is assumed that the time in 
seconds to determine that the signal is present or not is K 
D
seconds. Assuming that all the channels are 
statistically independent, the false alarm probability of the group of Mc cells is given by 
 
 


1
1
c
M
FA
FA
P
P


 
(6.4-6) 
 
since the false alarm probability of one or more individual cells is one minus the probability that there are no 
individual cell false alarms. It is assumed that lock verification circuits are available for up to Mc false 
alarms. 
When 
 groups of cells have to be searched, the mean time to acquire is well approximated from 
'
c
N
(6.2-17) 
 
 
'
'
(2
)(1
)
2
D
FA
c
D
D
P
KP
T
N
P




   (s) 
(6.4.7) 
 
where PD is the probability of detection, K is the false alarm penalty in units of 
D
, 
D
 is the coherent dwell 
time in seconds (here noncoherent combining is not included), and 
 (
is assumed to be >>1) is the 
number of blocks of Mc cells to be searched over the total time and frequency uncertainty.  
'
c
N
'
c
N
Commonly additional detectability is derived from noncoherently combining an integer number of 
the coherent dwells (this is called noncoherent integration or correlation), so that the total dwell time is a 
multiple of the coherent dwell time, Nnc. The detection decision is made after multiples (Nnc) of 
D
 seconds. 
Thus the total dwell time, when noncoherent integration is used, is given by 
 
 
D
nc
D
N



'
 
(6.4-8) 
 
 
In practice Nnc can be considerably larger than one to provide the desired acquisition time 
performance in the face of a jammer or significant interference. Using (6.4-8) and (6.4-6) in (6.4.7) produces  
 
 
'
(2
)(1
[1 (1
)
])
2
c
M
c
D
FA
D
D
c
N
P
K
P
T
P
M 





'  
(6.4-9) 
 
This is the main result for the mean time to acquire when there are 
 hypotheses to be searched 
and Mc hypotheses are searched at one correlation time period and 
'
c
N
'
D
the noncoherent dwell time. If Mc does 
not divide 
'
c , then
'
c
N /Mc in 
N
 
(6.4-9) is replaced w
c
M
ith 
' /
c
N



, wh
 
ere
x

 denotes the least integer 
greater than x. Hence using this notation in (6.4-9) yields our main result 
                                                          
10 By M divides N we mean that N = qM where q is a positive integer. 
11 This may entail observing a lock detector for a time equivalent to multiples of the dwell time. 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          375 
 
 
'
(2
)(1
[1 (1
)
])
2
c
M
c
D
FA
D
D
c
N
P
K
P
T
P
M












'  
(6.4-10) 
 
for the mean acquisition time when 
 blocks of cells are correlated, Mc cells at a time with noncoherent 
combining. As noted earlier the noncoherent dwell time is given by 
'
c
N
D
nc
D
N



'
. 
 
When 
1, then 
c
FA
M P

(6.4-10) reduces to 
 
 
'
(2
)(1
)
2
D
c
FA
c
D
D
c
P
KM P
N
T
P
M










'  
(6.4-11) 
 
Thus, the effective false alarm probability, uner these conditions, is McPFA, which is Mc times larger than for 
the single hypothesis test case, as one would expect. Also, from (6.4-5) 
=Nc/Mc, therefore the search is 
about Mc time faster than a nonparallel search. 
'
c
N
 
 
6.5 ACTIVE CODE SEARCH UTILIZING THE FFT 
Equation Chapter 6 Section 5 
In this section active code acquisition, utilizing the FFT, will be analyzed for parallel frequency searching 
and coherent integration. 
 
 
6.5.1 Signal Modeling for BPSK Code Acquisition Utilizing the FFT  
 
In this section the use of an FFT, in an active search acquisition scheme, will be discussed in terms of the 
signal modeling and performance. Typically the frequency of the carrier is unknown to within some 
accuracy, so that multiple frequency hypotheses must be searched. One way to accomplish the frequency 
search is to utilize an FFT, when the signal processing is done digitally. Another option is to use highly 
parallel equipment to search many frequencies at the same time.  
Figure 6.5-1 illustrates an I-Q baseband system derived from the quadrature carrier references. 
Although this is an analog implementation to simplify the analysis, a digital receiver would utilize analog to 
digital (A/D) converters following each low-pass filter. The function of the A/D is to sample the signal and 
noise and to convert the samples to a digital word. The low pass filters in the figure are there to do two 
things: (1) to remove the sum frequency term and (2) for a digital model to prevent aliasing. It will be 
assumed that the low pass filters have a bandwidth of Rc Hz, where Rc is the chip rate, and that two samples 
per second is used in the digital implementation.  
It will also be assumed that the filters are ideal in their amplitude and phase response (that is, a 
sharp cutoff filter). To simplify the analysis, analog processing will be assumed. Later, the losses associated 
with digitizing the signal will be discussed. 
Assume that the input signal is a BPSK direct sequence DSSS signal of the form  
 
 
ˆ
ˆ
( )
2
(
) ( )cos(
)
2
( )cos(
)
2
( )sin(
o
c
o
s
o
y t
APN t
T d t
t
n t
t
n t
t
)











 
(6.5-1) 
 
where A is the rms signal voltage, d(t) is the data sequence, and PN(t-T) is the direct sequence code with 
delay T seconds from the transmitter to the receiver. The inphase and quadrature noise components are 
Gaussian random processes and assumed to be in phase with each of the reference signals for mathematical 
convenience. 

 376                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Greater than
threshold ?
PN
code 
generator
0
ˆ
ˆ
2 cos(
)
t



0
ˆ
ˆ
2 sin(
)
t




ˆ
(
)
PN t
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

Yes
No
Code phase adjust
I(t)
Q(t)
I (kTi0)
Q(kTi0)
y(t)
VCO
BPF
0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

External frequency
source
NFFT
point
FFT
M
1
FFT
N
1
FFT
N


2
2
1
 
( )
(
)
(
)
nc
N
NC
i
i
n
Z
k
nT
nT



I
Q
Compute ZNC(k)
LPF
LPF
2.
2.
2.
2.
2.
Z(k)
Greater than
threshold ?
PN
code 
generator
0
ˆ
ˆ
2 cos(
)
t



0
ˆ
ˆ
2 sin(
)
t




ˆ
(
)
PN t
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

Yes
No
Code phase adjust
I(t)
Q(t)
I (kTi0)
Q(kTi0)
y(t)
VCO
BPF
0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

External frequency
source
NFFT
point
FFT
M
1
FFT
N
1
FFT
N
1
FFT
N
1
FFT
N


2
2
1
 
( )
(
)
(
)
nc
N
NC
i
i
n
Z
k
nT
nT



I
Q
Compute ZNC(k)
LPF
LPF
2.
2.
2.
2.
2.
2.
2.
2.
2.
2.
Z(k)
 
 
Figure 6.5-1 Baseband version of a PN code acquisition system for BPSK. 
 
 
This assumption doesn’t affect the results. The reference signals are composed of the local code at 
delay estimate 
 and the sine and cosine references, which are represented by 
ˆT
 
 
 
0
ˆ
ˆ
( )
2 cos(
)    ( )
2 sin(
)
c
s
r t
t
r t
t
0
ˆ
ˆ








 
(6.5-2) 
 
where 
 are the receiver’s estimated received signal angular frequency, carrier phase, and 
estimated code time delay from the transmitter to the receiver, respectively. After demodulating the received 
signal plus noise with the cosine reference signal, one obtains  
0 ˆ
ˆ
ˆ , , and T

 
     
 
0
0
ˆ
ˆ
ˆ
( )
(
)
(
) ( )cos(
'
)
( )
(
)
(
)
c
I t
PPN t
T PN t
T d t
t
n t PN t
T
O













)
 
(6.5-3) 
 
where 
0
0ˆ
(
O 


 denotes a term at 
0
ˆ0



, the angular frequency error is 
0
ˆ
2
f
0







, where f
 
is the frequency error and the phase difference is 
ˆ





. Similarly the product of the input and the Q 
channel reference signal gives the Q channel output 
 
                  
0
0
ˆ
ˆ
( )
(
)
(
) ( )sin(
'
)
( )
(
)
(
)
s
Q t
PPN t
T PN t
T d t
t
n t PN t
T
O
ˆ













 
(6.5-4) 
 
 
In Figure 6.5-1, it is assumed that the low pass filter essentially removes the sum frequency term. In 
addition, it will be assumed that the ideal BPF filters the signal such that there are no aliasing errors. It will 
be assumed for computational convenience that the correlation is formed from an analog integration, and not 
a summation as in a digital receiver, to simplify the calculations. Amplitude quantization is not modeled in 
the analysis. Later, losses for the amplitude quantization, assuming a digital correlation was used, will be 
estimated. Time quantization will be accounted for by assuming that there are two time hypotheses per chip.  
 
The correlation on the I and the Q channels, over the coherent correlation time of Ti0 seconds, will 
be modeled as a Ti0 second average. This is based on the fact that an analog matched filter for the code 
sequence is equivalent to an analog correlation. It will also be assumed that the NFFT summed Ti0 segments 
(NFFTTi0 seconds = Ti) is equal to Ti seconds. Normally Ti is the bit duration, Tb = 1/Rb, since the data bit 
boundaries upper limit the coherent integration time. The n-th in-phase Ti0 second correlation is modeled as 
  

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          377 
    
 
0
0
0 (
1)
1
ˆ
ˆ
( )
( )
(
)
(
)cos(
)
( )
(
)
i
i
nT
c
i
n
T
n
Pd t PN t
T PN t
T
t
n t PN t
T
dt
T














I

 
(6.5-5) 
 
It is to be noted that the signal component of I(n) is dependent on the difference of the actual and 
estimated delays 
. This expression can be evaluated as  
ˆ
T
T

 
     
0
0
0
0
0
0
(
1)
(
1)
1
1
ˆ
ˆ
( )
 ( )
(
)
cos(
)
( )
(
)
i
i
i
i
nT
nT
PN
c
i
i
n
T
n
T
n
d n
PR
T
T
t
dt
n t PN t
T dt
T
T











I

)
 
(6.5-6) 
 
where 
 is the autocorrelation function of the spreading code and has been factored out of the 
integral as an approximation assuming that f is small compared to the chip rate, and d(n) is the value of the 
data sequence of the bit
ˆ
(
PN
R
T
T

12 during the n-th Ti0 seconds of time. Let 
ˆ
T
T


 be the timing error between the 
received code and the local matched filter code. The integral in (6.5-6) can be evaluated by writing the cosine 
as the real part of a complex exponential, integrating and taking the real part. This results in 
 
     
 




0
0
0
0
0 (
1)
1
ˆ
( )
( )
( )sinc
cos
'
( )
(
)
i
i
nT
PN
i
i
c
i
n
T
n
d n
PR
fT
n
T
n t PN t
T d
T










I
t

/ 2
 
(6.5-7) 
 
where 
0
'
iT





inc( )
sin(
 is the constant phase that results from each integration. The term RPN() is the 
autocorrelation function of the spread spectrum code, without filtering effects included. In (6.5-7) sinc(x) is 
defined as s
) /(
)
x
x
x



. 
In the same manner as in the I channel, but using the imaginary part of the exponential, 
can be 
shown to be given by 
( )
n
Q
 
    
  




0
0
0
0
0 (
1)
1
ˆ
( )
( ) ( )sinc
sin
'
( )
(
)
i
i
nT
i
i
s
i
n
T
n
PR
d n
fT
n
T
n t PN t
T d
T










Q
t

 
(6.5-8) 
 
Thus we see that the correlation loss, expressed in power out of the correlator when considering 
both the I and Q channels, is given by sinc(fTi0)2 times the autocorrelation function squared evaluated at the 
timing error . In (6.5-8) f = /(2).  
The maximum frequency uncertainty is given by fm Hz. Then the integration time, Ti0, should not 
be too large in order to limit the frequency error losses in the Ti0 second correlation. If the loss is to be limited 
to 0.91 dB, for example, then it is necessary that 
 
2
0
2
0
sin(
)
10log
0.91
(
)
m
i
m
i
f T
L
f T












mf
 
(6.5-9) 
 
Solving (6.5-9) yields the result that fmTi0 = ¼, or 
 
 
 
0
1/(4
)
iT 

 
(6.5-10) 
 
This correlation loss at the extremes of the frequency error is known as the outer bin loss. It occurs 
at the maximum frequency error between the received signal and the reference signal. If the product of 
frequency error and correlation time is doubled to fmTi0 = 1/2, the outer bin loss is increased to 3.91 dB. 
                                                          
12 It is assumed that the bit time is a multiple of Ti0. That is, NFFTTi0 = Tb. At a bit time transition d(n) assumes the value of the bit just 
before the transition.  

 378                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Usually the gain of about 3 dB in signal level is worthwhile, so that the condition of (6.5-10) is often used in 
practice. The frequency search range is doubled when fmTi0 = 1/2 is used compared to fmTi0 = 1/4.  
Now let us determine the frequency response of the FFT. Let the output of the I and Q correlators, 
with Ti0 seconds correlation time, be represented as the complex number z(n) (which is the input to the FFT)  
 
 
( )
( )
( )
z n
n
j
n


I
Q
 
(6.5-11) 
 
 
The NFFT-point DFT13 [18] of (6.5-11) is given by14 
 
 
1
(2
/
)
0
1
( )
( )
      = 0,1,...
-1
FFT
FFT
N
j
N
nk
FFT
n
FFT
Z k
z n e
k
N
N






 
(6.5-12) 
 
Letting 
 
 
 
(6.5-13) 
(2
/
)
FFT
j
N
W
e



 
produces the following 
 
 
 
(6.5-14) 
1
0
( )
( )(
)
FFT
N
nk
FFT
n
N
Z k
z n W



 
 
The NFFT outputs of the NFFT point FFT shown at the output of the FFT in Figure 6.5-1, which 
correspond to filtered outputs that are offset at a set of frequencies, as will be shown shortly. Normally not all 
of the outputs will be checked for code acquisition, since they will be out of the frequency range of the 
signal. The effect of the FFT is to act as a filter bank, albeit with crude filters, with rather high sidelobes and 
a fair amount of overlap between the filters. An alternate way to form similar statistics15 is to have NFFT 
different I-Q pair of reference frequencies to offset the carrier and then form the magnitude. Typically using 
one FFT requires less hardware than using NFFT I-Q pairs for a digital system implementation. 
 
To determine the form of the filter response of the filters in the FFT filter bank, it is to be noted that 
the impulse response of a NFFT point FFT is given by [18] 
 
 
 
(6.5-15) 
(2
/
)
( )
,    = 0, 1, 
-1
j
kn N
FFT
h n
e
n
N



 
Assume that the initial correlation time is one (that is, Ti0 = 1) so that the z transform of the filter response is 
given by  
 
1
(2
/
)
(2
/
)
1
0
1
( )
1
FFT
FFT
FFT
N
n
j
kn N
n
j
k N
n
z
H z
e
z
z e













 
(6.5-16) 
 
Evaluating H(z) on the unit circle produces the result 
 
 
((
1)/2)
/
sin(
/ 2)
(
)
sin(
/ 2
/
)
FFT
j
N
j
j k N
FFT
FFT
N
H e
e
e
k N










 
(6.5-17) 
 
where  is the discrete time frequency variable [18]. To relate the discrete time frequency variable (to the 
analog frequency variable (fk) note that 
 
                                                          
13 This would be implemented by an FFT in most systems. 
14 We initially neglect the division by NFFT, and in the next section we will account for it. 
15 This method does not incur the outer bin loss, whereas the FFT method does incur the outer bin loss. 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          379 
 
0
 and   
2
k
FFT
i
k
k
k
f
f
N
T



 
(6.5-18) 
 
so that the relationship is  
 
 
0
k
iT

 
(6.5-19) 
 
Thus, the normalized amplitude magnitude response is given by (letting fk = f ) 
 
 
0
0
0
sin(
)
1
    for 0
1/
sin(
/
)
                                                                     and for 
0,1,2,...
1
FFT
i
i
FFT
i
FFT
FFT
N
fT
f
T
N
fT
k N
k
N














 
(6.5-20) 
 
 
The frequency response of 
( )
A f
 is illustrated in Figure 6.5-2. Artistic liberty has been taken in the 
drawing, since the shape of each magnitude curve is actually a sin( ) /
x
x  like shape that extends for all 
frequency. However, to avoid cluttering the figure only inverted U shapes were used to represent the main 
magnitude response at each bin frequency. More details can be found in [18]. Note that the frequency range 
is 1/Ti0, which is just the FFT input precorrelation rate, and the spacing between the filter centers is 
1/(
FFT
N
Ti0), which is 1/Ti, or the inverse of the coherent correlation time. There are 
 bin frequencies 
for the FFT filter. Other filter bin arrangements are possible and are discussed in [19]. Typically NFFT is a 
power of 2, so assume NFFT =2
FFT
N
f
n , where nf is an integer. As was noted earlier, with the use of an FFT the 
total coherent correlation time is increased from Ti0 seconds to NFFTTi0 = Ti seconds. Thus, each time 
correlation can also be searched in frequency over the applicable portion of the NFFT frequency bins, and 
consequently multiple frequency hypotheses can be searched in parallel.  
 
f
1/Ti0
0
1/(NFFTTi0) =1/Ti
f
1/Ti0
0
1/(NFFTTi0) =1/Ti
 
 
Figure 6.5-2 FFT frequency response for the case of NFFT = 16. 
 
 
Now it will be established that the upper half range of the FFT is in fact the negative frequency part 
of the FFT filter bank. Again let Z(k) denote the complex FFT output of the I-Q input pair. Denote I(n) as the 
real FFT input and denote Q(n) as the imaginary part of FFT input. Thus each complex output FFT value is 
of the form 
 
 
 
(6.5-21) 




1
2
/
0
( )
( )
( )
  
0,1,...
1
FFT
FFT
N
j
N
kn
FFT
FFT
n
N
Z k
n
j
n e
k
N








I
Q

 
where NFFT is the size of the FFT. Let z(n) = I(n)+jQ(n) represent the complex FFT input. Note that nonbold, 
nonitalic, Arial font is used to represent the I and Q components of the complex input of the FFT. Then it 
follows that the output of the FFT is given by 

 380                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
 
(6.5-22) 

1
2
/
0
( )
( )
FFT
FFT
N
j
N
k
FFT
n
N
Z k
z n e





n
 
With the index k (k = 0, 1, NFFT –1) denoting the NFFT frequency bins, produced by the FFT. Let the 
exponential be represented by 
 
 


2
/
FFT
j
N
W
e



 
(6.5-23) 
 
so that (6.5-22) can be written as  
 
 
 
(6.5-24) 
1
0
( )
( )
FFT
N
kn
FFT
n
N
Z k
z n W



 
Now consider negative values of k. Therefore let k = –m. It follows that 
 
 
 
(6.5-25) 
1
0
(
)
( )
FFT
N
nm
FFT
n
N
Z
m
z n W





 
However it is true that 
 
 




FFT
m
m
n
n
W
W




N
 
(6.5-26) 
 
 
Since, for any n  
 
 


1
FFT
N
n
W
 
(6.5-27) 
 
Therefore, it follows that  
 
      
 
(6.5-28) 




1
1
0
0
(
)
( )
( )
(
)
FFT
FFT
FFT
N
N
m
m N
n
n
FFT
FFT
FFT
n
n
N
Z
m
z n W
z n W
N
Z N
m














 
as was to be demonstrated. Thus the negative frequency errors are located in the upper half of the FFT 
frequency range of the FFT output. For example, when NFFT  = 16, Z(–1) = Z(15). 
 
 
6.5.2 Model for the Correlator Output Out of the FFT 
 
Now consider the effect that the FFT has on the signal and the noise of the inphase and quadrature terms out 
of the FFT. Note that the effect of the FFT is to increase the correlation time to Ti seconds from Ti0 seconds. 
In the previous section the scale factor of 1/NFFT has been neglected. Now it will be accounted for. See Figure 
6.5-1 for the BPSK model incorporating the FFT. Following this section more details on the losses and other 
effects of the FFT will be discussed. After the FFT summation and the normalization by NFFT, the inphase 
and quadrature channels are given by  
 
 


1
(2
/
)
0
1
( )
( )
( )
( )
( )
 ,  
0 1,2,
1
FFT
FFT
N
jkn
N
FFT
n
FFT
Z k
k
j
k
n
j
n e
k = ,
 N
N









I
Q
I
Q
 
(6.5-29) 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          381 
in which for each time hypothesis and for some portion of each of the NFFT frequencies, these correlations are 
generated for the acquisition search process. Note that the prime indicates the normalization by NFFT.  
From (6.5-7) and (6.5-8), it can be seen that, neglecting the frequency error effect which will be 
addressed later in the chapter, the signal component will not be affected by the normalized FFT. Denote the 
FFT frequency offset and the k-th bin effect on the signal by L(f,Ti,k), and the signal components out of the 
FFT are given by 
 
 



0
( )
( )
( )sinc
,
,
cos(
')
S
i
PN
i
i
k
d T
PR
fT
L
f T k
n






I


 
(6.5-30) 
 
 



0
( )
( )
( )sinc
,
,
sin(
')
S
i
PN
i
i
k
d T
PR
fT
L
f T k
n






Q


 
(6.5-31) 
 
we have used Arial Black italic font for the components out of the FFT. The noise term will be affected by 
the FFT. If we denote real and imaginary outputs in terms of signal and noise then we can write  
 
 
FFT
( )
( )
( )
( )
( )
( )
       
( ) + 
( ) ,  
0,1,2,
1
S
S
N
N
S
N
Z(k)=
k
j
k
k
j
k
k
j
k
Z
k
Z
k
k =
 N







I
Q
I
Q
I
Q
 
(6.5-32) 
 
where the subscript N denotes noise and the subscript S denotes the signal.  
 
The FFT input noise terms IN(k) and QN(k) are assumed to be Gaussian, independent, random 
variables with zero mean value. The FFT input variables can be broken into signal and noise terms as 
 
 
  ( )
( )
( )
( )
( )
( )
S
N
S
N
n
n
n
n
n
n




I
I
I
Q
Q
Q
 
(6.5-33) 
 
The normalized, discrete Fourier transform (DFT) of the noise components for complex inputs is 
defined as  
 
 


1
(2
/
)
0
1
( )
( )
( )
( )
( )
FFT
FFT
N
jkn
N
N
N
N
N
N
n
FFT
k
j
k
Z
k
n
j
n e
N








I
Q
I
Q
 
(6.5-34) 
 
where 
( )
N
Z
k is the noise component of the complex FFT output (
( )
( )
( )
S
N
Z k
Z
k
Z
k


). Note that italic, 
Arial Black font is used for the FFT output variables I and Q, and Arial font, without italics and not bold, is 
used for the input variables I and Q. The subscript N, in (6.5-34), denotes noise only. 
 
Note that 
( )
N
Z
k is a linear sum of zero mean Gaussian random variables and therefore is also a zero 
mean Gaussian random variable. Since In(k) and Qn(k) are zero mean Gaussian input random variables, it 
follows that the real and imaginary part of 
( )
N
Z
k  represents the output Gaussian random variables.  
Therefore the variance of the real and imaginary parts represent the FFT output inphase and 
quadrature noise terms. Consider Re(
( )
N
Z
k ) which can be written as  
 
    
 


1
0
1
2
( )
Re
( )
( )cos
( )sin
FFT
N
N
N
N
N
n
FFT
FFT
FFT
k
Z
k
n
nk
n
nk
N
N



2
N























I
Q
I
 
(6.5-35) 
 
The variance can be evaluated to 
 

 382                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
1
1
0
0
2
2
2
( )cos
( )sin
1
(
( ))
2
2
( )cos
( )sin
FFT
FFT
N
N
N
N
m
n
FFT
FFT
N
FFT
N
N
FFT
FFT
kn
kn
n
n
N
N
Var
k
E
N
mk
mk
m
m
N
N































































I
Q
I
Q
I
 
(6.5-36) 
 
where E{x} denotes the statistical expectation of x. Since the input IN(n) and QN(n) noise terms are assumed 
to be statistically independent, each random variable is independent from sample to sample, so that one can 
write 
 
 




2
2
1
2
2
2
0
1
2
(
( ))
( ) cos
( ) sin
FFT
N
N
N
N
n
FFT
FFT
FFT
kn
kn
Var
k
E
n
E
n
N
N



2
N
























I
Q
I
 
(6.5-37) 
 
Since the expected value of both terms is the same, and the summation produces the value NFFT, it follows 
that 
 
 
1
(
( ))
( ( ))
N
FFT
Var
k
Var
i
N

I
I
N
 
(6.5-38) 
 
Thus the output correlation from the FFT has a normalized variance that is 1/(NFFT) times as large as the 
input correlation, as would be expected. It follows that the output noise out of the FFT is given at the m-th bit 
time (Ti) by 
 
 
(
1)
1
ˆ
( )
( )
(
)
i
i
mT
N
c
i
m
T
m
n t PN t
T



=
I
T dt  
(6.5-39) 
 
 
(
1)
1
ˆ
( )
( )
(
)
i
i
mT
N
s
i
m
T
m
n t PN t
T




Q
T dt

 
(6.5-40) 
 
where NFFTTi0 = Ti. Now let us consider the evaluation of the variance of the two noise terms. 
 
 
6.5.3 Evaluation of the FFT Enhanced Acquisition System Output Variance for an Arbitrary Gaussian 
Noise Process 
 
Now consider the evaluation of the variance of the noise random variables, 
and
. The variance 
is needed in order to obtain the false alarm and detection probabilities. Consider 
 first, which is 
defined by in 
( )
N m
I
(
)
N
i
m
Q
( )
N m
I
(6.5-39). 
Taking the expected value of the square of 
 produces  
' ( )
n m
I
 
 


2
(
1)
(
1)
1
ˆ
ˆ
(
( ))
( )
( )
(
)
(
)
i
i
i
i
mT
mT
N
c
c
i
m
T
m
T
Var
m
E n t n u E PN t
T PN u
T
dtdu
T








I



 
(6.5-41) 
 
where the statistical independence of the noise and code processes has been assumed in (6.5-41). Denoting 
the autocorrelation function of the PN code process by 
( )
PN
R
, one obtains  
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          383 
 
2
(
1)
(
1)
1
(
( ))
(
)
(
)
i
i
c
i
i
mT
mT
N
n
PN
i
m
T
m
T
Var
m
R
t
u R
t
u dtdu
T






I

/ 2
i
 
(6.5-42) 
 
Now let m = 1 for notational convenience, and make the change of variables  
 
 
'
/ 2   and   '
i
t
t
T
u
u
T



 
(6.5-43) 
 
to produce 
 
 
/ 2
/2
2
/2
/ 2
1
(
(1))
(
)
(
)
i
i
c
i
i
T
T
N
n
PN
i
T
T
Var
R
t
u R
t
u dtdu
T






I
 
(6.5-44) 
 
Using a result in Papoulis [20] one can convert the double integral to a single integral  
 
 
2
1
(
(1))
( )
( )
i
c
i
T
N
n
PN
i
i
T
Var
R
R
T
d
T












I
 
(6.5-45) 
 
Making the reasonable assumption that Ti is much larger than Tc, one has 
 
 
1
(
(1))
( )
( )
c
N
n
PN
i
Var
R
R
d
T







I
 
(6.5-46) 
 
Now with (6.5-46) it is easy to express the variance in terms of the respective power spectral 
densities, via Parseval’s equality, to yield 
 
 
2
1
(
(1))
( )
( )
c
N
n
PN
i
Var
S
f S
f df
T






I
 
(6.5-47) 
 
where SPN(f) is the power spectral density of the unit power signal code, assuming that the chips are randomly 
generated with a +1 or –1, and each value occurring with a probability of ½, and 2 is the variance of
. 
The spectral density 
is the baseband version of the input noise, due to interference, thermal noise, and 
jamming. The same result can be shown to be true for 
 also. Thus  
' ( )
n m
I
( )
cn
S
f
(1)
N
Q
 
 
2
1
(
( ))
( )
( )
c
N
n
PN
i
Var
m
S
f S
f df
T






Q
 
(6.5-48) 
 
Thus (6.5-47) or (6.5-48) is the general result for 2. For the case of white Gaussian thermal noise using 
(6.5-47), one obtains 
 
 
2
0
1
(
( ))
(
( ))
( )
( )
2
2
WGN
N
N
PN
i
i
N
Var
m
Var
m
R
d
T
T







I
Q
0
N



 
(6.5-49) 
 
 
 
 

 384                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
6.5.4 BPSK Code Modulation Evaluation of PD and PFA for Arbitrary Noise  
 
In this section the detection and false alarm probabilities for code acquisition are computed for the typical 
modern BPSK receiver. Most modern receivers are digitally implemented and utilize baseband I-Q designs, 
and therefore the baseband version will be analyzed here. However, the analog baseband version will be 
evaluated here due to mathematical convenience, since there are many different digital implementations, and 
since the analog model normally provides the best one can hope to achieve in performance. Digital receiver 
performance can be estimated from the analog performance when digitization losses are accounted for. 
The test statistic is given by the noncoherent sum (Nh I-Q pairs) of the squared real and imaginary 
components, as shown in Figure 6.5-1. The sum is compared to a threshold Th. The noncoherent sum is given 
by  
 
 




2
1
( )
(
)
(
)
nc
N
NC
i
i
p
Z
k
pT
pT

2







I
Q
 
(6.5-50) 
 
Consider first the noise-only case, in order to determine the probability of false alarm. When the 
signal is not present, one can write 
 
 


2
2
2
2
1
1
( )
(
)
(
)
(
nc
nc
N
N
)
NC
N
i
N
i
p
p
i
Z
k
pT
pT






n
I
Q
pT

)
 
(6.5-51) 
 
where n(pTi) is a zero mean, Gaussian, random variable independent from sample to sample having the same 
statistics as 
 when the signal is absent. From [20, 21] it follows that ZNC(k) is a central 
chi-square distribution with 2Nnc degrees of freedom. Since it is a noise term its statistics do not depend on k. 
Denote by the random variable y the density function of ZNC(k). It has the density function  
(
) and 
(
N
i
N
b
pT
pT
I
Q
 
 
2
(
1)
/(2
)
2
1
( )
(2
)
(
1)!
nc
nc
N
y
Y
N
nc
p
y
y
e
N






 
(6.5-52) 
 
where
. Making the change of variable 
2
Var( (1))
'
n


I
2
/(2
)
z
y


and noting that the Jacobean of the 
transformation is just
2
2, one obtains the normalized noise-only probability density function that determines 
the false alarm probability 
 
 



1
( )
     , 
0
1 !
nc
N
z
n
nc
z
e
p
z
z
N





 
(6.5-53) 
 
and is zero otherwise.  
Now consider the probability density of the case when the signal present. Let  
 
 
2
2
2
2
1
1
 
  
nc
nc
N
N
k
k
k
y
x and s
m




2
k


 
(6.5-54) 
 
where s2 is the noncentrality parameter of the distribution, with mk being the mean value of both the 
 
and the
. Clearly s2 is the N  sum of the 
 plus the Nnc sum of
. From 
(
)
i
mT
I
(
i
mT
Q
)
2
(
)
S
i
mT
I
2
(
)
S
i
pT
Q
(6.5-30) and 
(6.5-31) one has 
 
 
2
2
2
2
0
( )sinc (
)
(
,
, )
nc
PN
i
FFT
i
s
N PR
fT
L
f T k




 
(6.5-55) 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          385 
Let L2 be the square of the loss16 so that  
 
 
 
(6.5-56) 
2
2
2
2
0
( )sinc (
)
(
,
, )
PN
i
FFT
i
L
R
fT
L
f T k




 
where the functional dependence of the loss has been dropped. Therefore s2 can be written as 
 
 
2
2
nc
s
PL N

 
(6.5-57) 
 
and note that it only applies to a particular Ti0, k, f, etc. Again, using [21] one has for the probability density 
of the signal plus noise  
 
 
2
2
1
2
2
1
2
2
2
1
( )
    
0
2
nc
nc
N
s
y
Y
N
y
p
y
e
I
y
y
s




























s

 
(6.5-58) 
 
To obtain the probability density of the normalized random variable z = y/
2
(2
)

 one makes the same 
transformation of variables as for the noise-only case, with the Jacobean of the transformation again being 
just
2
(2
)

. Thus one obtains for the probability density function of the signal plus noise, the result  
 
 

1
2
1
( )
 
2
nc
nc
N
z
S
N
N
z
p
z
e e I
z















 
(6.5-59) 
 
where the signal-to-noise parameter,  , is defined in the general case by 
 
 
2
2
2
2
2
( )
( )
c
nc
n
PN
i
PL N
s
S
f S
f df
T







 
(6.5-60) 
 
The particular value of 
2
 depends on the type of noise interference, including thermal noise, unintentional 
interference, and jamming that can be determined from (6.5-60). When the interference is the sum of thermal 
noise with one-sided density N0, then (6.5-60) becomes 
 
 
2
2
2
0
2
2
( )
( )
c
nc
n
PN
i
i
PL N
s
N
S
f S
f df
T
T








 
(6.5-61) 
 
with 
 now denoting all interference minus white Gaussian noise. 
( )
cn
S
f
Now with the appropriate density functions it is possible to compute the false alarm and detection 
probabilities. First consider the false alarm probability. A probability of false alarm occurs when the noise 
exceeds the threshold after the summation of Nnc pairs of terms. Thus  
 
 
2
2
/(2
)
Pr(
/(2
))
( )
h
FA
h
N
T
P
z
T
p
z dz






 
(6.5-62) 
 
so that the false alarm, letting 
2
/(2
)
hT



, can be written as  
                                                          
16 This loss does not include filtering, A/D sampling, or other miscellaneous losses. 

 386                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
1
1
0
1
(
1)!
nc
nc
N
k
N
z
FA
k
nc
P
z
e dz
e
N
k


!












 
(6.5-63) 
 
Thus this result is expressed entirely in terms of the normalized threshold and the noncoherent combining 
number Nnc. 
 
Consider now the detection probability. The probability of detection is the probability that the 
normalized threshold is exceeded when the signal is present. Thus, letting
2
/(2
)
hT



, one can write 
 
 
Pr(
))
( )
D
S N
P
z
p
z







dz  
(6.5-64) 
 
Evaluating, one obtains the result  
 
 


1
2
1
 
nc
nc
N
z
D
N
z
2
P
e e I
z dz

















 
(6.5-65) 
 
where  and L2 are defined in (6.5-60) and (6.5-56), respectively. This result can be expressed as a 
generalized Q function, although we will obtain a more computationally useful result. If we define the 
normalized signal-to-noise ratio parameter 
0

as  
 
 
2
2
0
2
(2
)
2
nc
nc
s
2
PL
N
N







 
(6.5-66) 
 
then the detection probability can be written in a form  
 
 

0
1
2
0
0
(
, )
 
2
nc
nc
nc
N
N
z
D
N
nc
z

1
0
nc
P
e
e I
N
z d
N


















z  
(6.5-67) 
 
It is to be noted that evaluation of the expression for PD is not straightforward. The most accurate 
method to date is to employ a series expansion suggested by Shnidman [22]. A discussion of the series used 
to evaluate the detection probability is presented in a later section for the matched filter acquisition case. The 
results are applicable for the present case also. The results for the Shnidman series to evaluate the detection 
probability are given by 
 
0
1
0
0
0
0
(
)
(
, )
1
( !)
( !)
( !)
nc
nc
nc
nc
N
m N
k
m
m
N
nc
D
m
m N
k
N
P
e
e
e
m
m
k



























 
(6.5-68) 
 
where 
0 

 is defined by (6.5-66). This series converges reasonably rapidly and is a useful expression for 
evaluating the detection probability. Thus with PD and PFA evaluated the mean acquisition time can be 
evaluated via (6.4-10). 
 
 
6.5.5 Gaussian Approximations of the Detection Probability for BPSK 
 
In addition to this series for the detection probability, a Gaussian approximation to the expression for PD can 
be easily obtained and provides a simple approximation to PD that avoids dealing with a large number of 
terms needed for the detection probability computation. Since the false alarm probability can be easily 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          387 
evaluated exactly, only an approximation for the detection probability will be obtained here. The un-
normalized probability density function in (6.5-58) has a mean and variance given by [21] 
 
 


2
2
4
2
 
2
 
4
4
nc
nc
E y
N
s
Var y
N
s







2  
(6.5-69) 
 
Now let z = y/(2
2
) so that the mean and variance of z is given by 
 
 


0
0
(1
)
2
(1
2
nc
nc
nc
nc
E z
N
N
Var z
N
N


)










 
(6.5-70) 
 
where 
0
 is defined in (6.5-66). It follows that the probability of detection is given by 
 
 
0
0
(1
)
(1
2
)
nc
D
nc
N
P
Q
N














 
(6.5-71) 
 
where the Q function is defined by  
 
 
2
2
1
( )
 
2
z
x
Q x
e
dz




 
(6.5-72) 
 
Thus (6.5-71) is an alternative approximation to the exact series representation given in (6.5-68). 
It should be pointed out that the noncoherent combining number Nnc cannot be increased arbitrarily 
to improve detection performance. The limitations are caused by the clock drift between the transmitter and 
the receiver and receiver to transmitter dynamics that cause the receiver code timing to drift away from the 
received signal. That is to say, as the number of noncoherent combinings increase the dwell time increases to 
NncTi seconds. If the clock drift changes on the order of 1/2 to one code chip during the dwell time 
(correlation time at one time hypothesis) increasing the noncoherent combining number beyond this point 
will lead to decreased performance. 
 
 
6.5.6 Losses Between Bins in a Zero Padded FFT 
 
Besides the outer bin loss discussed in Section 6.5.1 there is another loss that occurs in active FFT aided 
acquisition and is known as the between bin losses. This can be reduced with an augmentation of the FFT for 
acquisition is based on zero padding the FFT. Zero padding is composed of typically adding an equal number 
of zeros after the actual data, so that the number of FFT points is doubled.  
First consider the losses between bins when zero padding is not used. The amplitude response of 
(6.5-20) can be well approximated by 
 
 
2
2
2
sin(
)
( )
(
)
fT
A f
fT



 
(6.5-73) 
 
near bin number zero, without zero padding and is of the same form centered around the kth bin. Each bin 
has a response around the k-th bin of the form of (6.5-73). The integration due to the FFT produces output 
samples at the rate of 1/Ti, where Ti = NFFTTi0. Consider Figure 6.5-2 which illustrates the unpadded FFT 
frequency response. At the center of any two adjacent bins (i.e., at f = 1/(2Ti) from the number zero bin) the 
response is down by sinc(/2)2 or 3.92 dB. Hence, using a standard FFT to search the frequency cells 

 388                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
involves a loss of about 3.9 dB, at the worst-case frequency position (i.e., midpoint between two frequency 
bins). 
 
Now consider adding NFFT zeros to the NFFT data points for a total of 2NFFT points, which requires an 
FFT with 2NFFT taps. Let 
z
FFT
N
 denote the number of points in the zero padded FFT so that
2
z
FFT
FFT
N
N

. 
Figure 6.5-3 illustrates the zero padded multiple filter response. The result is that the number of bins is 
doubled, and each one is now half as far apart, but the shape is the same [19]. 
 
f
0
0
2/(
)
z
FFT
i
N
T
0
1/(
)
z
FFT
i
N
T
0
1/
iT
Note:
2
z
FFT
FFT
N
N

32
z
FFT
N
,
=
f
0
0
2/(
)
z
FFT
i
N
T
0
1/(
)
z
FFT
i
N
T
0
1/
iT
Note:
2
z
FFT
FFT
N
N

32
z
FFT
N
,
=
Note:
2
z
FFT
FFT
N
N

32
z
FFT
N
,
=
 
 
Figure 6.5-3 FFT response with zero padding for the case that NFFT = 16 and with 16 zeros added. 
 
Hence the worst-case loss with zero padding is given by sinc(/4)2 or 0.91 dB at the midpoint 
between two adjacent bins when zero padding is used. The disadvantage of zero padding is the fact that the 
number of frequency bins to be checked is doubled. Hence, doubling the number of frequency cells to search 
on the one hand, and losing about 3 dB less loss in the worst-case frequency position, is the tradeoff. Most 
times the increase in the 3-dB signal level will more than compensate for the doubling in the number of 
frequency cells to be searched. 
 
 
6.5.7 The Frequency Search Range and Total Frequency Losses Using an FFT 
 
In some applications a correlation of Ti0 seconds is performed subject to the frequency error limitation of 
 or 
, where 
0
1/ 4
s
m
i
f T


0
1/ 2
s
m
i
f T


s
mf

 is the maximum frequency error allowed in the search process 
between the received and local carrier frequencies. These Ti0 second correlations are then fed into the FFT 
that increases the correlation time to NFFT Ti0 = Ti. When, for example, 
is chosen for the 
relationship between the precorrelation time Ti0 and the allowable frequency error
0
1/ 2
s
m
i
f T


s
mf

, the frequency search 
range out of the FFT includes the lower half of the FFT bins for the positive frequency errors and the upper 
half for the negative frequency errors. Thus, in this case, all the FFT frequency bins are searched. If 
 is selected then the frequencies from 0 Hz to 1/(4Ti0) are searched for positive frequency errors, 
and the frequency range from 3/(4Ti0) to 1/Ti0 are searched for negative frequency errors. Therefore in this 
case only half of the frequency bins need to be searched. Figure 6.5-4 illustrates this case.  
0
1/ 4
s
m
i
f T


Note that in the first case the value of Ti0 is twice the value of Ti0 in the latter case, so that both 
search ranges are the same in actual frequency. 
It is to be noted that this loss associated with a frequency error on the initial correlation is in 
addition to the loss associated with signal frequency being at the center of two bins in the FFT. In other 
words, without zero padding, the initial frequency error could cause as much as 0.91 dB loss if Ti0 was 
subject to the equality in (6.5-10). In addition, if the signal frequency fell in between two adjacent bins the 
loss would be an additional 3.92 dB, for a total of 4.83 dB. This is of course a double worst case. If zero 
padding of the FFT were used, the total loss would be no larger than 0.91 + 0.91 or 1.82 dB. 
 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          389 
f
1/Ti0
0
1/(NFFTTi0)
Region to be searched in frequency
Positive
frequencies
Negative
frequencies
f
1/Ti0
0
1/(NFFTTi0)
Region to be searched in frequency
Region to be searched in frequency
Positive
frequencies
Negative
frequencies
 
 
Figure 6.5-4 FFT frequency search region with precorrelation when 
s
mf

Ti0 = 1/4. 
 
 
6.5.8 The Frequency Bins of the FFT Are Uncorrelated 
 
It will now be demonstrated that the correlator outputs of each filter bin are uncorrelated when the input is 
composed of signal plus thermal (white Gaussian) noise and the signal is centered at one of the frequency 
bins. When the signal is centered at one of the bin frequencies, all of the other bin frequency outputs signal 
components are zero.  
All the bin frequencies have Gaussian random variable outputs. The k-th frequency bin (assumed to 
be a noise-only output) will have an unnormalized output given by (we are considering 
( )
n
Z
k  and not 
' ( )
n
Z
k  
since the orthogonality doesn’t depend on the factor 1/NFFT) 
 
 
 
(6.5-74) 
1
(2
/
)
0
( )
( ( )
( ))
FFT
N
j
N k
N
N
N
n
Z
k
n
j
n e







I
Q
n
2
 
where IN(n) and QN(n) are independent Gaussian random variables that are statistically independent. Clearly 
ZN(k) is a linear sum of Gaussian random variables. Let 
 
 
2
2
1
(
)
(
)
n
n
E
E



I
Q
 
(6.5-75) 
 
and also assume that the following is true 
 
 
( ( )
(
))
0      for all 
n
n
E
n
n
p
p


I
Q
 
(6.5-76) 
 
 
( ( ) (
))
0      for all 
n
n
E
n
n
p
p
0


I
I

0
 
(6.5-77) 
 
 
(
( )
(
))
0      for all 
n
n
E
n
n
p
p


Q
Q

 
(6.5-78) 
 
Then the following is also true for k
l
 
 
         
 
(6.5-79) 
1
1
(2
/
)
( 2
/
)
*
0
0
(
( )
( ))
( ( )
( ))
 
( ( )
( ))
FFT
FFT
FFT
FFT
N
N
j
N
kn
j
N
lm
N
N
N
N
N
N
n
m
E Z
k Z
l
E
n
j
n e
m
j
m e













I
Q
I
Q
 
This can be rewritten as  
 

 390                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
(6.5-80) 
1
(2
/
)
(2
/
)
*
0
1
(2
/
)
(2
/
)
0
(
( )
( ))
( ) ( )
                        
( )
( )
FFT
FFT
FFT
FFT
FFT
FFT
N
j
N
kn
j
N
lm
N
N
N
N
n
N
j
N
kn
j
N
lm
N
N
n
E Z
k Z
l
E
n
m e
e
E
n
m e
e
















I
I
Q
Q
 
This can be simplified to 
 
 
 
(6.5-81) 
1
(2
/
)(
)
*
2
1
0
(
( )
( ))
2
0    if 
FFT
FFT
N
j
N
k l n
N
N
FFT
n
E Z
k Z
l
e
k
l
rN










 
where r is an integer including zero [20]. So that for 0kNFFT –1 and kl, the expectation is zero. Thus 
any distinct pair of the NFFT bin frequencies outputs is uncorrelated, and since they are Gaussian, they are 
statistically independent. It can be shown that this is true for all the outputs including the signal. This fact is 
useful in determining the detection and false alarm probabilities. 
 
 
6.5.9 BPSK Code Modulation  in a Matched Spectral Jammer 
 
The results developed so far are for arbitrary Gaussian noise interference. These results can be specialized to 
two jamming cases of interest. The first one is a narrowband random Gaussian process jammer that has a 
spectral density that is rectangular in shape and is very narrow compared to the chip rate. The second one is 
the matched spectral jammer. The matched spectral jammer (MSJ) is a Gaussian random jammer process that 
has the same power spectral density as the signal.  
The input noise process is now modeled to be the sum of white Gaussian noise and the jammer 
noise. It is easy to show the RF noise process n(t) has power that is twice the power of each individual 
baseband component nc(t) and ns(t) in (6.5-1). Therefore a jammer power of J watts received will have half 
the jammer power in each baseband component. Now consider BPSK signals that have a chip duration of Tc 
seconds and that have not been filtered. The spectral density of the baseband version of the in-phase noise 
component has a spectral density of the form 
 
 
2
0
2
sin(
)
( )
    
2
2
(
)
c
c
n
c
c
N
fT
J
S
f
T
f
fT




 
(6.5-82) 
 
where “
” denotes the word “all” and J is the jammer power (matched spectral jammer) at the receiver. 
Equation 

(6.5-47) can be used to evaluate the variance of the IN(k) component, which was denoted by 2 for 
simplicity. Therefore 
 
 
2
2
2
0
2
sin(
)
sin(
)
1
(
( ))
2
2
(
)
(
)
c
c
N
c
c
i
c
N
fT
fT
J
Var
k
T
T
df
T
fT
fT







2
c













I
 
(6.5-83) 
 
when the bandpass filter effects are neglected. If the bandpass filter (BPF) is modeled as a ideal BPF with 
radio frequency bandwidth B, then (6.5-83) is modified to 
 
 
/2
2
2
2
0
2
/2
sin(
)
sin(
)
1
(
( ))
2
2
(
)
(
)
B
c
c
N
c
c
i
c
B
N
fT
fT
J
Var
k
T
T
df
T
fT
f






2
cT













I
 
(6.5-84) 
 
Neglecting the BPF effects, (6.5-84) can be evaluated to 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          391 
 
2
0
(
( ))
2
3
c
N
i
i
N
JT
Var
k
T
T




I
 
(6.5-85) 
 
since the integral of the flat noise term yields N0/(2Ti) and the second term can be evaluated utilizing the fact 
that  
 
 
4
4
sin(
)
2
(
)
3
x
dx
x






 
(6.5-86) 
 
 
Now let us evaluate the  parameter for the MSJ. Using the definition of theleft side of (6.5-60))

 
2
2
2
nc
PL N



 
(6.5-87) 
 
leads to the result 
 
 
2
0
0
2
3
nc
i
MSJ
nc
MSJ
c
PL N T
N
N
JT





 
(6.5-88) 
 
When the jammer level is much stronger than the thermal noise, one obtains the asymptotic result 
 
 
2
2
3
3
2
2
nc
nc
MSJ
c
i
L N
L N P
J
T
J
P
P T















G  
(6.5-89) 
 
Where PG is the processing gain and is defined for direct sequence BPSK systems by  
 
 
i
c
i
T
R
PG
T
R


c  
(6.5.90) 
 
which is the chip rate to coherent integration time rate (typically the bit or coded bit rate). The false alarm 
and detection probabilities are given by (6.5-63) and (6.5-68) (or (6.5-71)) using (6.5-88) for the signal-to-
noise ratio parameter. 
 
 
6.5.10 BPSK Code Modulation  for a Narrowband Jammer 
 
A Gaussian process narrowband jammer (NBJ) is a Gaussian random process that is narrowband compared to 
the chip rate and has bandwidth BJ. The input noise process is again assumed to be the sum of white Gaussian 
noise and narrowband jammer noise. As was shown in the previous section the jammer power in each 
baseband component is J/2 watts received. Again consider a BPSK signal that has a chip duration of Tc 
seconds. The spectral density of the baseband version of the in-phase noise component has a spectral density 
of the form 
 

 392                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
0
0
( )
    -
/2 <  < 
/2
2
2
  
( )
       
  
/ 2
c
c
n
J
J
J
n
J
S
f
B
f
B
B
N
S
f
f
B




 
(6.5-91) 
       
2
N
J
here J is the jammer power at the receiver and BJ is the bandwidth of the jammer. The value of BJ in 
.5.90) is not important as long as it is small compared to the chip rate as will be 
(6.5-47) can be used to evaluate the variance of the 
component. Therefore, again neglecting the effects 
f the BPF 
 
w
(6
seen shortly. Equation 
( )
N k
I
 
o
 
 
/2
2
2
0
0
2
/2
sin(
)
1
(
( ))
2
2
(
)
2
2
J
J
B
c
c
N
c
i
J
i
c
i
B
N
fT
J
Var
k
T
df
T
B T
fT
T
T










I
i
N
JT  
(6.5-92) 
 
here is has been assumed tha
. If the BPF is not neglected then the following equation applies 
 
w
t
1
J
c
B T 
           
/2
/2
2
2
2
0
0
2
2
sin(
)
sin(
)
1
(
( ))
J
B
B
c
c
c
N
c
c
N
fT
fT
N
JT
J
Var
k
T
df
T
df










I
 
(6.5-93) 
/2
/2
2
(
)
2
(
)
2
2
J
i
c
J
i
c
i
i
B
B
T
fT
B T
fT
T
T




 
Notice that the narrowband jammer is about 10 log(3/2) = 1.
ompared to the matched spectral jammer, but the matched spectral 
receiver without also removing the signal, since it completely overlays the signal spectra. 
8 dB more efficient in jamming when 
c
jammer is more difficult to remove at the 
 
Now let us evaluate the  parameter for the NBJ. Using the definition of  one has 
 
 
2
0
0
i
nc
NBJ
nc
NBJ
c
PT L N
N
N
JT





 
When the jammer level is much stronger than the thermal noise, one obtains the asymptotic result 
 
 
(6.5-94) 
 
2
2
nc
nc
NBJ
c
i
L N
L N PG
J
T
J
P
P T















 
(6.5-95) 
 
ented digitally (not shown in the figure). Assume a direct sequence chip 
te of 10.23 megachips per second for the code. In addition, assume a total frequency uncertainty of  
F = 1,600 Hz, and a tota
 equivalent thermal noise 
density of N0 = –201.5 dB/Hz, a padded FFT size o 128 (corresponding to an unpadded FFT size of 64) 
along with a precorrelation time of T  = 3.125*10-6 seconds. Assume a bi
 20 ms. The assumed 
Notice that the narrowband jammer causes the signal-to-noise ratio parameter to be smaller than in 
the MSJ case, implying that an NBJ is more effective than the MSJ. The false alarm and detection 
probabilities for the narrowband jammer are given by (6.5-63) and (6.5-68) (or (6.5-71)) using (6.5-94) for 
the signal-to-noise ratio parameter.  
 
Example 3 Consider an example to illustrate the results for a mean acquisition time calculation with a 
parallel search in time and in frequency. The model for the system is shown in Figure 6.5-1 for BPSK code 
acquisition where the bandpass filter (modeled as an ideal filter) bandwidth is assumed to be 24 MHz. It will 
be assumed that the circuit is implem
ra
l time uncertainty of T = 20 milliseconds. Assume an
f 
i0
losses are indicated in Table 6.5-1.  
t duration of
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          393 
Table 6.5-1 Example 3 Losses for the Acquisition Time Calculat
 
Loss 
ion 
Loss Type 
in dB 
Filtering (includes signal correlation loss) 
0.89 
Miscellaneous 
0.8 
Quantization 
1.2 
Time error 
2.5 
Frequency error with zero padding 
0.91 
 
 
The losses include a filtering loss from the assumed ideal bandpass filter with a 24-MHz bandwidth, 
miscellaneous losses, a quantization loss for an assumed 2-bit quantization, and a time error loss assuming 
that the 
wi
samples are taken with a chip time error of 1/4 of a chip. The outer bin loss has been included, along 
th the worst-case FFT bin loss with zero padding. The total losses total 7.2 dB. The fact that two possible 
acquisitions could occur with a timing error of 0.25 chips has been neglected in this calculation (this would 
increase the PD if accounted for). The mean acquisition time curves for the case of Nnc =1, Nnc=2, Nnc= 4, 
Nnc=8, and Nnc=16 are shown in Figure 6.5-5. Notice that as the number of noncoherent combinings (Nnc) is 
increased, the mean acquisition time increases at low J/S ratios, but is smaller at some larger J/S values.  
However, at high J/S ratios increasing Nnc improves the mean acquisition time. For example  
1
T  (Nnc = 1) has a mean acquisition time of about 100 seconds at J/S = 37 dB, but 
8
T  (Nnc = 8) has a mean 
cquisition time of about 34 seconds at J/S = 40 dB, which has a faster mean acquisition time at a higher J/S 
ratio! Thus at a given J/S ratio an optimum value of Nnc exists. The value of Nnc is limited by the difference in 
the transmitter clock and receiver clock times, and uncompensated motion between the transmitter and 
receiver. Since the dwell time is equal to NncTi, when dwell time is large enough to cause the received code to 
slip about a chip relative to the local code, the maximum value of Nnc has been reached. Greater values will 
yield decreased performance.  
 
a
0
5
10
15
20
25
30
35
40
45
50
0
20
30
40
50
60
70
80
90
100
Jammer to signal ratio (dB)
10
1
T
16
T
8
T
4
T
2
T
0
5
10
15
20
25
30
35
40
45
50
0
20
30
40
50
60
70
80
90
100
Mean acquisition time (sec)
Jammer to signal ratio (dB)
10
16
T
1
T
8
T
4
T
2
T
0
5
10
15
20
25
30
35
40
45
50
0
20
30
40
50
60
70
80
90
100
Jammer to signal ratio (dB)
10
16
T
8
T
4
T
2
T
1
T
Mean acquisition time (sec)
 
 
Figure 6.5-5 Mean acquisition time for a BPSK parallel active search. 
 
 
 
6.5.11 Balanced QPSK and Balanced OQPSK Acquisition Performance 
 

 394                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
In this section balanced (equal power in both signal phases) QPSK and balanced OQPSK SS modulation with 
BPSK data modulation will be considered with regard to the probability of detection and the probability of 
false alarm performance, which can be used in mean time to acquisition calculations. It will be assumed that 
e data is common to both direct sequence codes, which are distinct from one another, and which operate at 
e same code rate. Consider Figure 6.5-6 first as the model for a QPSK acquisition d
odes operate at the same code rate and have the same data on each code. It can b
acquisition detectors in parallel, one for the PN1(t) code and one for the PN2(t) code. Each code component is 
th
th
etector in which the two 
c
e viewed as two BPSK 
similar to the BPSK code acquisition circuit shown in Figure 6.5-1. The received balanced QPSK input 
signal is modeled as 
 
 
1
0
2
0
0
0
( )
( )
( )cos(
)
( )
( )sin(
)
           + 2
( )cos(
)
 2
( )sin(
)
c
s
y t
Pd t PN t
t
Pd t PN t
t
n t
t
n t
t











 
(6.5-96) 
 
where P is the total power in the QPSK signal waveform and PNi(t) (i =1 and 2) are the two quasi-orthogonal 
have a small correlation over Ti seconds) direct sequenc
(
s
e codes on the I and Q arms of the quadriphase 
ignal, which has carrier frequency of 0, and phase . In offset QPSK (OQPSK) PN2(t) is assumed to be 
delayed one half of a chip from PN1(t). The two noise terms are statistically independent, quadrature noise 
processes nc(t) and ns(t), each of which is modeled as independent Gaussian random processes. It is assumed 
that the bandwidth at the front end of the receiver is an ideal filter with bandwidth B. The power in each code 
is P/2, since balanced QPSK SS modulation was assumed. 
 
OSC
Quadriphase
code gener.
VCXO
Hybrid
1
ˆ
(
)
PN t
T

2
ˆ
(
)
PN
t
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

Amp.
BPF
(BW=B)
0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
1
(.)
i
kT
i
dt
T

0
0 (
1) i
k
T

1
FFT
N
1
FFT
N
1
FFT
N
1
FFT
N
Yes
No
NFFT
point
FFT
2
g
2
g
2
g
2
g
2
g
M
Compute Z
NFFT
point
FFT
2
g
2
g
2
g
2
g
2
g
M
?
h
T

0
ˆ
2 cos(
)
t



0
ˆ
2 sin(
)
t




0
ˆ
2 cos(
)
t



I1(t)
I2(t)
Q1(t)


2
2
2
2
1
1
2
2
1
(
)
(
)
(
)
(
)
nc
N
i
i
i
i
n
Z
nT
nT
nT
nT





I
Q
I
Q
0
ˆ
2 sin(
)
t




Q2(t)
LPF
LPF
LPF
LPF
OSC
Quadriphase
code gener.
VCXO
Hybrid
1
ˆ
(
)
PN t
T

2
ˆ
(
)
PN
t
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

Amp.
BPF
(BW=B)
0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
1
(.)
i
kT
i
dt
T

0
0 (
1) i
k
T

0
1
(.)
i
kT
i
dt
T

0
0 (
1) i
k
T

1
FFT
N
1
FFT
N
1
FFT
N
1
FFT
N
1
FFT
N
1
FFT
N
1
FFT
N
1
FFT
N
Yes
No
NFFT
point
FFT
2
g
2
g
2
g
2
g
2
g
M
Compute Z
NFFT
point
FFT
2
g
2
g
2
g
2
g
2
g
M
?
h
T

0
ˆ
2 cos(
)
t



0
ˆ
2 sin(
)
t




0
ˆ
2 cos(
)
t



I1(t)
I2(t)
Q1(t)


2
2
2
2
1
1
2
2
1
(
)
(
)
(
)
(
)
nc
N
i
i
i
i
n
Z
nT
nT
nT
nT





I
Q
I
Q
LPF
LPF
LPF
LPF
LPF
LPF
0
ˆ
2 sin(
)
t




Q2(t)
LPF
LPF
 
igure 6.5-6 Model for QPSK acquisition performance (baseband version). 
The signals out of the four I-Q multipliers shown in Figure 6.5-6, after heterodyning
nd synchronously despreading, are given by 
 
F
 
 
 to baseband 
a
 
1
1
1
1
0
ˆ
ˆ
ˆ
( )
/ 2
(
)
(
) ( )cos(
'
)
( )
(
)
(
)
c
I t
P
PN t
T PN t
T d t
t
n t PN t
T
O
0











 


(6.5-97) 
 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          395 
 
1
1
1
1
0
0
ˆ
ˆ
ˆ
( )
/ 2
(
)
(
) ( )sin(
'
)
( )
(
)
(
)
s
Q t
P
PN t
T PN t
T d t
t
n t PN t
T
O













 
(6.5-98) 
 
 
2
2
2
2
0
0
ˆ
ˆ
ˆ
c
( )
/ 2
(
)
(
) ( )cos(
'
)
( )
(
)
(
)
I t
P
PN t
T PN t
T d t
t
n t PN t
T
O













 (6.5-99) 
 
 
2
2
2
2
0
ˆ
ˆ
0
( )
/ 2
(
)
(
) ( )sin(
'
)
( )
(
)
(
s
Q t
P
PN t
T PN t
T d t
t
n t PN t
T
O
ˆ )












hich are obtained in the same manner as the BPSK case. It is to be noted that each signal component has 
alf the power as the BPSK case, but there are twice as many. 
Following the approach in the BPSK section, the output of the Ti0 second correlators is given by 
 

   (6.5-100) 
 
w
h


0
0
1
0
0
0
1
0 (
1)
1
ˆ
(
)
(
)
/ 2 cos (
1/ 2)
( )
(
)
i
i
kT
i
i
i
c
i
k
T
kT
d kT
P
L
k
T
n t PN t
T dt
T









I
 

 
(6.5-101) 
 


0
0
1
0
0
0
1
0 (
1)
1
ˆ
(
)
(
)
/ 2 sin (
1/ 2)
( )
(
)
i
i
kT
i
i
i
s
i
k
T
kT
d kT
P
L
k
T
n t PN t
T dt
T









Q
 

 
(6.5-102) 
 


 
0
2
0
0
0
2
0 (
ˆ
( )
(
)
i
kT
i
i
i
c
i
k
n t PN t
T dt
T


 
(6.5-103) 
1
(
)
(
)
/ 2 cos (
1/ 2)
kT
d kT
P
L
k
T







I
0
1) iT

 
 


0
2
0
0
0
2
1
ˆ
(
)
(
)
/ 2 sin (
1/ 2)
( )
(
)
i
i
i
i
s
kT
d kT
P
L
k
T
n t PN t
T dt
T









Q
 
(6.5-104) 
0
0 (
1) i
kT
i
k
T

Using the same definition as in the BPSK case for L, one can write 
 
 
(6.5-105) 
hich accounts for the correlation, outer bin, and between bin FFT losses. Following 
PSK section, the outputs of the FFTs in Figure 6.5-6 are given by 
 
 
 
( )sinc(
)
(
,
, )
PN
i0
FFT
i
L
R
fT
L
f T k




 
w
the derivation in the 
B


1
0
(
1)
1
1
( )
(
)
/ 2 cos
'
( )
(
i
i
kT
i
i
c
i
k
T
k
d kT
P
L
k
T
n t PN t
T
T










I
ˆ)dt  
(6.5-106) 
 
 


1
0
(
1)
1
ˆ
(
)
(
)
/ 2 sin
'
( )
(
)
i
i
kT
i
i
i
s
i
k
T
kT
d kT
P
L
k
T
n t PN t
T dt
T









Q
 
1

 
(6.5-107) 
 
 


2
0
2
(
1)
1
ˆ
(
)
(
)
/ 2 cos
( )
(
)
i
i
kT
i
i
i
c
i
k
T
kT
d kT
P
L
k
T
n t PN t
T dt
T










I
 
(6.5-108) 
 
 


2
0
2
(
1)
1
ˆ
(
)
(
)
/ 2 sin
( )
(
)
i
i
kT
i
i
i
s
i
k
T
kT
d kT
P
L
k
T
n t PN t
T dt
T










Q
 
(6.5-109) 
 
Typically the coherent correlation time Ti is equal to the bit time, Tb. All the noise terms in these 
ur equations can be shown to be statistically independent, and all have a sp
onvolution of the noise spectral density and the PN code spectral density. The v
bove is denoted by 2. 
fo
ectral density that is the 
c
ariance of each noise term 
a

 396                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
The output of each averaging integrator is squared and averaged for Nnc bits. At this point it is to be 
oted that the four squared outputs are very similar to the BSPK case, except that there are four terms instead 
f two terms. Hence generalizing (6.5-50) produces 
 
(6.5-110) 
ch can be written in a simpler form as  
n
o
 
2
2
2
( )
(
)
(
)
(
)
(
)
nc
N
2
Z
k
pT
pT
pT
pT






I
Q
I
Q
 
1
1
2
2
1
NC
b
b
b
b
p

 
whi
 
2
1
n
p
p
y
x


 
 
nt component in this equation is the QPSK noncentrality parameter
(6.5-111) 
 
where n = 4Nnc in this QPSK case, and the xk are Gaussian random variables that have nonzero mean values. 
An importa
2
Qs , which in this case is given 
y 
2
b

4
2
1
nc
N
Q
p
p
s
E x


 
(6.5-112) 
 
 
with the E{.} denoting the ensemble average of the quantity in braces. Evaluating 
2
Qs  for the QPSK case 
yields 
 
2
2
2
2
2
Q
nc
nc
nc
PL
PL
 
2
s
N
N
N



PL  
(6.5-113) 
 
with both code detectors contributing equally to the value of 
2
Qs . Note that the mean value is the same as in 
the BPSK case. Recall that L is defined in (6.5-105). Again letting the signal-to-noise ratio parameter 
Q
 be 
efined by  
 
(6.5-114) 
nd using a result in [21], one has the density function of the signal plus noise 
 
d
 
2
2
/(2
) 
s



 
Q
Q
 
a
 
2
2
1/ 2
2
2
1
2
2
2
1
( )
    ,
0
2
nc
Q
nc
N
s
y
Q
y
N
Q




 
gain makin
s
y
p
y
e
I
y
y
s



















 
(6.5-115) 
g the transformation z = y/(22) produces the density function 
 
A
 


1/ 2
2
1
( )
2
    ,
0 
nc
Q
nc
N
z
z
N
Q
Q
z
p z
e
e I
z
z

















 
(6.5-116) 
plus noise) 
 
 
The probability of detection is given by (since the distribution of the random variable z is that of the signal 
 
2
2
/(2
)
Pr(
/(2
))
( )
Q
h
Q
D
h
s n
T
P
z
T
p
z dz








 
(6.5-117) 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          397 
 
here 
 is the threshold for the QPSK acquisition system. Again 
w
using the normalized threshold 
Q
hT
/(2
Q
2)
Q
hT



 produces the result 
 
 

2
1
2
2
nc
Q
z
z

2
1
nc
Q
N
D
N
Q
Q
P
e
e I
z








dz











 
(6.5-118) 
for the detection probability.  
rmalized signal-to-noise ratio parameter by 
 
 
Defining a new no
 
0
2
Q
Q
nc
N



 
(6.5-119) 
 can write (6.5-118) as 
 
 
one
 


0
2
1
nc
N
2
2
2
1
0
0
2 2
2
nc Q
nc
Q
N
z
D
N
nc
Q
nc
Q
z
 
P
e
e I
N
z dz
N


















 
 
 
(6.5-120) 
 
rom (6.5-120) one can write the Shnidman series for the probability of detection as 
 

F
 
0
2
1
2
2
0
0
2
(2
)
1
( !)
(
nc
nc
Q
Q
nc Q
nc
m
k
N
m
N
0
!)
( !)
m
N
Q
m
m
k
m
k






 
 is similar to (6.5-68) for PD for BPSK except that the value 
 Nnc is effectively doubled and 
Q
nc
Q
D
N
N
P
e
e
e
m























 
(6.5-121) 
t is seen that (6.5-121) for P for QPSK
I
D 
0
Q

of
 is one half of the values in the ca
expansion of (6.5-121)
se of BPSK. Note that in the 
 
0
Q

 is defi
(6.5-119).  
The false alarm probability is given by  
ned in 
 
 
2 )
n
2
/(2
Pr(
/(2
))
( )
Q
h
Q
FA
h
T
P
z
T
p
z dz







 
(6.5-122) 
 
d in
Again this can be evaluate
 the same manner as before, to yield  
 
 
2
1
!
nc
Q
k
N
Q
FA
P
e
k

0
k





 
(6.5-123) 
omparing the value of PFA for BPSK and QPSK we see that the val
 
The analysis has been done in the general case. Borrowing from the BPSK analysis for a matched 
jammer plus thermal noise, the signal-to-noise parameter is given by 
 
 
C
ue of Nnc is effectively doubled.  
spectral 
 
2
MSJ
MSJ
PL N T
 
(6.5
0
0
2
2
3
nc
i
Q
Q
nc
c
N
N
JT





-124) 
 

 398                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
For a narrowband jammer plus thermal noise, the signal-to-noise ratio parameter is given by 
 
2
0
0
2
NB
NB
i
nc
Q
c
PT L N
N
N
JT




 
Q
nc

 
(6
 
The general case for the QPSK signal-to-noise ratio parameter, based on (6.5-113) and (6.5-48), is given by 
.5-125) 
 
2
0
2
2
( )
( )
c
nc
i
Q
n
n
PN
PL N T
N
S
f S
f df
 
c
Q







 
(6.5-126) 
s given
 
where 22 i
 by  
 
2
2
2
( )
( )
cn
PN
i
S
f S
f df
T





 
(6.5-127) 
 
and where
is the input spectral density and SPN(f) is the local code power spectral density normalized 
QPSK. The main 
 for QPSK. Now 
.5.12 A Gaussian Approximation for PD for Balanced QPSK and
 this section an approximation for the detection probability will be developed. Again using a result in [21] 
alized random variable y 
Q
 
( ) 
cn
S
f
to unit power, since the variance of each random variable is the same for BPSK and 
ifference between BPSK and QPSK is the fact that the number of variables is doubled
d
consider a Gaussian approximation for the detection probability for QPSK modulation.  
 
 
6
 Balanced OQPSK  
 
In
yields the mean of the unnorm
 
 
2
2
2
2
( )
4
Q
nc
E y
n
s
N
s






 
The vari
 
2
Q  
(6.5-129) 
Now normalize the random variable y by 22 to yield the normalized variable z, which has a mean 
iven by 
 
(6.5-128) 
 
ance of y is given by 
 
4
2
2
4
2
( )
2
4
8
4
Q
nc
Var y
n
s
N
s








 
g
2
2
0
2
4
( )
2
2
(1
)
2
nc
Q
nc
Q
nc
Q
N
s
E z
N
N










 
(6.5-130) 
here 
Q
 
 
w
0
2
Q
nc
N



 and the variance of z is given by  
 
4
2
2
0
4
8
4
( )
2
(1
2
)
4
nc
Q
nc
Q
N
s
Var z
N








 
(6.5-131) 
here 
 
 
0
Q

w
 is the signal-to-noise ratio parameter 
                              
 
2
2
0
0
2
0
 in general,    
 in white Gaussian noise
4
2
i
Q
Q
PL T
PL
N





    
 
(6.5-132) 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          399 
 
and as noted earlier  
 
   
2
2
 
0
2
0
2
 in general,   
  in white Gaussian noise
2
nc
nc
b
Q
nc
Q
Q
PL N
N PL T
N
N







 
(6.5-133) 
 
Equations (6.5-130) and (6.5-131) are the mean and variance of z. The case when the signal is not 
present can be obtained by letting 
0
Q

= 0 in (6.5-130) and (6.5-131). Thus with the Gaussian assumption for 
e random variable z, it follows that the probability of the detection is given 
 
th
by  
2
0
0
(
2
(1
))
2(2
(1 2
))
0
1
e
2 (2
(1
2
))
nc
Q
nc
Q
z
N
N
D
nc
Q
P
dz
N













 
 
(6.5-134) 
This can be written as 
 
 
0
0
2
(1
2
)
D
nc
Q
P
Q
N









 
(6.5-135) 
 
which can be compared to the BPSK case in 
2
(1
)
nc
Q
N






 signal-to-noise ratio at a false alarm probability of 10 . Thus QPSK detection is 
lightly less efficient as BPSK as far as acquisition detection is concerned. It should be noted that the exact 
expressions for the false alarm probability were used, but the Gaussian approximation was used for the 
detection probabilities. 
 
(6.5-71). Q0 is one half the BPSK value and the number of 
random variables is twice as large. Figure 6.5-7 illustrates the detection performance for QPSK SS and BPSK 
SS modulation for the case that PFA=10–5 for the cases when Nnc = 1 and 10. It is seen that QPSK SS 
modulation is about 0.5 to 1.0 dB poorer in detection probability compared to BPSK SS modulation, when 
comparing the required
–5
s
0 1 2 3 4 5 6 7 8 9 10 1112 13 1415 16 17 1
0
819 20 21 2223 24 25 2627 28 2930
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Nnc = 1
Nnc = 10
PDB1 dB
(
)
PDQ1 dB
(
)
PDB10 dB
(
)
PDQ10 dB
(
)
dB
BPSK
QPSK
QPSK
BPSK
0 1 2 3 4 5 6 7 8 9 10 1112 13 1415 16 17 1
0
819 20 21 2223 24 25 2627 28 2930
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Nnc = 1
Nnc = 10
PDB1 dB
(
)
PDQ1 dB
(
)
PDB10 dB
(
)
PDQ10 dB
(
)
dB
BPSK
QPSK
QPSK
BPSK
 
 
Figure 6.5-7 Comparison of detection for BPSK SS and QPSK SS for acquisition. 
 
 
Offset QPSK SS modulation is quite similar to QPSK SS modulation. Figure 6.5-8 illustrates the 
OQPSK SS acquisition system. Note that an additional delay is
ince it was assumed that PN (t) was early 
 needed in the upper code channel (PN1(t)), 
1
by one half chip, compared to PN2(t). The detection and false 
alarm performance will be the same for OQPSK SS and QPSK SS modulation, which as noted above is 
somewhat worse than BPSK SS modulation.  
s

 400                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
OSC
Quadriphase
code gener.
VCXO
Hybrid
1
ˆ
(
)
PN t
T

2
ˆ
(
)
PN
t
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

AMP
BPF
(BW=B)
0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

1
FFT
N
1
FFT
N
1
FFT
N
1
FFT
N
NFFT
point
FFT
2
g
2
g
2
g
2
g
2
g
M
Compute ZNC(k)
NFFT
point
FFT
2
g
2
g
2
g
2
g
2
g
M
Yes
No
?
hT

0
ˆ
2 cos(
)
t



0
ˆ
2 sin(
)
t




0
ˆ
2 cos(
)
t



0
ˆ
2 sin(
)
t




I1(t)
I2(t)
Q1(t)
Q2(t)
D
D
D : Denotes a delay
of 1/2 code chip


2
2
2
2
1
1
2
2
1
( )
(
)
(
)
(
)
(
)
nc
N
NC
i
i
i
i
n
Z
k
nT
nT
nT
nT





I
Q
I
Q
1
0
(
)
i
kT
I
1
0
(
)
i
kT
Q
2
0
(
)
i
kT
I
2
0
(
)
i
kT
Q
1( )
Z k
2( )
Z
k
OSC
Quadriphase
code gener.
VCXO
Hybrid
1
ˆ
(
)
PN t
T

2
ˆ
(
)
PN
t
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

AMP
BPF
(BW=B)
0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

0
0
0 (
1)
1
(.)
i
i
kT
i
k
T
dt
T

1
FFT
N
1
FFT
N
1
FFT
N
1
FFT
N
NFFT
point
FFT
2
g
2
g
2
g
2
g
2
g
M
Compute ZNC(k)
NFFT
point
FFT
2
g
2
g
2
g
2
g
2
g
M
Yes
No
?
hT

0
ˆ
2 cos(
)
t



0
ˆ
2 sin(
)
t




0
ˆ
2 cos(
)
t



0
ˆ
2 sin(
)
t




I1(t)
I2(t)
Q1(t)
Q2(t)
D
D
D : Denotes a delay
of 1/2 code chip


2
2
2
2
1
1
2
2
1
( )
(
)
(
)
(
)
(
)
nc
N
NC
i
i
i
i
n
Z
k
nT
nT
nT
nT





I
Q
I
Q
1
0
(
)
i
kT
I
1
0
(
)
i
kT
Q
2
0
(
)
i
kT
I
2
0
(
)
i
kT
Q
1( )
Z k
2( )
Z
k
 
 
igure 6.5-8 Model for OQPSK acquisition performance (baseband version).  
ARCH TECHNIQUE FOR ACTIVE ACQUISITION 
e uncertainty is not uniformly distributed. This work 
o
 i
F
 
 
6.6 AN OPTIMUM SWEEP SE
Equation Chapter 6 Section 6    
In this section a modified search acquisition scheme is discussed that will improve the acquisition time for a 
single correlator channel, serial, search scheme if the tim
follows [23]; other work in this area includes [24–27].  
 
This section treats the optimization of the sweep path in order to minimize the acquisition time by 
accounting for the a priori signal location probability density function. If the a priori probability density 
function is uniformly distributed, then this method will not improve acquisition time performance. The idea 
of this approach can be illustrated by a simple example. For example, if it was known that the absolute timing 
uncertainty f the code epoch was 10 ms, but that with a probability of 90% the code timing uncertainty 
was within 2 ms, it would seem reasonable to search n the  2 ms region first, for one or two sweeps, and 
en star
th
t expanding the search to the outer regions of 10 ms.  
 
Consider the a priori probability density function that is illustrated in Figure 6.6-1. Figure 6.6-1 
illustrates the probability density function that is modeled to extend only over the length of L4. The number 
 the local code is retarded to the position of minimum 
elay at the left of line 3 (code timing is advanced). 
 
four is taken as an example; any number of sweeps could be considered.  
 
Figure 6.6-1(b) illustrates the code sweep procedure. The sweep starts at the starting point (the most 
advanced timing position) and then delays the timing (sweeps right) until it comes to the end of the line of 
length L1. At the end of the line of length L1 it is assumed that the local code is retarded to the position at the 
left end of the second line (of length L2). The sweep continues to the right (delaying the code timing) until 
the end of line L2 is reached at the right end. Again
d

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          401 
(b) Corresponding four sweep lengths
Note: (1) L4 is the total time uncertainty
(2) each line has two equal halves
L1
L2
L3
L4
Start sweep here
First short sweep
Jam set to the new code phase
Go to start of sweep
from here
(a) A priori probability density function
L4
p(x)
x
More delay
If not acquired at the
end of L4, jam set
to the start of L1
(b) Corresponding four sweep lengths
Note: (1) L4 is the total time uncertainty
(2) each line has two equal halves
L1
L2
L3
L4
Start sweep here
First short sweep
Jam set to the new code phase
Go to start of sweep
from here
(a) A priori probability density function
L4
p(x)
x
More delay
If not acquired at the
end of L4, jam set
to the start of L1
 
 
Figure 6.6-1 (a, b) A priori density function and resulting four sweep sizes. 
 
 
 
The sweep continues to the right (retarding the code) until the end of the line of length L3 is reached. 
At the right end of line L3 the local code is retarded to the position at the left end of the position of line L4 
(least delay). The code is delayed until the right end of the fourth line is reached. If the signal has not been 
acquired the process starts over at the starting point by jam setting the local code to the timing position 
associated with the start of the process at the left end of line L1. It should be understood that the searches 
along the lines of length Li are affected in discrete correlation searches, typically 1/2 chip at a time. The large 
arrows on the diagram indicate the search path. The lengths are broken into halves as seen in figure 6.6-1(b). 
All searches are from the most advanced timing to the most delayed, to minimize the probability of detecting 
delayed replicas (multipath). 
 
The length of each line in Figure 6.6-1(b) is proportional to the number of code chips searched in 
that sweep. Each sweep has Li chips (i = 1, 2, 3, 4) and is symmetric about the most probable timing error 
location point. It is assumed that the a priori density function is symmetric about the maximum point. The 
search is discrete, in the sense that a given code chip timing is correlated for d seconds (the dwell time), and 
either accepted as the correct signal timing, or the next code phase (for example, 1/2 chip away) is then 
correlated against for d seconds, and so on. 
 
The optimization problem is as follows. Given N sweeps, determine the optimum lengths (in chips), 
Li (number of chips), to achieve a cumulative probability QN, at the end of the N-th sweep, so that the total 
acquisition time, TN (proportional to the number of chips to be searched), 
 
 
 1
 
 
N
N
T
i
T
L





iL

 
(6.6-1) 
 
is minimized. The parameter  is a proportionality constant that relates the number of chips to be searched to 
the acquisition time needed to search that number of chips. This analysis makes the reasonable assumption 
that the acquisition time is proportional to the number of chips to be searched. 
 
First, the cumulative probability of acquisition will be formulated, assuming that the probability of 
signal detection is PD (given that the signal is present). At the end of the first sweep the probability of 
acquisition is given by 
 
1
(
)
D
1
P
P P L

 
(6.6-2) 
 

 402                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
where P(L1) is the probability that the signal is located in region L1. Thus the probability of acquisition is the 
product of the probability that the signal is in the region L1, times the probability of detection, PD. The 
probability of acquiring the signal at the end of the second sweep is given by  
 
 
2
2
1
1
(
 )
(
)(1
)
D
D
D
P
P L
L P
P L
P P




 
(6.6-3) 
 
where P(L2–L1) denotes the probability of being in region L2, but not in region L1. In the same fashion, 
denoting P3 as the probability of acquiring at the end of the third sweep, that probability is given by 
 
 
2
3
3
2
2
1
1
(
 
)
(
)(1
)
(
)(1
)
D
D
D
D
D
P
P L
L P
P L
L
P P
P L
P
P







 
(6.6-4) 
 
Denoting Pi as the probability of acquiring at the end of the i-th sweep, the following is obtained 
 
 
2
1
1
2
2
3
2
1
2
1
1
[ (
)
(
)(1
)
(
)(1
)
        +...+ (
)(1
)
(
)(1
)
]
i
D
i
i
i
i
D
i
i
D
i
i
D
D
P
P P L
L
P L
L
P
P L
L
P
P L
L
P
P L
P



















 
(6.6-5) 
 
with the understanding that any term in (6.6-5) that has a nonpositive integer subscript is zero, and any term 
that has a factor of (1–PD) that has a negative exponent is zero. As before P(Li–Li-1) is the probability of 
being in region Li, but not in region Li–1. Now denote QN as the probability of acquiring in N sweeps in time 
TN. By definition 
 
 
N
1
1
   and    
N
N
N
i
i
i
i
Q
P
T
T






1
N
i
i
L




 
(6.6-6) 
 
In Problem 9 it is shown that QN can be written as  
 
 
1
(
)(1
)
N
N k
N
D
k
D
k
Q
P
P L
P





 
(6.6-7) 
 
 
In order to find the optimum lengths Li for each portion of the N sweep approach, the Lagrangian 
multiplier technique can be used. Thus the function f(, L1, L2, L3,...L is considered, where 
 
 
1
2
1
1
1
( ,
,
,...
)
(1
)
(
)(
)
1
N
N
N
N
i
D
D
k
i
k
D
f
L L
L
L
P
P
P L
k
P











 
(6.6-8) 
 
where  is the Lagrangian multiplier. To proceed further it is necessary to specify an a priori density function 
of the code phase. Therefore it will be assumed that the a priori density function is a zero mean Gaussian 
random variable with a variance of 2, since it seems reasonable to assume that the a priori distribution 
function would be Gaussian in some cases. This approach will work for other density functions also. Thus, 
the values of P(Li) are given by 
 
2
2
/2
/2
0
2
(
)
2
iL
t
i
P L
e





dt  
(6.6-9) 
 
and symmetry has been used in (6.6-9). Define the two parameters 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          403 
 
(1
)
1
'
      and   
1
N
D
D
D
P
P
q =
P







 
(6.6-10) 
 
so that 
 
 
2
2
'
/8
'
1
2
(
,
,
,...
)
1
1
2
iL
i
N
i
f
L L
L
q
e
L
1









 
(6.6-11) 
 
 
Denoting Li/ as li and setting the left side of (6.6-11) to zero leads to the result 
 
 
1
2 2
ln(
)
1
i
i
D
L
l
C
i
P






 
(6.6-12) 
 
where C is a constant that depends on   and
'. Thus the optimum value of Li, is given by (6.6-12), such 
that C satisfies the equation 
 
 
1
(
)(1
)
N
N k
N
D
k
D
k
Q
P
P L
P





 
(6.6.13) 
 
for the specified value of QN. While explicit solutions are not known, this system can be solved by simple 
iteration. For example, one assumes a value of C, evaluates (6.6-12) to obtain the value of the Li, and then 
checks the value of QN to see if it agrees with the specified value of QN. If it does not agree another value of 
C has to be used and then it is necessary to check the corresponding value of QN. This procedure continues 
until the specified value of QN, and the calculated value of QN, agree for a specified value of N. The actual 
minimum occurs when all values of N are checked. In practice only a few values of N must be checked. The 
resulting values of Li will produce the minimum acquisition time for the given a priori density function of 
code phase. 
 
When the search range is 3

, based on a uniform search, it has been determined that a reduction 
of about 60% in acquisition time has been obtained when PD = 0.25 for a Gaussian density a priori signal 
location, using an optimized sweep. The actual improvement depends on the value of PD and how “peaked” 
the a priori probability density function is. It was found that with the Gaussian a priori distribution 
assumption the improvement decreases as PD increases. Also as the a priori density function becomes less 
peaked the improvement decreases. The theory is quite general, the only requirement being that the a priori 
density function be unimodal and symmetric and that the P(Lk) be differentable. More details are contained in 
[23, 24]. 
 
 
6.7 SEQUENTIAL DETECTION  
Equation Chapter 6 Section 7 
Up to this point in this chapter, active detection schemes that have fixed integration times have been 
considered. However, when a variable integration time is considered it is possible to decrease the acquisition 
time for the same value of PD and PFA. The genesis of the theory of sequential detection is due to Wald [28]. 
Further work has been contributed by Bussgang and Middleton [29], Wald and Wolfowitz [30], and others 
[31–33]. In addition, DiFranco and Rubin [34] and Hancock and Wintz [35] have chapters on sequential 
detection. 
 
The motivation in this section is to consider an acquisition scheme that can decrease the acquisition 
time on the average, for a single correlator. 
 

 404                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
6.7.1 Sequential Probability Ratio Test 
 
Consider a process x(t) for which successive data samples are labeled x1, x2, x3, ...xm. The conditional 
probability density function of the m samples is denoted by pm(x|), where  is a k-dimensional vector having 
components 1, 2, ...k and x is an m dimensional vector of samples xi, i =1, 2, 3…m. Let pm(x|) denote the 
conditional probability density function when the signal is not present.  
The likelihood ratio is then given by 
 
 
(
| )
( )
(
| )
m
m
m
p
p


0
x
x
x
 
(6.7-1) 
 
defines a conditional probability ratio, or likelihood ratio, for testing the null hypothesis H0 against the 
hypothesis that the signal is present, H1. Note that the likelihood ratio is a function of the sample size m. 
 
The sequential test of Hypothesis H1 against H0 is as follows. Denote A and B as two positive 
constants such that A > B. Then at the m-th sample accept H0 if 
 
 
( )
m
B


x
 
(6.7-2) 
 
and accept H1 if 
 
 
( )
m
A


x
 
(6.7-3) 
 
and continue observing samples if 
 
 
( )
m
B
A


x
 
(6.7-4) 
 
 
Based on this algorithm one realization of two possible outputs is shown in Figure 6.7-1. In Figure 
6.7-1 one particular realization of the samples crosses the value of A, when the signal is present. In the other 
case when the signal is absent, the ratio crosses the lower boundary. Assuming that Hypothesis H1 was signal 
plus noise, and H0 was noise only, one would conclude that the signal was present on this particular trial with 
circles and was absent on the trial with squares. Once the probability density functions are known it is 
possible to obtain the structure of the detector. It is to be noted that Wald and Wolfowitz [30] have shown 
that the sequential probability ratio test is optimum in the sense that no other test, on the average, can achieve 
the same error probabilities with fewer samples. Let us now consider the noncoherent detector for an 
important case. 
 
 
6.7.2 Sequential Detection for DS Acquisition with BPSK Data Modulation 
 
Consider the noncoherent detection of a sine wave signal of amplitude A, corrupted by WGN of two-sided 
noise spectral density of N0/2. It will be assumed that an ideal bandpass filter and an envelope detector are 
used to generate the output statistics. 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          405 
Accept H1
B
A
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
m
Accept H0
m(x)
Accepted at this point
Signal plus noise
Noise only
Rejected at this point
Accept H1
B
A
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
m
Accept H0
m(x)
Accepted at this point
Signal plus noise
Noise only
Rejected at this point
 
 
Figure 6.7-1 Two realizations of a sequential test: one with signal plus noise, and one with noise only. 
 
 
Figure 6.7-2(a) illustrates the model that has a bandpass implementation.  
 
xk
o
Bandpass
filter
Envelope
detector
ln[Io(.) ]
-
Accumulator
RD
+
-
Local code
2RD
Input signal
plus noise
(a) Bandpass version
Decision
operation
(a) Zk >ln(A): Declare signal present
(b) Zk <ln(B): Declare signal absent
(c) >ln(B) and Zk <ln(A): Continue search
(b) Baseband version (approx.)
(  )2
(  )2
+
PN
code 
generator
ˆ
ˆ
2 cos(
)
t



ˆ
ˆ
2 sin(
)
t




ˆ
(
)
PN t
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

VCO
(
1)
1
(.)
b
b
kT
b
k
T
dt
T

o
( )
ln[Io(.)]
-
Accum.
RD
+
-
Decision
operation
(a) Zk >ln(A): Declare signal present
(b) Zk <ln(B): Declare signal absent
m =1
k
lnm(x)
(c) Zk >ln(B) and Zk <ln(A): Cont. search
To the code gen.
To the VCO.
2RD
Clk
m =1
k
lnm(x)
xk
o
Bandpass
filter
Envelope
detector
ln[Io(.) ]
-
Accumulator
RD
+
-
Local code
2RD
Input signal
plus noise
(a) Bandpass version
Decision
operation
(a) Zk >ln(A): Declare signal present
(b) Zk <ln(B): Declare signal absent
(c) >ln(B) and Zk <ln(A): Continue search
(b) Baseband version (approx.)
(  )2
(  )2
+
PN
code 
generator
PN
code 
generator
ˆ
ˆ
2 cos(
)
t



ˆ
ˆ
2 sin(
)
t




ˆ
(
)
PN t
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

VCO
(
1)
1
(.)
b
b
kT
b
k
T
dt
T

o
( )
ln[Io(.)]
-
Accum.
RD
+
-
Decision
operation
(a) Zk >ln(A): Declare signal present
(b) Zk <ln(B): Declare signal absent
m =1
k
lnm(x)
m =1
k
m =1
k
lnm(x)
(c) Zk >ln(B) and Zk <ln(A): Cont. search
To the code gen.
To the VCO.
2RD
2RD
Clk
m =1
k
lnm(x)
m =1
k
m =1
k
lnm(x)
 
 
Figure 6.7-2 (a, b) Sequential detector, based on the likelihood ratio. 
 
 
Figure 6.7-2(b) illustrates an approximate baseband equivalent version of the same detector. If the 
baseband version utilized ideal low-pass filters rather than integrate-and-dump filters it would be equivalent. 
It is desirable to have independent samples to simplify the analysis; therefore the assumption of an ideal 
bandpass filter preceding the envelope detector for the bandpass version yields statistically independent 
samples. The baseband version also yields independent samples since the integrator outputs are statistically 
independent every bit time, or Tb seconds, with white Gaussian noise on the input. In order to obtain the form 
of the optimum detector it is necessary to form the likelihood ratio. 

 406                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
Now consider the bandpass model. The probability density function of the envelope of a sinusoidal 
tone plus noise out of a noncoherent envelope detector of the type shown in Figure 6.7-2(a) is given by 
DiFranco and Rubin [34] as 
 
 
0
2
2
( |
)
exp(
) ( 2
)    ,
0
2
i
i
i
i
i
r
R
p r R
r
I
Rr
r




 
(6.7-5) 
 
In this equation R is the input signal-to-noise ratio (SNR) to the envelope detector assumed to be constant 
and is given by 
 
 
0
P
R
N B

 
(6.7-6) 
 
In (6.7-6) P = A2/2 and is the input power of the sinewave input signal, and B is the noise bandwidth of the 
ideal bandpass filter preceding the envelope detector.  
 
Now the natural log of the likelihood ratio is given by 
 
 
( |
)
ln(
)
ln
( | 0)
i
D
i
i
p r R
p r








 
(6.7-7) 
 
with RD the design value of R. The density functions for (6.7-7) are obtained from (6.7-5) when R is the 
specified value of the input SNR for the numerator probability density term (RD) and R is set equal to zero for 
the denominator probability density term. The logarithm is used to simplify the computations used, since the 
natural log of a product becomes the sum of the natural logs of each term. Let zi denote the log of i. Then zi, 
using (6.7-5) and (6.7-7), becomes 
 
 
ln
( 2
)
i
D
o
D i
z
R
I
R r





 
(6.7-8) 
 
 
With the assumption of independent samples, the optimum detector then compares the quantity 
 
 
 1
1
ln
k
k
i
i
i
k
i
Z
z






 
(6.7-9) 
 
to the two thresholds. Thus Figure 6.7-2(a) illustrates the form of the optimum detector implemented in 
bandpass form, and Figure 6.7-2(b) illustrates the form of the approximate optimum detector implemented in 
baseband form. 
 
Consider the bandpass version of the optimum detector. The input code modulated carrier plus noise 
is despread by the local code, which may or may not be in code phase with the input code. This resulting 
signal plus noise is (ideal) bandpass filtered and envelope detected. Then the detected signal plus noise is 
sampled at the Nyquist rate to generate the independent samples, which are scaled by 
2
D
R , and then  
ln[I0( )] of the quantity is taken. The SNR is subtracted from the ln[I0 ( )] processed value and accumulated 
and the result is compared at each sample to the two boundaries of ln A and ln B. If Zk is not less than ln B or 
more than ln A, the process continues until one of the boundaries is exceeded. At this point when the 
processed signal goes below ln B it indicates that the signal is not present on that trial, and exceeding ln A 
indicates that the signal was present. 
 
It is clear that theoretically this scheme can run forever, since there is no time-out in the design. A 
practical implementation of a sequential detector will be discussed in the next section which incorporates a 
fixed time-out duration. 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          407 
6.7.3 A Sequential Detection Implementation 
 
In this section an implementation of a practical sequential detector system for BPSK SS modulated signals 
with BPSK data modulation that utilize the essence of Wald’s sequential detector will be discussed. Consider 
Figure 6.7-3(a) which is a practical implementation of a bandpass version of the sequential detector. In the 
figure it is assumed that it is set to operate at start time t = 0. A baseband version is shown in Figure 6.7-2(b). 
The center channel of Figure 6.7-3(a) (with a subtractor and an adder) is the sequential detector, similar to 
what we have discussed in the last section. The upper channel is the reference channel. 
 
First consider the center channel, which is the acquisition channel. The timing of the local code 
generator is set to the minimum time delay expected to minimize the chance of acquiring a multipath signal. 
The input signal plus noise, after being multiplied by the local code generator signal, is bandpass filtered to 
the data modulation plus carrier uncertainty bandwidth (B) and square law detected. The reference channel 
(the upper branch) provides an estimate of N0W+PSP, which is the noise power plus the spread signal power 
via the BPF, which has a bandwidth of W Hz and is wide enough to pass the spread signal plus any Doppler.  
 
BPF
Offset
BPF
(W)
LPF
BPF
(B)
+
-
b
x(t)
+
-
Decision
logic
y(t)
PN
clock
Th
z(t)
PN
gen
Update by 1/2 chip
Input
Activate
code 
loop
Note: variable gain
element denoted by:
(.)2
  dt
T
z
Reference channel
(.)2
PSP
BPF
Offset
BPF
(W)
LPF
BPF
(B)
+
-
b
x(t)
+
-
Decision
logic
y(t)
PN
clock
Th
z(t)
PN
gen
Update by 1/2 chip
Input
Activate
code 
loop
Note: variable gain
element denoted by:
(.)2
(.)2
  dt
T
z
Reference channel
(.)2
(.)2
PSP
 
 
Figure 6.7-3 (a) A practical RF version of a sequential detector for BPSK signals, starting at t = 0.  
 
 
PN
code 
generator
ˆ
(
)
PN t
T

(  )2
(  )2
+
(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

ˆ
ˆ
2 cos(
)
t



ˆ
ˆ
2 sin(
)
t




VCO
(  )2
+
LPF
(  )2
0
ˆ
ˆ
2 cos(
)
t



0
ˆ
ˆ
2 sin(
)
t




-
+
LPF
dt

Decis.
logic
Activate
code loop
Ref.
chan.
Seq.
det.
Update by 1/2 chip
Clk
Clk
b
Th
PSP
y(t)
PN
code 
generator
ˆ
(
)
PN t
T

(  )2
(  )2
+
(
1)
1
(.)
b
b
kT
b
k
T
dt
T

(
1)
1
(.)
b
b
kT
b
k
T
dt
T

ˆ
ˆ
2 cos(
)
t



ˆ
ˆ
2 sin(
)
t




VCO
(  )2
+
LPF
(  )2
0
ˆ
ˆ
2 cos(
)
t



0
ˆ
ˆ
2 sin(
)
t




-
+
LPF
dt

Decis.
logic
Activate
code loop
Ref.
chan.
Seq.
det.
Update by 1/2 chip
Clk
Clk
b
Th
PSP
y(t)
 
 
Figure 6.7-3 (b) A practical baseband sequential detector for BPSK signals. 
 
 

 408                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
The center frequency of the offset BPF is offset in frequency, away from the data spectrum, to “see” 
primarily noise. The parameter N0 is the one-sided noise spectral density, W is the noise bandwidth of the 
modulation, and PSP  is the spread signal power that is passed through the BPF with bandwidth W Hz. 
Typically the spread signal power (PSP) detected out of the reference channel is small compared to the power 
of the total despread signal P in the bandwidth W, and the spread signal power is also small compared to the 
noise power. Thus the quantity N0W+PSP is just the total mean power that exists in the reference channel, 
which is primarily noise. For typical direct sequence acquisition conditions
, so that the estimate 
out of the low pass filter (LPF) in the reference channel is proportional to N0, since it can be obtained from 
the total noise power, after dividing by the noise bandwidth (W) of the bandpass filter. 
0
SP
N W
P

 
The reference channel output, after heavy channel low-pass filtering and a scale change, is 
subtracted as a bias (b) from the direct channel output x(t) to yield an integrator input of z(t) = x(t)–b. The 
threshold, Th, which is derived from the reference channel signal, is added to the integrator output. This final 
signal, y(t), is compared in the decision logic to the value of zero, until a truncation time TTR occurs. If the 
signal, y(t), has not dropped to zero after TTR seconds, the signal is declared present. If, during this time the 
output y(t) drops to zero or lower, the signal is declared to not be present. The triangles with arrows through 
them are variable gain amplifiers. Note that there is no upper threshold in this system and detection is noted 
when the signal under hypothesis does not drop below zero value after TTR seconds. 
 
Figure 6.7-3(b) illustrates a baseband implementation of a practical sequential detector. The upper 
branch provides the reference signal just as in Figure 6.7-3(a). However, it is implemented at baseband rather 
than at a carrier or intermediate frequency. Again the input to the integrator is b, and the threshold value Th is 
added to the output of the integrator. The lower section of the diagram is the baseband version of the 
acquisition circuitry. Normally the code and bit timing are in a known relationship, so that when the code is 
aligned, the bit times are also aligned. The signal is beat down to I and Q and then despread, and then both I 
and Q are integrated and dumped, squared, and added together. After the bias b is subtracted off from the 
processed signal, it is integrated and then the threshold Th is added to it and compared to zero. The threshold 
and processing are identical to the bandpass version. 
Figure 6.7-4 illustrates three sample functions, one with no signal present and two with different 
levels of signal power. All three sample functions start from the value of the threshold, Th.  
 
t
TTR
TD
Noise only
Signal plus  noise
Slope = Po/2
Slope = P-(Po/2)
y(t)
Th
0
Slope = -Po/2
t
TTR
TD
Noise only
Signal plus  noise
Slope = Po/2
Slope = P-(Po/2)
y(t)
Th
0
Slope = -Po/2
 
 
Figure 6.7-4 A practical sequential detector output with time. 
 
 
Let P0 denote the minimum power level at threshold. The nominal slope (slope of the straight line 
approximation) of the threshold signal is +P0 /2 and the slope of the noise only case is –P0 /2. The slope of an 
arbitrary signal is P–P0 /2 when the received power is P watts. The nominally optimum bias value for 
parameter b is N0B+P0
 /2, where P0 is the threshold value of signal power. Note that the approximate 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          409 
optimum bias can be written as b = N0B(1+SNR0/2), where SNR0 = P0/(N0B) with P0 being the threshold 
power. 
 
In Figure 6.7-4, the sample function that corresponds to noise only (the lowest curve) decreases to 
the zero from the Th level, and the signal hypothesis is rejected at that time. The middle plot increases at a 
slope of P0/2 and is for a signal that is at the level of P0 watts. Finally the upper graph is for a signal at power 
P (P > P0) which increases with a slope of P–(P0/2) watts. 
 
In Figure 6.7-5 the probability of false alarm and probability of detection are plotted versus 
truncation time for three different settings, based on a sequential detector simulation, due to Ricker et al. 
[36]. The results are illustrative of the type of performance that one can expect with sequential detection. As 
can be seen from Figure 6.7-5, PD saturates with truncation time but PFA decreases as truncation time 
increases. Both PFA and PD are strongly dependent on the bias setting, however. The three biases used in the 
simulation are bopt, 0.94bopt, and 1.05bopt, where bopt is the optimum bias setting. 
 
 
 
Figure 6.7-5 PFA and PD versus truncation time. 
 
 
 
As can be seen in Figure 6.7-6 acquisition time is not as nearly as sensitive to threshold as it is to 
bias, since the bias is the input to the integrator. The variation with bias and threshold depend on signal to 
noise ratio of course, but the above curves give the general type of performance expected. The curves in 
Figures 6.7-5 and 6.7-6 are representative but not scalable to other bandwidths. The best performance 
estimates of sequential detection are made via simulation, since the analysis appears to be intractable. 
 
 
6.7.4 Acquisition Time of a Sequential Detector 
 
In this section an approximate expression for the probability of acquisition with probability PA will be 
developed for the sequential detector. The results are based on computer simulation results of Ricker et al. 
[36] for the false alarm and the probability of detection. The acquisition time, for a given probability of 

 410                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
acquisition, is obtained assuming that a uniform a priori probability distribution represents the a priori 
statistical environment. Let TPA denote the time to acquire with probability PA. 
 
 
 
Figure 6.7-6 Acquisition time sensitivity to bias and threshold. 
 
 
Then it follows that TPA is given by 
 
 
PA
PS
T
T
TPS


 
(6.7-10) 
 
where 
PS
T
 is the time required to search that part of the code phase uncertainty region where the signal is not 
present and TPS is the time required to search the cell where the signal is located. Let 
DIS
T
 denote the mean 
dismissal time per cell required for the sequential detector to dismiss the hypothesis when the signal is not 
present (noise only). Let TTR denote the time it takes to reach truncation, and therefore declare initially that 
the signal is present, when it was a false alarm. In addition let TVR denote the time required (in addition to 
TTR) to verify that a false alarm occurred and not a true detection, based on turning on the code tracking loop 
and a lock detector. It follows that 
 
 
[
(
)]
(
 
DIS
FA
TR
VR
PS
T
T
P
T
T
N q



1)
1
 
(6.7-11) 
 
where N is the total number of passes through the uncertainty region needed to achieve the acquisition 
probability PA, and q is the total number of code cells to be searched in the code uncertainty region. There are 
(q–1) cells to be searched on a single pass in which the signal is not present.  
 
Let the probability of one cell (or the total equivalent probability of the four partial correlation 
values if the step size is one half chip) be denoted by PD. It is shown in Problem 10 that the number of N (N 
is an integer) sweeps through the uncertainty region to achieve probability 
 satisfies the expression  
(
)
acq
P
N
 
 
2
(
)
(1
)
(1
)
...(1
)N
acq
D
D
D
D
D
D
D
P
N
P
P P
P
P
P
P








 
(6.7-12) 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          411 
When N is not an integer, with the assumption that the a priori probability density function is uniformly 
distributed, the probability of acquisition increases linearly (between integers) so that 
 
 
ˆ(
1)
(
1)
ˆ
ˆ
(
)
(
1)
P
P K
N
K
P K
P K

















 
(6.7-13) 
 
where ˆ (
)
A
P K  is the probability of acquisition after the K-th sweep of the uncertainty region, and K is given 
by 
 
 
ˆ
min[
( )
]
A
A
K
m
P m
P



 
(6.7-14) 
 
 
A good approximation to the number of sweeps N for N 
, is given by the equation 
2

 
 
ln(1
)
ln(1
)
A
D
P
N
P



 
(6.7-15) 
 
 
When the signal is present, it is not always detected in the first pass because PD < 1 in general. 
Denote 
miss
T
 as the average time required rejecting the desired signal at the correct signal cell. Then the time 
to search the code cell, where the signal is located, is given by 
 
 
(
1)
PS
miss
T
N
T
T



TR  
(6.7-16) 
 
where TTR is the truncation time. 
 
Finally we have that the acquisition time for an acquisition probability of PA is given by the sum in 
(6.7-11), which yields 
 
 
(
)
1
(
1)
(
1)
FA
TR
VR
PA
DIS
miss
DIS
P
T
T
T
NT
q
N
T
T
T













TR  
(6.7.17) 
 
where N is given by (6.7.17). Note that if N is equal to 2 or larger then, to a good approximation, it follows 
that 
 
 
(
)
ln(1
)
ln(1
)
1
1
ln(1
)
ln(1
)
FA
TR
VR
A
A
P
DIS
DIS
TR
D
D
DIS
P
T
T
P
P
T
T
q
T
T
P
P
T






















 
(6.7.18) 
 
 
For this approximation the design parameters PA (the probability of the acquisition), TVR, TTR, and 
the simulation values of 
miss
T
, 
DIS
T
, PFA, and PD are needed to estimate the acquisition time with probability 
PA. Note also that if c chips are to be searched and 1/2 chip steps are to be used, then 2c cells have to be 
searched. Also 4c cells have to be searched for 1/4-chip steps, and so on. When 
 the following 
approximation is accurate: 
1
q 
 
 
(
)
ln(1
)
1
ln(1
)
FA
TR
VR
A
P
DIS
D
DIS
P
T
T
P
T
T
q
P
T











 
(6.7-19) 
 

 412                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Example 4 In Figure 6.7-7 an example is illustrated having the parameters of a 0.9 probability of acquisition, 
with q = 8,860 cells, a TVR value of 50 ms, a BPF noise bandwidth of 8 kHz, and a data rate of 1,400 (NRZ) 
symbols per second. The design point SNR of –3.5 dB (in the 8-kHz bandwidth) was used to optimize the 
threshold and bias. This value of SNR supports a BER of 10–5 using a rate 1/3 Viterbi decoder at an Eb/N0 of 
4.6 dB. Note that the acquisition time drops rapidly with predetection SNR.  
 
 
Figure 6.7-7 T0.9 time versus the predetection signal-to-noise ratio. 
 
Sequential detection can considerably reduce the acquisition times compared to a fixed dwell 
system. It should be noted that sequential detectors are not readily compatible with highly parallel correlator 
acquisition systems since the decision time is not fixed. Thus, the use in modern highly parallel systems is 
not typical. 
 
 
6.7.5 The Tong Detector 
 
An acquisition scheme that is closely related to the sequential detector is the Tong detector. The Tong 
detector has a variable detection time just like the sequential detector. Tong [37], Scott [38], and Kaplan [39] 
have described the Tong detector. This detector is suboptimum but more efficient than a fixed dwell time 
scheme. The Tong detector described here will include a lock detector function to monitor true lock and 
reject false alarms that passed the Tong detector. It is assumed that the time uncertainty is divided up into 
cells that are (typically) 1/2 chip apart. It is also assumed that the code and the data are synchronous. Figure 
6.7-8 illustrates a baseband realization of the Tong detector. The front end of the receiver heterodynes the 
signal down to baseband with I and Q components. The I and Q channels are square law detected (some 
implementations are based on magnitude detectors) and compared to a threshold. The search starts at the 
minimum delay over the time uncertainty and is searched cell by cell, typically in increments of 1/2 a chip, 
until the end of the time uncertainty is reached and then it is started over again. At time 0, which corresponds 
to k = 1 in the figure, the correlator correlates for T seconds. 
If at the end of the T second correlation the threshold is exceeded, a tentative positive decision is 
made and one is added to the up-down counter. If, on the other hand, the threshold is not exceeded, a one is 
subtracted from the up-down counter. At the initiation of the cell test the up-down counter is set to state B  
(B > 0). If the counter reaches the value zero, the hypothesis is rejected and the next cell is checked. If the 
count reaches state A (A > B), synchronization is declared. If neither state A nor B is reached, the test 
continues until a decision is made.  

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          413 
In addition to this logic it will be assumed that a lock detector is employed to monitor true lock 
conditions (for loss of lock) and flush out false alarms that made it through the up-down counter. It will be 
assumed that KT seconds are needed to perform this verification, with KT being a multiple of T. 
 
Up-down
counter (A,B)
(  )2
(  )2
+
PN
code 
generator
ˆ
ˆ
2 cos(
)
t



ˆ
ˆ
2 sin(
)
t




ˆ
(
)
p
PN t
T

(
1)
1
(.)
kT
k
T
dt
T

VCO
Code phase adjust
Threshold
device
(Th)
(
1)
1
(.)
kT
k
T
dt
T

Up-down
counter (A,B)
(  )2
(  )2
+
PN
code 
generator
ˆ
ˆ
2 cos(
)
t



ˆ
ˆ
2 sin(
)
t




ˆ
(
)
p
PN t
T

(
1)
1
(.)
kT
k
T
dt
T

VCO
Code phase adjust
Threshold
device
(Th)
(
1)
1
(.)
kT
k
T
dt
T

(  )2
(  )2
+
PN
code 
generator
ˆ
ˆ
2 cos(
)
t



ˆ
ˆ
2 sin(
)
t




ˆ
(
)
p
PN t
T

(
1)
1
(.)
kT
k
T
dt
T

VCO
Code phase adjust
Threshold
device
(Th)
(
1)
1
(.)
kT
k
T
dt
T

 
 
Figure 6.7-8 Baseband diagram of the Tong detector. 
 
 
Figure 6.7-9 illustrates the Tong search detector algorithm with a lock detector.  
 
Threshold
compare
> Th ?
N=N+1
N=N-1
N = A ?
N = 0 ?
Continue searching
at the same cell
No
No
Yes
No
Declare
signal present;
code track
and lock detector
are initiated
Yes
Yes
Declare
signal
absent
Set N = B and start 
searching next cell
Lock
detector
indicates
lock?
Continue
code track
Yes
No
Declare loss of lock;
Start reacquisition
process—if that fails
start acquisition
Correlates for KT seconds
for the lock detector to determine
if it is in or out of lock.
Input
Threshold
compare
Threshold
compare
> Th ?
N=N+1
N=N-1
N = A ?
N = 0 ?
N = 0 ?
Continue searching
at the same cell
No
No
Yes
No
Declare
signal present;
code track
and lock detector
are initiated
Yes
Yes
Declare
signal
absent
Set N = B and start 
searching next cell
Set N = B and start 
searching next cell
Lock
detector
indicates
lock?
Continue
code track
Yes
No
Declare loss of lock;
Start reacquisition
process—if that fails
start acquisition
Correlates for KT seconds
for the lock detector to determine
if it is in or out of lock.
Input
 
 
Figure 6.7-9 The Tong detector search algorithm used with a lock detector. 
 
 
 
As seen in Figure 6.7-9, the lock detector algorithm is integrated into the acquisition algorithm. The 
lock detector monitors the tracking mode in general and initiates reacquisition when necessary. It also checks 
for false alarms by looking at the first KT second integration. If this first integration indicates that code lock 
is not present, it rejects this false alarm and sets the counter to B and starts searching the next cell. 

 414                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
In summary it is evident that there are five important parameters that are used in the Tong detector: A, B, Th 
(the threshold), T, and K. Scott [38] has determined that the results in the original paper by Tong were 
somewhat in error. The corrected results will be presented here without derivation. Let Pd denote the 
probability of exceeding the threshold (Th) after correlating for T seconds, and Pfa denote the probability of 
exceeding the threshold (Th) after correlating for T seconds.  
 
Now consider the evaluation of the detection probability Pd and the false alarm probability Pfa. From 
Section 6.5.4 the false alarm and detection probabilities are given by 
 
 
 
z
fa
P
e dz
e 







 
(6.7-20) 
 
where  is the normalized threshold and is given by 
 
 
2
2
hT



 
(6.7-21) 
 
and the noise variance is given by 
 
 
2
1
( )
( )
cn
PN
i
S
f S
f df
T





 
(6.7-22) 
 
The detection probability is given by 
 
 
0
0
0
(
, )
(2
)
z
dp
e
e I








0z dz  
(6.7-23) 
 
where 
0
 is given by 
 
 
2
2
0
2
2
2
( )
( )
cn
PN
i
s
PL
S
f S
f df
T







 
(6.7-24) 
 
Again utilizing the Shnidman series expansion [22] produces 
 
 
0
1
0
0
1
0
(
)
(
, )
1
( !)
( !)
k
m
m
d
d
m
k
P
P
e
e
e
m
k





















@

 
(6.7-25) 
 
Then the probability of having a true detection PD for the cell under test is given by 
 
1
1
1
1
1
B
d
d
D
A B
d
d
P
P
P
P
P


















 
(6.7-26) 
 
Correspondingly the probability of having a false alarm PFA for the cell under test is given by 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          415 
 
1
1
1
1
1
B
fa
fa
FA
A B
fa
fa
P
P
P
P
P






















 
(6.7-27) 
 
Once T, Th, and C/N0 (the carrier to noise spectral density ratio) are determined, Pfa and Pd can be 
determined. Then when A and B are chosen, PFA and PD can be determined. The mean number of correlations 
for a cell (that does not have the signal in it) of duration T seconds can be determined from [38] 
 
 


1
1 2
N
N
fa
E N
N
P


 
(6.7-28) 
 
for Pfa < 0.2 and A > 5. Commonly B is set equal to 1 or 2 and A is set between 5 and 100. Hence the mean 
time to search q cells can be approximated by 
 
 

2
1
2
D
N
D
P
T
qT N
K
P

FA
P



 
(6.7-29) 
 
where q is the number of cells to be searched (twice the number of chips to search if ½ chip is the separation 
between cells), T is the integration time to form a decision against the threshold, 
 
n
N
is the mean number of 
(T second) correlations needed per chip to dismiss it given that the signal is not present, and K is the lock 
verification parameter. 
 
 
6.8 TRANSFORM METHODS USED IN CODE ACQUISITION 
Equation Chapter 6 Section 8  
Now consider Fourier transforms as an aid to code acquisition. We will consider only periodic sequences in 
this discussion. Consider the cross-correlation of two periodic sequences x(m) and y(m) having period N/2, 
assuming that there are two samples per code chip. Thus the cross-correlation is given by 
 
 
1
0
( )
( ) (
)
N
xy
m
R
n
x m y m
n





 
(6.8-1) 
 
If one sample per chip were used then the period of the code would be N chips. It will be shown that the 
cross-correlation is given by [40]  
 
 


1
1
*
0
( )
( )
( ) (
)
N
m
DFT
X k Y
k
x m y m
n






 
(6.8-2) 
 
In other words the inverse discrete Fourier transform (DFT) of the product of the DFT of the x sequence and 
the DFT of the complex conjugate of the y sequence is the cross-correlation of the x and y sequences. Note 
that this relationship (6.8-2) only holds for periodic sequences.  
 
Now let us demonstrate (6.8-2). Define the transforms of the two sequences as 
 
 
2
1
0
( )
( )
rk
N
j
N
r
Y k
y r e





 
(6.8-3) 
 
and 

 416                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
2
1
0
( )
( )
sk
N
j
N
s
X k
x s e





 
(6.8-4) 
 
Then  
 
 


2
1
1
*
*
0
1
( )
( )
( )
( )
mk
N
j
N
k
DFT
Y k X k
Y k X
k e
N






 
(6.8-5) 
 
which can be written as  
 
 


2
2
1
1
1
1
*
0
0
0
1
( )
( )
( )
( )
rk
sk
mk
N
N
N
j
j
N
N
k
r
r
DFT
Y k X k
y r e
x s e
e
N






















2
j
N

 
(6.8-6) 
 
which can be written as  
 
 


2
(
)
1
1
1
1
*
0
0
0
1
( )
( )
( ) ( )
k m r s
N
N
N
j
N
r
s
r
DFT
Y k X k
y r x s
e
N























 
(6.8-7) 
 
Since it is true that 
 
 
2
(
)
1
0
1
(
k m r s
N
j
N
r
e
m
N







)
r
s







 
(6.8-8) 
 
Let CC(m) denote the cross-correlation function at the m-th offset, so that 
 
 


1
1
*
0
( )
( )
( ) (
)
( )
N
s
DFT
Y k X k
x s y s
m
CC m







 
(6.8-9) 
 
and thus the inverse DFT of two periodic sequences yields the cross-correlation function.  
Figure 6.8-1 illustrates the receiver structure to utilize DFTs (or FFTs) for code acquisition for 
periodic codes. The input signal plus noise is sampled to produce 
 
 
0
(
)
2
(
)
(
)cos(
)
(
)
s
s
s
s
y rT
Pd rT PN rT
rT
n rT



s


 
(6.8-10) 
 
y(rTs)


0
2 sin (
)
s
rT







0
2 cos (
)
s
rT





0
(
)
2
(
)
(
)cos(
)
(
)
s
s
s
s
s
y rT
Pd rT PN rT
rT
n rT





FFT
IFFT
FFT*
(
 
)
s
s
PN rT
nT



2
CC(m)
1
0
(.)
nc
N
j


Sum different
CC(m) for each
correlation time
for each time 
hypothesis m
Choose
max
y(rTs)


0
2 sin (
)
s
rT







0
2 cos (
)
s
rT





0
(
)
2
(
)
(
)cos(
)
(
)
s
s
s
s
s
y rT
Pd rT PN rT
rT
n rT





FFT
IFFT
FFT*
(
 
)
s
s
PN rT
nT



2
CC(m)
1
0
(.)
nc
N
j


Sum different
CC(m) for each
correlation time
for each time 
hypothesis m
Choose
max
 
 
Figure 6.8-1 Model used to obtain code acquisition with a periodic code using FFTs. 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          417 
 
It is assumed that there are two samples per chip in this discussion. The local code has the complex 
conjugate of the FFT taken, and the signal plus noise samples have a complex FFT taken. The product of the 
complex FFT and the conjugated FFT of the local code are multiplied and the inverse FFT is taken. At this 
point the N correlation values are available for checking for the location of the signal.  
 
Figure 6.8-1 illustrates the use of noncoherent combining [41] to increase the SNR by adding 
successive correlations for each correlation delay hypothesis. Other related papers based on FFT methods of 
code acquisition include [42–44]. One application of this transform approach is with the code acquisition of 
the C/A code in the GPS. Basically the C/A code is a direct sequence spread spectrum system utilizing BPSK 
modulation, for both the data and the PN sequence (a set of Gold codes). The C/A code repeats every 
millisecond. The chip rate is 1.023 mega chips/sec. The period is 1,023 chips. The data bit rate is 50 bps. 
Thus every 20 ms or every 20 periods of the C/A code, the data may cause the sequence to be inverted. 
Hence, except for every 20 code cycles the code is periodic, and at the bit transition it may or may not invert 
depending upon the current and last data bits. In fact, if the contiguous bits don’t change signs, 40 C/A code 
cycles would occur before the next possible bit transition. Thus this would be a possible application of the 
transform technique. 
 
6.9 CODE ACQUISITION USING A PASSIVE MATCHED FILTER 
Equation Chapter 6 Section 9 
An alternative method of obtaining code acquisition to the active correlator is to utilize a matched filter. This 
also called a passive code search, as opposed to the active code search already discussed in the previous 
sections. This section describes and determines the performance of noncoherent (passive) matched filters 
used for obtaining code acquisition. All the previous sections, except for the FFT section, were based on 
active correlation methods. We start with a discussion of a matched filter and then consider the optimum 
noncoherent time estimator and a practical realization of it.  
 
 
6.9.1 The Matched Filter 
 
A matched filter for a known signal [34] is a filter that maximizes the filter output SNR when the signal is 
immersed in white Gaussian noise (WGN). The impulse response of a matched filter for a signal s(t) that 
exists for T seconds is well known and is of the form 
 
 
( )
(
)    0
MF
h
t
ks T
t
t
T



 
(6.9-1) 
 
where k is a constant. Thus the matched filter impulse response is proportional to a time-reversed version of 
the original signal. The Fourier transform of the matched filter is given by 
 
 
*
( )
( )
j T
MF
H
kS
e





 
(6.9-2) 
 
where S*() is complex conjugate of the Fourier transform of s(t). 
 
Now consider a matched filter for a finite length segment of a direct sequence PSK SS signal [34]. 
The N chip PSK SS waveform is modeled by 
 
 
1
( )
[
(
 1)
]
N
n
n
c
s t
a p t
n
T





 
(6.9-3) 
 
where an takes on the values 
 according to the particular sequence involved and p(t) denotes an NRZ pulse 
of a cosine wave signal, of duration Tc seconds, starting at –Tc/2 seconds. Thus the complete signal is a series 
of pulses of cosine waves. The Fourier transform of 
1

(6.9-3) produces 

 418                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
(6.9-4) 
(
 1)
1
( )
( )
c
N
i
n
T
n
n
S
P
a e








 
where P() is Fourier transform of the basic pulse p(t). However, a PSK SS signal would normally be 
produced by using a code generator phase shift keying a modulator. The corresponding matched filter is of 
the form 
 
 
 
(6.9-5) 
(
1)
*
( )
( )
c
i
N
T
MF
H
kS
e






 
where the delay term 
 (T = (N–1)TC) has been included to provide physical 
realizability [34]. Using 
(
1)
*
( )
( )
.
c
i
N
T
MF
H
kS
e






(6.9-2) and (6.9-4) in (6.9-5), it is concluded that the matched filter for a BPSK SS 
signal is given by 
 
 
 
(6.9-6) 
(
)
*
1
( )
( )
c
N
i
N n T
MF
n
n
H
kP
a e








 
The Fourier transform of the cosine wave pulse p(t), with an rms amplitude of A volts, is given by 
 
 
/ 2
0
/ 2
( )
2 cos(
)
 
c
c
T
i t
T
P
A
t e
d






t  
(6.9-7) 
 
 
This result can be evaluated to produce 
 
 








0
0
0
sin (
)
/ 2
sin (
)
/ 2
( )
2
(
)
/ 2
(
)
/ 2
c
c
c
c
T
AT
P
T
T






















0
cT
 
(6.9-8) 
 
which is clearly real so that P*() = P(). Therefore (6.9-6) can be rewritten as 
 
 
 
(6.9-9) 
(
)
1
( )
( )
c
N
i
N n T
MF
n
n
H
kP
a e








 
where P() is given by (6.9-8). Thus the matched filter is the sum of chip delayed segments modified by the 
chip sequence {an} and multiplied by the Fourier transform of the pulse signal. 
Figure 6.9-1 illustrates a practical digital matched filter for the direct sequence BPSK SS signal.  
 
0
ˆ
ˆ
2 cos(
)
t



A/D
ILPF
0
ˆ
ˆ
2 sin(
)
t




Compare
squared
magnitude
to threshold
Threshold
+
1
-1
-1
1
1
+
1
-1
-1
1
1
+
1
-1
1
1
-1
+
1
-1
1
1
-1
Coherent integration section
1 4 4 4 44 2 4 4 4 4 43
TT=NFFTTcoh
In this figure
NFFT =2, in
general NFFT =2n
FFT with 2n inputs
2n outputs
Coherent integration section
6 4 4 4 44 7 4 4 4 4 48
A/D
ILPF
Coherent integration section
1 4 4 4 44 2 4 4 4 4 43
Coherent integration section
6 4 4 4 44 7 4 4 4 4 48
0
ˆ
ˆ
2 cos(
)
t



A/D
ILPF
0
ˆ
ˆ
2 sin(
)
t




Compare
squared
magnitude
to threshold
Threshold
+
1
-1
-1
1
1
+
1
-1
-1
1
1
+
1
-1
1
1
-1
+
1
-1
1
1
-1
Coherent integration section
1 4 4 4 44 2 4 4 4 4 43
TT=NFFTTcoh
In this figure
NFFT =2, in
general NFFT =2n
FFT with 2n inputs
2n outputs
Coherent integration section
6 4 4 4 44 7 4 4 4 4 48
A/D
ILPF
Coherent integration section
1 4 4 4 44 2 4 4 4 4 43
Coherent integration section
6 4 4 4 44 7 4 4 4 4 48
 
 
Figure 6.9-1 Model for a noncoherent matched filter with noncoherent combining. 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          419 
 
The input signal plus noise is heterodyned down to inphase and quadrature baseband components, 
filtered to be compatible with the sampling, and shifted into the respective shift registers. The FFT coherently 
combines the individual correlation segments to increase the decision signal-to-noise ratio. A more detailed 
look at the digital matched filter will follow. The coherent integration is accomplished by summation. 
 
 
6.9.2 Optimum Time of Arrival Estimator  
 
In this section we consider the optimum time of arrival estimator for the case of noncoherent signals, in 
which the phase is unknown. The carrier frequency will be used to estimate the received carrier signal and 
the resulting signal will be heterodyned down to an I and Q output at baseband, where baseband matched 
filtering will be employed for both the I and the Q channels. A BPSK SS signal is assumed in the following. 
The signal is modeled over Td seconds duration as  
 
 


0
( )
2
(
)cos
(
)
(
)
s t
PPN t
T
t
T
t
T









 
(6.9-10) 
 
The received signal plus noise is modeled as the sum 
 
 
( )
( )
( ) 
y t
s t
n t


 
(6.9-11) 
 
where n(t) is modeled as white Gaussian noise (thermal noise). The Bayes [34] solution to the detection of 
the PN coded signal is found from the generalized likelihood ratio [34] that has been averaged over phase, 
and is given by 
 


( / )
(
( / 0)
s
E p
p
q
p



r
r)
r
 
(6.9-12) 
 
where r is the generalized likelihood ratio [34], and r denotes the sampled waveform with the samples 
taken at the Nyquist rate with the assumption that the signal plus noise passes through an ideal bandpass 
filter, which has a bandwidth that is large compared to the signal bandwidth. The parameter  is the unknown 
phase in the received signal, with the assumption that the phase is constant (but unknown) during the receiver 
processing time. The subscript s on the conditional probability density function denotes that the signal is 
present, and the conditional density function without the s denotes the fact that the signal is not present. The 
E{ } denotes the ensemble average over the phase variable . The letter p denotes the a priori probability that 
the signal is present and q denotes the a priori probability that the signal is not present. 
 
DiFranco and Rubin [34] have derived the optimum detection structure, based on evaluation of 
(6.9-12) for the signal of the form (6.9-10), and is shown in Figure 6.9-2. In the derivation the phase was 
assumed to be uniformly distributed over 0 to 2radians, but it assumed that the frequency was known. The 
receiver heterodynes the signal down to inphase and quadrature components, then the envelope squared is 
obtained. The parameter 
0
2/(
)
k
N
R

and R is defined by 
 
 
0
T
E
R
N

 
(6.9-13) 
 
where ET is the energy (watts-seconds) in the code burst and N0 is the one-sided noise spectral density 
(watts/Hz). This is followed by a square root operation and then it is sampled at the end of the burst. Finally 
the function I0(x) is formed from the input x out of the sampler, and this output value is compared to a 
threshold. The function I0(x) is the modified Bessel function of the first kind and zeroth order. I0(x) is a 
monotonic function of x. The optimum detector is difficult to implement since it requires the exact signal 
level and noise level and the I0(x) function. 
 

 420                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
0
1
2 cos(
)
t



0
1
2 sin(
)
t



Matched
filter for
PN(t)
(.)2
Matched
filter for
PN(t)
(.)2
+
( )
Sample
@ t = T
I0( )
Compare
Signal
present
Signal
absent
Threshold
k
Input
0
1
2 cos(
)
t



0
1
2 sin(
)
t



Matched
filter for
PN(t)
(.)2
Matched
filter for
PN(t)
(.)2
+
( )
( )
Sample
@ t = T
Sample
@ t = T
I0( )
Compare
Signal
present
Signal
absent
Threshold
k
Input
 
 
Figure 6.9-2 The optimum detector for noncoherent reception of BPSK SS signals. 
 
 
 
However, a reasonable approximation can be made to the receiver structure, which removes the 
need for signal and noise strength by recognizing that the optimum receiver deals with a monotonic function 
of the envelope of the signal. Figure 6.9-3 illustrates the approximate optimum structure. Notice that the 
square root and the I0(x) function are not present in the block diagram and this structure does not require 
signal-to-noise ratio values.  
 
0
1
2 cos(
)
t



0
1
2 sin(
)
t



Matched
filter for
PN(t)
(.)2
Matched
filter for
PN(t)
(.)2
+
Compare
Signal
present
Signal
absent
Threshold
Sample
@ t = T
Envelope2 at this point
Input
0
1
2 cos(
)
t



0
1
2 sin(
)
t



Matched
filter for
PN(t)
(.)2
Matched
filter for
PN(t)
(.)2
+
Compare
Signal
present
Signal
absent
Threshold
Sample
@ t = T
Envelope2 at this point
0
1
2 cos(
)
t



0
1
2 sin(
)
t



Matched
filter for
PN(t)
(.)2
Matched
filter for
PN(t)
(.)2
+
Compare
Signal
present
Signal
absent
Threshold
Sample
@ t = T
Envelope2 at this point
Input
 
 
Figure 6.9-3 An approximately optimum detector for noncoherent reception of BPSK SS signals. 
 
 
6.9.3 Digital Passive Matched Filter Introduction 
Models of the passive and active acquisition search implementations have been discussed in numerous prior 
publications [34, 45–47]. These models, however, do not treat the more general case, where a receiver must 
search both an appreciable time uncertainty and a frequency uncertainty in the presence of noise and 
interference. While noncoherent combining of successive coherent integrations has been used to enable 
higher jammer power to signal power ratio (J/S) tolerance for active parallel search implementations, recent 
passive matched filter (PMF) search descriptions have not used this technique to extend the PMF dwell time 
beyond the bit duration [46]. Similarly, FFT-based frequency search implementations used in active parallel 
searches [48, 49] are not usually applied to the PMF approach [46]. The following sections will present the 
system model and performance of a digital passive matched filter (DPMF).  
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          421 
6.9.4 DPMF Acquisition Model 
Consider a noncoherent digital passive matched filter (DPMF) for a random-like code with BPSK signal 
modulation that has a chip rate of Rc =1/Tc chip/sec, where Tc is the chip duration in seconds. The signal is 
assumed to be a BPSK SS modulated signal of the form 
 
 
( )
2
( )
(
)cos(
)
o
y t
Ad t PN t
T
t





 
(6.9-14) 
 
where P is the received signal power in watts, d(t) is the data sequence that has nonreturn to zero (NRZ) 
symbols and bit a rate of Rb bps, PN(t) is the spreading sequence with a chip rate of Rc cps, o is the carrier 
frequency in radians/sec,  is the unknown carrier phase in radians, T is unknown delay from the transmitter 
to the receiver, and n(t) represents the bandpass noise process that can be represented in inphase and 
quadrature baseband noise components.  
It is assumed that the clock on the receiver is accurate to 
/ 2
T

 seconds, or equivalently the code 
chip uncertainty is a total of Mu = Rc
 chips. In addition to the time uncertainty, there is an assumed total 
frequency uncertainty of F Hz. The maximum frequency error is assumed to be f, where f = F/2. The 
acquisition system consists of a Ti0 second pre-FFT correlation, followed by an FFT-aided summation to 
increase the correlation time to 1 bit at all the FFT frequencies. Noncoherent combining extends the 
correlation time to d seconds, which will also be referred to here as the dwell time, in multiples of bit times. 
Before the digital matched filter is discussed, a brief introduction of a matched filter will be presented.  
T

Figure 6.9-4 illustrates a DPMF model for an NRZ code. This architecture is an extension of the real 
time implementation described in [45]. The noncoherent matched filter is a digital approximation to an 
analog matched filter. It is assumed that the input BPSK signal plus noise and interferer are filtered by the 
BRF Hz ideal bandpass filter, at the input. The filtered signal plus noise is heterodyned down to baseband by 
two tones that are 90 degrees apart in phase and are within fm Hz of the carrier frequency. Thus in-phase (I) 
and quadrature (Q) signals are obtained from the bandpass signal. The I and Q signals are next filtered by 
Nyquist filters with bandwidth BNQ that are compatible with the sampling rate to remove the sum frequency 
terms. Thus the bandwidth of the Nyquist filters is equal to the chip rate. These filtered signals plus noise are 
sampled with an analog-to-digital converter (A/D).  
Consider the noncoherent matched filter illustrated in Figure 6.9-4. It will be assumed that each 
matched filter will use two samples per chip, as is standard practice for many applications, including many 
GPS receivers. Hence the number of actual time cells (time hypotheses) to be searched in time is given by  
 
 
2
2
ct
u
c
M
M
TR


 
(6.9-15) 
 
Ti =NFFTTi0
Ti0
Ti0
Ti

Input
Nt taps = 2N chips
NN FFT chips
A/D
A/D
ILPF
(BNQ)
+
1
-1
-1
1
1
+
1
-1
-1
1
1
+
1
-1
1
1
-1
+
1
-1
1
1
-1
Coherent correlator section

NFFT complex outputs

FFT with NFFT complex inputs
(Complex sum of N FFT
groups of N chips for a
total of NN FFTchips)
Add squared
magnitude
for each
frequency
I
Q
Coherent correlator section

Coherent correlator section
Coherent correlator section

(1)
I
(1)
Q


FFT
I(N
)
FFT
Q(N
)

IBPF
(BRF)

ILPF
(BNQ)


0
ˆ
ˆ
2 cos
t





0
ˆ
ˆ
2 sin
t




Check
each
time cell
and freq.
bin every
sample
Ti =NFFTTi0
Ti =NFFTTi0
Ti0
Ti0
Ti0
Ti

Input
Nt taps = 2N chips
NN FFT chips
A/D
A/D
ILPF
(BNQ)
+
1
-1
-1
1
1
+
1
-1
-1
1
1
+
1
-1
-1
1
1
+
1
-1
1
1
-1
+
1
-1
1
1
-1
+
1
-1
1
1
-1
+
1
-1
1
1
-1
Coherent correlator section

NFFT complex outputs

FFT with NFFT complex inputs
(Complex sum of N FFT
groups of N chips for a
total of NN FFTchips)
Add squared
magnitude
for each
frequency
I
Q
Coherent correlator section

Coherent correlator section
Coherent correlator section
Coherent correlator section
Coherent correlator section

(1)
I(1)
I
(1)
Q(1)
Q


FFT
I(N
)
FFT
I(N
)
FFT
Q(N
)
FFT
Q(N
)

IBPF
(BRF)

ILPF
(BNQ)


0
ˆ
ˆ
2 cos
t





0
ˆ
ˆ
2 sin
t




Check
each
time cell
and freq.
bin every
sample
 
 
Figure 6.9-4 Model for the FFT enhanced noncoherent matched filter with NRZ modulation without noncoherent combining. 
 

 422                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
For illustrative purposes Figure 6.9-4 illustrates one sample per shift register cell; however, it is to 
be understood that the actual implementation would have two samples per chip. 
For simplicity, it will be assumed in this analysis that the A/D process has the effect of causing only 
degradation to the detected signal and does not cause distortion. It follows that the bandpass filter and the 
anti-aliasing filter (Nyquist ideal filter with bandwidth BNQP) cause some filter distortion on the received 
signal.  
It is assumed that N (N = Ti0Rc) chips or Nt = 2N = 2Ti0Rc taps are used for the pre-FFT coherent 
correlation portion of the matched filter of Ti0 seconds, as indicated in Figure 6.9-4. The actual correlation 
would be accomplished digitally, however analog correlations will be analyzed for mathematical 
convenience. It will be assumed that the FFT forms the NFFT sums of Ti0 segments (Ti = NFFTTi0) to produce a 
coherent correlation time Ti seconds corresponding to the bit duration. Therefore, the total coherent 
correlation time is Ti = NFFTNTc seconds, for each channel correlation of the I-Q pair.  
The NFFT correlations are input to the FFT as complex inputs and summed by the FFT to provide 
complex outputs at all the NFFT frequencies of the FFT. The input sequence is complex since both the I and 
the Q phases are input to the FFT. In addition to the coherent integration (correlation), this system utilizes 
noncoherent combining by noncoherently combining Nnc coherent correlations for a total noncoherent 
correlation time of 
'
D

 =NncNFFTTi0 seconds, or NncNFFTN chips. Noncoherent combining is not shown in 
Figure 6.9-4, but will be discussed shortly and is shown in Figure 6.9-5 for the complete acquisition system 
model.  
Now consider noncoherent combining. Noncoherent combining of the coherent sections is 
employed to increase the detection probability at the expense of increased dwell time. Contiguous segments 
of code that are Ti seconds in duration are noncoherently combined (the squares of the Is and Qs are added 
together) as shown in Figure 6.9-5. The I and Q values are the output of the FFT. Thus more SNR is 
obtained, since more energy is collected with the Nnc matched filter outputs being combined noncoherently at 
each frequency of the FFTs for each time hypothesis. Therefore there is an added hardware complexity 
associated with the Nnc FFTs and Nnc noncoherent matched filters that are required.  
 
 
6.9.5 Digital Matched Filter Acquisition Time Model 
 
Consider Figure 6.9-6 to understand the acquisition algorithm. As noted earlier, the time uncertainty in the 
signal arrival time is assumed to be 
T/2 seconds relative to the local (receiver) code (L.C.) time, for a 
total time uncertainty of T seconds. The code segment that is to be detected has a dwell time of d seconds, 
or equivalently NncRcTi chips, as seen in Figure 6.9-5.  

The algorithm is as follows. Based on the receiver time t0, the matched filter (MF) receiver (local) 
code is instantly delayed by T/2 seconds relative to the receiver time t0 and loaded into the local code 
register, which guarantees that even the earliest arrival of the signal will be detected. In Figure 6.9-6(a) the 
earliest, latest, and nominal arrival times of the segment of code that is to be detected is shown. These three 
cases are shown in Figures 6.9-6(a) through 6.9-6(f). We have used 
d
 = 
'
D
in Figure 6.9-6(b) for visual 
simplification. Figure 6.9-6(b) shows that when the code segment of d seconds arrives at the nominal time, it 
could possibly be detected by the matched filter after waiting 
d
+ T/2 seconds.  
This is the first opportunity for detection of the nominal arrival time of the code segment. Figure 
6.9-6(c) illustrates that d + T seconds after t0, the latest arrival time of the received code will just align 
itself with the local code and could be detected. At this point in time a new segment of code, of time duration 
d seconds, is jam-set to correspond to the time associated with just being equal to the start of the earliest 
arrival code segment.  
Figure 6.9-6(d) illustrates the situation when time has progressed to 2d+T seconds past the initial 
time t0. At this point in time the earliest possible arrival time has just aligned with the local code in its second 
position. It can be seen that T/2 seconds later, the nominal code segment will be aligned, and T seconds 
later the latest possible arrival of the code segment will be aligned. 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          423 
Ti0
Ti0
First FFT with NFFT outputs
+
+
+
+
I
Q
First coherent correlation
Ti0
Ti0
Nnc-th FFT with NFFT outputs
+
+
+
+
Nnc-th coherent correlation
NFFT
NFFT
Form 
for each FFT frequency bin “j” and each time hypothesis “i”
k =1







second MF output,
one for each FFT
frequency bin and 
for every time 
hypothesis




Ti
Ti
Ti0
Ti0
Second FFT with NFFT outputs
+
+
+
+
Second coherent correlation
NFFT





Ti
k =2
k =Nnc
(Ii  j 1 ,Qi j 1)
(Ii  j 2,Qi j 2)
FFT
N

FFT
N

FFT
N



2
2
1
( , )
nc
N
ijk
ijk
k
S i j



I
Q
(Ii  j Nnc,Qi j Nnc)
'
D

'
D

Ti0
Ti0
First FFT with NFFT outputs
+
+
+
+
+
+
I
Q
First coherent correlation
Ti0
Ti0
Nnc-th FFT with NFFT outputs
+
+
+
+
+
+
Nnc-th coherent correlation
NFFT
NFFT
NFFT
NFFT
Form 
for each FFT frequency bin “j” and each time hypothesis “i”
k =1







second MF output,
one for each FFT
frequency bin and 
for every time 
hypothesis








Ti
Ti
Ti0
Ti0
Second FFT with NFFT outputs
+
+
+
+
+
+
Second coherent correlation
NFFT





Ti
k =2
k =Nnc
(Ii  j 1 ,Qi j 1)
(Ii  j 2,Qi j 2)
(Ii  j 2,Qi j 2)
FFT
N

FFT
N

FFT
N

FFT
N

FFT
N

FFT
N

FFT
N

FFT
N

FFT
N



2
2
1
( , )
nc
N
ijk
ijk
k
S i j



I
Q
(Ii  j Nnc,Qi j Nnc)
(Ii  j Nnc,Qi j Nnc)
'
D

'
D

 
 
Figure 6.9-5 Code MF acquisition circuit illustrating noncoherent combining of coherent sections. 
 
 
Latest arrival (L.A.)
Received chip burst:
Nominal arrival (N.A.)
Earliest arrival (E.A.)
d
Initial position @ t0
T
d
(a)
(b)
(c)
Position @ t0+ 2d +(3/2)T sec
L.A.
E.A.
N.A.
L.C. second position
d
(e)
Position @ t0+
3d+(5/2)T sec
(f)
T/2
T/2
L.A.
E.A
N.A
Position @
t0+ d+T/2 sec
L.C. initial position
d
T/2
T/2
L.A.
E.A.
N.A.
Position @ t0+ 2d +T sec
L.C. second position
d
(d)
E.A. 
d
Position @ t0+
d+T sec
L.A.
T/2
T
Jam set T
seconds later
LC sec. Pos.
T/2
T
L.A.
E.A.
N.A.
L.C. third position
d
N.T.
L.C. initial position
Latest arrival (L.A.)
Received chip burst:
Nominal arrival (N.A.)
Nominal arrival (N.A.)
Earliest arrival (E.A.)
d
Initial position @ t0
T
d
(a)
(b)
(c)
Position @ t0+ 2d +(3/2)T sec
L.A.
E.A.
N.A.
L.C. second position
d
(e)
Position @ t0+
3d+(5/2)T sec
(f)
T/2
T/2
L.A.
E.A
N.A
L.A.
E.A
N.A
Position @
t0+ d+T/2 sec
L.C. initial position
d
T/2
T/2
L.A.
E.A.
N.A.
Position @ t0+ 2d +T sec
L.C. second position
d
(d)
E.A. 
d
Position @ t0+
d+T sec
L.A.
T/2
T
Jam set T
seconds later
LC sec. Pos.
T/2
T
L.A.
E.A.
N.A.
L.C. third position
d
N.T.
L.C. initial position
 
 
Figure 6.9-6 (a – f) Time diagram for matched filter acquisition time calculations. 
 
 
After 2d + (3/2)T seconds after t0, the nominal arrival code will be aligned, as shown in Figure 
6.9-6(e). At this point in time the nominal code could again be detected, since the received and local codes 
are aligned in time. At 2d + 2T seconds after t0, the third local code segment is jam-set to be ready for the 
earliest arrival time for the third acquisition try. Figure 6.9–6(f) illustrates the situation when the next attempt 
can be made for the nominal arrival code time, which occurs at 3(d + T)–T/2 seconds after t0. Based on 
the previous discussion, the possible acquisition times of the nominal time arriving signal segment is given 
by 
 
 
 
(6.9-16) 
 
( )
(
)
/ 2
acq
d
T
n
n
T
T






 424                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
for n =1,2,…,. It is clear that the earliest arriving code signal burst would be detected T/2 seconds earlier, 
and the latest arriving code burst would be detected T/2 seconds later than the nominal arrival time 
segment. 
This procedure continues in this manner until detection is declared. It is to be noted that both time 
and frequency (via the FFT) are searched with each d second dwell time, at each detection attempt.  
After one or more “hits” (signal plus noise exceeds the threshold), the hits must be verified as either 
false alarms or a true signal detection. In order to verify the hits, it is assumed that there are Nv code-tracking 
loops and associated lock detectors available for verification of up to Nv hits. If none of the Nv verification 
circuits detect a true acquisition, then the local code is jam-set to the next code segment, and the correlator 
waits to correlate with the next received code segment. This procedure is continued until a successful true 
lock is obtained from the verification circuits. It is implicitly assumed that the verification circuit is perfect in 
the sense that it always detects the true signal and always rejects a false alarm.  
 
 
6.9.6 Signal Model for DPMF  
 
In this section the losses due to frequency and time errors (Doppler, clock error, and so on) and the variance 
of the noise over the initial coherent correlation time for the NRZ signal will be obtained. The calculations 
are very similar to Section 6.5.1. The correlation time for this correlation is Ti0 seconds. The received BPSK 
SS signal into the acquisition circuit is modeled as  
 
 
0
( )
2
( )
(
)cos(
)
( )
y t
Ad t PN t
T
t
n t






 
(6.9-17) 
 
where P is the received signal power in watts, d(t) is the data sequence that has NRZ symbols and bit rate of 
Rb, PN(t) is the spreading sequence with a chip rate of Rc cps,  is the carrier frequency in radians/sec,  is 
the unknown carrier phase in radians, T is unknown delay from the transmitter to the receiver, and n(t) 
represents the bandpass noise process that can be represented in inphase and quadrature baseband noise 
components. The noise will be modeled as a bandpass Gaussian noise process with a symmetric power 
spectral density. The noise term can be represented in terms of the inphase and quadrature components by17  
 
 
0
ˆ
ˆ
( )
2
( )cos(
)
2
( )sin(
c
c
n t
n t
t
n t
t
0
ˆ
ˆ
)








 
(6.9-18) 
 
The cosine and sine reference signals are assumed to be of the form 
 
 
0
ˆ
ˆ
( )
2 cos(
)    ( )
2 sin(
)
c
s
r t
t
r t
t
0
ˆ
ˆ








 
(6.9-19) 
 
where 
 are the receiver’s estimated received signal angular frequency, carrier phase, and 
estimated code time delay from the transmitter to the receiver, respectively. Following the analysis in Section 
6.5.1 it is shown in Problem 12 that the inphase Ti0 second correlation can be modeled as  
0
ˆ
ˆ
ˆ , , and T


 
     
 
0
0
0 (
1)
1
ˆ
ˆ
( )
( )
(
)
(
)cos(
)
( )
(
)
i
i
kT
c
i
k
T
k
Pd t PN t
T PN t
T
t
n t PN t
T
dt
T














I

ys
 
(6.9-20) 
 
with the assumption that the correlation starts at t = 0 (k = 1). It is to be noted that the signal component of 
I(k) is dependent on the difference of the actual and estimated dela
ˆT
 T 
. L
ˆT

 be the timing 
error between the received code and the local matched filter c
et
ode. 
                                                          
 
T

The signal component of 
 is denoted by 
 and can be shown to be equal to 
( )
k
I
( )
s k
I
 
17 Note that we have assumed that the phase of the reference is aligned with the noise process to simplify the noise analysis. 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          425 
 
 




0
0
( )
( )
( )sinc
cos
S
PN
i
k
d k
PR
fT
k
Ti
k






I

 
(6.9-21) 
 
where 
k is the phase that results from the k-th integration including a constant phase term that is 
unimportant in this analysis, 
( )
PN
R
is the autocorrelation function of the spreading code, and 
sinc(
sin(
) /(
)
)
x
x
x



. 
Note that 
denotes the data value in the k-th Ti0 second integration time, which will be within a 
bit when synchronized. The term 
 is equal to 1 or –1 during the k-th bit time.  
( )
d k
( )
d k
In the same manner the Q channel signal component can be described by  
 
 




0
0
( )
( )
( )sinc
sin
/ 2
S
PN
i
i
k
d k
PR
fT
T
k





Q


 
(6.9-22) 
 
Thus the correlation loss out of the first coherent combining matched filter output, when considering both the 
I and Q channels, is given by  
 
 
2
2
0
2
0
sin(
)
( )
(
)
i
PN
i
fT
L
R
fT












 
(6.9-23) 
 
Filtering has been neglected in this expression but will be accounted for later.  
In order to keep the carrier frequency error losses small, the maximum allowable coherent 
integration time must satisfy the outer bin frequency loss (carrier frequency error) equation  
 
 
2
0
2
0
sin(
)
10log
   dB
(
)
i
outerbin
i
fT
L
fT











 
(6.9-24) 
 
which is the same for the I and Q channels and is maximum when f = fm. In order to limit the power loss to 
0.91 dB, for example, it is necessary to limit the coherent correlation time to 
 
 
0
1
4
i
m
T
f


 
(6.9-25) 
 
If we denote the integrated noise terms on the I channel and the Q channel by 
 and 
 
then the I and Q channel outputs from the averaging integrate-and-dump filters (Ti0 correlators) is given by  
( )
N k
I
( )
N k
Q
 
 
( )
( )
( )
S
N
k
k
k


I
I
I
 
(6.9-26) 
 
and 
 
 
( )
 
( )
( )
S
N
k
k
k


Q
Q
Q
 
(6.9-27) 
 
where 
 
 
0
0
0 (
1)
1
ˆ
( )
( )
(
)
i
i
kT
N
c
i
k
T
k
n t PN t
T



I
T dt

 
(6.9-28) 
 
and  
 

 426                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
0
0
0 (
1)
1
ˆ
( )
( )
(
)
i
i
kT
N
s
i
k
T
k
n t PN t
T




Q
T dt

 
(6.9-29) 
 
 
6.9.7 Noise Variance Equation for a Gaussian Random Process Model of a Jammer 
 
In this section the variance of a Gaussian noise matched spectral jammer (MSJ) will be determined. Consider 
now the evaluation of the noise terms in (6.9-28) and (6.9-29). Since IN(k) is zero mean valued, the variance 
is given by  
 
 
0
0
0
0
2
0 (
1)
(
1)
1
Var(
( ))
(
)
(
)
i
i
c
i
i
kT
kT
N
n
PN
i
k
T
k
T
k
R
t
u R
t
T






I
u dtdu

 
(6.9-30) 
 
where the statistical independence of the noise and code processes has been assumed. Making a change of 
variables and using a result from Papoulis [20], it can be shown that 
 
 
0
0
0
2
0
1
Var( ( ))
( )
( )
i
c
i
T
N
n
PN
i
i
T
k
R
R
T
T
d












I
 
(6.9-31) 
 
Making the assumption that Ti0 is much larger than the chip time, Tc, it follows that 
 
 
0
1
Var(
( ))
( )
( )
c
N
n
PN
i
k
R
R
T
d







I
 
(6.9-32) 
 
Now (6.9-32) can be written in terms of the respective power spectral densities via Parseval’s equality in the 
form  
 
 
0
1
Var( ( ))
( )
( )
c
N
n
PN
i
k
S
f S
f
T




I
df  
(6.9-33) 
 
where SPN(f) is the power spectral density of the unit power code, assuming that the chips are randomly 
generated with a +1 or –1, and each value occurs with a probability of 1/2.  
 
It can be shown that the variance out of the FFT summed correlations (Ti sec) is simply modified to 
 
 
1
Var(
( ))
( )
( )
 Var(
( ))
c
N
n
PN
i
k
S
f S
f df
T





I
n k
Q
 
(6.9-34) 
 
where the bold italic Arial font denotes the FFT output terms. In other words the time Ti0 is replaced by Ti.in 
(6.9-34). It is easy to show that Var(
( ))
Var(
( ))
N
N
k
k

I
Q
. 
 
 
6.9.8 Variance Evaluation of an MSJ  
 
Consider now a matched spectral jammer having a received power of J watts that is centered at the carrier 
frequency. A matched spectral jammer (MSJ) is a Gaussian random process that has the power spectral 
density of the signal. The Nyquist baseband filter has an ideal low-pass filter bandwidth equal to twice the 
sample rate (assuming two samples per chip). The variance of the sum of the thermal noise and the matched 
spectral interference has a variance defined in (6.9-34) that can be written as  
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          427 
 
min
min
min
min
2
2
2
2
0
2
4
2
2
2
4
sin(
)
1
( )
( )
2
(
sin(
)
1
      
(
)
( )
( )
2
(
B
c
MSI
BB
NQ
c
i
B
B
c
c
BB
NQ
i
c
B
N
f
)
)
c
T
H
f
H
f
T
df
T
fT
J T
H
f
H
f
df
T
f











fT
T
 
(6.9-35) 
 
where Bmin is the minimum of (B/2, BNQ). It will be assumed that B = 2BNQ in what follows. Thus the variance 
can be written as 
 
 
2
2
0
2
4
sin(
)
sin(
)
1
(
)
2
(
)
2
(
)
NQ
NQ
NQ
NQ
B
B
c
MSI
c
c
i
c
i
c
B
B
N
fT
fT
J
T
df
T
T
fT
T
fT










4
2
c
df

 
(6.9-36) 
 
since the interference power in contained in 
 is J/2 when the total jammer power is J watts. With the 
assumptions that low-pass filter bandwidths is equal to the chip rate, 
( )
cn t
(6.9-36) can be evaluated to 
 
 
2
0
0.903
0.665
( ( ))
(
( ))
2
2
c
MSJ
n
n
i
i
N
JT
Var
k
Var
k
T
T





I
Q
 
(6.9-37) 
 
where 
 
 
1
1
2
4
2
4
1
1
sin(
)
sin(
)
0.903 and  
0.665
(
)
(
)
x
x
dx
dx
x
x










 
(6.9-38) 
 
Clearly other jammer types can be evaluated with the use of the basic expression (6.9-34).  
 
 
6.9.9 Correlation Signal Voltage Loss 
 
It is to be noted that not only the noise but also the correlated signal voltage is reduced when it is passed 
through the bandpass filter. The correlated signal filtering voltage loss, for a complex symmetric baseband 
signal, can be described by [11]  
 
 
1
1
2
4
2
4
1
1
sin(
)
sin(
)
0.903 and  
0.665
(
)
(
)
x
x
dx
dx
x
x










 
(6.9-39) 
 
where HBB(f) is the baseband equivalent filter associated with the bandpass filter. It is to be noted that the 
transfer function itself appears in the expression, and not the magnitude squared, which would specify the 
power passed through the filter. Evaluation of (6.9-39) with the Nyquist filter set equal to the chip rate 
produces the correlation voltage given by 
 
 
1
2
1/ 2
2
1
sin(
)
(
)
0.903
(
)
s
x
L
dx
x






 
(6.9-40) 
 
Since the signal filtering voltage loss is reduced by 0.903, the signal power loss is (0.903)2. This 
signal correlation loss will be accounted for in the total losses. 
Based on the assumption of two samples per chip, it can be shown that adjacent samples are 
correlated. In this paper the correlation will be ignored to simplify the analysis. 

 428                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Now consider the detection of the signal. Since the samples are spaced one-half chip apart, and are 
asynchronous with the received signal, there will be at least two points where the signal can be detected. For 
simplicity it will be assumed that the two sample points adjacent to the signal are spaced 
1/4 of a code 
chip away from the peak of the correlation curve. Each sample will suffer a timing error-induced power loss 
given by approximately (3/4)2 or 2.5 dB, neglecting the antialiasing, transmitter, and receiver filters. In 
reality the relative loss will be less than 2.5 dB due to filtering effects.  

In addition to the time error–induced losses, there will be frequency errors also. It will be shown in 
the next section that frequency errors at the midpoint of any two cells (an error of 1/(2Ti) Hz) out of the 
FFT will produce a loss of 3.92 dB (without zero padding.) When zero padding is employed the losses for the 
adjacent frequency cells will be 0.91 dB. However, there will be two different possible frequencies that the 
signal can be detected in this case with this loss.  
All four possible detection points (for each of the two frequencies, there will be two time points that 
could yield detection) will be considered in the analysis to follow.  
 
 
6.9.10 Combining Coherent Segments of the DMF with the FFT 
 
In this section the FFT will be used to coherently add the coherent segments of the correlations, for an NRZ 
modulated code, when the correct frequency output of the FFT is selected. Figure 6.9-4 illustrates the block 
diagram showing how the Ti0 segments are combined by the FFT to produce a correlation of Ti seconds. The 
FFT output at FFT frequency bin “i” is given by the following NFFT rotated sum, described mathematically 
by 
 
 


1
(2
/
)
0
( )
( )
( )
( )
( ) 
FFT
FFT
N
jki
N
k
Z i
k
j
k e
i
j








I
Q
I
Q i
 
(6.9-41) 
 
where 
1
j 
 and i =0, 1, 2, … NFFT –1. 
The effect of the FFT is to rotate the complex input I-Q signal at each of the NFFT frequency rates so 
that one of these FFT frequencies will approximately align itself properly (be equal and opposite) with the 
frequency of the I-Q pair frequency offset at baseband. In effect the FFT forms parallel additional correlators 
at the NFFT different frequencies. The different frequencies out of the FFT are given by 
 
 
0
i
FFT
i
i
f
N
T

 
(6.9-42) 
 
and have power responses around each FFT frequency given by [50]  
 
 
2
2
0
2
0
sin(
)
1
( )
sin(
)
FFT
i
FFT
i
N
fT
A
f
N
fT



2
 
(6.9-43) 
 
This can be approximated by the sinc2(x) function, in the following way 
 
 




2
2
2
0
2
2
2
0
sin
sin(
)
1
( )
 
sin(
/
)
i
FFT
i
FFT
FFT
i
FFT
i
fT
N
fT
A
f
N
fN
T
N
fT






 
(6.9-44) 
 
for 
 and when
0 
i
FFT
i
T
N
T

0
1/(
)
FFT
i
f
N
T

. The main lobe response of the FFT is seen in Figure 6.9-7.  
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          429 
f
1/Ti0
0
1/(Ti )
f
1/Ti0
0
1/(Ti )
FFT amplitude
response
Frequencies where the response is
down by 3.92 dB
3.92 dB
Ti = Ti0NFFT
(a) Unpadded response
Ti = Ti0NFFT
Peak response
Response is 
down 0.91 dB
(b) Padded response
Peak response
f
1/Ti0
0
1/(Ti )
f
1/Ti0
0
1/(Ti )
FFT amplitude
response
Frequencies where the response is
down by 3.92 dB
Frequencies where the response is
down by 3.92 dB
3.92 dB
Ti = Ti0NFFT
(a) Unpadded response
Ti = Ti0NFFT
Peak response
Response is 
down 0.91 dB
(b) Padded response
Peak response
 
 
Figure 6.9-7 (a, b) Main lobe response of the FFT with and without padding. 
 
 
It can be seen that bin peaks are spaced apart by 1/
Hz, as are the bin crossover points where 
any two adjacent curves are equal in amplitude at the same point and the response is down 3.92 dB for the 
nonzero padded FFT. Hence when the frequency is offset by 1/
 Hz from a peak response, the response 
for either curve is down by sin(/2)2/(/2)2, or 3.92 db. The total frequency range of the NFFT frequency cells 
is 1/Ti0. Based on 
( ) 
iT
(2T )
i
(6.9-25) at equality and the fact that both positive and negative frequency errors must be 
checked, it is clear that the total frequency search range is Fsrch = 1/(2Ti0) =2fm. 
It is also clear that only NFFT/2 of the frequency bins of the nonzero padded FFT are used. In fact, 
the first ¼ and the last ¼ of the frequencies are used, since the first ¼ of the frequencies correspond to the 
positive frequency error range and the last ¼ provides the negative frequencies. In addition to the outer bin 
losses, there is another possible loss that can occur when using the FFT to enhance the coherent integration 
range. This loss stems from the fact that the actual frequency error may not fall at one of the NFFT frequencies 
illustrated in Figure 6.9-7. In reality if the frequency error falls exactly between two FFT response peaks the 
two adjacent correlators will have a chance to detect the signal; however, each output will have a loss of 3.92 
dB, as discussed previously. 
To summarize, then, the coherent correlations are designed so that the outer bin loss does not exceed 
0.91 dB, by obeying (6.9-25). The total coherent correlation time is given by  
 
 
0
FFT
i
i
N
T
T

 
(6.9-45) 
 
The total frequency error induced losses are the sum of 0.91-dB outer bin loss and the loss from 
falling in between the FFT bins. In this work it will be assumed that the signal frequency falls in between two 
FFT cells (when zero padding is not used) as discussed earlier. Also it will be assumed that two of the bins 
containing the signal are down by 3.92 dB.  
The number of frequency cells that are to be searched is (NFFT/2). Typically NFFT is a power of 2, so 
let NFFT = 2
f
n , where nf is an integer. Thus the total coherent integration time is given by (6.9-45). The 
number of frequency cells to be searched when zero padding is not used is given by 
 
 


/ 2
cf
FFT
N
N

 
(6.9-46) 

 430                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
It can be shown that the upper range of the FFT is in fact the negative frequency part of the FFT filter 
bank for detection [50].  
The previous discussion did not consider zero padding the FFT in order to reduce the loss between 
FFT frequency bins. Zero padding will now be considered to see how the results are affected. A zero-padded 
FFT is an FFT that is double the size of the corresponding unpadded FFT. In a zero-padded FFT, the input is 
composed of the signal followed by an equal number of zeros to double the NFFT input length. The result of 
doing this is to provide FFT bins that are one-half as far apart as they would be without zero padding, and 
there are twice as many bins. Thus the number of cells to search, using zero padding, is given by 
 
 
 
(6.9-47) 
zp
cf
FFT
N
N

 
in terms of the nonzero padded FFT size NFFT. The loss between bins with zero padding is 0.91 dB at the 
cross over locations. Comparing to (6.9-46) we see that the number of frequency cells to search is double that 
of the unpadded case, so that  
 
 
2
zp
FFT
FFT
N
N

 
(6.9-48) 
 
One small disadvantage of zero padding is that the number of frequency bins to be checked is 
doubled, however the reduction of about 3 dB in correlation losses normally more than compensates for the 
doubled frequency search.  
In order to simplify the calculation of the signal and the noise variance, it will be assumed that the 
FFT is normalized by the parameter NFFT. Then the FFT-aided correlations can be modeled as NFFT Ti0 second 
integrations that are normalized by NFFTTi0. Zero padding will be assumed in all the calculations to follow.  
 
 
6.9.11 Detection and False Alarm Probability Densities for the NRZ Code Case  
 
The probability density function of the noncoherently summed statistic will now be obtained for the DMF. 
The square of the real part of each FFT output (NFFT samples) Qi is added to the square of the imaginary part 
of each FFT output Ii, and these are summed over the Nnc values as shown in Figure 6.9-5. This final sum is 
compared to the threshold of Th.  
The output measure after Nnc noncoherent combinings is given by 
 
 
 
(6.9-49) 

2
2
1
( , )
( , , )
( , , )
nc
N
k
S i j
i j k
i j k



I
Q

m
 
where i is the index on the time hypotheses, j is the index on the NFFT FFT frequency hypotheses, and k is the 
index on the noncoherent combinings (k = 1, 2, …Nnc), for a total correlation duration of NncTi seconds. The 
two terms 
 and 
 are the real and imaginary components out of the k-th FFT output at the i 
th timing position and the j-th frequency bin.  
( , , )
i j k
I
( , , )
i j k
Q
In order to determine the probability of false alarm, consider first the noise-only case for the Nnc 
sum on the index k of the metric given in (6.9-49).  
This decision variable is then compared to a threshold after the summation. When the signal is not 
located in any of the time-frequency bins (hypotheses) under investigation, one can write the Nnc noncoherent 
sum of the I 2 and Q 2 terms, in the simplifying notational form for any i and any j,  
 
 
 
(6.9-50) 
2
2
1
( )
nc
N
F
m
Y
n


 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          431 
where 
 is a zero mean, Gaussian random variable, which is essentially independent from integration 
to integration, having statistics that are given in 

F
n
m
(6.9-37) for the matched spectral jammer. 
 
In Figure 6.9-5 the division by NFFT at the input to the FFT converts the divisor from Ti0 to Ti 
seconds, and the FFT summation adds NFFT Ti0 seconds to produce Ti. The dependence on i and j has been 
dropped for convenience. The statistics for each i and each j are the same. The index m in (6.9-50) is over 
each noise term, which is twice the number of Nnc summations since both the I and Q noise terms are added. 
When these noise terms are added Nnc times, the metric S is formed. For this case it is assumed that either the 
time or the frequency is not aligned with the signal. 
In Section 6.5.4 it was determined that the normalized random variable
2
/(2
)
Z
Y


 has a false 
alarm probability that is given by  
 
 
2
2
/(2
)
Pr(
/(2
))
( )
h
FA
n
T
P
z
Th
p
z dz






 
(6.9-51) 
 
where the normalized threshold for the MSJ be given by  
 
 
2
2
hT



 
(6.9-52) 
 
The normalized random variable has a false alarm probability density given by  
 
 



1
( )
,   
0
1 !
nc
N
z
n
nc
z
e
p
z
z
N





 
(6.9-53) 
 
From (6.9-51), (6.9-52), and (6.9-53), it follows that the false alarm probability is given by 
 
 
1
0
( )
 
!
nc
N
k
FA
k
P
e
k







 
(6.9-54) 
 
 
Again following Section 6.5.4 the random variable associated with the decision statistic, given in 
(6.9-50), has a noncentrality parameter s2 given by 
 
 




2
2
1
( )
( )
nc
N
S
S
m
s
n
m
n
m

2









I
Q
 
(6.9-55) 
 
with 
( ) and 
( )
S
n
m
n
m
I
QS
 denoting the mean values of the 
 and 
, respectively. 
Clearly, 
is the sum of the signal-squared terms. From 
0
0
( ,
,
)
S i
j m
I
0
0
( ,
,
)
S i
j m
Q
2s
(6.9-54), one has, for s2, 
 
 
2
2
2
2
2
0
0
2
0
sin(
/ 2)
( )
( )sinc (
)
(
/ 2)
i
nc
PN
nc
PN
i
i
T
s
N PR
N PR
fT
T









 
(6.9-56) 
 
which accounts for the timing error loss and the outer bin frequency loss only. 
Let 
 be the total power loss for the signal, which will account for the losses indicated in 
T
L
(6.9-56), 
as well as all other applicable losses. Then  
 
 
T
s
quan
freq
outerbin
time
misc
L
L L
L
L
L
L

 
(6.9-57) 

 432                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
where Ls is the signal correlation filtering loss, including the Nyquist filter and the front-end filter. Lquan is the 
quantization loss that depends on how many bits of quantization are used. Lfreq is the FFT frequency  
loss (–0.91 dB) at the output of the FFT as discussed in Section 6.5.6 for the zero padded FFT when the 
signal falls between bins. Louterbin is the outer-bin loss and described by 
2
0
sinc (
)
m
i
f T

2 ( )
PN
R
 (-0.91 dB), which has 
been determined earlier, and Ltime is the time error loss, which is given by
 and assumed to be –2.5 dB, 
based on an unfiltered correlation curve and a chip error of ¼ chip. Lmisc accounts for any other miscellaneous 
losses not specifically addressed previously. Therefore the noncentrality parameter 
for the NRZ code 
signal, (accounting for all the losses), can be written as  
2s
 
 
2
nc
T
s
N PL

 
(6.9-58) 
 
Again using a result indicated in [21], assuming all the random variables are statistically 
independent and normalizing by Z = Y/(22), one has the following expression for the normalized probability 
density function of the signal plus noise decision metric  
 
 

1
2
1
( )
 
2
nc
nc
N
z
S
N
N
z
p
z
e e I
z















 
(6.9-59) 
 
where the signal-to-noise parameter  (in NncTi seconds) is defined by 
 
 
2
0
2
2
nc
s
N





 
(6.9-60) 
 
The signal-to-noise ratio (SNR) 
0
is the SNR in one bit time in Ti, seconds (Ti = NFFTTi0). 
The SNR out of the FFT for the matched spectral jammer is given by 
 
 
0
0
0.903
0.665
T
nc
MSJ
nc
MSJ
c
i
i
L N
N
N
T
J
PT
P T











 
(6.9-61) 
 
where (6.9-37), (6.9-58), and (6.9-60) have been used in (6.9-61). The ratio J/P is the jammer to signal ratio, 
and the ratio Ti/Tc is the processing gain (PG). 
Again using a result indicated in [21], assuming all the random variables are statistically 
independent and normalizing by Z = Y/(22), one has the following expression for the normalized probability 
density function of the signal plus noise decision metric  
 
 

1
2
1
( )
 
2
nc
nc
N
z
S
N
N
z
p
z
e e I
z















 
(6.9-62) 
 
Now consider the detection probability. The probability of detection is the probability that the 
normalized threshold is exceeded when the signal is present. Thus 
 
 
2
2
/(2
)
Pr(
/(2
))
( )
h
D
h
s n
T
P
z
T
p
z dz







 
(6.9-63) 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          433 
From (6.9-62) it follows that the detection probability is given by  
 
 


1
2
1
 
nc
nc
N
z
D
N
z
2
P
e e I
z dz

















 
(6.9-64) 
 
where  is defined in (6.9-61). This result can be expressed as a generalized Q function [21]. An alternative 
and more computationally useful form, using a power series for an exact expression, is given in Shnidman 
[22]. Starting with  
 
 

0
1
2
0
0
(
, )
 
2
nc
nc
nc
N
N
z
D
N
nc
z

1
0
nc
P
e
e I
N
z d
N


















z  
(6.9-65) 
 
and using form 2 in [22] it can be shown that the detection probability is given by  
 
 
0
1
0
0
0
0
(
)
(
, )
1
( !)
( !)
( !)
nc
nc
nc
nc
N
m N
m
m
N
nc
D
m
m N
k
N
P
e
e
e
m
m
k


























k 
 
(6.9-66) 
 
In addition a Gaussian approximation to the expression for PD can be easily obtained and provides a 
simple approximation to PD that avoids dealing with large summations. It can be shown that with the 
normalization by 2
2
, the mean and variance of Z is given by 
 
 


0
0
(1
)
2
(1
2
nc
nc
nc
nc
E Z
N
N
Var Z
N
N


)










 
(6.9-67) 
 
where 
0
 is defined in (6.9-61) for the MSJ. It follows that the probability of detection is given by 
 
 
0
0
(1
)
(1
2
)
nc
D
nc
N
P
Q
N














 
(6.9-68) 
 
where the Q function is defined by  
 
 
2
2
1
( )
 
2
z
x
Q x
e
du




 
(6.9-69) 
 
Now that the detection and false alarm probabilities have been developed, the derivation of the 
acquisition probability will be presented.  
 
 
6.9.12 The Acquisition Probability 
 
The acquisition probability is the probability that the true signal has been identified and all false alarms have 
been rejected. To evaluate the mean time to obtain code acquisition, one must specify the search space and 
the detection probability as well as the effective false alarm probability. Our model shall be as follows. 
Assume that there are Mct (see (6.9-15)) half-chip cells to be checked for the signal for each frequency bin. In 
addition to the time search, there is also a frequency search, which is given by (6.9-47) for the case of a zero-

 434                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
padded FFT. Therefore the total effective number of time and frequency cells (bins) to be searched, for the 
zero-padded FFT case, is  
 
 
 
(6.9-70) 
2
,   
z
z
c
ct
cf
c
FFT
FFT
M
M N
R
TN
N



2

 
where 
z
c
M  denotes the totality of time and frequency cells to be searched in the zero padded case. In this 
model it is assumed that four cells contain the signal at equal level with the losses indicated in (6.9-57) and 
z
cf
M
 denotes the number of frequency cells to be searched with zero padding. 
It will be further assumed that there are five verification circuits available in parallel to the matched 
filter detector. This assumption is only justifiable when the false alarm is very small, such that the effective 
false alarm probability, given by
c
FA
M P , is very small. The verification circuits are used to determine if the 
“hit” that exceeds the threshold is a real detection or a false alarm. Thus, up to five simultaneous verifications 
can be made at one time. Clearly, more verification circuits would improve the performance negligibly under 
the assumption that the effective false alarm probability is small. The results provided here can be modified 
to include any any number of verification circuits. 
The verification circuits would typically be composed of a code-tracking loop dedicated to that code 
timing and frequency offset and a code lock detector used to verify true lock. Since there are only four 
possible detection points for the signal, there is no mean acquisition time advantage in having more than four 
when the false alarm probability is very small, which it has to be when the dimensionality is large. However, 
in this analysis, Nv = 5 verification circuits will be assumed. 
It will also be assumed that the verifications will require less than T seconds,18 so that they will be 
ready for the next possible verification on the next segment (T seconds later) of code chips to be checked. 
Consider the probability of acquisition, which will be denoted by Pacq, which is the probability that 
at least one signal plus noise correlation exceeds the threshold. Since the verification circuits are assumed to 
be perfect, a hit at a signal location will result in successful acquisition. To evaluate the acquisition 
probability, let a “hit” denote the fact that the threshold has been exceeded either due to noise (false alarm) or 
the signal plus noise. The probability of acquisition is given by 
 
 
 
(6.9-71) 
(of acquisition with 
1 or 2 or 3 or ... hits)
acq
P
Pr
j


 
Since these events of the number of hits will be assumed to be mutually exclusive, one can write 
 
 
 
(6.9-72) 
(acq. with 
1)
(acq. with 
2)
(acq. with 
3)
...
acq
P
Pr
j
Pr
j
Pr
j







 
Let the probability of acquisition with k hits be denoted by Pacq(k). Then it follows that in the case of no-zero 
padding, Pacq(1) is given by  
 
 
'
'
3
4
(1)
(1
)
(1
)
1
0
c
M
c
acq
D
D
FA
M
P
P
P
P




















 
(6.9-73) 
 
where 
 is the number of possible cells that do not have the signal present. It is also assumed that 
four cells have the signal present in our model. The first probability in 
'
4
c
c
M
M


(6.9-73) is the probability that one of 
the possible signals is detected and the second is the probability that no false alarm occurs. 
Consider the case of two hits. In order for acquisition to occur, there must be at least one true hit 
(signal plus noise exceeds the threshold). Hence it follows that 
 
                                                          
18 If this is not true, a multiple of four verification circuits will be needed. 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          435 
 
 
(6.9-74) 
'
'
'
'
1
3
2
2
4
4
(2)
(1
)
(1
)
(1
)
(1
)
1
2
1
0
c
c
M
M
c
c
acq
D
D
FA
FA
D
D
FA
M
M
P
P
P
P
P
P
P
P








































 
where the two products in (6.9-74) reflect the fact that the first terms in each product account for the case of 
one true detection and one false alarm in the former case and two signal detections with no false alarms in the 
second case. It is to be noted that the last combinatorial term in (6.9-74) is equal to one.  
When there are three hits and acquisition occurs, there must be at least one true hit. This can occur 
with one true hit and two false alarms, or two true hits and one false alarm, or three true hits. Therefore one 
can write  
 
 
'
'
'
'
2
3
2
'
1
2
2
3
4
(3)
(1
)
(1
)
1
2
4
           
(1
)
(1
)
2
1
4
           
(1
)(1
)
3
c
c
c
M
c
acq
D
D
FA
FA
M
c
D
D
FA
FA
M
D
D
FA
M
P
P
P
P
P
M
P
P
P
P
P
P
P
















































 
(6.9-75) 
 
Continuing in the same manner Pacq(4) is given by 
 
 
'
'
'
'
3
3
3
'
2
2
2
2
'
1
3
4
4
(4)
(1
)
(1
)
1
3
4
           
(1
)
(1
)
2
2
4
4
           
(1
)
(1
)
(1
3
4
1
c
c
c
M
c
acq
D
D
FA
FA
M
c
D
D
FA
FA
M
c
D
D
FA
FA
D
M
P
P
P
P
P
M
P
P
P
P
M
P
P
P
P
P




































































'
)
c
M
FA
P
 
(6.9-76) 
 
Now consider the fifth term, which can be written as 
 
 
'
'
'
'
4
3
4
'
3
2
2
3
'
'
2
3
2
4
4
(5)
(1
)
(1
)
1
4
4
           
(1
)
(1
)
2
3
4
4
          
(1
)
(1
)
3
4
2
c
c
c
M
c
acq
D
D
FA
FA
M
c
D
D
FA
FA
M
c
c
D
D
FA
FA
D
M
P
P
P
P
P
M
P
P
P
P
M
M
P
P
P
P
P



































































' 1
(1
)
1
           
c
M
FA
FA
P
P
















 
(6.9.77) 
 
Now for the model under study, the false alarm probability is assumed to be small such that 
 
 
'
1
c
FA
M P
 
(6.9-78) 
 
If we keep only terms of order zeroth power and the first power of PFA, we obtain the acquisition probability  
 

 436                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
'
' 1
'
3
2
2
3
(1
)
(1
)
4
4
4
        
(1
)
(1
)
(1
)
1
2
3
c
c
M
M
acq
FA
c
FA
FA
D
D
D
D
D
D
D
P
P
M P
P
4
4
4
P
P
P
P
P
P


































P
4
 
(6.9-79) 
 
This equation can be simplified to the following form 
 
 
'
' 1
'
(1
)
(1
)
1 (1
)
c
c
M
M
acq
FA
c
FA
FA
D
P
P
M P
P
P














 
(6.9-80) 
 
and is our final expression for the acquisition probability under the assumption of large 
'
c
M  and subject to 
the constraint of (6.9-78). It is clear from (6.9-80) when PD approaches one and PFA approaches zero, Pacq 
approaches 1 also.  
 
In the case that zero padding of the form discussed earlier is employed, the acquisition probability 
(6.9-80) is modified in the sense that 
c
M  is replaced with 
 z p
c
M
. Thus 
'
4
c
c
M
M


 when zero padding is not 
used and 
 when zero padding is being used. It is assumed in the analysis presented here that the 
false alarm probability is fixed, independent of how the interference varies. 
 
'
4
z p
c
c
M
M


 
 
6.9.13 Mean Acquisition Time Calculation 
 
The operation of the matched filter was discussed in the first section. It was noted that the possible 
acquisition times for the nominal arrival time of the code segment occurred as indicated in (6.9-16).  
In the calculation for the mean acquisition time, it will be assumed that the true code timing can 
occur anywhere over the T second duration with uniform likelihood, going from +T/2 to –T/2 seconds 
about the receiver time t0. It will be assumed that the initial wait time, from the receiver time t0, is the mean 
wait time of T/2 seconds. 
 
The mean time to acquire will be defined as the mean time to correctly detect the signal for the code 
arriving at nominal time. The mean time to acquire expression is given by an infinite sum of terms. The first 
term is the time to fill (load) the receiver shift register (d seconds) plus the mean time to wait for the nominal 
signal to enter the receiver correlator (T/2 seconds), multiplied by the probability of acquisition on the first 
code burst. The second term can be determined from Figure 6.9-6(d). It is composed of the time it takes on 
the second code burst to wait the mean time for the signal to arrive, plus the time it takes to fill the correlator, 
all multiplied by the probability of not acquiring on the first code burst times the probability of acquiring on 
the second code burst. 
This sequence of contributing terms continues in that manner with the appropriately increased times, 
weighted by the probability of missing the first “(j–1)-th” code bursts, and acquiring the j-th code burst. 
Thus, the mean time to acquire is given by the infinite sum 
 
 






1
/ 2
(1
) 2(
)
/ 2
         
...
(1
)
(
)
/ 2
...
acq
acq
d
acq
acq
d
j
acq
acq
d
T
P
T
T
P
P
T
T
P
P
j
T
T

















 
(6.9-81) 
 
where Pacq is given in (6.9-80). This result, for the mean time to obtain acquisition, can be written more 
succinctly as 
 
 




1
1
1
j
acq
acq
acq
d
j
T
P
P
j
T
T




/ 2









 
(6.9-82) 
Equation (6.9-82) can be written in the following form 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          437 
 






1
1
1
1
1
1
j
j
acq
acq
acq
d
acq
acq
j
j
T
P
P
j
T
P
P
T















(
/ 2)  
(6.9-83) 
 
The following identities can be used to evaluate the expression for the mean acquisition time, when
1
x : 
 
 
1
1
2
1
1
1
1
1
1
j
j
j
j
x
x
jx
x






















 
(6.9-84) 
 
Letting 
1
acq
x
P

 in (6.9-83) and (6.9-84) produces the following results for the mean acquisition time  
 
 




2
1
(
)
2
1 (1
)
1 (1
)
acq
acq
d
acq
acq
acq
T
T
P
T
P
P
P

1








 
(6.9-85) 
 
which simplifies to  
 
 
2
d
acq
acq
T
T
T
P




 
(6.9-86) 
 
Equation (6.9-86) can also be written in the following convenient equivalent form 
 
 
2
2
acq
d
acq
acq
acq
P
T
P
P

T












 
(6.9-87) 
 
It is easy to see from (6.9-87) that when Pacq approaches one, the mean acquisition time approaches  
 
 
/ 2
acq
d
T


T
 
(6.9-88) 
 
which is often assumed for PD almost one and PFA almost zero. Furthermore, when Pacq becomes very small, 
the mean acquisition time approaches  
 
 
d
acq
acq
T
T
P


 
(6.9-89) 
 
In the calculation for the mean acquisition time it will be assumed that the true code timing is 
uniformly distributed during the T second duration. Therefore the mean wait time to have the true 
correlation occur will be T /2 seconds.  
 
Example 5 As an example of the DPMF theory consider the code acquisition of the GPS P(Y) code in which 
T = 2 sec, and F = 3,200 Hz. The P(Y) code can be considered a random code (very long period) that runs 
at 10.23 Mcps. It is assumed that the sample rate is 20.46 Msps. The Nyquist filter (low-pass filter-located 
just before the A/D converters) bandwidths were chosen to be 10.23 MHz. Table 6.9-1 illustrates the signal 
losses for the P(Y) code.  
 
 

 438                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
Table 6.9-1 Summary of P(Y) Signal Losses  
 
Loss Type
Loss in dB
Filtering (includes signal correlation loss)
0.89
Miscellaneous
0.8
Quantization
1.2
Time error
2.5
Outer bin frequency
0.91
Frequency error with zero padding
0.91
Total
7.21
Loss Type
Loss in dB
Filtering (includes signal correlation loss)
0.89
Miscellaneous
0.8
Quantization
1.2
Time error
2.5
Outer bin frequency
0.91
Frequency error with zero padding
0.91
Total
7.21
 
 
 
 
The filtering loss is the signal correlation loss. The quantization loss is based on the work of Chang 
[51]. The time error is based on the assumption of a quarter of a chip timing error or 20×log(3/4) = 
2.5 dB. The outer bin loss was based on setting T =1/(4fm). The final loss was the loss due to frequency 
error when zero padding was used (it would be 3.92 dB without zero padding). The power was assumed to be  
–159.6 dBW. The jammer was assumed to be a spectrally flat Gaussian noise process that had a 24-MHz 
bandwidth, so that the J/S ratio is the ration of the jammer power in 24 MHz, due to a spectrally flat noise 
jammer, to the signal power. 
Figure 6.9-8 illustrates the exact (6.9-66) and the Gaussian approximation (6.9-68) for the mean 
acquisition time for three values of Nnc.  
 
                    
0
5
10
15
20
25
30
35
40
45
50
55
60
0
1
2
3
4
5
6
7
8
9
10
Nnc=1 (approx. and exact)
Nnc=30
G: Gaussian approx
S: Exact via a series
Nnc=10
J/S (dB)
Tacq1G
Tacq1S
Tacq10S
Tacq10G
Tacq30G
Tacq30S
G
S
0
5
10
15
20
25
30
35
40
45
50
55
60
0
1
2
3
4
5
6
7
8
9
10
Nnc=1 (approx. and exact)
Nnc=30
G: Gaussian approx
S: Exact via a series
Nnc=10
J/S (dB)
Tacq1G
Tacq1S
Tacq10S
Tacq10G
Tacq30G
Tacq30S
G
S
0
5
10
15
20
25
30
35
40
45
50
55
60
0
1
2
3
4
5
6
7
8
9
10
Nnc=1 (approx. and exact)
Nnc=30
G: Gaussian approx
S: Exact via a series
Nnc=10
J/S (dB)
Tacq1G
Tacq1S
Tacq10S
Tacq10G
Tacq30G
Tacq30S
G
S
 
 
Figure 6.9-8 Comparison of the Gaussian and the exact values of mean acquisition time versus the J/S ratio for the GPS P(Y) code. 
 
It is clear that the Gaussian approximation is very good for Nnc values of 10 or greater (both lines lay 
on top of each other), in fact it is not that bad for Nnc = 1. All acquisition time calculations are based on the 
series representation for PD for Nnc8, and the Gaussian approximation for Nnc > 8. In Figure 6.9-9 the mean 
time to code acquisition results are illustrated for many cases of Nnc.  
 
 
 
 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          439 
Jammer to Signal Ratio (dB)
Mean Acquisition Time (sec)
0
5
10
15
20
25
30
35
40
45
50
55
60
0
1
2
3
4
5
6
7
8
9
10
Tacq1 JSdB
(
)
Tacq2 JSdB
(
)
Tacq4 JSdB
(
)
Tacq8 JSdB
(
)
Tacq16 JSdB
(
)
Tacq32 JSdB
(
)
Tacq64 JSdB
(
)
Tacq128 JSdB
(
)
JSdB
Nnc=1
Nnc=2
Nnc=4
Nnc=8
Nnc=16
Nnc=64
Nnc=32
Nnc=128
S= -159.6 dBW
Mean acquisition time (s)
J/S (dB)
Jammer to Signal Ratio (dB)
Mean Acquisition Time (sec)
0
5
10
15
20
25
30
35
40
45
50
55
60
0
1
2
3
4
5
6
7
8
9
10
Tacq1 JSdB
(
)
Tacq2 JSdB
(
)
Tacq4 JSdB
(
)
Tacq8 JSdB
(
)
Tacq16 JSdB
(
)
Tacq32 JSdB
(
)
Tacq64 JSdB
(
)
Tacq128 JSdB
(
)
JSdB
Nnc=1
Nnc=2
Nnc=4
Nnc=8
Nnc=16
Nnc=64
Nnc=32
Nnc=128
S= -159.6 dBW
Mean acquisition time (s)
Mean Acquisition Time (sec)
0
5
10
15
20
25
30
35
40
45
50
55
60
0
1
2
3
4
5
6
7
8
9
10
Tacq1 JSdB
(
)
Tacq2 JSdB
(
)
Tacq4 JSdB
(
)
Tacq8 JSdB
(
)
Tacq16 JSdB
(
)
Tacq32 JSdB
(
)
Tacq64 JSdB
(
)
Tacq128 JSdB
(
)
JSdB
Nnc=1
Nnc=2
Nnc=4
Nnc=8
Nnc=16
Nnc=64
Nnc=32
Nnc=128
S= -159.6 dBW
Mean acquisition time (s)
J/S (dB)
 
 
Figure 6.9-9 Comparison of the mean acquisition time performance with a matched spectral jammer.  
 
 
Note that as the number of noncoherent combinings increases, the point where the mean acquisition 
time rapidly increases also increases. However the mean time to acquire is higher at low J/S ratios due to the 
fact that when the Pacq is near 1, the mean acquisition time is approximately d +T/2, and increasing Nnc 
increases d. Consider the case for Nnc = 128 and denote the mean acquisition time at T. At low J/S ratios we 
have
/ 2
d
T
T



. Consider the case that Nnc = 128 then
(0.02)(128) 1
3.56
d


 seconds, as is seen in 
Figure 6.9-9 for Nnc = 128. More details can be found in [52]. 
 
 
6.10 SERIAL ACTIVE SEARCH FOR ACQUISITION OF FH/MFSK SIGNALS 
Equation Chapter 6 Section 10 
In this section the acquisition of fast frequency-hopped signals and slow frequency-hopped signals will be 
considered via an active serial acquisition approach. MFSK modulation changes the carrier frequency to one 
of M tones, so that there are M possible frequencies around the carrier frequency. For fast frequency hopping 
(FFH) the M-ary frequency is the same over the hop duration, and there are “N” hops per modulation symbol. 
For slow frequency hopping (SFH) it will be assumed that there will be one MFSK tone over the hop 
duration.  
 
 
6.10.1 Serial Active Search for Acquisition of FFH/MFSK Signals 
 
Figure 6.10-1 illustrates the acquisition model for the acquisition of FFH/MFSK signals. Figure 6.10-1(a) 
illustrates the overall system for acquisition and Figure 6.10-1(b) illustrates the demodulator that is used for 
fast frequency or slow frequency hopping with the appropriate modifications. Each MFSK frequency is 
correlated over the N hops and the maximum is selected. If more SNR is needed for acquisition then multiple 
MFSK symbols can be combined over, say, NS MFSK symbols.  
 
 
 
 
 
 
 

 440                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
IF BPF
(B)
N.C. DEMOD
fIF+fs1
1
(.)
N
i
Select
maximum
each
NTh
seconds
(Ts=NTh)
N.C. DEMOD
fIF+fs2
N.C. DEMOD
fIF+fsM
Freq. synthesizer
PN gen.
Clock
Threshold
comparison
1
(.)
S
N
n
Update clock
No
Yes
y’(t)
x(t)
z(t)
1
(.)
N
i
1
(.)
N
i
IF BPF
(B)
N.C. DEMOD
fIF+fs1
1
(.)
N
i
Select
maximum
each
NTh
seconds
(Ts=NTh)
N.C. DEMOD
fIF+fs2
N.C. DEMOD
fIF+fsM
Freq. synthesizer
PN gen.
Clock
Threshold
comparison
1
(.)
S
N
n
Update clock
No
Yes
y’(t)
x(t)
z(t)
1
(.)
N
i
1
(.)
N
i
 
 
Figure 6.10-1 (a) FFH/MFSK model for fast FH acquisition. 
 
 
 
Since it is assumed that there are N frequency hops per MFSK tone modulation for fast frequency 
hopping, then a symbol period has duration Ts = NTh. For fast frequency hopping each MFSK symbol 
frequency is the same over each frequency hop; however, the phase will not be the same due to the action of 
the hopping and dehopping synthesizers. It will be assumed in the following analysis that the phases are 
random after each hop. 
 

2
.
Hybrid


2cos
IF
s1
t
t





2sin
IF
s1
t
t




0
1
(.)
h
T
h
dt
T 
0
1
(.)
h
T
h
dt
T 

2
.
+
Noncoherent Demodulator Model
I(t)
Q(t)
u(t)
I
Q

2
.
Hybrid


2cos
IF
s1
t
t





2sin
IF
s1
t
t




0
1
(.)
h
T
h
dt
T 
0
1
(.)
h
T
h
dt
T 

2
.
2
.
+
Noncoherent Demodulator Model
I(t)
Q(t)
u(t)
I
Q
 
 
Figure 6.10-1 (b) FH/MFSK noncoherent demodulator model for fast FH acquisition.  
 
 
Figure 6.10-1(b) also applies to slow frequency hopping when the hop period Th is changed at the 
symbol period Ts in the figure. 
Figure 6.10-2 illustrates the timing assumptions and the relationship of the frequency hops for 
FFH/MFSK and the MFSK symbols. It will also be assumed that when the receiver dehopping synthesizer is 
offset by  seconds from the received hopping waveform (when  is less than Th ) that the previous and the 
following hop frequencies are sufficiently different from the current hop frequency and that no energy is 
detected in the detectors of Figure 6.10-1. With this assumption the “detectable portion” of the signal will be 
of duration (Th- ). It may be necessary to accumulate noncoherently NS symbols to enhance the signal-to-
noise ratio.  
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          441 
fsk
fsp
fsq
f1
f2
f3
f4
f5
f6
f7
f8
f9
f10
f11
f12
f1+fsk
+f
MFSK sequence
Transmitted hop
sequence
Received FFH/MFSK
frequency sequence
f2+fsk
+f
f3+fsk
+f
f4+fsk
+f
f5+fsp
+f
f6+fsp
+f
f7+fsp
+f
f8+fsp
+f
f9+fsq
f
f10+fsq
f
f11+fsq
f
f12+fsq
f
f1-fIF
f2 -fIF
f3 -fIF
f4 -fIF
f5 -fIF
f6 -fIF
f7 -fIF
f8 -fIF
f9 -fIF
f10 -fIF
f11 -fIF f12 -fIF

Mixer difference
frequency
fIF+f
+fsk
fIF+f
+fsk
fIF+f
+fsk
fIF+f
+fsk
fIF+f
+fsp
fIF+f
+fsp
fIF+f
+fsp
fIF+f
+fsp
fIF+f
+fsq
fIF+f
+fsq
fIF+f
+fsq
fIF+f
+fsq
Receiver frequency
synthesizer
Signal present
sequence
Gray area denotes where
the signal is present 
fsk
fsp
fsq
fsk
fsp
fsq
f1
f2
f3
f4
f5
f6
f7
f8
f9
f10
f11
f12
f1+fsk
+f
f1+fsk
+f
MFSK sequence
Transmitted hop
sequence
Received FFH/MFSK
frequency sequence
f2+fsk
+f
f3+fsk
+f
f4+fsk
+f
f5+fsp
+f
f6+fsp
+f
f7+fsp
+f
f8+fsp
+f
f9+fsq
f
f10+fsq
f
f11+fsq
f
f12+fsq
f
f1-fIF
f2 -fIF
f3 -fIF
f4 -fIF
f5 -fIF
f6 -fIF
f7 -fIF
f8 -fIF
f9 -fIF
f10 -fIF
f11 -fIF f12 -fIF

Mixer difference
frequency
fIF+f
+fsk
fIF+f
+fsk
fIF+f
+fsk
fIF+f
+fsk
fIF+f
+fsp
fIF+f
+fsp
fIF+f
+fsp
fIF+f
+fsp
fIF+f
+fsq
fIF+f
+fsq
fIF+f
+fsq
fIF+f
+fsq
fIF+f
+fsk
fIF+f
+fsk
fIF+f
+fsk
fIF+f
+fsk
fIF+f
+fsp
fIF+f
+fsp
fIF+f
+fsp
fIF+f
+fsp
fIF+f
+fsq
fIF+f
+fsq
fIF+f
+fsq
fIF+f
+fsq
Receiver frequency
synthesizer
Signal present
sequence
Gray area denotes where
the signal is present 
Gray area denotes where
the signal is present 
 
 
Figure 6.10-2 Timing and frequency diagram for the FFH/MFSK received and local signals. 
 
 
 
Let the transmitted signal defined over one symbol time be given by  
 
 
1
( )
2
(
)cos (
)
N
T
h
i
sj
i
y t
P
p t
iT
t
i













 
(6.10-1) 
 
where PT is the received signal power, Th is the fast frequency-hopping duration, and i and sj are the FH 
angular frequency and the MFSK modulation angular frequencies, respectively, both expressed in 
radians/second. Also the index i is on time whereas the index j is on the signals in the modulation signal set. 
Note that 
2
i
if



 and
2
sj
sjf



. The phase 
i is a phase value for the i-th transmitted frequency-hopped 
signal and is expressed in radians. The pulse function p(t) is defined by 
 
 
( )
1       0
     
0      elsewhere
h
p t
t
T



 
(6.10-2) 
 
The received signal, assuming that it is only modified by the Doppler shift f, and neglecting the time delay, 
is given by 
 
 
1
'( )
2
(
)cos (
)
        
2
( )cos(
)
2
( )sin(
)
n
h
i
sj
i
c
i
s
i
y t
P
p t
iT
t
n t
t
n t
t
i



















 
(6.10-3) 
 
where  = 2f, and the last term, n(t), is the receiver noise and is assumed to be white Gaussian noise. The 
dehopping signal is of the form 
 
 

1
( )
2
(
)cos (
)(
)
n
h
k
IF
k
x t
p t
kT
t

r













 
(6.10-4) 
 

 442                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
and is delayed by  seconds (
hT

) relative to the received hopping signal. It is assumed that the error is 
not as large as the hop duration. When the error is larger than the hop duration it is assumed that no signal 
correlation will occur. The difference frequency term out of the mixer is given by  
 
 




1
1
1
( )
(
) (
)cos
(2
)
       
(
)
( )cos(
)
( )sin(
)
n
h
h
sj
IF
ir
k
n
h
c
IF
IF
r
s
IF
IF
r
i
z t
P
p t
kT p t
kT
t
O
p t
iT
n t
t
n t
t





































 
(6.10-5) 
 
where
(
ir
i
r
i
IF )










, since the double sum collapses to a single sum when the error is less than 
one hop duration, and O(x) denotes terms of order of x. Figure 6.10-2 illustrates the timing and frequency 
diagram for the FFH/MFSK signal acquisition system. The top row illustrates the data frequency, which in 
this example is operating at 1/4 the frequency-hopping rate. The second row illustrates the transmitted 
frequency-hopping sequence. The third row illustrates the received FFH/MFSK signal. The fourth row 
illustrates the local receiver frequency synthesizer frequency and time error. The mixer frequency and time 
delay are shown in row five. The last row indicates by gray areas where the received signal and the receiver 
frequency synthesizer overlap in time, and therefore the difference signal is present in the receiver.  
Consider the signal term out of the noncoherent demodulator. Figure 6.10-1(b) illustrates the 
noncoherent demodulator for FFH or SFH demodulation. The upper term after the multiplication I(t) is given 
by  
 
 


1
1
( )
(
) (
)cos (
)
        +
(
)
( )cos(
)
( )sin(
)
n
h
h
sj
sl
ir
k
n
h
c
sl
IF
r
s
sl
IF
r
k
I t
P
p t
kT
p t
kT
t
p t
kT
n t
t
n t
t


































 
(6.10-6) 
 
and the sum frequencies have been neglected, since they will be filtered out in the correlation process. In a 
similar manner the quadrature term is given by 
 
 


1
1
( )
(
) (
)sin (
)
        
(
)
( )sin(
)
( )cos(
)
n
h
h
sj
sl
ir
i
n
h
c
sl
IF
r
s
sl
IF
r
i
Q t
P
p t
kT
p t
kT
t
p t
kT
n t
t
n t
t



































 
(6.10-7) 
 
and again the sum frequency terms have been neglected. The second terms in both (6.10-6) and (6.10-7) can 
be simplified as follows. The summation multiplying the noise terms forms a constant, so that the white 
Gaussian noise terms are scaled by1/
2 . Therefore I(t) and Q(t) can be written as equivalent to 
 
 
1
( )
(
) (
)cos (
)
( )
n
h
h
sj
sl
ir
I
k
I t
P
p t
kT
p t
kT
t
n t


















 
(6.10-8) 
 
 
1
( )
(
) (
)sin (
)
( )
n
h
h
sj
sl
ir
Q
i
Q t
P
p t
kT
p t
kT
t
n
t


















 
(6.10-9) 
where both 
 and 
 are white Gaussian statistically independent random processes. Let the I and Q 
correlator outputs be denoted by 
( )
In t
( )
Q
n
t
 
 
S
N
I
I
I


 
(6.10-10) 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          443 
and  
 
 
S
Q
Q
QN


 
(6.10-11) 
 
Hence the two noise terms out of the correlators are given by  
 
 
0
1
( )
h
T
N
I
h
I
n t
T


dt  
(6.10.12) 
 
 
0
1
( )
h
T
N
Q
h
Q
n
t
T


dt  
(6.10-13) 
 
It is easy to show that the variance of each noise term is given by 
 
 
2
0
(
)
(
)
2
N
N
h
N
Var I
Var Q
T




 
(6.10-14) 
 
It follows that the output of the signal component out of the demodulator is given by the sum of the 
squares of the inphase and quadrature components, so that  
 
                 








2
2
2
2
2
2
0
0
sin
(
)
1
1
( )
( )
h
h
T
T
sj
sl
h
S
S
h
h
sj
sl
h
P
f
f
f
T
I
Q
I t dt
Q t dt
T
T
f
f
f
T






























 
(6.10-15) 
 
The correlation of the FH signal (the ambiguity function) for a frequency error f and a time error of 
 seconds is given by [52] and is the same as 
2
S
S
I
Q

2  when P = 1 and fsj = fsl.  
 
 


sin
(
(
, )
    
                   
0                        otherwise
h
h
h
f T
R
f
T
fT












 
(6.10-16) 
 
Note that when the transmitter modulation frequency is the same as the receiver symbol frequency then  
fsj = fsl so that 
2
S
S
I
Q

2 becomes 
 
 








2
2
2
2
sin
(
)
h
S
S
h
P
f
T
I
Q
f T








 
(6.10-17) 
 
Consider the case when the frequency error times hop duration product is small compared to unity and the 
time error is small compared to one hop time. We assume that the noncoherent FSK modulation is selected 
such that each nearest tone is separated by 1/Th Hz to ensure orthogonality. Thus from (6.10-15) when signal 
fsl is being detected by the demodulator for fsj one has for the signal component 
 
 












2
2
2
2
2
2
sin
sin
( /
)(
)
0
( /
)
sj
sl
h
h
h
S
S
h
h
sj
sl
h
P
f
f
T
P
k T
T
I
Q
k T T
f
f
T










 
(6.10-18) 

 444                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
since the frequency separation is given by k/(Th) for k = 1, 2,… Thus only the desired signal will output a 
nonzero response when the time and frequency errors are small. With this assumption consider the 
probability distribution for each noncoherent detector.  
 
 
6.10.2 Detection and False Alarm Probabilities for FFH/MFSK Serial Active Search 
 
First consider the case when the signal is not present. Consider the variable Y where  
 
 


2
2
2
1
1
N
i
i
i
i
Y
I
Q
X





2
N
i


 
(6.10-19) 
 
where Ii and Qi are I and Q components for the i-th hop, in one modulation tone period, and Xi represents 
either Ii or Qi. The probability density function of Y is given by [21] 
 
 
2
1
/2
2
1
( )
, 
0
2
(
)
N
y
Y
N
N
p
y
y
e
y
N







 
(6.10-20) 
 
Consider the change of variable  
 
 
2
/(2
)
Z
Y


 
(6.10-21) 
 
Hence noting that the Jacobian of the transformation is given by
2
2, the new probability density function is 
given by 
 
1
( )
 
(
1)!
N
z
N
z
e
p
z
N




 
(6.10-22) 
 
which has the distribution function 
 
 
0
( )
( )
x
n
N
F x
p
z

dz  
(6.10-23) 
 
 
Now consider the case when the signal is present. From Proakis [21] the probability density function 
of the signal present case is given by 
 
 
2
2
(
1)/ 2
2
1
2
2
2
1
( )
2
s
y
N
Y
y
p
y
e
I
y
s

N
s


























 
(6.10-24) 
 
where s2 is given by 
 
 




2
2
2
2
1
sin
(
N
h
s
s
i
h
f T
s
I
Q
NP
fT

















 
(6.10-25) 
 
Let Z = Y/(22) so that 
 


(
1)/2
1
( )
2
,    
0
N
z
S N
N
z
p
z
e e I
z
z















 
(6.10-26) 
where  is given by 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          445 
 
2
2
2
0
sin(
(
))
(
(
))
2
h
h
h
f T
PNT L
f T
s
N


















 
 
(6.10-27) 
 
where L was added to the signal term as a signal power loss and accounts for the miscellaneous losses due to 
filtering, quantization, and so on. When the timing is more than a hop in error, the signal is absent and a false 
alarm occurs when one of the M noise-only correlator outputs exceeds the threshold. Let zi denote the i-th 
normalized correlator output. The probability of not having a false alarm is given by 
 
 
1
2
1
2
1
(
, 
,...
)
(
) (
)... (
)
FA
M
M
P
P z
z
z
P z
P z
P z















 
(6.10-28) 
 
From (6.5-63) it follows that  
 
 
1
0
1
1
!
M
k
N
FA
k
P
e
k














 
(6.10-29) 
 
Note that when M = 1 it agrees with (6.5-63). The probability of detection occurs when the correlator with 
the signal exceeds the threshold and all other (noise-only) correlator outputs. Accounting for the assumption 
that all the correlator variables are statistically independent, one has  
 
 
2
1
3
1
1 
1
(
, 
,..., 
and z > )  
D
M
P
P z
z
z
z
z
z





 
(6.10-30) 
 
This can be written as 
 
 
1
2
1
1
(
)
( )
M
D
n
s
1
P
P z
z
p z dz






 
(6.10-31) 
 
where the distribution function of the noise is given by 
 
 
1
1
1
2
1
0
(
)
1
!
k
N
z
N
k
z
P
z
z
e
k






 
(6.10-32) 
 
and the density function of the signal is given by (6.10-26) and (6.10-27). Thus the detection probability is 
given by  
 
 


1
1
1
(
1)/ 2
1
1
1
1
1
0
1
!
M
N
k
N
z
z
D
k
z
z
1
2
N
P
e
e e
I
k





























z
dz  
(6.10-33) 
 
This expression is difficult to evaluate but it can be upper bounded by the following expression 
 
 


1
(
1)/2
1
1
1
2
N
z
D
N
z
P
e e
I
















1
z dz  
(6.10-34) 
 
The probability of detection can also be lower bounded by the following expression 
 

 446                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 


1
1
(
1)/ 2
1
1
1
1
0
1
!
M
N
k
N
z
D
k
z
1
2
N
P
e
e e
I
k































z dz  
(6.10-35) 
 
From (6.5-68) it is possible to write the upper bound of the detection probability (6.10-34) in terms of an 
expression that is readily computable in the form  
 
 
0
1
0
0
0
(
)
1
( !)
( !)
( !)
k
m
m
N
m N
N
D
m
m N
k
N
P
e
e
e
m
m
k

























 
(6.10-36) 
 
where  
 
 
2
0
0
sin(
(
))
(
(
))
/
h
h
h
f T
PT L
f T
N
N

















 
(6.10-37) 
 
The upper bound for the detection probability (6.10-35) can be expressed as 
 
 
0
1
1
1
0
0
0
0
(
)
1
1
!
( !)
( !)
(
M
k
k
m
m
N
N
m N
N
D
k
m
m N
k
N
P
e
e
e
e
k
m
m







































!)
k

 
(6.10-38) 
 
Figure 6.10-3 illustrates the detection and false alarm probabilities for FFH/MFSK with 8-ary modulation  
(M = 8) for N hops per MFSK symbol running from 1 to 16 for the case in which PFA was set equal to 10-6. In 
the curves it was assumed that 
0.25 Th

 and
0.2
h
fT


. Actually both the upper and lower bounds for 
PD are illustrated; however, the upper and lower bounds are indistinguishable numerically so only one curve 
is visible for each value of N. The reason this is true is the fact that the probability that a nonsignal correlator 
output will exceed the threshold is very small (10–6). If the false alarm probability were selected to be larger 
than the curves for the upper and lower bounds, the detection probability would diverge when plotted. 
 
N=16
N=8
N=4
N=2
N=1
0
1
2
3
4
5
6
7
8
9
10 11 12 13 14 15 16 17 18 19 20
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
SNR parameter (dB)
Probability of Detection
Probability of detection
N=16
N=8
N=4
N=2
N=1
0
1
2
3
4
5
6
7
8
9
10 11 12 13 14 15 16 17 18 19 20
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
SNR parameter (dB)
Probability of Detection
Probability of detection
 
 
Figure 6.10-3 Probability of detection and false alarm for the FFH/8FSK acquisition system. 
 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          447 
Note that to achieve a detection probability of 0.9 with N = 1 requires a value of 0 (6.10-37) or 
about 13.5 dB. Whereas with N = 16, only a value of 0 of about 4 dB is needed. It should be noted that since 
the hops have a fixed SNR, the more hops, the higher the SNR per MFSK symbol, and thus the lower per hop 
SNR is needed, as is expected. 
 
 
6.10.3 Detection and False Alarm Probabilities for SFH/MFSK Serial Active Search 
 
Now consider the slow frequency-hopping case in which there are more than one MFSK symbol per FH tone. 
In the case of slow frequency-hopped code acquisition with MFSK modulation, a selection of the maximum 
correlator output is obtained per modulation symbol and those maximums are summed. Figure 6.10-4 
illustrates the SFH/MFSK acquisition model. The received signal is multiplied by the local time estimate of 
the hopping frequency and heterodyned down to an IF frequency. The signal is fed into the M noncoherent 
demodulators. The largest of the correlator outputs is summed over each MFSK symbol time (sum of N 
correlator outputs), which is compared to a threshold. If additional SNR is needed it is possible to sum Nh 
values of the N sum of the largest correlator values. The calculations in this section will not account for Nh; in 
other words, it will be assumed that Nh = 1. The timing and frequency diagram is illustrated in Figure 6.10-5. 
 
IF BPF
(B)
N.C. Demod
fIF+fs1
1
(.)
N
i
Select
maximum
each
NTh
seconds
(Ts=NTh)
N.C. Demod
fIF+fs2
N.C. Demod
fIF+fsM
Freq. synthesizer
PN gen.
Clock
Threshold
comparison
1
(.)
S
N
n
Update clock
No
Yes
y’(t)
x(t)
z(t)
1
(.)
N
i
1
(.)
N
i
IF BPF
(B)
N.C. Demod
fIF+fs1
1
(.)
N
i
Select
maximum
each
NTh
seconds
(Ts=NTh)
N.C. Demod
fIF+fs2
N.C. Demod
fIF+fsM
Freq. synthesizer
PN gen.
Clock
Threshold
comparison
1
(.)
S
N
n
Update clock
No
Yes
y’(t)
x(t)
z(t)
1
(.)
N
i
1
(.)
N
i
 
 
Figure 6.10-4 SHF/MFSK model for slow FH acquisition. 
 
 
PFA=10-6
PFA=10-5
0
50
100
150
200
250
300
350
400
450
500
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
PFA=10-4
PFA=10-3
PFA=10-2
PFA=10-1
s =0 dB
PFA=10-6
PFA=10-5
0
50
100
150
200
250
300
350
400
450
500
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
PFA=10-4
PFA=10-3
PFA=10-2
PFA=10-1
s =0 dB
 
 
Figure 6.10-5 SFH/MFSK timing and frequency diagram for SFH/MFSK acquisition. 
 
 

 448                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
Basically we have the same model as in FFH/MFSK except the symbols operate at a higher rate than 
the hop rate. In order to the compute the probability of a false alarm or the detection probability, it is 
necessary to determine the probability that the sum of N maximums of M variates exceeds a threshold. When 
the signal is not present all the variates have the same distribution function; in the case when the signal is 
present M–1 variates are due to noise, and one is due to signal plus noise. Based on Lindgren [53] the 
distribution function of the maximum of M variates is given by  
 
 
1
max( )
(
( ))
( )
M
N
S
N
F
x
F
x
F
x



 
(6.10-39) 
 
where 
( )
N
F
x  is the distribution function of the noise variates 
( )
S
N
F
x

 and is the distribution function of the 
signal plus noise. It follows that the density function of the corresponding to this distribution function is 
given by 
 
 


1
max( )
( )
( )
M
S
N
N
d
p
x
F
x
F
x
dx






 
(6.10-40) 
 
or 
 
 






1
2
max( )
( )
( )
1
( )
( )
( )
M
S N
N
S N
N
N
p
x
p
x
F
x
M
F
x p
x
F
x
M







 
(6.10-41) 
 
When the signal is not present 
( )
( )
S N
N
p
x
p
x


 so that the probability density function of the maximum is 
obtained from (6.10-41) as 
 
 


1
max( )
( )
( )
M
N
N
p
x
Mp
x
F
x


 
(6.10-42) 
 
From (6.10-26), (6.10-22), and (6.10-23) one obtains, for the signal present case, the result 
 
 


1
(
)
0
-2
0
( )
2
1
        
(
1)
1
(2
)
   
0
s
M
x
x
S N
s
x
M
(y+
)
-x
-x
s
0
p
x
e
I
x
e
M
e
e
e
I
y dy, x

























 
(6.10-43) 
 
where 
s is the symbol SNR parameter, that is, 
 
 
2
2
2
0
sin(
(
))
(
(
))
2
s
s
s
s
f T
PNT L
f T
s
N

















 
(6.10-44) 
 
When the signal is not present, that is under false alarm conditions, the density function of the maximum of 
M variates is given by (6.10-43) when
0
s
, which yields 
 
 
1
( )
1
,   
0
M
x
x
N
p
x
Me
e
x










 
(6.10-45) 
 
An approximate method of obtaining the probability density function of the sum of M maximum of M 
variates is to approximate the density function with a Gaussian approximation. To do this it is necessary to  
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          449 
obtain the mean and variance of the maximum of M variates. Following Simon [15], the mean, when the 
signal is present, becomes 
 
 
( )
S N
S N
xp
x d






x  
(6.10-46) 
 
or 
 
 
1
2
2
+
2
0
2
( 1)
1
(
1)
    
(
2)(
1)
s
k
k
M
k
S N
s
k
M
M
k
k
k
e

































 
(6.10-47) 
 
When the signal is not present, one can let 
0
s
 to obtain 
 
 
2
2
0
2
( 1)
1 (
1)
    
(
2)(
1)
k
M
N
k
M
M
k
k
k















 
(6.10-48) 
 
The mean squared value of x when the signal is present is given by 
 
 
2
2
(
)
( )
S N
x
x p x dx




 
(6.10-49) 
 
or 
 
 
2
2
2
2
0
2
( 1)
(
)
2
4
2(
1)
     
(
2)(
1)
1
1
1
           
1
exp
2
2
1
2
k
M
s
s
S N
k
s
s
M
x
M
k
k
k
k
k
k
k
k


























































 
(6.10-50) 
 
When the signal is not present, one can let 
0
s
 to obtain 
 
 
2
2
2
0
2
( 1)
1
1
(
)
2
2(
1)
     
(
2)(
1)
2
1
k
M
N
k
M
x
M
k
k
k
k
k





























 
(6.10-51) 
 
 
Thus the in-sync (signal present) and the out-of-sync (signal absent) variances can be written as  
 
 




2
2
2
2
2
2
S
N
S
N
S
N
N
N
N
x
x











 
(6.10-52) 
 
where the values of the second moments and the mean values are given by (6.10-47), (6.10-48), (6.10-50), 
and (6.10-51). 
 
The decision statistic is given by the sum of the N largest variates so that 
 
 
2
1
N
i
i
y


x

 
(6.10-53) 
 

 450                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
which is compared to the normalized threshold to determine if synchronization is detected. We note that 
the mean and variance for the sum of N independent decision random variables has a mean that is N times the 
individual random variable mean and a variance that is N times as large as the single random variable 
variance. The false alarm probability is given by 
 
 





2
2
2
2
1
exp
2
2
n
n
FA
n
y
N
N
P
dy
Q
N
N
N




Q 




























 
(6.10-54) 
 
where  is defined via (6.10-54). The detection probability is given by the following value 
 
 




2
2
2
2
1
exp
2
2
s
D
s
s
s
y
N
N
P
dy
N
N
N




























s
Q


 
(6.10-55) 
 
The false alarm probability can be written as a function of  in the following way 
 
 


2
2
(
(
/
(
/
S
N
N
N
N
S
N
N
D
S N
N
N
S
N
N
N
N
N
P
Q
Q
N



















































 
(6.10-56) 
 
Using (6.10-54) to solve for  produces the final result of the relationship between PD and PFA 
 
 
1
2
(
)
(
/
FA
S
N
N
N
D
S
N
N
N
Q
P
P
Q






























 
(6.10-57) 
 
where  and PFA are linked through (6.10-54). Recall that the Q function is defined by 
 
 
2
2
2
2
1
( )
2
z
x
Q x
e
dz












 
(6.10-58) 
 
Now consider the evaluation of the acquisition time for FFH/MFSK and SFH/MFSK.  
 
 
6.10.4 Acquisition Time Calculations for FFH/MFSK and SFH/MFSK 
 
Both the mean and the variance of the acquisition time will be obtained for SFH/MFSK and FFH/MFSK. 
From Section 6.2.1 one has for the mean time to acquire, for a single active correlator,  
 
'
2
(2
)(
1)(1
)
2
D
FA
D
D
P
q
KP
T
P






 
(6.10-59) 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          451 
where 
'
D
 is given by  
 
 
(6.10-60) 
'
'
for FFH / MFSK
for SFH/ MFSK
D
h
D
s
NT
NT




and K is the number of 
'
D
 seconds that are needed to verify a true detection from a false alarm. The variance 
of the acquisition time is also given in Section 6.2.1 for an active serial search and is given by 
 
2
'
2
2
2
2
1
1
1
(
) (1
)
 
 
12
D
FA
D
D
KP
q
P
P











 
(6.10-61) 
 
 
Now consider an example calculation for the acquisition time results.  
 
Example 6 Consider an example for acquisition of SFH/MFSK. Assume that the time is unknown to 1000 
symbols and 8FSK modulation is used. Let K = 3, and assume that PFA is equal to 10–4, 10–5, 10–6, and 10–7. 
Also let  = 1 (0 dB). Determine the mean acquisition time in this case as a function of the N, the number of 
modulation symbols that are combined per hop. Figure 6.10-6 illustrates the results. It can be seen that for 
each assumed value of the false alarm probability, there is an optimum value of N, which minimizes the 
mean acquisition time. For example for PFA =10–4 the optimum value of N is about 190.  
 
10-4
10-5
10-6
10-7
N
0
100
200
300
400
500
0
100
200
300
400
500
600
700
800
900
1000
Mean acquistion time
10-4
10-5
10-6
10-7
N
0
100
200
300
400
500
0
100
200
300
400
500
600
700
800
900
1000
Mean acquistion time
 
 
Figure 6.10-6 SFH/MFSK mean acquisition time for SFH/MFSK acquisition. 
 
 
6.11 SUMMARY  
In this chapter many types of acquisition schemes have been discussed; these include the single active 
correlator, including adjustments for Doppler, and an active search with parallel processing. System 
structures for BPSK, QPSK, OQPSK, and MSK have been presented. The use of the FFT to enhance the 
frequency search of the active search approach also has been presented. Acquisition time performance for 
BPSK acquisition for the case of the general jammer, the matched spectral jammer, and the narrowband 
jammer was developed. Acquisition performance for balanced QPSK and balanced OQPSK was also 
developed. Along with “exact” expressions for detection probability a Gaussian approximation was 
developed and presented. A discussion of sequential detection and the Tong detector were also presented, as 
well as the use of transform techniques for code acquisition.  
 
Following the active search schemes, passive code acquisition was presented, including the general 
jammer and the matched spectral jammer. The use of the FFT for passive code searches was developed along 

 452                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
with mean acquisition time performance.  
 
The chapter concluded by addressing fast and slow frequency hopped spread spectrum acquisition 
with MFSK modulation. Mean acquisition time performance was developed for both cases. The appendix 
includes an introduction to signal flow graphs and discrete time invariant Markov processes. 
 
 
References 
 
[1] R. B. Ward, “Acquisition of Pseudorandom Signals by Sequential Estimation,” IEEE Trans. on Communication Technology, Vol.  
     Com-13, No. 4, December 1965, pp. 475–483. 
 
[2] R. B. Ward and K. P. Yiu, “Acquisition of Pseudonoise Signals by Recursion Aided Sequential Estimation,” IEEE Trans. on  
      Communication Technology, Vol. COM-25, No. 8, August 1977, pp. 784–794. 
 
[3] C. C. Kilgus, “Pseudonoise Code Acquisition Using Majority Logic Decoding,” IEEE Trans. on Communication Technology, Vol.  
      COM-21, No. 6, June 1973, pp. 772–774. 
 
[4] J. H. Chiu and L. S. Lee, “An Improved Sequential Estimation Scheme for PN Acquisition,” IEEE Trans. on Communications, Vol.  
     36, No. 10, October 1988, pp. 1182–1184. 
 
[5] G. S. Rawlings, G. G. Koller, and M. A. Belkerdid, “Rapid Acquisition of Spread Spectrum Signals Utilizing Integrated  
       Technologies,” RF Expo East Proceedings, Tampa, FL, September 22–24, 1992. 
 
[6] D. Dodds and X. Zhang, “Spread Spectrum Code Phase Acquisition Using a Cyclic Accumulation Matched Filter,” Globe Com 94,  
      San Francisco, CA, October 1994. 
 
[7] J. J. Stiffler, “Rapid Acquisition Sequences,” IEEE Trans. on Information Theory, March 1968, pp. 221–225. 
 
[8] S. Curry, D. Schwartz and J. Collins, “State Transition Assisted DSSS Code Synchronization,” MILCOM 99, Atlantic City, NJ,  
      Unclassified proceeding, October 31–Novovember 3, 1999. 
 
[9] J. K. Holmes and C. C. Chen, “Acquisition Time Performance of PN Spread Spectrum Systems,” IEEE Trans. on Communication  
     Special Issue on Spread Spectrum Communications, Vol. COM-25, August 1977. 
 
[10] J. K. Holmes, “Predicted Mean SSP Acquisition Times with the New Algorithm,” TRW IOC SCTE-50-76-251/JKH, July 21, 1976. 
 
[11] K. Holmes, Coherent Spread Spectrum Systems, New York: Wiley-Interscience, 1982. 
 
[12] D. M. DiCarlo, “Mean Time and Variance for the Two-Step Acquisition System,” TRW IOC 75-7131.67-04, May 29, 1975. 
 
[13] A. Polydoros and C. L. Weber, “A Unified Approach to Serial Search Spread-Spectrum Code Acquisition,” IEEE Trans. on  
       Communication, Vol. COM-32, No. 5, May 1984, pp. 542–560. 
 
[14] A. Polydoros, “Generalized Serial Code Search Acquisition: The Equivalent Circular State Diagram Approach,” Milcom 83,  
        Conference Record, Washington, D.C., October 1983. 
 
[15] M. K. Simon et al., Spread Spectrum Communications, Vol. III, Chapter 1, Rockville, MD: Computer Science Press, 1985. 
 
[16] J. K. Holmes, N. Morgan, and P. A. Dafesh, “A Theoretical Approach to Determining the 95% Probability of TTFF for the P(Y)  
       Code Utilizing Active Code Acquisition,” AIAA-ICSSC Conf., San Diego, CA, June 11–14, 2006. 
 
[17] J. B. Lozow, “Analysis of Direct P(Y) Code Acquisition,” Journal of the Institute of Navigation, Vol. 44, No. 1, Spring 1997. 
 
[18] L. Rabiner and B. Gold, Theory and Application of Digital Signal Processing, Chapter 6, Upper Saddle River, NJ: Prentice-Hall,  
        1975. 
 
[19] A. V. Oppenheim and R.W. Schafer, Discrete-Time Signal Processing, Upper Saddle River, NJ: Prentice-Hall, 1989. 
 
[20] A. Papoulis, Probability, Random Variables and Stochastic Processes, 2nd ed., New York: McGraw-Hill, 1984. 
 
[21] J. Proakis, Digital Communications, Chapter 1, 2nd ed., New York: Mc Graw-Hill, 1989. 
 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          453 
[22] D. A. Shnidman, “The Calculation of the Probability of Detection and the Generalized Marcum Q-Function,” IEEE Trans. on  
        Information Theory, Vol. 35, No. 2, March 1989. 
 
[23] J. K. Holmes, and K. T. Woo, “An Optimum PN Code Search Technique for a Given A Priori Signal Location Density,” Section  
       18.6, NTC 78 Conference Record, Birmingham, AL, December 3–6, 1978.  
 
[24] J. K. Holmes, and K. T. Woo, “An Optimum Asymmetric PN Code Search Strategy,” 1979 International Telemetering Conference,  
       San Diego, CA, November 19–21, 1979, pp. 319–330. 
 
[25] W. Braun, “Performance Analysis for the Expanding Search PN Acquisition Algorithm,” IEEE Trans. on Communications, COM- 
        30, March 1982, pp. 424–435. 
 
[26] A. Weinberg, "Search Strategy Effects on PN Acquisition Performance," NTC'81 Conf. Record, November 29–December 3, 1981,  
       New Orleans, LA, pp. F1.5.1–F1.5.5. 
 
[27] A. Weinberg, “Generalized Analysis For the Evaluation of Search Strategy Effects on PN Acquisition Performance,” IEEE Trans.  
       on Communications, COM-31, January 1983, pp. 37–39. 
 
[28] A. Wald, Sequential Analysis, New York: Wiley, 1947. 
 
[29] J. J. Bussgang and D. Middleton, “Optimum Sequential Detection of Signals and Noise,” IRE Trans., Vol IT-1, December 1955, pp.  
       5–14. 
 
[30] A. Wald, and J. J. Wolfowitz, “Optimum Character of the Sequential Probability Ratio Test,” Ann. Math. Statis., Vol. 19, 1948, p.  
        326. 
 
[31] H. Blasburg, “Experimental Results in Sequential Detection,” IRE Trans., Vol IT-5, No. 2, June 1959, p. 41. 
 
[32] W. B. Kendall, “Performance of the Biased Square-Law Sequential Detector in the Absence of Signal,” IEEE Trans. Information  
       Theory, January 1964. 
 
[33] G. E. Albert, Ann. Math. Statist., Vol. 25, September 1954. 
 
[34] J. Y. DiFranco and W. L. Rubin, Radar Detection, Chapter 16, Englewood Cliffs, NJ: Prentice-Hall, 1968. 
 
[35] J. C. Hancock and P. A. Wintz, Signal Detection Theory, Chapter 4, New York: McGraw-Hill, 1966. 
 
[36] F. Ricker, P. McAdam, and B. Trumpis, “Sequential Acquisition of PN Codes for TDRSS,” paper submitted for publication, circa  
        1970. 
 
[37] P. S. Tong, “A Suboptimum Synchronization Procedure for Pseudo Noise Communication Systems,” National Telemetry  
        Conference, November 26–28, 1973. 
 
[38] H. L. Scott, “Code Search Analysis,” Texas Instruments Inc. Report, prepared for the Charles Stark Draper Lab., Contract no. DL- 
        H-169021, March 28, 1980. 
 
[39] E. Kaplan, (ed.), Understanding GPS Principles and Applications, Norwood, MA: Artech House, 1996. 
 
[40] L. Rabiner and B. Gold, Theory and Application of Digital Signal Processing, Chapter 6, Englewood Cliffs, NJ: Prentice-Hall,  
        1975. 
 
[41] C. Yang, “Fast Code Acquisition with FFT and Its Sampling Schemes,” Proc. of the ION, September 1996. 
 
[42] R. C. Borgiolio, “Fourier Transform Correlation Versus Direct Discrete Time Correlation,” Proc. IEEE, Vol. 56, No. 9, September  
        26, 1968. 
 
[43] R. Davenport, “FFT Processing of Direct Sequence Spreading Codes Using Modern DSP Microprocessors,” Proc. of the 1991 IEEE  
       National Aerospace and Electronics Conf., 1991. 
 
[44] D. Van Nee and A. Coenen, “New Fast GPS Code Acquisition Technique Using FFT,” Electronic Letters, No. 27, January 1991. 
 
[45] M. K. Simon, J. K. Omura, R. A. Scholtz, and B. K. Levitt, Spread Spectrum Communications, Rockville, MD: Computer Science  
        Press, 1985. 
 
[46] P. M. Fishman, and J. Betz, “Predicting Performance of Direct Acquisition for the M-Code Signal,” Proc. ION National Technical  
       Meeting, January 2000. 
 

 454                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
[47] A. Polydoros and C. Weber, “A Unified Approach to Serial Search Spread-Spectrum Code Acquisition-Part II: A Matched-Filter  
        Receiver,” IEEE Trans. on Communications, Vol. COM-32, May 1984, pp. 550–560. 
 
[48] R. Wolfert, S. Chen, S. Kohli, D. Leimer, and J. Lascody, “Direct P(Y)-Code Acquisition Under a Jamming Environment,” Proc. of  
      IEEE PLANS, April 1998. 
 
[49] S. F. Rounds, “A Low-Cost Direct-Y Code Fast Acquisition SAASM,” Proceedings of the ION GPS Conference, 1998, p. 215. 
 
[50] R. A. Roberts and C. T. Mullis, Digital Signal Processing, Chapter 11, Reading, MA: Addison-Wesley, 1987. 
 
[51] H. Chang, “Presampling Filtering, Sampling and Quantization Effects on the Digital Matched Filter Performance,” Proc. of Int. Tel.  
       Conf., 1982. 
 
[52] C. R. Cahn, “Spread Spectrum Applications and State-of-the-Art Equipments,” Lecture No. 5 in the Agard-NATO Lecture Series,  
        January 31, 1973. 
 
[53] B. W. Lindgren, Statistical Theory, New York: Macmillan, 1962.  
 
Selected Bibliography 
F. Amoroso, “Adaptive A/D Converter to Suppress CW Interference in DSPN Spread Spectrum Communications,” IEEE Trans. on  
Communication, Vol. COM-31, No. 10, October 1983. 
 
F. Amoroso, “Performance of the Adaptive A/D Converter in Combined CW and Gaussian Interference,” IEEE Milcom 84, October  
21–24, 1984. 
 
E. O. Brigham, The Fast Fourier Transform and Its Applications, Chapter 10, Englewood Cliffs, NJ: Prentice-Hall, 1988. 
 
P. A. Dafesh and J. K. Holmes, “Practical and Theoretical Tradeoffs of Active Parallel Correlator and Passive Matched Filter  
Acquisition implementations,” U.S. ION Annual Meeting, San Diego, CA, June 26–28, 2000. 
 
P. A. Dafesh and J. K. Holmes, “A Trade Study for the Selection of an Acquisition Signal for GPS Modernization,” TOR  
2000(1590)-1, The Aerospace Corporation, January 2000. 
 
J. K. Holmes, S. Raghavan, and S. Lazar, “Acquisition and Tracking Performance of NRZ and Square Wave Modulated Symbols for  
Use in GPS,” Institute of Navigation 54th Annual Meeting, June 1–3, 1998. 
 
J. K. Holmes and P. A. Dafesh, “Matched Filter Mean Acquisition Time Performance For P(Y), BOC(10,5), and MAN(10) Codes  
 with FFT Aiding and Noncoherent Combining,” ION Conference, Albuquerque, NM, June 1–14, 2001. 
 
L. B. Milstein and P.K. Das, “Spread Spectrum Receiver Using Surface Acoustic Wave Technology,” IEEE Trans. on  
Communications, COM-25, No. 8, August 1977, pp. 841–847. 
 
G. D. O Clock, “Matched Filters Boost Receiver Gain,” Electronic Design, Vol. II, May 24, 1977. 
 
M.W. Thompson and S. Dianat “Non-Coherent Code Acquisition in Direct Spread Spectrum Systems Using a Neural Network,”  
IEEE Milcom 93, Boston, MA, October 11–14, 1993. 
 
D. Torrieri, Principles of Secure Communication Systems, Chapter 4, Dedham, MA: Artech House, 1985. 
 
TRW LSI Products Inc. Data Handbook, Digital output correlator section, 1991. 
 
H. Urkowitz, “Energy Detection of Unknown Deterministic Signals,” Proc. of IEEE, Vol. 55, No. 4, April 1967. 
 
R. Ziemer and R. Peterson, Digital Communications and Spread Spectrum Systems, New York: Macmillan, 1985. 
 
 
 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          455 
Problems 
 
1. Show that for Example 1, described in Section 6.2, if PD  1 and PFA = 0, then 
 
 
 
 
 
            
2
 
 
D
acq
D
D
P
T
N
P



 
 
 
 
    (P6-1) 
 
by summing the appropriate series. Note that the series can be summed in closed form. Notice that 
when PD = 1 the result agrees with (6.2-2). 
 
2.  Derive the expression for the mean and the variance of the acquisition time for the double dwell  
        system as described in the text. Note that this is a problem of very advanced difficulty. 
 
3.  Consider the code correlation curve shown here. Denoting 
( )i
D
P
 as the probability of detection at the  
       i-th point on the correlation curve (i = 1, 2, 3, 4), show that the total probability of detection,  
       including all four points, is given by 
 
 
(1)
(2)
(1)
(3)
(1)
(2)
1
(4)
(1)
(2)
(3)
(1
)
(1
)(1
)
          +
(1
)(1
)(1
)
T
D
D
D
D
D
D
D
D
D
D
D
P
P
P
P
P
P
P
P
P
P
P









 
 
 
 
 
 
 
Tc
-Tc
1
(1)
(2)
(3)
(4)

Tc
-Tc
1
(1)
(2)
(3)
(4)

 
                                                                             Figure for Problem 3. 
 
4.  Show, based on Section 6.5.6, that the minimum response between two FFT filters responses is 
about 3.9 dB down from the maximum response in the nonzero padded case and is down about 0.91 dB 
in the zero padded case. These values of the responses occur at the midpoint frequency between any two 
contiguous filter responses.  
 
5.  Based on Section 6.5.4, note that the false alarm probability, expressed as an integral, is given by 
 
 
 
 
 
 
1
1
(
1)!
nc
N
u
FA
nc
P
u
e d
N







u
 
 
 
     (P6-2) 
 
Show that this can be evaluated to the following finite series form 
 
 
1
0
!
nc
N
k
FA
k
P
e
k







 
(P6-3) 
 
6. Consider Figures 6.2-7 and 6.2-8. Let the received QPSK signal plus thermal noise be modeled as 
 
 
    
1
2
0
( )
(
)cos(
)
(
)sin(
)
2
( )cos(
)
2
( )sin(
) 
o
o
c
s
y t
PPN t
T
t
PPN t
T
t
n t
t
n t
t









0

     (P6-4) 

 456                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
Assume that the carrier references are given by 
0
2 cos(
) and 2 sin(
)
t
0t


. Assume that 
ˆ
T
T

. 
Show that the acquisition system in Figure 6.2-8 is inferior to Figure 6.2-7 by considering the signal 
and noise terms at the input to the noncoherent summer. Observe that the system of Figure 6.2-8 has 
the same signal and has the noise terms of Figure 6.2-7 plus additional noise terms, and is therefore 
uniformly worse.  
 
7.  Show that the signal into the noncoherent summer of the MSK acquisition system of Figure 6.2-10 
is given by
2
2
d
PT . 
 
8.  Starting with Section 6.5.5 and letting the signal to noise ratio 0 be zero, show that the false alarm 
probability is given by P
Q( )
FA


, where
nc
nc
N
N




. Then show that using the definition of PFA 
in terms of Q() that PD is given by 
0
0
1
2
nc
D
N
P
Q 











 for the case of BPSK SS modulation, 
when using the Gaussian approximations. 
 
9.  Referring to Section 6.6, show that the total probability of acquisition is given by  
 
 
 
 
 
1
(
)(1
)
N
N k
N
D
k
D
k
Q
P
P L
P





 
 
 
 
      (P6-5) 
 
for the problem under consideration. 
 
10. Determine the number of sweeps through the code uncertainty region that must occur to obtain the  
       probability of acquisition of P. Note that the acquisition probability Pacq(N) is given by  
 
 
 
2
1
(
)
(1
)
(1
)
...(1
)N
acq
D
D
D
D
D
D
D
P
N
P
P P
P
P
P
P
P









  
 
       (P6-6) 
 
where N is an integer. Further note that when N is not an integer, with the assumption that the a 
priori probability density function is uniformly distributed, the probability of acquisition increases 
linearly (between integers) so that 
 
 
 
 
 
ˆ(
1)
(
1)
ˆ
ˆ
(
)
(
1)
P
P K
N
K
P K
P K

















  
 
 
       (P6-7) 
with  
 
 
 
ˆ
min[
( )
]
K
m
P m
P



  k =1, 2, 3, 4,... 
 
 
 
       (P6-8) 
 
Also show that for N > 1 that  
 
 
 
 
 
ln(1
)
ln(1
)
D
P
N
P



 
 
 
 
 
       (P6-9)
 
 
11. Assume that an NRZ baseband SS process is ideally filtered to Rc Hz. Show that the samples taken 
at twice the chip rate (2Rc) for this case are statistically independent if the noise is modeled as flat 
white Gaussian noise with two-sided spectral density of N0/2. Hint: Consider the autocorrelation 
function and show that it is zero when the time variable is any multiple of 1/(2Rc). Conclude 
therefore that samples taken at twice the chip rate are statistically independent. 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          457 
 
12. Consider the digital matched filters of Figures 6.9-4 and 6.9-5. Compute the variance of a 
narrowband Gaussian jammer plus thermal noise over the correlator coherent correlation time, Ti. 
Extend the results of Section 6.9.8. It is to be assumed that the jammer is narrow compared to the 
chip rate. Let the bandwidth of the narrowband interferer be BJ. If the spectral density is J0 over the 
bandwidth BJ then it follows that J = J0BJ. Since the interferer noise is expressed in the form 
(6.9-18) each baseband component has only J/2 watts received. Show that the thermal plus jammer 
noise variance for both the real and imaginary components out of the FFT is given by 
 
 
 
 
 
2
0
0.903 2
2
c
NBI
i
i
N
JT
T
T



 
 
 
 
 
    (P6-10) 
 
where Ti is the coherent correlation time, Tc is the chip duration, N0 is the one-sided noise spectral 
density, J is the received jammer power in watts, and the Nyquist filters have ideal bandwidth of the 
chip rate. 
 
13. Starting with the two I and Q signals  
 
 
( )
(
) ( )cos(
'
)
( )
c
I t
PPN t
T d t
t
n







t  
(P6-11) 
 
 
( )
(
) ( )sin(
'
)
( )
s
Q t
PPN t
T d t
t
n t







 
(P6-12) 
 
where the sum terms has been neglected since they will be filtered out by the low-pass filters 
following the multipliers in Figure 6.9-4, and neglecting the effect of the analog-to-digital (A/D) 
converter, show that the inphase Ti0 second correlation can be modeled as  
 
 
0
0
0 (
1)
1
ˆ
ˆ
( )
( )
(
)
(
)cos(
)
( )
(
)
i
i
kT
c
i
k
T
k
Pd t PN t
T PN t
T
t
n t PN t
T
dt
T














I

 
(P6-13) 
 
with the assumption that the correlation starts at t = 0 (k =1). It is to be noted that the signal 
component of I(k) is dependent on the difference of the actual and estimated delays 
. Let 
 be the timing error between the received code and the local matched filter code, and show 
that  
ˆ
T
T

ˆ
T
T


 




0
0
( )
( )
( )sinc
cos
s
PN
i
i
k
k
d k
PR
fT
k
T






I

 
(P6-14) 
  
where k is the phase that results from the k-th integration including a constant phase term that is 
unimportant in this analysis, 
( )
PN
R
is the autocorrelation function of the spreading code, and 
sinc(x) = sin(x)/(x).  
In the same manner show that the Q channel signal component can be described by  
 




0
0
( )
( )
( )sinc
sin
/ 2
s
PN
i
i
k
k
d k
PR
fT
T





Q


 
(P6-15) 
  
Thus the correlation loss out of the first coherent combining matched filter output, when considering 
both the I and Q channels, is given by  
 
 
 
 
 
2
2
0
2
0
sin(
)
( )
(
)
i
PN
i
fT
L
R
fT












 
 
 
 
   (P6-16) 
 

 458                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
14. Consider the DMF. Starting with (6.9-59) and letting z = yNnc/(22) show that (6.9-69) results for 
the detection probability where   = Nnc0. 
 
 
APPENDIX 6A 
 
SIGNAL FLOW GRAPHS AND DISCRETE TIME INVARIANT MARKOV PROCESSES 
 
In this appendix an introduction to signal flow graphs and their application to discrete time invariant Markov 
processes will be given. First signal flow graphs will be presented and then an introduction to discrete time 
invariant Markov processes will be discussed along with its relationship to flow graphs. 
 
 
6A1.0 SIGNAL FLOW GRAPHS 
 
A signal flow graph is a topological representation of the simultaneous equations describing a system 
function. Signal flow graphs were developed by Mason [6A1, 6A2] based on some preliminary work of 
Tustin [6A3]. Once a system is represented by a flow graph it becomes a relatively simple matter to 
determine the closed-loop transfer function. One natural application of flow graphs is to control theory. 
However many other applications exist also, as long as a transfer function is defined in the application. The 
material that follows is based on [6A1–6A7]. 
 
 
Denote variables by nodes (small dots) and consider the following equation: 
 
 
 
 
 
 
j
i
ij
x
T x

 
 
 
 
 
(6A1.0-1) 
 
where the variables xi and xj can be functions of a variable such as time or states, for example, in a state 
diagram. The nodes are connected by directed branches that represent the operator Tjj mapping xi into xj. 
These operators are called transmission functions (or branch transmittances). Figure 6A1.0-1 illustrates this 
equation. 
 
Tji
xj
xi
g
g
Tji
xj
xi
g
g 
 
Figure 6A1.0-1 A simple signal flow graph with one branch. 
 
 
Branches are always unidirectional, with the direction of the flow denoted by the arrowhead. Every 
variable in a flow graph is represented by a node and every transmission function by a branch. The value of 
the variable represented by a node is equal to the sum of all the signals entering the node. Let  
 
 
 
 
 
 
1
n
i
j
i
i
j
x
T x


 
 
 
 
 
(6A1.0-2) 
 
Consider the representation given by Figure 6A1.0-2. 
As an example consider the two equations 
 
5    
2
y
x
w
y


  
 
 
 
(6A1.0-3) 
 
The associated flow graph is shown in Figure 6A1.0-3. 
 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          459 
T1i
T2i
T3i
Tni
.
.
.
xi
x1
x2
x3
xn
g
g
g
g
g
T1i
T2i
T3i
Tni
.
.
.
xi
x1
x2
x3
xn
g
g
g
g
g
 
 
Figure 6A1.0-2 Pictorial representation of addition. 
 
 
y
x
w
5
2
g
g
g
y
x
w
5
2
g
g
g
 
 
Figure 6A1.0-3 Signal flow graph for y = 5x and w = 2x. 
 
 
 
A series connection on n–1 branches and n nodes can be replaced by a single branch with a new 
transmission function equal to the product of the old original transmission functions. The proof is obvious. 
 
 
6A1.1 SIGNAL FLOW GRAPH DEFINITIONS 
 
Nodes and branches have already been defined as well as some elementary operations. Now we consider 
some definitions useful in signal flow graph theory and signal flow graph reduction. 
 
An open path is a continuous, unidirectional succession of branches along which no node is passed 
more than once. In Figure 6A1.1-1 traversing from node x2 to node x3 and back to node x2 is an example of an 
open path. Also x1 to x2 to x4 to x5 is another example, and in addition so is x1 to x2 to x3 to x4 to x5. An input 
node (or source node) is a node with only outgoing branches. In Figure 6A1.1-1 x1 is the only input node. An 
output node is a node with only incoming branches. x5 is the only output node in Figure 6A1.1-1. 
 
x1
x2
x3
x4
x5
T12
T23
T32
T33
T24
T45
T34
g
g
g
g
g
x1
x2
x3
x4
x5
T12
T23
T32
T33
T24
T45
T34
g
g
g
g
g
 
 
Figure 6A1.1-1 A signal flow graph with an open path, an input node and an output node. 
 
 

 460                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Sometimes a variable in the system is actually the output variable. For example, in the classical 
feedback system the output is also the variable that is fed back to the feedback transfer function. In the flow 
graph for this example the output node would have an outgoing branch contrary to the definition of an output 
node. This dilemma can be solved by adding a branch with a unit transmission function entering a dummy 
node. 
 
A feedback loop (or feedback path) is a path that starts and terminates on the very same node. In 
Figure 6A1.1-4 the path from x2 to x3 and back to x2 is a feedback path. 
 
A forward path is an open path from the input node to the output node. In our example shown in 
Figure 6A1.1-4 x1 to x2 to x3 to x4 to x5 and x1 to x2 to x4 to x5 are the two forward paths of Figure 6A1.1-1. 
 
The gain of a branch is the transmission function of that branch when the transmission function is a 
multiplicative operator. 
 
The loop gain is the product of the branch gains of the loop. Again referring to Figure 6A1.1-1, we 
mention that the loop gain of the feedback from x2 to x3 and back to x2 is T23 T32. 
 
The path gain is the product of the branch gains found in traversing a path. In Figure 6A1.1-1 the 
path gain of the forward path from x1 to x2 to x3 to x4 to x5 is T12T23T34T45. 
 
A self-loop is a feedback loop composed of a single branch. For example, in Figure 6A1.1-1 T33 is a 
self-loop. 
One more definition is included in Section 6A1.3. 
 
 
6A1.2 FLOW GRAPHS FROM BLOCK DIAGRAMS 
 
Given a block diagram, a flow graph can easily be constructed by observing the following rule: Construct 
every variable of the block diagram as a node and each block diagram as a branch. For example, consider the 
basic control loop diagram shown in Figure 6A1.2-1. Notice that since the output variable C ' was constructed 
using the branch gain of 1, C ' is a proper output node, since it only has inputs and no outputs. More general 
block diagrams or systems of equations can be handled in this manner.  
 
-
G
H
C
CH
R
+
-
1
G
1
- H
C
R
=
G
1+GH
R
e
C
C’
Note: clearly C=C’
e
-
G
H
C
CH
R
+
-
1
G
1
- H
C
R
=
G
1+GH
R
e
C
C’
Note: clearly C=C’
e
 
Figure 6A1.2-1 Block diagram and the associated signal flow diagram. 
 
 
6A1.3 SIGNAL FLOW GRAPH REDUCTION AND MASON’S GAIN FORMULA 
 
In the study of flow graphs it is desirable to reduce the original signal flow graph to two nodes and one 
branch—in particular, to the input and output nodes and the overall gain. There are two ways to achieve this 
goal. First, one can use reduction methods; second, one can use Mason’s gain formula. Although reduction 
techniques will not be described in detail here, Table 6A1.3-1 illustrates some equivalents that are useful in 
flow graph reduction. 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          461 
Table 6A1.3-1 Some Equivalent Flow Graphs 
 
x1
x2
x3
T12
T23
T12T23
x1
x2
T12a
T12b
T12a + T12b
x1
x2
x1
x2
x3
x1
T15
x5
T52
T35
T54
T15T52
T35 T52
T35 T54
T15 T54
x2
x3
x4
T12
T23
T32
x1
x2
x3
x1
x3
T12 T23
T23 T32
x1
x2
x3
T23
T32
x1
x2
12
23
1
T
T

x3
T12 T23
T23 T32
x1
x2
T23 T32
1
x1
x4
T23
T32
1
x1
x3
(a)
(b)
(c)
(d)
(e)
(f)
(g)
(h)
T12
T32
x1
x2
x3
T12
T23
T12T23
x1
x2
T12a
T12b
T12a + T12b
x1
x2
x1
x2
x3
x4x4
x1
T15
x5
T52
T35
T54
T15T52
T35 T52
T35 T54
T15 T54
x2
x3
x4
T12
T23
T32
x1
x2
x3
x1
x3
T12 T23
T23 T32
x1
x2
x3
T23
T32
x1
x2
12
23
1
T
T

12
23
1
T
T

x3
x1x1 T12 T23
T23 T32
x1
x2
T23 T32
1
x1
x4
T23
T32
1
23
23
1
T
T

T32
23
23
1
T
T

23
23
1
T
T

12
T
x2
x3
x1
x2
x3
T12
T23
T12T23
x1
x2
T12a
T12b
T12a + T12b
x1
x2
x1
x2
x3
x1
T15
x5
T52
T35
T54
T15T52
T35 T52
T35 T54
T15 T54
x2
x3
x4
T12
T23
T32
x1
x2
x3
x1
x3
T12 T23
T23 T32
x1
x2
x3
T23
T32
x1
x2
12
23
1
T
T

12
23
1
T
T

x3
T12 T23
T23 T32
x1
x2
T23 T32
1
x1
x4
T23
T32
1
x1
x3
(a)
(b)
(c)
(d)
(e)
(f)
(g)
(h)
T12
T32
x1
x2
x3
T12
T23
T12T23
x1
x2
T12a
T12b
T12a + T12b
x1
x2
x1
x2
x3
x4x4x4x4
x1
T15
x5
T52
T35
T54
T15T52
T35 T52
T35 T54
T15 T54
x2
x3
x4
T12
T23
T32
x1
x2
x3
x1
x3
T12 T23
T23 T32
x1
x2
x3
T23
T32
x1
x2
12
23
1
T
T

12
23
1
T
T

x3
x1x1x1x1 T12 T23
T23 T32
x1
x2
T23 T32
1
x1
x4
T23
T32
1
23
23
1
T
T

T32
23
23
1
T
T

23
23
1
T
T

23
23
1
T
T

23
23
1
T
T

T32
23
23
1
T
T

23
23
1
T
T

12
T
x2x2
x3x3
 
 
An example of a nontouching loop is a set of loops that have no nodes in common. For an example, see 
Figure 6A1.3-1. 
 
In Table 6A1.3-1, part (a), for example, we have  
 
 
 
 
 
 
2
12
1
3
23
2
12
x
T x
1
x
T x
T x



  
 
 
 
(6A1.3-1) 
 
For the parallel paths of Table 6A1.3-1 part (b), we have  
 
 
 
 
 
 
x
T
T
x
a
b
 
 
(
)
 
 
 
 
 
(6A1.3-2) 
 
In part (c) of the table, node x5 is eliminated by the following equations: 
 
 
 
 
 
 
  
 
 
 
(6A1.3-3) 
x
T x
x
T x
x
T x
T x
 
  
 
 
  
 
 
 
 
 
 
 
Eliminating the x5 variable lead to the relationships: 
 
 
 
    
                     
  
 
 
 
(6A1.3-4) 
x
T T x
T T x
x
T T x
T T x
 
  
  
 
  
  
 
 
 
 
 
 
 
 
which is shown as the equivalent in the table, part (c). This is an example of node elimination. The 
equivalence of Table 6A1.3-1, parts (d), (f), and (h), are left as an exercise for the reader. To obtain the 
equivalence of (g), write from (e) 
 
 
 
 
 
x
T
  
 
 
 
(6A1.3-5) 
x
T x
x
T x
 
  
 
  
 
 
    
 
Now eliminate x3 to get 
 
 
 
 
 
 
x
T x
T T x
 
 
 
 
 
 
 
(6A1.3-6) 
or 

 462                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
 
 
 
x
T
T T
x
 
  
 
 
 
 
 
 
  
 
 
 
(6A1.3-7) 
 
 
The second method of reduction of a signal flow graph is the use of Mason’s gain formula. In many 
cases it is possible and much less time consuming to write down the input-output relationship by a few 
simple rules applied directly to the flow graph. 
 
If we denote the transfer function from input to output by TF, then Mason’s gain formula states that 
 
 
 
 
 
 
TF
Ti
i
i
g
  
 
 
 
 
 
 
 
(6A1.3-8) 
 
where 
 
Ti is the i-th forward path gain. 
 
g is the signal flow graph determinate, given by 
 
 
 
(6A1.3-9) 
 
g
i
i
i
i
i
i
T
T
T
....
 
 
is the sum of all feedback loop gains. 
Ti
i
 
 
 
is the sum of all gain products of two nontouching feedback loops. Nontouching loops have 
neither branch nor node in common. In general  
Ti
i
 
 
 
is the sum of all gain products of n nontouching feedback loops. 
Ti
n
i 
 
i is g evaluated with all feedback loops touching the i-th forward path 
 
eliminated (or delete all branches of the i-th forward path). 
 
Although the formula appears formidable, it is actually quite simple to use. Consider the example 
shown in Figure 6A1.3-1. There is only one path from input to output, hence  
 
 
 
 
 
 
T
T T T T
 
 
 
   
 
 
      (6A1.3-10) 
 
There are three feedback loops: 
 
 
 
 
 
 
 
 
      (6A1.3-11) 
x
x
x
T
T T
x
x
x
T
T T
x
x
x
T
T T
 
 
 
  
  
 
 
 
 
 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
       
      
      
1
1
 
Hence 
. 
3
1
23 32
34
43
45 5
1
i
i
T
T T
T T
T T





4
 
.
.
.
.
T12
T23
T34
T45
x1.
x2
x3
x4
x5
T54
T32
T43
.
.
.
.
T12
T23
T34
T45
x1.
x2
x3
x4
x5
T54
T32
T43
 
 
Figure 6A1.3-1 Signal flow graph example. 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          463 
 
There are two nontouching feedback loops: 
 
 
 
 
 
2
3
2        
4
5
4
x
x
x
x
x
x




 
 
 
        (6A1.3-12) 
 
since all three feedback loops touch the path from input to output. Therefore it follows that 
 and
. Now the signal flow graph determinate is given from  
(6A1.3-9) by 
1
2
23 32
45
54
1
i
i
T
T T T T



2
3
0 and 
0
T
T


 
 
 
 
 
g
T T
T T
T T
T T T T
 
 
 
  
  
  
  
  
  
  
  
  
  
 (
)
 
 
         (6A1.3-13) 
 
Therefore, since 1 = 1, one obtains the result for the formula for the transfer function 
 
 
 
 
TF
T T T T
T T
T T
T T
T T T T
 
 
 
 
 
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
          (6A1.3-14) 
 
 
6A2.0 DISCRETE TIME INVARIANT MARKOV PROCESSES AND FLOW GRAPHS 
 
Although discrete Markov processes have been characterized by many techniques such as differential 
equations or matrix equations, it will be convenient in this section to describe them by state transition 
diagrams. From these diagrams, what we shall call generating function flow graphs will be established and 
will lead to the generating function of the process [6A5–6A7] under consideration. This section is based 
primarily on [6A5–6A7]. 
 
Markov processes with a finite (or countable) number of states and time invariant transition 
probabilities can be described with the aid of a state transition diagram. The state transition diagram is 
characterized by states indicated by dots that are connected by directed lines that indicate the probability of 
going from the originating dot to the terminating dot. 
 
Consider as an example a two-state time invariant discrete Markov process that is characterized by 
two states: 
 
 
 
 
2
1
1
1
1
2
2
2
in state 1:
(
)
3/8
               (
)
5/8
in state 2:
(
)
1/ 2
               (
)
1/ 2
p S S
p S S
p S S
p S S




 
 
 
 
(6A2.0-1) 
 
where S2 denotes state 2 and S1 denotes state 1. The state transition diagram is shown in Figure 6A2.0-1.  
 
S1
S2
1/2
3/8
1/2
5/8
S1
S2
1/2
3/8
1/2
5/8
 
 
Figure 6A2.0-1 State transition diagram for the example. 

 464                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Suppose that at time t = n the process is in state 1; then at time t = n+1 the process will be in state 1 
with probability 5/8 and in state 2 with probability 3/8. A similar relationship holds if we start at state 2, 
except the probabilities are 1/2 and 1/2. 
 
It is to be noted that we may write down the difference equations that relate the probabilities of 
being in each state. Let p1(n) and p2(n) be the probabilities of being in states 1 and 2, respectively, at t = n. 
Then one time unit later the probabilities are 
 
 
 
 
 
p n
p n
p n
p n
p n
p n
 
 
 
 
 
 
 
 
 
 
(
)
( )
( )
(
)
( )
( )
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
(6A2.0-2) 
 
 
Since the process is determined by a set of linear, constant coefficient, difference equations, one 
wonders whether a linear system technique such as flow graphs could be used to obtain the desired 
probabilities. The answer is yes, as we shall see shortly, and they are used to great advantage. 
 
It is convenient to view the probabilities p1(n) and p2(n) as electrical signals and note that the 
difference equation shows that these signals are devised as linear combinations of themselves after a unit 
time delay. Hence we can associate with Figure 6A2.0-1 an associated linear system flow graph shown in 
Figure 6A2.0-2. 
 
3z
8
5z
8
z
2
z
2
S1
S2
3z
8
3z
8
5z
8
z
2
z
2
S1
S2
5z
8
5z
8
z
2
z
2
z
2
z
2
S1
S2
 
Figure 6A2.0-2 Associated linear system (generating function) flow graph 6A2.0-1. 
 
 
The signal at each node is the probability p1(n) and p2(n), respectively. The presence of the z 
variable on the branches, with the transition probability gains, denote the delay of one unit time in going 
from one node to the next. The reason this diagram leads to the generating function will be demonstrated 
shortly. Define 
 as the (time invariant) probability of going from state i to state j in n units of time; this 
is the n-step transition probability. For convenience usually 
 is written as
. 
( )
ij
p
n
(1)
ijp
ij
p
 
As is usual with linear systems, operations in the transform domain are most convenient. We 
introduce the z transform, also called the generating function, or the geometric transform, of the discrete 
probability function 
 as 
( )
ij
p n
 
0
( )
( )
n
ij
ij
n
P z
z p



n  
(6A2.0-3) 
 
This series converges for all values of z inside the unit circle. Note that  
 
 
0
(1)
( )
ij
ij
ij
n
dP
np
n
T
dz





 
(6A2.0-4) 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          465 
where 
ij
T  is the mean time to go from state i to state j. It is left to the reader to show that the variance of the 
time to go from state i to state j is given by 
 
 
 
 
 
2
2
2
(1)
(1)
(1)
(
)
ij
ij
ij
ij
d P
dP
dP
Var T
dz
dz
dz








 
 
 
(6A2.0-5) 
 
 
Hence it is seen that 
( )
ijP z  is the generating function of the transition process. In addition to the 
moments, it is possible to find the probability 
 by the following formula: 
( )
ij
p n
 
 
 
 
 
 
p n
n
d P
dz
ij
n
ij
n
( )
!
( )
  
 
 
 
 
(6A2.0-6) 
 
 
Consider now using the generating function flow graph of Figure 6A2.0-2 in the previous example. 
Suppose that we are given that the system is in state 1 at t = 0, and we desire to obtain the probability of 
starting in state 1 at t = 0 and arriving in state 1 at t = n. The approach to the problem in this section is to 
view it as a “system,” with the input composed of a unit sample at t = 0 to node 1 and the output a tap off of 
node 1. We can accomplish our end by determining the transfer function
11( )
P z , which is the z transform of 
the required probability signal. Given 
 it is a simple matter to use (6A2.0-6) to determine the individual 
transition probabilities. 
11( )
P z
 
We note in general that with arbitrary initial values we apply to each node, i, of the system at  
t = 0, samples equal to the prescribed initial values pi(0). Using the superposition property of linear systems, 
such a problem can be solved by adding linear sums of simple node to node responses. Hence if 
( )
ijP z  is the 
transfer function from node i to node j, then the signal at node j, in the general case, is given by the linear 
sum 
 
 
 
 
 
P z
 
 
 
 
 
(6A2.0-7) 
p
P z
j
i
i
ij
( )
( )
( )
 
In our example let p1(0) = 1, p2(0) = 0, and P1(z) = P11(z). Many problems have the characteristic that, say, 
p1(0) = 1 and pi(0) = 0 for i   1. Continuing with the example, we obtain the generating function flow graph 
of Figure 6A2.0-3.  
 
P11(z)
1
5z
8
1
3z
8
z
2
z
2
( )
1 when 
0
      
0 when 
0
n
n
n





( )
n

P11(z)
1
5z
8
5z
8
1
3z
8
z
2
z
2
( )
1 when 
0
      
0 when 
0
n
n
n





( )
n

 
 
Figure 6A2.0-3 Generating function flow graph for the example following Problem 6A.3. 
 
 
Using Mason’s gain formula, we find that  
 
 

 466                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
 
2
2
1
1
g
5
3
5
1    
1
   
1
2
8
2
16
16
z
z
z
z
z
T 





 
 
 
(6A2.0-8) 
 
so that Mason’s gain formula produces the transfer function from state 1 to state 1 
 
 
 
 
 
 
P
z
z
z
z
  
 
 
 
 
 
 
( )  
 
 
 
 
 
 
  
 
 
(6A2.0-9) 
 
Note that P11(0) is 1 as it should be, since the probability of going from state 1 to state 1 at time 0 is one. It is 
to be pointed out that if the Markov process has a finite number of states, then the resulting transfer function 
will be a rational function. 
 
To obtain 
we may (1) differentiate P11(z), (2) use long division to obtain the series, or (3) use 
partial fractions to obtain a separate series. We shall utilize the latter technique in what follows. Factoring 
(6A2.0-9) produces 
( )
ij
p
n
 
 
 
 
 
 
P
z
z
z
z
  
 
 
 
 
( )
(
)(
 
 
 
 
 
 
 )
 
 
 
             (6A2.0-10) 
 
Expanding in partial fractions produces 
 
 
 
 
 
 
P
z
z
z
  ( )
/
/
/
 
 
  
 
             (6A2.0-11) 
 
so that  
 
 
      
2
3
2
3
11
2
3
4
3
( )
(1
...)
(1
...)
7
7
8
8
z
z
z
P
z
z
z
z










8
                       (6A2.0-12) 
 
Hence we see by using (6A2.0-6) that 
 
11
4
3 1
( )
   
0
7
7 8
n
p
n
n









 
(6A2.0-13) 
 
As another example illustrating the techniques, consider a simple random walk problem with absorbing 
boundaries. Suppose a particle has probability of 1/2 of moving to the right or the left. The process ends 
when the particle reaches either boundary located two steps away. One possible problem is to find the 
probability that the process ends in n steps, and another possible problem is to find the mean time to end the 
process. We assume that we start in state 0. The generating function flow graph is shown in Figure 6A2.0-5. 
Since we start at state (node) zero, we apply a unit sample at t = 0 to our “system.” Node 3 corresponds to the 
event the process terminates and hence is our required output point to determine P03(z), the generating 
function for this absorbing random walk problem. 
 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          467 
P03(z)
1
1
z
2
z
2
z
2
S0
z
2
z
2
S1
S2
z
2
S3
S-1
S-2
( )
n

P03(z)
1
1
z
2
z
2
z
2
S0
z
2
z
2
S1
S2
z
2
S3
S-1
S-2
( )
n

 
 
Figure 6A2.0-5 Generating function flow graph for particle absorption.  
 
 
 
Using Mason’s gain formula we find that  
 
 
 
 
 
T
z
z
z
g
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
       
      T
 
          
 
 
1
2
 
 
 
z
  
 
             (6A2.0-14) 
 
so that  
 
 
 
 
 
P
z
z
z
  
 
 
 
 
 
( )  
  
 
 
 
             (6A2.0-15) 
 
writing the denominator as a power series, we have 
 
 
 
 
 
P
z
z
z
z
  
 
 
 
 
 
( )
(
)
(
)
..
 
 
 
 
 
 
 
 . 
 
             (6A2.0-16) 
 
Hence the probability of ending on the n-th toss is given by (using (6A2.0-6)) 
 
 
 
 
 
/ 2
03
                          
           
0
1
( )
2,4,6...
2
otherwise
n
p
n
n








 
 
 
             (6A2.0-17) 
 
Note that p03(n) is the probability of being in the final state, starting at state 0, at time n. Now the mean time 
for the process to terminate is given by  
 
 
 
 
 
T
dP
z
dz
z
z
z
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
( )
(
)
 
 
 
 
 
 
            (6A2.0-18) 
 
 
 

 468                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Therefore the process terminates in 4 steps on average. The standard deviation of the time to terminate the 
process is, from (6A2.0-5) 
 
 
 
 
 
 T
d P
dz
T
T
  
 
  
 
  
  
 
 
 
 
 
 
( )
(
)  
  
 
           (6A2.0-19) 
 
For further examples and applications of the flow graph technique, [6A6-6A8] should be consulted. 
 
 
6A3.0 Mathematical Basis for Generating Function Flow Graph Techniques 
 
We have seen many examples of the generating function flow graph technique for solving time invariant, 
finite state Markov chain problems. Here we present a proof establishing the transition from a state transition 
diagram to a generating function flow graph. This section is based on [6A5]. 
 
Recall that we defined 
( )
ij
p n  as the probability of going from state i to state j in n steps. It is shown 
in any text [6A9] on Markov chains that the following recursion formula 
 
 
 
 
 
 
 
(6A3.0-1) 
1
(
1)
( )
   1
,
,  
0,1,2..
ij
ik
kj
k
p n
p
n p
i j
N
n








.
p
 
is satisfied where N is the number of states. Denote 
 
(1)
k j
k j
p

 for convenience. Multiplying this equation 
by zn and summing over n, produces the result 
 
 
 
 
 
 
 
z P z
p
p P z
ij
ij
kj
k
N
ik
( )
( )
( )
 
  
 
 
 
 
(6A3.0-2) 
 
where 
( )
ijP z  is the generating function and is defined by (6A2.0-6) since pij(0) = ij (it allows the recursion 
relation to hold at n = 0), where 
ij
 is the Kronecker  function and is defined by  
 
 
 
 
 
 
 
1,  
       0   
ij
i
j
i
j



 
 
 
 
(6A3.0-3) 
 
Solving for 
( )
ijP z  from (6A3.0-2), we obtain  
 
 
 
 
 
1
( )
     1
,
ij
ik
kj
ij
k
P z
P p z
i j



N





 
 
 
(6A3.0-4) 
 
This relationship is the set of equations that describes the N-node flow graph of Figure 6A3.0-1. 
This flow graph is just the state transition diagram of the Markov chain with each of its branches labeled with 
 instead of
. The generating function Pij(z) (z transform) is the transformed “signal” at node j 
when a unit input is applied only to node i; hence the 
( )
ij
p n z
( )
ij
p
n
ij
 term applied at time n = 0. Since the desired 
transform Pij(z) requires an input at node i and the output taken at node j, we see that the flow graph for the 
N-state Markov chain and our generating function flow graph are one and the same. Therefore the generating 
flow graph technique represents precisely the same Markov chain as the state transition diagram. 
 

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          469 
i1
p11z
1
p13z
p31z
1
3
1
i3
p12z
p21z
1
p22z
p33z
i2
1
iN
N
2
pNNz
pN-1Nz
pNN-1z
i1
p11z
1
p13z
p31z
1
3
1
i3
p12z
p21z
1
p22z
p33z
i2
1
iN
N
2
pNNz
pN-1Nz
pNN-1z
 
Figure 6A3.0-1 Generating function flow graph of an n-state Markov chain. 
 
 
Appendix 6A Problems 
 
6A.1 Show the equivalence in the two signal flow graphs in parts (d), (e), and (f) of Table 6A1.3-1. 
 
6A.2 Using Mason’s gain formula show that the transfer function for the flow graph shown here is given by 
 
 
 
 
 
1
2
1
1
1
2
2
2
3
1
G G
TF
G H
G G H
G G



 
 
 
 
    (6AP.1) 
 
1
G1
G2
1
1
Input
Output
H1
G3
H2
1
G1
G2
1
1
Input
Output
H1
G3
H2
 
Figure 6A6.1 The figure for Problem 6A.2. 
 
6A.3 Show that (6A2.0-5) is true; that is, 
 
 
 
 
2
2
2
(1)
(1)
(1)
(
)
ij
ij
ij
ij
d P
dP
dP
Var T
dz
dz
dz








 
 
 
 
   (6AP.2) 
 
6A.4 Find
 for the model described by the state transition diagram here using the techniques of this  
         section. Show that  
( )
ij
p
n
 
 
 
 
 
11
2
1 1
( )
  
0
3
3 4
n
p
n
n









 
 
 
 
   (6AP.3) 
 

 470                                    Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
3
4
1
4
1
2
1
2
S1
S2
3
4
3
4
1
4
1
2
1
2
S1
S2
 
Figure 6A6.2 The figure for Problem 6A.4. 
 
6A.5 Consider the Markov process to define the state transition diagram shown here. State 5 is an 
absorption state. Show that the mean time to be absorbed is nine units of time. 
 
(n)
1
S1
S3
S4
1
2
S5
1
2
1
2
S2
1
2
1
2
1
1
2
(n)
1
S1
S3
S4
1
2
S5
1
2
1
2
1
2
1
2
S2
1
2
1
2
1
2
1
2
1
1
2
1
2
 
 
Figure 6A6.3 The figure for Problem 6A.5. 
 
6A.6 Consider a fair coin having a head (H) and a tail (T), each having probability of 1/2 of occurrence. 
(a) Show that generating function flow graph for the event, “obtaining a head (H) for the first time on 
the n-th toss,” is given by 
 
(a)
n)
z
2
z
2
H
T
P(z)
1
1
(a)
n)
z
2
z
2
z
2
z
2
H
T
P(z)
1
1
 
Figure 6A6.4 The figure for Problem 6A.6 (a) 
 
 
so that the desired probability is (1/2)n. 
 
(b) Show that the generating function flow graph for the event “obtaining the third head on the n-th toss 
of a coin,” is given by  

 
                                    Code Acquisition in Direct Sequence Receivers 
 
 
          471 
n)
1
z
2
z
2
z
2
z
2
z
2
z
2
1
P(z)
n)
1
z
2
z
2
z
2
z
2
z
2
z
2
z
2
z
2
z
2
z
2
z
2
z
2
1
P(z)
 
 
Figure 6A6.5 The figure for Problem 6A.6 (b) 
 
 
so that  
 
3
/ 2
( )
1
/ 2
z
P z
z





 
(6AP.6) 
 
and therefore the desired probability is given by (n–1)(n–2)(1/2)n+1, (n 
 3). 
 
6A.7 Show that (6A3.0-2) follows from (6A3.0-1). 
 
 
Appendix 6A References 
 
[6A1] S. J. Mason, “Feedback Theory-Some Properties of Signal Flow Graphs,” Proc. IEEE, Vol. 41, No. 9, September 1953. 
 
[6A2] S. J. Mason, “Feedback Theory-Further Properties of Signal Flow Graphs,” Proc. IEEE, Vol. 44, No. 7, July 1956. 
 
[6A3] A. Tustin, Direct Current Machines for Control Systems, New York: Macmillan, 1955. 
 
[6A4] J. K. Holmes, Coherent Spread Spectrum Systems, Malabar, FL: Robert E. Krieger Publishing Co., 1990. 
 
[6A5] A. Di Stefano, A. Stubberud, and S. Williams, Feedback and Control Systems, Schaums Outline Series, New York: McGraw-Hill,  
          1967. 
 
[6A6] R. Howard, Class Notes for Industrial Engineering, MIT, 1963. 
 
[6A7] R. W. Sittler, “Systems Analysis for Discrete Markov Processes,” IRE Trans. Circuit Theory, Vol. CT-3, December 1956. 
 
[6A8] W. H. Huggins, “Signal Flow Graphs and Random Signals,” Proc. IRE, January 1957. 
 
[6A9] R. Howard, Dynamic Programming and Markov Processes, New York: Technology Press and Wiley, 1960. 
 
[6A10] W. Feller, An Introduction to Probability Theory and Its Applications, 2nd ed., Vol. 1, New York: Wiley, 1950. 
 
 
Selected Bibliography 
A. Di Stefano, A. Stubberud, and S. Williams, Feedback and Control Systems, Schaums Outline Series, New York: McGraw-Hill, 1967. 
 
 


 
                        473 
CHAPTER 7 
Direct Sequence Code-Tracking Loops 
 
Equation Section (Next)  
7.0 INTRODUCTION 
 
The intent of this chapter is to introduce the concept of a spread spectrum code-tracking loop. Its function is 
to track the pseudonoise (PN) code of the received signal by the receiver. Our goal in this chapter is to 
present the performance for the various types of code-tracking loops. There are four basic types of 
performance that are addressed in this chapter: (1) steady state code-tracking variance of the tracking error, 
(2) transient pull-in performance, (3) multipath range of tracking errors, and (4) loss of lock performance.  
The first parameter, the tracking error variance, is only meaningful for the linearized model, since 
the concept of steady state does not exist for real models. That is to say that “real loops” will eventually lose 
lock, if one waits long enough. However, it is convenient to consider the linearized model in the case that the 
loop SNR is sufficiently high so that practically it never loses lock.  
The second type of performance is related to the process after code acquisition has been completed 
and code-tracking ensues. At the initial code acquisition point the code error may be a substantial fraction of 
a code symbol (perhaps ½ symbol); however, when the code loop is turned on it will tend to drive the mean 
code-tracking error to near zero. Thus a transient code-tracking error typically follows the initial code 
acquisition. After the mean code error returns to zero or some other value, if there are relative dynamics 
between the transmitter and the receiver, the code loop operates in steady state.  
The third facet is related to the range of steady state errors the code loop will endure when receiving 
both the desired signal and a multipath version of the desired signal, which commonly has smaller amplitude 
and a different carrier phase. 
 
The fourth parameter deals with the fact that code-tracking loops, if one waits long enough, will 
eventually lose lock. If eventually means 50 years, no one probably cares. The parameter that is often used is 
the mean time to lose lock. Obviously this depends on the signal-to-noise density ratio, as well as the loop 
bandwidth and the loop configuration. The larger the mean time to lose lock, the better.  
 
Figure 7.0-1 illustrates the sequence of events that must occur in order for a coherent BPSK receiver 
to be synchronized. This includes code acquisition, code pull-in, carrier acquisition bit synchronization, data 
demodulation, and data decoding (if used). 
In this chapter we will consider multiple symbol format types, and will not be restricted to nonreturn 
to zero formatting for the code symbols. Code symbol formatting will be discussed in more detail later in this 
chapter. 
 
 
7.1 BASIS FOR THE EARLY-LATE GATE CODE-TRACKING LOOP 
 
Consider now the optimum estimate [1] of the timing of a baseband code sequence with data on it. It will be 
assumed that the received signal is immersed in thermal noise (white Gaussian noise (WGN)) so that the 
received signal plus noise is given by 
 
 
( )
( , )
( )
r t
s t
n t
τ
=
+
 
(7.1-1) 
 
 

 474                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
Start
Code 
acquisition
Code
acquisition
successful?
No
Yes
Code loop
pull-in
turned on
Code
loop pull-in
successful?
No
Yes
Turn on carrier
acquisition
circuit
Carrier
freq. acquis.
successful?
No
Turn on
carrier
loop
Carrier
loop phase
locked?
No
Yes
Turn on
the bit sync.
acquis. & track
Bit sync.
locked?
Yes
No
Demod.
data
Data sync’d
Decode
data
Yes
Start
Code 
acquisition
Code
acquisition
successful?
No
Yes
Code loop
pull-in
turned on
Code
loop pull-in
successful?
No
Yes
Turn on carrier
acquisition
circuit
Carrier
freq. acquis.
successful?
No
Turn on
carrier
loop
Carrier
loop phase
locked?
No
Yes
Turn on
the bit sync.
acquis. & track
Bit sync.
locked?
Yes
No
Demod.
data
Data sync’d
Decode
data
Yes
 
 
Figure 7.0-1 Logic flow for  direct sequence acquisition, tracking, and data acquisition. 
 
where s(t, τ ) is the PN code signal and τ  is the timing to be estimated. The maximum-likelihood criterion 
assumes that the timing parameter, τ , is unknown but deterministic.  
 
 
7.1.1 Maximum-Likelihood Estimate Formulation 
 
Consider an orthonormal expansion of r(t) by the orthonormal functions fn(t) that have the property 
 
 
0
1  
( )
( )
0  
n
m
nm
T
n
m
f t f
t dt
n
m
δ
=
⎧
=
= ⎨
≠
⎩
∫
 
(7.1-2) 
 
Expanding r(t) in this orthonormal expansion produces 
 
 
1
( )
( )
n
n
i
r t
r f t
∞
=
=∑
 
(7.1-3) 
 
where  
 
 
0
( )
( )
n
n
T
r
r t f t dt
= ∫
 
(7.1-4) 
 
The vector r is composed of an infinite number of components rn. The signal can also be expanded in terms 
of orthogonal components in the form 
 
1
( , )
( )
( )
i
i
i
s t
s
f t
τ
τ
∞
=
=∑
 
(7.1-5) 
where  
 
 
0
( )
( , )
( )
i
i
T
s
s t
f t dt
τ
τ
= ∫
 
(7.1-6) 
 
It is assumed that the noise is white Gaussian noise, and it can be shown [1] that the noise 
components are statistically independent from component to component. Thus one can write for the 
likelihood function, for the first N components 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           475 
 
 
[
]
2
2
1
( )
1
( )
(
)
exp
2
2
N
N
i
i
i
r
s
p
τ
τ
τ
σ
πσ
=
⎛
⎞
−
⎛
⎞
⎜
⎟
Λ
=
=
−
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
∑
r
 
(7.1-7) 
 
In the limit it can be shown [1] that  
 
 
[
]
0
2
0
0
1
( )
exp
( )
( , )
T
r t
s t
dt
N T
τ
τ
⎡
⎤
Λ
=
−
⎢
⎥
⎢
⎥
⎣
⎦
∫
 
(7.1-8) 
 
 
7.1.2 Maximum-Likelihood Estimate of the PN Code Timing 
 
We are now in a position to formulate the optimum pseudonoise (PN) direct sequence code timing estimate 
operating at baseband having a data rate of Rb = 1/Tb bits per second in which the code repeats every Tb 
seconds. Thus the signal can be written as 
 
 
( , )
(
)
s t
PN t
τ
τ
=
−
 
(7.1-9) 
 
where PN(t) is a sequence of M PN code chips over the time Tb seconds. Hence PN(t) is given by 
 
 
1
( )
(
(
1)
)
M
j
c
j
PN t
a p t
j
T
=
=
−
−
∑
 
(7.1-10) 
 
such that Tb=MTc and aj = 1
± , p(t), random from chip to chip, is a unit amplitude pulse that is the unit value 
for 0 to Tc seconds and zero otherwise. Equation (7.1-8) can be written more simply as 
 
 
[
]
0
2
( )
exp
( )
( , )
2 T
C
r t
s t
dt
τ
τ
⎡
⎤
Λ
=
−
⎢
⎥
⎢
⎥
⎣
⎦
∫
 
(7.1-11) 
 
Expanding (7.1-11) produces 
 
 
2
2
( )
exp
( )
( )
(
)
(
)
2
2
b
b
b
T
T
T
C
C
r t
dt
C r t PN t
dt
PN t
dt
τ
τ
τ
⎡
⎤
Λ
=
−
+
−
−
−
⎢
⎥
⎢
⎥
⎣
⎦
∫
∫
∫
 
(7.1-12) 
 
 
We note that the first term does not depend on  , and the third term is also independent of  . Thus it 
is sufficient to maximize the second term since it is the only one dependent on the parameter  . Since the “an” 
are random variables, it is necessary to average over the distribution of an. Hence the modified likelihood 
function is proportional to 
 
 
'( )
exp
( )
(
)
b
T
K
C r t PN t
dt
τ
τ
⎡
⎤
Λ
=
−
⎢
⎥
⎢
⎥
⎣
⎦
∫
 
(7.1-13) 
 
The probability function of p(aj) is given by 
 
 
1
1
(
)
(
1)
(
1)
2
2
j
j
j
q a
a
a
δ
δ
=
−
+
+
 
(7.1-14) 

 476                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
Hence averaging over the log-likelihood p(a) yields the average likelihood function 
 
 
 
 
1
'( )
exp
( )
(
(
1)
)
( )
b
M
j
c
j
T
C
r t a p t
j
T
q a da
τ
τ
=
⎡
⎤
Λ
=
−
−
−
⎢
⎥
⎢
⎥
⎣
⎦
∑
∫
 
 
(7.1-15) 
 
where 
1
2
( )
(
) (
)... (
)
M
q a
q a q a
q a
=
 and 
1
2...
M
da
da da
da
=
. Let 
 
 
( )
( ) (
(
1)
)
b
j
c
T
PN
r t p t
j
T
dt
τ
τ
=
−
−
−
∫
 
(7.1-16) 
 
Then factor (7.1-15) as a product and use (7.1-16) to achieve 
 
 
1.1
1
1
1.1
'( )
exp
( )
( )
exp
( )
(
)
b
M
M
j
j
j
j
j
j
j
j
T
C
a PN
q a da
Ca PN
q a da
τ
τ
τ
=
=
−
⎡
⎤
⎡
⎤
Λ
=
=
⎢
⎥
⎣
⎦
⎣
⎦
∑
∏
∫
∫
 
(7.1-17) 
 
Evaluating (7.1-17) yields 
 
 
(
)
1
1
exp
exp
'( )
cosh
2
M
M
j
j
j
j
j
CPN
CPN
CPN
τ
=
=
⎧
⎫
⎡
⎤
⎡
⎤
+
−
⎪
⎪
⎣
⎦
⎣
⎦
⎡
⎤
Λ
=
=
⎨
⎬
⎣
⎦
⎪
⎪
⎩
⎭
∏
∏
 
(7.1-18) 
 
Now consider the log-likelihood function (actually the natural log, denoted by “ln”) denoted here by 
( )
L τ
Λ
, where 
 
 
{
}
( )
ln
'( )
L τ
τ
Λ
=
Λ
 
(7.1-19) 
 
Thus taking the natural log of (7.1-18) produces 
 
 
1
( )
ln cosh
( )
M
L
j
j
CPN
τ
τ
=
⎡
⎤
Λ
=
⎣
⎦
∑
 
(7.1-20) 
 
Now at small values of the argument we may approximate the ln  cosh(x) function by x2/2, so that 
 
 
(
)
2
2
1
1
( )
2
M
L
j
j
C
PN
τ
=
Λ
=
∑
 
(7.1-21) 
where 
 
 
( )
( ) (
(
1)
)
b
j
c
T
PN
r t p t
j
T
dt
τ
τ
=
−
−
−
∫
 
(7.1-22) 
 
To obtain the estimate of  , consider taking the approximate derivative of 
( )
L τ
Λ
 via 
 
 
(
)
(
)
( )
2
L
c
L
c
L
c
T
T
d
d
T
τ
δ
τ
δ
τ
τ
δ
Λ
+
−Λ
−
Λ
≅
 
(7.1-23) 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           477 
Hence using (7.1-21) in (7.1-23) produces the result (letting C2/2=1) 
 
 
(
)
(
)
2
2
( )
1
(
)
(
)
2
L
n
c
n
c
n
n
c
d
PN
T
PN
T
d
T
τ
τ
δ
τ
δ
τ
δ
Λ
⎡
⎤
≅
+
−
−
⎢
⎥
⎣
⎦
∑
∑
 
(7.1-24) 
 
Or using (7.1-22) produces 
 
 
2
2
( )
(
)
( )
1
2
( )
(
)
b
b
b
c
n
T
L
c
b
c
n
T
r t PN t
nT
T dt
d
d
T
r t PN t
nT
T dt
τ
δ
τ
τ
δ
τ
δ
⎡
⎤
⎛
⎞
⎢
⎥
−
−
−
⎜
⎟
⎜
⎟
⎢
⎥
Λ
⎝
⎠
⎢
⎥
≅
⎢
⎥
⎛
⎞
⎢
⎥
−
−
−
+
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
∑∫
∑∫
 
(7.1-25) 
 
 
This equation can be implemented by the following closed-loop structure illustrated in Figure 7.1-1, 
ignoring the multiplicative constant in front of the integrals.  
 
( )
(
1)
b
b
nT
n
T
dt
−∫
( )
(
1)
b
b
nT
n
T
dt
−∫
Sampler
Sampler
( )
2
( )
2
-
-
+
VCO
Code
gen.
ˆ
(
)
b
c
PN t
nT
T
τ
δ
−
−
−
ˆ
(
)
b
c
PN t
nT
T
τ
δ
−
−
+
r(t)
ˆ
(
)
b
PN t
nT
τ
−
−
(On-time 
estimate)
( )
(
1)
b
b
nT
n
T
dt
−∫( )
(
1)
b
b
nT
n
T
dt
−∫
( )
(
1)
b
b
nT
n
T
dt
−∫( )
(
1)
b
b
nT
n
T
dt
−∫
Sampler
Sampler
Sampler
Sampler
( )
2
( )
2
( )
2
( )
2
-
-
+
VCO
Code
gen.
ˆ
(
)
b
c
PN t
nT
T
τ
δ
−
−
−
ˆ
(
)
b
c
PN t
nT
T
τ
δ
−
−
+
r(t)
ˆ
(
)
b
PN t
nT
τ
−
−
(On-time 
estimate)
 
 
Figure 7.1-1 Noncoherent code-tracking loop configuration derived from the maximum-likelihood estimate of the timing delay  . 
 
 
7.2 FULL-TIME CODE-TRACKING LOOPS 
Equation Section (Next) 
First we will treat full-time code-tracking loops in which both the early and late correlators are processed on 
a full time basis. Then we will deal with time-shared correlator code-tracking loops in which the early and 
late correlators are processed sequentially (i.e., time-shared). When the carrier frequency and phase are 
known completely, the code loops are known as coherent code-tracking loops. When the frequency is known 
but the carrier phase is unknown noncoherent code-tracking loops are required, since they do not need to 
have knowledge of the carrier phase to function. All these models assume that no filtering effects have been 
accounted for. Following the unfiltered models we will address the case on a noncoherent code-tracking loop 
in which filtering and interference is addressed. All analysis is based on the assumption that BLT << 0, where 
BL is the one-sided closed-loop noise bandwidth in Hz (defined later) and the symbol or bit time, if uncoded 
(T seconds), of the data bearing signals. In other words the loop update time is T seconds. If this condition is 
not upheld the tracking error variance will be larger than predicted here, and in the extreme case the loop 
could become unstable. 
 
 
 
 

 478                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
7.2.1 Baseband Early-Late Gate Code-Tracking Loop with NRZ Symbols 
 
The baseband code-tracking loop is designed to track baseband direct sequence PN nonreturn to zero (NRZ) 
signals. Applications would include high-speed wireless applications and direct sequence CDMA systems. 
Baseband code-tracking loops are not useful when the signal is placed on a carrier. Since the baseband code-
tracking loop is based on an unmodulated PN code signal, it may be viewed as a degenerate case of a 
coherent code-tracking loop, since the carrier frequency and carrier phase are zero (and therefore known).  
 
Consider the received waveform, which is composed of a baseband PN code, corrupted by additive 
white Gaussian noise (WGN).  
 
 
( )
(
)
( )
y t
PPN t
T
n t
=
−
+
 
(7.2-1) 
 
Note that no data is assumed in this model. If data were used, a noncoherent code-tracking loop 
would be required. Figure 7.2-1 illustrates a baseband code-tracking loop.  
Thus the maximum-likelihood estimate can motivate the closed-loop code-tracking model. Note that 
this is a baseband loop that has data; thus, noncoherent processing was required. A modification of this 
structure will accommodate carrier modulated BPSK signals, as we will see later in this chapter. 
 
LPF
LPF
-
F(s)
VCXO
Code
gen.
y(t)
Late code
Early code
On time code
rE(t)
rL(t)
eL(t)
eE(t)
( )
Le t
%
( )
Ee
t
%
( )
e t
ε
Late correlator
Early correlator
-
+
LPF
LPF
-
F(s)
VCXO
Code
gen.
y(t)
Late code
Early code
On time code
rE(t)
rL(t)
eL(t)
eE(t)
( )
Le t
%
( )
Ee
t
%
( )
e t
ε
Late correlator
Early correlator
LPF
LPF
LPF
LPF
-
F(s)
F(s)
VCXO
VCXO
Code
gen.
Code
gen.
y(t)
Late code
Early code
On time code
rE(t)
rL(t)
eL(t)
eE(t)
( )
Le t
%
( )
Ee
t
%
( )
e t
ε
Late correlator
Early correlator
-
+
 
 
Figure 7.2-1 Baseband early-late gate code-tracking loop block diagram. 
 
 
It is also called a delay lock loop that utilizes an early-late gate discriminator function. In (7.2-1) P 
is the received signal power, T is the unknown propagation time delay from the transmitter to the receiver, 
and n(t) is the WGN process having two-sided noise spectral density of N0/2. The chip duration of the PN 
code is Tc seconds, and the corresponding symbol rate1 of the PN code is Rs = 1/Ts. 
 
The two correlators are separated by dTs, or 2 Ts seconds. Normally d or 2  is less than or equal to 
one. Historically, the code early-late separation d  was chosen to be 1 (one chip); however, it will be seen 
shortly, that this is not optimum. The late and early correlators are described by 
 
 
ˆ
(
)
ˆ
(
)
L
s
E
s
r t
T
T
r t
T
T
δ
δ
−
−
−
+
 
(7.2-2) 
 
in which ˆT  is the estimate of T. It is assumed that the low pass filters (LPF) are selected to encompass the 
uncertainty in carrier frequency and are sufficiently narrow to form an accurate estimate of the correlation 
function between the received code and the locally generated one.  
                                                          
1 We consider symbols rather than chips to be more general, since chips normally imply NRZ symbols. 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           479 
 
The signal out of the late correlator is given by 
 
 
ˆ
ˆ
( )
(
)
( )
( )
(
L
m
PN
s
m
s
e t
K
PR
T
T
T
K L s
n t PN t
T
T
δ
δ
⎡
⎤
=
−
−
+
−
−
⎣
⎦
%
 
(7.2-3) 
 
where L(s)[g(t)] denotes the Heaviside operator L(s) representing the arm filters, operating on the time 
function g(t), and Km is the multiplier gain constant of the multipliers (assumed to be both the same). In this 
expression the mean output has been used and the self-noise2 has been neglected, which is reasonable at 
lower signal levels, so that the thermal noise is dominant. The meaning of the operator in (7.2-3) is as 
follows: 
 
 
( )[ ( )]
( ) (
)
( )
( )
L s g t
l u g t
u du
l t
g t
∞
−∞
=
−
=
∗
∫
 
(7.2-4) 
 
and L(s) is defined by 
 
 
( )
{ ( )}
L s
l t
= L
 
(7.2-5) 
 
In (7.2-5) 
{ ( )}
l t
L
 denotes the Laplace transform of l(t), and the symbol ∗ denotes the convolution. Out of 
the early correlator we obtain 
 
 
ˆ
ˆ
( )
(
)
( )
( )
(
E
m
PN
s
m
s
e
t
K
PR
T
T
T
K L s
n t PN t
T
T
δ
δ
⎡
⎤
=
−
+
+
−
+
⎣
⎦
%
 
(7.2-6) 
 
It will be assumed that L(0) = 1, that is the filter produces unit gain at f = 0.  
 
The error signal is the difference between the early and late correlator signals  
 
 
(
)
ˆ
ˆ
( )
(
)
(
)
( )
( )
m
PN
s
PN
s
m
L
E
e t
K
P R
T
T
T
R
T
T
T
K
n t
n
t
ε
δ
δ
⎡
⎤
=
−
−
−
−
+
+
−
⎣
⎦
 
(7.2-7) 
 
The bracketed term in (7.2-7) forms the S-curve for tracking. If we define the code-tracking error as  
 
 
ˆ
T
T
ε =
−
 
(7.2-8) 
 
then (7.2-7) can be written as  
 
 
[
]
(
)
( )
(
)
(
)
( )
( )
m
PN
s
PN
s
m
L
E
e t
K
P R
T
R
T
K
n t
n
t
ε
ε
δ
ε
δ
=
−
−
+
+
−
 
(7.2-9) 
 
The S-curve for NRZ symbols can be written seen in Figure 7.2-2. The S-curve for the baseband code-
tracking loop can be seen in Figure 7.2-2 with four values of   in the case of NRZ symbols.  
As the value of   decreases, the S-curve is limited in amplitude first to 0.5 at   =1/4, then 0.25 at  
  = 1/8, and finally to 0.125 at    = 1/16. However, surprisingly, the slope of the S-curve (discriminator 
curve), at the origin, remains at 2 for all cases.  
 
The linearized error signal can be written as 
 
 
(
)
( )
2
( )
( )
m
m
E
L
s
e t
PK
K
n
t
n t
T
ε
ε
=
+
−
 
(7.2-10) 
 
                                                          
2 The self-noise is the difference between the mean output and the actual output of the correlated signal. 

 480                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ =1/2
S(ε)
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.6
0.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
δ = 1/4
ε
S(ε)
δ = 1/8
ε
S(ε)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ = 1/16
ε
S(ε)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.2
0.15
0.1
0.05
0
0.05
0.1
0.15
0.2
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ =1/2
S(ε)
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ =1/2
S(ε)
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.6
0.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
δ = 1/4
ε
S(ε)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.6
0.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
δ = 1/4
ε
S(ε)
δ = 1/8
ε
S(ε)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ = 1/8
ε
S(ε)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ = 1/16
ε
S(ε)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.2
0.15
0.1
0.05
0
0.05
0.1
0.15
0.2
δ = 1/16
ε
S(ε)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.2
0.15
0.1
0.05
0
0.05
0.1
0.15
0.2
ε
S(ε)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.2
0.15
0.1
0.05
0
0.05
0.1
0.15
0.2
 
 
Figure 7.2-2 S-curve for the baseband code-tracking loop with four values of   for NRZ symbols. 
 
 
where the units of   are in seconds. It follows that the code loop timing estimate can be written as  
 
 
ˆ
( )
( )
( )
2
( )
2
E
L
s
c
n
t
n t
T t
PKF s
T
s
T
P
ε
⎡
⎤
−
−
=
+
⎢
⎥
⎣
⎦
 
(7.2-11) 
 
where  
 
 
m
VCO
K
K K
=
 
(7.2-12) 
 
with KVCO being the voltage controlled oscillator gain in symbols/sec/volt (it is assumed that the VCO 
frequency is equal to the symbol rate). Using (7.2-8) in (7.2-11) produces 
 
 
(
)
(
)
( )
(
2
( ) /
1
2
1
2
( ) /
1
2
( )/
E
L
s
s
n
t
n t
PKF s
s
T
T
T
P
PKF s
s
PKF s
s
ε
⎛
⎞
−
−
⎛
⎞
=
+
⎜
⎟
⎜
⎟
⎝
⎠
+
+
⎝
⎠
 
(7.2-13) 
 
Note that we have implicitly not shown the time dependence of the error  . Also note that T is the input 
timing phase process due to relative dynamics between the transmitter and the receiver.  
 
Now define the closed-loop transfer function by 
 
 
2
( )
( )
2
( )
PKF s
H s
s
PKF s
=
+
 
(7.2-14) 
 
Hence (7.2-13) can be written as 
 
 
[
]
( )
( )
( )
1
( )
2
E
L
s
s
n
t
n t
T
H s
H s
T
T
P
ε
−
⎛
⎞
= −
+
−
⎜
⎟
⎝
⎠
 
(7.2-15) 
 
Since we are initially concerned about the influence of thermal noise we can let T = C, a constant, 
and since H(s) is a high-pass function, the error will eventually approach zero. For simplicity we can let C = 
0. Thus with this assumption the error signal depends only on the two noise terms so that 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           481 
 
 
( )
( )
( )
2
E
L
s
n
t
n t
H s
T
P
ε
−
⎛
⎞
= −
⎜
⎟
⎝
⎠
 
(7.2-16) 
 
It follows from (7.2-16) that the variance of the tracking error for the baseband code-tracking loop is given 
by  
 
 
2
2
2
2
( )
( 2
)
4
N
c
c
S
f
E
H j
f
df
T
T
P
ε
σ
ε
π
∞
−∞
⎧
⎫
⎛
⎞
⎪
⎪=
=
⎨
⎬
⎜
⎟
⎝
⎠
⎪
⎪
⎩
⎭
∫
 
(7.2-17) 
 
where SN(f) is the noise spectral density of the difference of the early and late noise terms 
(
)
( )
( )
( )
E
L
N t
n
t
n t
=
−
.  
 
Under the assumption that the two-sided noise spectral density is large compared to the loop 
bandwidth, one can write 
 
 
2
2
( )
2
N
L
s
S
f B
T
P
ε
σ
≅
 
(7.2-18) 
 
with little error, where BL is the one-sided closed-loop noise bandwidth of the code-tracking loop. Twice this 
value (2BL) is defined by 
 
 
2
2
(2
)
L
B
H
f
df
π
∞
−∞
= ∫
 
(7.2-19) 
 
where H(2 f) is the closed-loop transfer function of the baseband code loop.  
 
In order to continue it is necessary to compute first the autocorrelation function of the noise 
followed by the power spectral density at f = 0. We write the noise as 
 
 
ˆ
( )
( )
( )
(
) ( )
(
)
ˆ
                               
(
) ( )
(
)
E
L
s
s
N t
n
t
n t
h t
u n u PN u
T
T du
h t
u n u PN u
T
T du
δ
δ
∞
−∞
∞
−∞
=
−
=
−
−
+
−
−
−
−
∫
∫
 
(7.2-20) 
 
By definition the autocorrelation function is given by 
 
 
(
)(
)
{
}
( )
( )
( )
(
)
(
)
N
L
E
L
E
R
E
n t
n
t
n t
n
t
τ
τ
τ
=
−
+
−
+
 
(7.2-21) 
 
Utilizing (7.2-20) produces 
 
 
 
 

 482                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
ˆ
ˆ
( )
(
) (
')
(
)
( '
) ( ) ( ')
'
ˆ
ˆ
         
(
) (
')
(
)
( '
) ( ) ( ')
'
ˆ
ˆ
        
(
) (
)
(
)
(
) (
N
s
s
s
s
s
s
R
E
h t
u h t
u PN u
T
T PN u
T
T n u n u dudu
E
h t
v h t
v PN v
T
T PN v
T
T n v n v dvdv
E
h t
u h t
v PN u
T
T PN v
T
T n
τ
τ
δ
δ
τ
δ
δ
τ
δ
δ
∞
∞
−∞−∞
∞
∞
−∞−∞
∞
∞
−∞−∞
=
−
+
−
−
+
−
+
+
−
+
−
−
−
−
−
−
−
+
−
−
+
−
−
∫∫
∫∫
∫∫
) ( )
ˆ
ˆ
       
(
) (
)
(
)
(
) ( ) ( )
s
s
u n v dudv
E
h t
u h t
v PN u
T
T PN v
T
T n u n v dudv
τ
δ
δ
∞
∞
−∞−∞
−
−
+
−
−
−
−
+
∫∫
 
(7.2-22) 
 
We model the PN sequence as a statistically independent random sequence taking on the values of 
1
± , each with probability of ½. We can write 
 
 
[
]
0
0
0
( )
(
) (
)
(2
)
(
) (
)
         
1
(2
)
(
) (
)
N
PN
s
PN
s
R
N
h t
u h t
u
du
N R
T
h t
u h t
u
du
N
R
T
h t
u h t
u
du
τ
τ
δ
τ
δ
τ
∞
∞
−∞
−∞
∞
−∞
=
−
−
+
−
−
−
+
=
−
−
−
+
∫
∫
∫
 
(7.2-23) 
 
It follows that the power spectral density at f = 0 is the integral over  , so that 
 
 
[
]
0
(0)
1
(2
)
(
) (
)
N
PN
s
S
N
R
T
h t
u h t
u
dud
δ
τ
τ
∞
∞
−∞−∞
=
−
−
−
+
∫∫
 
(7.2-24) 
 
After some algebra this can be evaluated to 
 
 
[
]
2
0
(0)
1
(2
)
( )
/(2 )
j
N
PN
s
S
N
R
T
H
e
d d
ωτ
δ
ω
ω τ
π
∞
∞
−∞−∞
=
−
∫∫
 
(7.2-25) 
 
where H(s) is the same as H(j ) and we have dropped the j for convenience. Noting that  
 
 
1
( )
2
je
d
ωτ τ
δ ω
π
∞
−∞
=
∫
 
(7.2-26) 
 
the Dirac delta function. Using (7.2-26) in (7.2-25) produces 
 
 
[
]
2
0
(0)
1
(2
)
(0)
N
PN
s
S
N
R
T
H
δ
=
−
 
(7.2-27) 
 
By assumption of the low pass filter 
(0)
1
H
= , so that 
 
 
[
]
0
(0)
1
(2
)
N
PN
s
S
N
R
T
δ
=
−
 
(7.2-28) 
 
Hence the general expression for the tracking error variance is given by 
 
 
[
]
0
2
2
1
(2
)
   symbols
2
L
PN
s
sym
N B
R
T
P
δ
σ
−
=
 
(7.2-29) 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           483 
 
as our general result. Now let us specialize the case to NRZ symbols (therefore chips). We note that 
[
]
1
(2
)
PN
s
R
T
δ
−
= d (for d 
1
≤
), for NRZ chips, where 2  = d, and d is the early-late correlator spacing in 
chips. It follows from (7.2-29) that the linearized tracking error variance for the baseband code-tracking loop 
is given by 
 
 
2
2
0
   chips
2
L
sym
N B d
P
σ
=
 
(7.2-30) 
 
It is to be noted that the linearized tracking performance only holds for small errors, that is, for 
errors that are small compared to the linear tracking region. 
Thus we see that the smaller the value of “d,” the lower the tracking error variance. Note that this 
result is based on the linearized tracking error variance, and as such there are some limitations. There is a 
practical limit based on the sample rate, since the time between samples is the minimum early-late spacing 
available. In addition as d is decreased the maximum restoring force is diminished. This restoring force is 
related to the mean time to lose lock in a complex way, but basically the higher and the broader the restoring 
voltage, the better. This phenomenon will be discussed in Section 7.9, later in this chapter. 
 
 
7.2.2 Noncoherent Early-Late Gate I-Q Code-Tracking Loop  
 
In this section we will treat [2] the case of a noncoherent I-Q code-tracking loop with an early-late gate error 
discriminator function, implemented at baseband using I and Q correlators. In all further discussions about I-
Q code-tracking we will mean the translation to baseband from RF or IF with the subsequent processing. 
 
 
7.2.2.1 Noncoherent I-Q Early-Late Gate Code-Tracking Loop Noise and Signal Components 
 
A block diagram of a noncoherent I-Q version of a code-tracking loop (to be contrasted with the RF version, 
which is implemented at IF or RF) with an early-late gate discriminator function is illustrated in Figure  
7.2-3. Notice that since carrier phase is assumed to be unknown, both the sine and cosine components are 
processed with early and late processing. Normally it is not possible to obtain phase estimates before code 
timing is obtained. Hence it is assumed that nominally, the frequency is known but the carrier phase is not. 
Certainly during code acquisition and code pull-in the carrier phase is not known; however, after code pull-in 
carrier tracking would be feasible. 
The loop is a baseband version of a noncoherent code-tracking loop in which the early and late I and 
Q correlation arms are used in the error control of the loop. The upper arms with both the inphase and 
quadrature phase signals are used for the late correlation, and the lower arms with both the inphase and 
quadrature phase signals are used for the early correlation. The late minus the early correlations squared fed 
into the loop filter, represented by F(s), and then into the voltage controlled crystal oscillator (VCXO), which 
in turn drives the code generator to produce the late and early versions of the receiver estimated codes. 
 
This analysis will be general, in the sense that the symbols do not have to be NRZ symbols they can 
be any unit amplitude symbol shape that has a duration of Ts seconds. As an example, Figure 7.2-4 illustrates 
both NRZ and a binary offset carrier (BOC(2M,M)) example. The BOC (2M,M) symbol shape will be used 
on the new modernized GPS military signal (M code) in which M = 5. The argument (2M) denotes the 
multiplier of the underlying squarewave signal operating at 10(1.023 MHz) or 10.23 MHz, and the second 
argument denotes the rate of the underlying code at 5(1.023 MHz) or 5.115 MHz. 
In Figure 7.2-4(a) seven NRZ code symbols are shown, the first, fourth, sixth, and seventh are +1s 
and the others are –1s. Likewise in the (b) part of the figure, three BOC(10,5) code symbols are shown, the 
first two are +1s and the last a –1 hence the symbol is inverted.  
 
 

 484                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
Early correlator
BPF
(W)
Carrier
source
LPF
LPF
PN
code
gen.
F(s)
Sample
& hold
( )2
Sample
& hold
( )2
+
Sample
& hold
( )2
Sample
& hold
( )2
+
Late arm
VCXO
Late correlator
BPF
Carrier
Carrier
LPF
LPF
PN
-
F(s)
Sample
&
Sample
&
( )2
Sample
&
Sample
( )2
+
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
y(t)
Late
VCXO
-
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
ys(t)
yc(t)
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
ysL(t)
ycL(t)
ysE(t)
ycE(t)
Early arm
eL(t)
eE(t)
e(t)
0
ˆ
2 sin(
)
t
ω
θ
+
0
ˆ
2 cos(
)
t
ω
θ
+
+
Early correlator
BPF
(W)
Carrier
source
LPF
LPF
PN
code
gen.
F(s)
Sample
& hold
Sample
& hold
( )2
Sample
& hold
Sample
& hold
( )2
+
Sample
& hold
Sample
& hold
( )2
Sample
& hold
Sample
& hold
( )2
+
Late arm
VCXO
Late correlator
BPF
Carrier
Carrier
LPF
LPF
PN
-
F(s)
Sample
&
Sample
&
( )2
Sample
&
Sample
( )2
+
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
y(t)
Late
VCXO
-
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
ys(t)
yc(t)
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
ysL(t)
ycL(t)
ysE(t)
ycE(t)
Early arm
eL(t)
eE(t)
e(t)
0
ˆ
2 sin(
)
t
ω
θ
+
0
ˆ
2 cos(
)
t
ω
θ
+
+
 
 
Figure 7.2-3 I-Q version of a noncoherent code-tracking loop with early-late gate and early-late separation of d = 2 . 
 
 
The received BPSK signal plus thermal noise is modeled by 
 
 
(
)
(
)
(
)
0
0
0
( )
2
( )
(
)cos
      
2
( )cos
2
( )sin
c
s
y t
Pd t PN t
T
t
n t
t
n t
t
ω
θ
ω
θ
ω
θ
=
−
+
+
+
+
+
 
(7.2-31) 
 
in which P is the received power in watts, d(t) ( 1)
±
 is the data modulation with a data rate of Rd = 1/Td, 
PN(t–T) is the unit amplitude ( 1)
±
 pseudonoise code process, and the last two terms of (7.2-31) are the in-
phase and quadrature noise processes in which nc(t) and ns(t) are independent Gaussian random processes 
with one-sided noise spectral density N0. The object of this noncoherent code-tracking loop is to track the 
delay, T, which is the time delay between the transmitter and the receiver.  
 
(b) Three BOC(10,5) symbols
Ts
t
(a) Seven NRZ symbols
Ts
t
(b) Three BOC(10,5) symbols
Ts
t
(a) Seven NRZ symbols
Ts
t
(a) Seven NRZ symbols
Ts
t
Ts
t
 
 
Figure 7.2-4 Plot of (a) NRZ and (b) BOC(10,5) code symbols. 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           485 
 
The sine and cosine components indicated in Figure 7.2-3 are given by 
 
 
(
)
ˆ
ˆ
( )
( )
(
)sin(
)
( )sin(
)
ˆ
          
( )cos(
)
2
s
c
s
c
y t
Pd t PN t
T
n t
n t
O
θ
θ
θ
θ
θ
θ
ω
=
−
−
+
−
+
−
+
 
(7.2-32) 
 
and  
 
 
(
)
ˆ
ˆ
( )
( )
(
)cos(
)
( )cos(
)
ˆ
          
( )sin(
)
2
c
c
s
c
y t
Pd t PN t
T
n t
n t
O
θ
θ
θ
θ
θ
θ
ω
=
−
−
+
−
+
−
+
 
(7.2-33) 
 
in which 
(2
)
c
O
ω
 denotes a term at a angular frequency of 2
c
ω . During code-tracking the carrier loop would 
normally be in lock and ˆθ  would roughly the same as θ , modulo 2π . For notational simplicity we have not 
explicitly shown the time dependence for the estimate ˆθ . Now define the carrier phase error as 
 
 
( )
( )
t
t
φ
θ
θ
=
−
 
(7.2-34) 
 
where the time dependence has been shown explicitly. Again suppressing time dependence on 
( )t
φ
 for 
notational simplicity and neglecting the double frequency term we have 
 
 
( )
( )
(
)sin( )
( )sin( )
( )cos( )
s
c
s
y t
Pd t PN t
T
n t
n t
φ
φ
φ
= −
−
−
+
 
(7.2-35) 
 
and  
 
 
( )
( )
(
)cos( )
( )cos( )
( )sin( )
c
c
s
y t
Pd t PN t
T
n t
n t
φ
φ
φ
=
−
+
+
 
(7.2-36) 
 
Denote the two noise terms in (7.2-35) by 
' ( )
sn t  and let the two noise terms in (7.2-36) be denoted 
by 
' ( )
cn t . That is,  
 
 
'
'
( )
( )sin
( )cos
( )
( )cos
( )sin
s
c
s
c
c
s
n t
n t
n t
n t
n t
n t
φ
φ
φ
φ
= −
+
=
+
 
(7.2-37) 
 
the two noise terms are mutually statistically independent of each other and have the same statistical 
properties as the input band-limited noise processes ns(t) and nc(t). That is they are band-limited to bandwidth 
B and have two-sided noise spectral density of N0/2 over the bandwidth B. Hence it is convenient to write the 
two equations in (7.2-37) in the form 
 
 
'
'
( )
( )
(
)sin( )
( )
( )
( )
(
)cos( )
( )
s
s
c
c
y t
Pd t PN t
T
n t
y t
Pd t PN t
T
n t
φ
φ
= −
−
+
=
−
+
 
(7.2-38) 
 
Carrying out some algebra, one can show out of the sample and hold circuits (see Figure 7.2-3) that 
 
 
0
ˆ
 
( )
(
)
(
)
sin
d
T
sL
s
sLI
y
Pd t
PN t
T PN t
T
T dt
n
δ
φ
= −
−
−
−
+
∫
 
(7.2-39) 
 
 

 486                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
0
ˆ
( )
(
)
(
)
cos
d
T
cL
s
cLI
y
Pd t
PN t
T PN t
T
T dt
n
δ
φ
=
−
−
−
+
∫
 
(7.2-40) 
 
 
0
ˆ
 
( )
(
)
(
)
sin
d
T
sE
s
sEI
y
Pd t
PN t
T PN t
T
T dt
n
δ
φ
= −
−
−
+
+
∫
 
(7.2-41) 
 
 
0
ˆ
( )
(
)
(
)
cos
d
T
cE
s
cEI
y
Pd t
PN t
T PN t
T
T dt
n
δ
φ
=
−
−
+
+
∫
 
(7.2-42) 
 
where it has been assumed that the bit under consideration occurs from 0 to Td seconds for notational 
simplicity and where 
 
 
'
0
ˆ
( )
(
)
d
T
sL
s
s
n
n t PN t
T
T dt
δ
=
−
−
∫
 
(7.2-43) 
 
 
'
0
ˆ
( )
(
)
d
T
cL
c
s
n
n t PN t
T
T dt
δ
=
−
−
∫
 
(7.2-44) 
 
 
'
0
ˆ
( )
(
)
d
T
sE
s
s
n
n t PN t
T
T dt
δ
=
−
+
∫
 
(7.2-45) 
 
 
'
0
ˆ
( )
(
)
d
T
cE
c
s
n
n t PN t
T
T dt
δ
=
−
+
∫
 
(7.2-46) 
 
where it has been assumed that the integration over the bit time (Td) is sufficient to form the autocorrelation 
function out of the integrator for the signal terms in (7.2-39) through (7.2-42), so that  
 
 
ˆ
 
( )
(
)sin
sL
d
PN
s
sL
y
Pd t T R
T
T
T
n
δ
φ
= −
−
−
+
 
(7.2-47) 
 
 
ˆ
( )
(
)cos
cL
d
PN
s
cL
y
Pd t T R
T
T
T
n
δ
φ
=
−
−
+
 
(7.2-48) 
 
 
ˆ
 
( )
(
)sin
sE
d
PN
s
sE
y
Pd t T R
T
T
T
n
δ
φ
= −
−
+
+
 
(7.2-49) 
 
 
ˆ
( )
(
)cos
cE
d
PN
s
cE
y
Pd t T R
T
T
T
n
δ
φ
=
−
+
+
 
(7.2-50) 
 
 
Now consider that the correlation properties of the four random variables defined in (7.2-43)–
(7.2-46) note that 
 
 
{
}
'
'
0
0
0
0
0
ˆ
ˆ
Var(
)
( )
( )
(
)
(
)
              
2
2
d
d
d
T
T
sL
s
s
s
s
T
d
n
E
n t n u PN t
T
T PN u
T
T dtdu
N
N
dt
T
δ
δ
=
−
−
−
−
=
=
∫∫
∫
 
(7.2-51) 
 
In a similar manner one can show that  
 
 
0
Var(
)
Var(
)
Var(
)
Var(
)
2
sL
cL
sE
cE
d
N
n
n
n
n
T
=
=
=
=
 
(7.2-52) 
 
Cross-correlations of these noise terms when they have independent noise process are zero, so that 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           487 
 
{
}
{
}
{
}
{
}
0
sL
cL
sE
cE
sL
cE
cL
sE
E n n
E n n
E n n
E n n
=
=
=
=
 
(7.2-53) 
 
The following two terms are not statistically independent 
 
 
{
}
{
}
'
'
0
0
0
0
0
0
ˆ
ˆ
(
( )
( ))
(
)
(
)
ˆ
ˆ
                
(
)
(
)
(
)
2
                
(2
)
2
d
d
d
d
T
T
cL
cE
c
c
s
s
T
T
s
s
d
PN
s
sL
sE
E n n
E n t n u PN t
T
T PN u
T
T dtdu
N
t
u PN t
T
T PN u
T
T dtdu
N T R
T
E n n
δ
δ
δ
δ
δ
δ
=
−
+
−
−
=
−
−
+
−
−
=
=
∫∫
∫∫
 
(7.2-54) 
 
where again it has been assumed that the integration over the bit time (Td) is sufficient to form the 
autocorrelation function out of the integrator. Now the late and early signals can be written during the time 0 
to Td as  
 
 
2
2
2
2
( )
( )
L
sL
cL
E
sE
cE
e t
y
y
e
t
y
y
=
+
=
+
 
(7.2-55) 
 
Noting that the error signal e(t) is given by  
 
 
( )
( )
( )
L
E
e t
e t
e
t
=
−
 
(7.2-56) 
 
One can compute the error signal (which is constant over Td seconds) to be 
 
 
(
) (
)
2
2
2
2
2
2
2
ˆ
ˆ
( )
(
)
(
)
ˆ
ˆ
     
2
( )
(
)
(
)
sin
ˆ
ˆ
     
2
( )
(
)
(
)
cos
d
PN
s
PN
s
sL
cL
sE
cE
PN
s
sL
PN
s
sE
d
PN
s
cL
PN
s
cE
d
e t
T P R
T
T
T
R
T
T
T
n
n
n
n
Pd t
R
T
T
T n
R
T
T
T n
T
Pd t
R
T
T
T n
R
T
T
T n
T
δ
δ
δ
δ
φ
δ
δ
φ
⎡
⎤
=
−
−
−
−
+
+
+
−
+
⎣
⎦
⎡
⎤
−
−
−
−
−
+
⎣
⎦
⎡
⎤
+
−
−
−
−
+
⎣
⎦
 
(7.2-57) 
 
After every Td seconds the value of e(t) changes to a new one, with the primary change coming from the 
noise terms in (7.2-57). Now let the code symbol timing error  (t) be defined as  
 
 
ˆ
( )
( )
( )
t
T t
T t
ε
=
−
 
(7.2-58) 
 
where we have shown the time dependence of the input and estimated time delays. Since the sum of the 
second and third noise terms have a mean and variance invariant with  , the error signal of (7.2-57) can be 
simplified, with no loss in generality, to (  = 0) 
 
 
2
2
2
1
2
(
)
(
)
i
i
i
d
PN
s
PN
s
e
T P R
T
R
T
n
n
ε
δ
ε
δ
⎡
⎤
=
−
−
+
+
+
⎣
⎦
 
(7.2-59) 
 
with the subscript “i” denoting the i-th bit sample. The two noise terms in (7.2-59) are given by 
 
 
(
) (
)
1
2
2
2
2
2
2
(
)
(
)
(
)
i
i
i
i
i
i
i
i
i
d
PN
s
cE
PN
s
cL
d
sL
cL
sE
cE
n
Pd T
R
T n
R
T n
T
n
n
n
n
n
ε
δ
ε
δ
⎡
⎤
=
−
−
+
⎣
⎦
=
+
−
+
 
(7.2-60) 
 
The first term in (7.2-59) is the S-curve, which provides the error control of the code-tracking loop. 
Figure 7.2-2 illustrates that control curve for the case that   is 1/2. Note that the error S-curve is linear over 

 488                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
one symbol and is very nonlinear outside the linear region. The fact that the S-curve is linear around the zero 
error ( (t) = 0) makes the linearization analysis feasible. Note that the error signal is e(t) and the actual timing 
error is  (t). 
Since the noise terms are constant over one bit time and vary from bit to bit, the control signal can 
be written as  
 
 
2
2
2
( )
( ( )
)
( ( )
)
        
(
)
d
PN
s
PN
s
i
d
i
e t
PT
R
t
T
R
t
T
N p t
iT
ε
δ
ε
δ
∞
=−∞
⎡
⎤
=
−
−
+
⎣
⎦
+
−
∑
 
(7.2-61) 
 
in which p(t) is a unit pulse of duration Td seconds and where the noise terms are given by 
 
 
1
2
i
i
i
N
n
n
=
+
 
(7.2-62) 
 
At this point it will be assumed that  (t) is very slowly varying and is small in magnitude. For 
convenience we will suppress the time dependence of  (t) and call it  . 
 
 
7.2.2.2 Noncoherent I-Q Early-Late Gate Code-Tracking Loop Performance  
 
Before we analyze the noise properties let us consider the S-curve shape for NRZ symbols. Figure 7.2-5 
illustrates the S-curve (
2
2
(
)
(
)
PN
s
PN
s
R
T
R
T
ε
δ
ε
δ
+
−
−
) for four values of   equal to 1/2, 1/4, 1/8, and 1/16 for 
the early-late gate error detector (L2–E2). Thus we see that as   is reduced the linear region reduces, but the 
slope increases. 
 
δ =1/2
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
S(ε)
ε
δ
( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ =1/8
S(ε)
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.6
0.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
δ =1/16
S( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
=
S
)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
(
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
ε
ε
1/4
δ =1/2
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
S(ε)
ε
δ
( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ =1/8
S(ε)
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.6
0.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
δ =1/16
S( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
=
S
)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
(
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
ε
ε
δ =1/2
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
S(ε)
ε
δ
( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ =1/8
S(ε)
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
δ =1/2
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
S(ε)
ε
δ
( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ =1/8
S(ε)
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.6
0.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
δ =1/16
S( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.6
0.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
δ =1/16
S( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
=
S
)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
(
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
ε
ε
1/4
 
 
Figure 7.2-5 The S-curve and associated slope (gain) for NRZ symbols for the noncoherent early-late gate code-tracking loop. 
 
 
Assuming for the moment the noise can be characterized as stationary noise, it is desirable to be 
able to model the code-tracking loop as a control loop with feedback. The analysis can most easily be done 
when the loop is linearized. As noted in Figure 7.2-5 the region of the error control is linear around the    = 0 
point. Hence it is assumed that the error   is small and stays in the linear region for all time. Let the slope or 
“gain” of the error curve (often called the S-curve in phase locked loop literature) be denoted by K, where K 
is defined as  

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           489 
 
 
2
2
0
(
)
(
)
PN
s
PN
s
d
K
R
T
R
T
d
ε
ε
δ
ε
δ
ε
=
⎡
⎤
=
−
−
+
⎣
⎦
 
(7.2-63) 
 
Denote the second (noise) term as N(t). Then the error signal can be represented by 
 
 
2
( )
( )
d
e t
KPT
N t
ε
=
+
 
(7.2-64) 
 
where 
 
 
( )
(
)
i
d
i
N t
N p t
iT
∞
=−∞
=
−
∑
 
(7.2-65) 
 
where the random variables Ni are statistically independent from sample to sample since they are composed 
of integrations of time disjoint segments of WGN. The estimate of the timing from the oscillator can be put 
in Heaviside operator notation [3]. Therefore one can write the code-timing estimate as 
 
 
ˆ
( )
( )
v
K
T
F s
e t
s
⎧
⎫
= ⎨
⎬
⎩
⎭
 
(7.2-66) 
 
where Kv is the VCXO scale parameter in chips per volt, F(s)/s is a Heaviside operator operating on the 
signal e(t). From (7.2-58), (7.2-64), and (7.2-66), one obtains  
 
 
2
( )
( )
( )
v
d
K F s
KPT
N t
T t
s
ε
ε
⎡
⎤
+
=
−
⎣
⎦
 
(7.2-67) 
 
where  (t) has been written as    to simplify the equations. It is to be noted that e(t) and  (t) are defined by 
(7.2-57) and (7.2-58), respectively. Equation (7.2-64) can be used with   (t) to produce 
 
 
(
)
2
2
2
2
( )
( )
( )
( )
1
( )
1
( )
v
d
v
v
d
d
d
K F s KPT N t
T t
s
t
K
K
F s KPT
F s KPT
KPT
s
s
ε
=
−
⎡
⎤
⎡
⎤
+
+
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
 
(7.2-68) 
 
with T(t) being the input time delay function, which is assumed to be constant with time in the analysis to 
follow. Now define the closed-loop transfer function of the code-tracking loop, H(s), by 
 
 
2
2
( )
( )
( )
1
v
d
v
d
K F s
KPT
s
H s
K F s
KPT
s
= ⎡
⎤
+
⎢
⎥
⎣
⎦
 
(7.2-69) 
 
From (7.2-68) and (7.2-69) it follows that 
 
 
(
)
2
( )
( )
1
( )
( )
( )
d
N t
t
H s
T t
H s KPT
ε
=
−
−
 
(7.2-70) 
 
which is the stochastic differential equation in Heaviside notation that specifies the code-tracking loop. We 
will assume that the input timing is constant so that the only term that produces an error is the loop noise 

 490                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
term that is the second term in (7.2-70) since the first term converges to zero. Therefore the error under 
consideration is given by 
 
 
2
( )
( )
( )
d
N t
t
H s
KPT
ε
⎧
⎫
= −
⎨
⎬
⎩
⎭
 
(7.2-71) 
 
The linearized tracking loop timing error variance, due to thermal noise, is given from (7.2-71) by the 
integral3 
 
 
2
2
2
2
4
2
2
4
( )
2
(0)
( )
N
L
N
d
d
S
f
B S
H f
df
K P T
K P T
ε
σ
∞
−∞
=
≅
∫
 
(7.2-72) 
 
where K is the slope of the S-curve, P is the power of the signal, Td is the data bit duration in seconds, SN(0) 
is the noise power spectral density of the noise at zero frequency in watts/Hz, and BL is the one-sided closed-
loop noise bandwidth in Hz.  
It was assumed that the code-tracking loop is very narrowband relative to a chip rate. It follows that 
if the noise spectral density of N(t) can be evaluated at f = 0, then the code-tracking error variance can be 
evaluated from (7.2-72).  
 
 
7.2.2.3 Evaluation of the Sample and Hold Noise Sequence for the Noncoherent I-Q Early-Late Loop 
 
It is to be noted from (7.2-60) that 
 
 
{
}
1
2
0
i
i
E n n
=
 
(7.2-73) 
 
since moments of odd numbers of zero mean Gaussian random variables are zero. Recall that N(t) is given by 
(7.2-65). From (7.2-62) and (7.2-65) it follows that  
 
 
1
2
(
)
(
)
(
)
i
i
i
Var N
Var n
Var n
=
+
 
(7.2-74) 
 
Consider the autocorrelation function of N(t) where 
 
 
{
}
{
}
2
( )
( )
(
)
1
      0
N
i
d
d
R
E N t N t
E N
T
T
τ
τ
τ
τ
⎡
⎤
=
+
=
−
≤
≤
⎢
⎥
⎣
⎦
 
(7.2-75) 
 
where x  is the time average value of x. It therefore follows that the power spectral density is given by 
 
 
2
1
2
sin(
)
( )
(
)
(
)
    
i
i
d
N
d
d
fT
S
f
Var n
Var n
T
f
fT
π
π
⎛
⎞
⎡
⎤
=
+
∀
⎜
⎟
⎣
⎦
⎝
⎠
 
(7.2-76) 
 
With the assumption that the code loop bandwidth is small compared to the input bandwidth B, the 
power spectral density at f = 0 is given by 
 
 
1
2
( )
(
)
(
)
     for      
1/
i
i
N
d
d
S
f
Var n
Var n
T
f
T
⎡
⎤
≅
+
<<
⎣
⎦
 
(7.2-77) 
                                                          
3 It is to be noted that the delay in the loop was assumed to satisfy BLTb << 1, since the major part of the delay is the bit time integrators. 
This assumption will be made on all the remaining analyses for code-tracking error in this chapter. 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           491 
 
In (7.2-77) the two constituent noise terms are indicated. Consider the first noise term 
1i
n first, so that it 
follows that 
 
 
{ }
{
}
2
2
2
2
1
(
)
4
(
)
(
)
i
i
PN
s
cL
cE
d
Var n
PE d
R
T E
n
n
T
δ
=
−
 
(7.2-78) 
 
From (7.2-52) and (7.2-54) one has the result 
 
 
[
]
2
2
1
0
(
)
4
(
)
1
(2
)
i
d
PN
s
d
PN
s
Var n
PT R
T N T
R
T
δ
δ
=
−
 
(7.2-79) 
 
Now consider the variance of the second term 
2 ,
i
n
 which is given by 
 
 
(
)
(
)(
)
{
}
2
2
2
2
2
2
2
2
2i
sL
cL
sE
cE
sL
cL
sE
cE
Var n
E
n
n
n
n
n
n
n
n
⎡
⎤
⎡
⎤
⎡
⎤
⎡
⎤
=
+
−
+
+
−
+
⎣
⎦
⎣
⎦
⎣
⎦
⎣
⎦
 
(7.2-80) 
 
Sixteen terms are obtained by direct expansion. They can be broken down into four terms of four terms each. 
The four terms are 
 
 
{
}
{
}
{
}
{
}
{
}
{
}
{
}
{
}
{
}
{
}
{
}
{
}
{
}
{
}
{
}
{
}
4
2
2
2
2
2
2
1
2
2
4
2
2
2
2
2
2
2
2
2
4
2
2
3
2
2
2
2
2
2
4
3
sL
sL
cL
sL
sE
sL
cE
cL
sL
cL
cL
sE
cL
cE
sE
sL
sE
cL
sE
sE
cE
cE
sL
cE
cL
cE
sE
cE
T
E n
E n n
E n n
E n n
T
E n n
E n
E n n
E n n
T
E n n
E n n
E n
E n n
T
E n n
E n n
E n n
E n
=
+
−
−
=
+
−
−
= −
−
+
+
= −
−
+
+
 
(7.2-81) 
 
For Gaussian, zero mean, random variables it is true that [4], 
 
 
{
}
{ } { }
{ } { }
{ } { }
E uvxy
E uv E xy
E ux E vy
E uy E vx
=
+
+
 
(7.2-82) 
 
Since it turns out that all four terms in (7.2-81) yield the same result, consider the first term T1 
 
 
2
2
2
0
1
2
2
(2
)
4
d
PN
s
N T
T
R
T
δ
⎡
⎤
=
−
⎣
⎦ 
(7.2-83) 
 
Since all the other three terms evaluate to the same quantity the result is  
 
 
2
2
2
2
0
(
)
2
1
(2
)
i
d
PN
s
Var n
N T
R
T
δ
⎡
⎤
=
−
⎣
⎦ 
(7.2-84) 
 
So that TdVar(Ni) is given by 
 
 
[
]
4
2
0
2
3
2
0
(0)
(
)
4
(
) 1
(2
)
           
2
1
(2
)
N
d
i
d
PN
s
PN
s
d
PN
s
S
T Var N
N PT R
T
R
T
N T
R
T
δ
δ
δ
=
=
−
⎡
⎤
+
−
⎣
⎦
 
(7.2-85) 
 
 
7.2.2.4 Evaluation of the Noncoherent I-Q Early-Late Gate Code Loop Tracking Error Performance 
 
At this point in the analysis we are in a position to evaluate the noncoherent baseband code loop tracking 
error variance, which from (7.2-72) and (7.2-85) yields 

 492                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
  
(
)
2
0
2
2
2
0
2
2
1
(2
)
2
4
(
) 1
(2
)
,     symbols
PN
s
L
sym
PN
s
PN
s
d
N
R
T
N B
R
T
R
T
K P
PT
δ
σ
δ
δ
⎡
⎤
⎡
⎤
−
⎣
⎦
⎡
⎤
⎢
⎥
=
−
+
⎣
⎦
⎢
⎥
⎣
⎦
 
(7.2-86) 
 
for values of    such that   < 0.5  and the units of the variance is in symbols2. This equation is our final 
general result for unit amplitude code symbols, which includes NRZ, Manchester, and BOC symbol type plus 
any others that are binary valued ( 1
± ) over a symbol. Note that to convert to the actual time error from the 
symbol error, the following relationship applies 
 
 
 (s)
t
s
sym
T
σ
σ
=
 
(7.2-87) 
 
It is to be recalled that RPN( ) is the autocorrelation function of the symbol waveform evaluated at 
time offset   from zero. In addition it is to be noted that channel filtering is not accounted for in this 
expression.  
 
 
7.2.2.5 Noncoherent I-Q Early-Late Gate Code Loop Tracking Error Performance for NRZ Symbols 
 
Now consider using (7.2-86) to obtain the tracking error performance for the case of NRZ symbols as seen in 
Figure 7.2-4. In Problem 2 it is shown that the slope of the S-curve at   = 0 is given by 
 
 
4(1
)  for  0
0.5
K
δ
δ
=
−
<
≤
 
(7.2-88) 
 
It is clear that gain (K) in volts/symbol has the range of 4 to 2 as   goes from 0 to 0.5. Now the two 
correlation function values can be obtained in closed form in Problem 2 and are given by 
 
 
(
)
1
   and   
(2
)
1 2
PN
s
PN
s
R
T
R
T
δ
δ
δ
δ
= −
= −
 
(7.2-89) 
 
In Problem 2 it is shown that using (7.2-88) and (7.2-89) in (7.2-86) yields the following result, after some 
algebra, 
 
 
2
2
0
0
2
1
,    symbols
2
(2
)(
/
)
L
sym
b
N B d
P
d
E
N
σ
⎡
⎤
=
+
⎢
⎥
−
⎣
⎦
 
(7.2-90) 
 
which is our general result for NRZ symbols with arbitrary values of d = 2 , with the condition that 
 
0.5 
δ ≤
 (d ≤1), for the early-late gate, noncoherent, baseband implemented, code-tracking loop. It can be 
seen that the smaller the value of d is, the smaller the variance of the tracking error, since d/(2–d) is 
monotonically decreasing in d. This equation agrees with Van Dierendonck, Fenton, and Ford [5] based on 
an independent derivation. As noted earlier, this derivation assumes that there is no bandwidth limitation on 
the front-end filter of the tracking loop (no channel filtering). It will be shown later in this chapter that the 
bandwidth can affect the variance result significantly [6]. 
 
 
7.2.3 Noncoherent Early-Late Gate RF Implemented Code-Tracking Loop 
 
An alternative model for code-tracking implemented at radio frequency (RF) is shown in Figure 7.2-6. This 
loop has been analyzed by Holmes and Raghavan [7] for binary values symbol types ( 1
±  amplitude), and it 
has been determined that the mean squared tracking error variance is given by 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           493 
 
(
)
2
0
2
2
2
0
2
2
1
(2
)
2
4
(
) 1
(2
)
,    symbols
PN
s
L
sym
PN
s
PN
s
N B
R
T
N B
R
T
R
T
K
P
P
δ
σ
δ
δ
α
α
⎡
⎤
⎡
⎤
−
⎣
⎦
⎡
⎤
=
−
+
⎢
⎥
⎣
⎦
⎢
⎥
⎣
⎦
 
(7.2-91) 
 
VCXO
Code gen.
ˆ
(
)
PN t
T
T
δ
−
+
ˆ
(
)
PN t
T
T
δ
−
−
BPF
(B)
(.)2
BPF
(B)
(.)2
y(t)
-
F(s)
-
+
VCXO
Code gen.
ˆ
(
)
PN t
T
T
δ
−
+
ˆ
(
)
PN t
T
T
δ
−
−
BPF
(B)
(.)2
BPF
(B)
(.)2
y(t)
-
F(s)
VCXO
Code gen.
VCXO
VCXO
Code gen.
Code gen.
ˆ
(
)
PN t
T
T
δ
−
+
ˆ
(
)
PN t
T
T
δ
−
−
BPF
(B)
(.)2
BPF
(B)
BPF
(B)
(.)2
(.)2
BPF
(B)
(.)2
BPF
(B)
BPF
(B)
(.)2
(.)2
y(t)
-
F(s)
-
+
 
 
Figure 7.2-6 Early-late gate (L2-E2) noncoherent code-tracking loop implemented at RF.  
 
 
In (7.2-91) N0 is the one-sided noise spectral density, B is the noise bandwidth of the arm filters, and 
RPN(2 Ts) is code autocorrelation function evaluated at 2 Ts symbols for any 1
±  valued PN code sequence. 
The term   in the expression for the variance of the tracking error is the filter loss of the signal from the arm 
filters, so that 
 
 
2
( )
(2
)
BB
S f
H
f
df
α
π
∞
−∞
= ∫
 
(7.2-92) 
 
and is the filtering loss due to the bandpass filters in each arm of the spread spectrum signal. In this equation 
HBB(2 f) is the baseband equivalent of the bandpass filters (BPFs) of Figure 7.2-6. It should be noted that the 
expression (7.2-91) is very similar to the baseband implemented noncoherent loop shown in (7.2-86), as 
one’s intuition might suggest. One advantage with this loop implementation is the fact that only two 
correlators are needed, as opposed to four needed in the baseband I-Q loop.  
 
 
7.2.3.1 Noncoherent Early-Late Gate RF Implemented Code-Tracking Loop with NRZ Symbols 
 
When the code symbols are NRZ, then (7.2-91) can be shown to collapse to  
 
 
2
2
0
0
2
1
   
2
(2
)(
)
c
L
s
N B d
N B
chips
T
P
d
P
σ
α
α
⎛
⎞
⎡
⎤
=
+
⎜
⎟
⎢
⎥
−
⎣
⎦
⎝
⎠
 
(7.2-93) 
 
with the signal loss   defined in (7.2-92). 
 
 
7.2.4 Noncoherent I-Q Dot Product Code-Tracking Loop with Passive Arm Filters  
 

 494                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
In this section we will treat the noncoherent dot product code-tracking loop with passive arm filters (PAF). 
We will first consider the case in which the arm filters are passive; later we will consider the case in which 
the arm filters are integrate-and-dump types. 
 
7.2.4.1 Noncoherent I-Q Dot Product Code Loop Model with PAF Model 
 
The dot product code-tracking loop is shown in Figure 7.2-7. Again we consider the following model to 
describe the input signal plus noise 
 
 
(
)
(
)
(
)
0
0
0
( )
2
( )
(
)cos
      
2
( )cos
2
( )sin
c
s
y t
Pd t PN t
T
t
n t
t
n t
t
ω
θ
ω
θ
ω
θ
=
−
+
+
+
+
+
 
(7.2-94) 
 
where, as before, P is the received power in watts, d(t) (having values of 1)
±
 is the data modulation with a 
data rate of Rd = 1/Td, PN(t–T) is the unit amplitude ( 1)
±
 pseudonoise code process, and the last two terms of 
(7.2-94) are the inphase and quadrature noise processes in which nc(t)and ns(t) are independent Gaussian 
random processes with one-sided noise spectral density N0. 
 
LPF
(B2)
LPF
(B2)
VCO
LPF
(B2)
LPF
(B2)
F(s)
Q(t)
I(t)
0
2 cos(
)t
ω
ˆ
(
)
PN t
T
−
ˆ
ˆ
(
)
(
)
PN t
T
T
PN t
T
T
δ
δ
+
−
−
−
−
Code
generator
p
Q%
E L
Q −
%
pI%
E L
I
−
%
( )
E L
P
E L
P
D
I
I
Q
Q
ε
−
−
=
+ %
%
%
%
y(t)
0
2 sin(
)t
ω
BPF
BPF
LPF
(B2)
LPF
(B2)
VCO
VCO
LPF
(B2)
LPF
(B2)
F(s)
F(s)
Q(t)
I(t)
0
2 cos(
)t
ω
ˆ
(
)
PN t
T
−
ˆ
ˆ
(
)
(
)
PN t
T
T
PN t
T
T
δ
δ
+
−
−
−
−
Code
generator
p
Q%
E L
Q −
%
pI%
E L
I
−
%
( )
E L
P
E L
P
D
I
I
Q
Q
ε
−
−
=
+ %
%
%
%
y(t)
0
2 sin(
)t
ω
BPF
BPF
BPF
 
 
Figure 7.2-7 Dot product I-Q noncoherent code-tracking loop model. 
 
 
 
Notice that the dot product noncoherent code-tracking loop utilizes the late minus early difference 
times the on-time correlation for both the I and Q channels to obtain the S-curve. The analysis is quite 
cumbersome so the results will only be outlined here.  
 
 
7.2.4.2 Noise Analysis of the Noncoherent I-Q Dot Product Code Loop with PAFs  
 
After the two bandpass filters (BPF) remove the sum frequency4 at 2 0, the signals Q(t) and I(t) are given by 
 
 
( )
( )
(
)sin( )
( )sin( )
( )cos( )
c
s
Q t
Pd t PN t
T
n t
n t
θ
θ
θ
= −
−
−
+
 
(7.2-95) 
 
and 
 
                                                          
4 It is assumed that the bandpass filter does not affect the signal quality but removes only sum frequency term. 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           495 
 
( )
( )
(
)cos( )
( )cos( )
( )sin( )
c
s
I t
Pd t PN t
T
n t
n t
θ
θ
θ
=
−
+
+
 
(7.2-96) 
 
It is easy to show that the Q channel noise terms are uncorrelated with the I channel noise terms and since 
they are Gaussian they are statistically independent; that is,  
 
 
(
)(
)
( )sin( )
( )cos( )
( )sin( )
( )cos( )
0
c
s
c
s
E
n t
n t
n t
n t
θ
θ
θ
θ
−
+
−
+
=
⎡
⎤
⎣
⎦
 
(7.2-97) 
 
Consequently let the I channel and Q channel noise terms be represented by one term with the same 
N0/2 two-sided noise spectral density so that 
 
 
( )
( )
(
)sin( )
( )
( )
( )
(
)cos( )
( )
Q
I
Q t
Pd t PN t
T
n
t
I t
Pd t PN t
T
n t
θ
θ
= −
−
+
=
−
+
 
(7.2-98) 
 
and we have already observed that nQ(t) and nI(t) are statistically independent. Now consider the punctual 
and on time despread terms. We have 
 
 
ˆ
ˆ
( )
( )
(
)cos( )
( )
(
)
(
)
ˆ
( )
( )
(
)cos( )
( )
(
)
ˆ
ˆ
( )
( )
(
)sin( )
( )
(
)
(
)
( )
( )
(
)sin(
L E
I
s
s
P
I
L E
Q
s
s
P
I
t
Pd t PN t T
n t
PN t
T
T
PN t
T
T
I t
Pd t PN t T
n t
PN t T
Q
t
Pd t PN t T
n t
PN t
T
T
PN t
T
T
I t
Pd t PN t T
θ
δ
δ
θ
θ
δ
δ
−
−
⎡
⎤⎡
⎤
=
−
+
−
−
−
+
−
⎣
⎦
⎣
⎦
⎡
⎤⎡
⎤
=
−
+
−
⎣
⎦
⎣
⎦
⎡
⎤⎡
⎤
= −
−
+
−
−
−
+
−
⎣
⎦
⎣
⎦
= −
−
ˆ
)
( )
(
)
Qn t
PN t T
θ
⎡
⎤⎡
⎤
+
−
⎣
⎦
⎣
⎦
 
(7.2-99) 
 
Denote the low-pass arm filter Laplace transform, with bandwidth B2, as F2(s). Now it is assumed 
that the filter is narrow enough to approximate the correlation function of the code. The arm filtered four 
outputs become 
 
 
[
]
( )
( )cos( )
(
)
(
)
( )
L E
L E
PN
s
PN
s
I
I
t
Pd t
R
T
R
T
n
t
θ
ε δ
ε δ
−
−
⎡
⎤
=
−
−
+
+
⎣
⎦
%
%
 
(7.2-100) 
 
where 
 
{
}
2
ˆ
ˆ
( )
( )
( )
(
)
(
)
E L
I
I
s
s
n
t
F s
n t
PN t
T
T
PN t
T
T
δ
δ
−
⎡
⎤
=
−
−
−
+
−
⎣
⎦
%
 
(7.2-101) 
 
In a similar manner 
 
 
( )
( )cos( )
( )
( )
P
P
PN
I
I
t
Pd t
R
n
t
θ
ε
=
+
%
%
 
(7.2-102) 
 
where 
 
 
{
}
2
ˆ
( )
( )
( )
(
)
P
I
I
n
t
F s
n t PN t
T
=
−
%
 
(7.2-103) 
 
Also 
 
 
[
]
( )
( )sin( )
(
)
(
)
( )
L E
L E
PN
s
PN
s
Q
Q
t
Pd t
R
T
R
T
n
t
θ
ε δ
ε δ
−
−
⎡
⎤
= −
+
−
−
+
⎣
⎦
%
%
 
(7.2-104) 
 
where 
 

 496                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
{
}
2
ˆ
ˆ
( )
( )
( )
(
)
(
)
L E
Q
Q
s
s
n
t
F s
n
t
PN t
T
T
PN t
T
T
δ
δ
−
⎡
⎤
=
−
−
−
+
−
⎣
⎦
%
 
(7.2-105) 
and  
 
 
( )
( )sin( )
( )
( )
P
P
PN
Q
Q t
Pd t
R
n
t
θ
ε
= −
+
%
%
 
(7.2-106) 
 
where 
 
{
}
2
ˆ
( )
( )
( )
(
)
P
Q
Q
n
t
F s
n
t PN t
T
=
−
%
 
(7.2-107) 
 
In Problem 5 it is shown that the error signal can be written as 
 
      
[
]
( )
( )
(
)[
]
( )
( )
(
)
(
)
( , )
(
)
(
)
( )
        
cos
( )
sin
( )
(
)
(
)
        
( )cos
( )sin
( )
        
( )
( )
( )
( )
P
P
L E
L E
L E
P
L E
P
PN
s
PN
s
PN
I
Q
PN
s
PN
s
I
Q
PN
I
I
Q
Q
D
t
P R
T
R
T
R
P
n
t
P
n
t
R
T
R
T
Pn
t
Pn
t
R
n
t n
t
n
t n
t
ε
ε
δ
ε
δ
ε
θ
θ
ε
δ
ε
δ
θ
θ
ε
−
−
−
−
≅
−
−
+
+
−
−
−
+
+
−
+
+
%
%
%
%
%
%
%
 
(7.2-108) 
 
The first term is the error control term and the rest can be viewed as noise. Thus the error control is given by 
 
 
[
]
( )
(
)
(
)
( )
PN
s
PN
s
PN
D
P R
T
R
T
R
ε
ε
δ
ε
δ
ε
≅
−
−
+
 
(7.2-109) 
 
 
The S-curve is plotted in Figure 7.2-8 for various values of  . 
 
δ =1/2
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
S(ε)
ε
δ
( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ =1/8
S(ε)
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.6
0.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
δ =1/16
S( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
=
S
)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
(
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
ε
ε
1/4
δ =1/2
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
S(ε)
ε
δ
( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ =1/8
S(ε)
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.6
0.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
δ =1/16
S( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
=
S
)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
(
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
ε
ε
δ =1/2
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
S(ε)
ε
δ
( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ =1/8
S(ε)
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
δ =1/2
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
S(ε)
ε
δ
( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ =1/8
S(ε)
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.6
0.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
δ =1/16
S( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.6
0.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
δ =1/16
S( )
ε
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
δ
=
S
)
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
(
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
δ
1.5
1.3
1.1
0.9
0.7
0.5
0.3
0.1
0.1
0.3
0.5
0.7
0.9
1.1
1.3
1.5
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
0.4
ε
ε
1/4
 
 
Figure 7.2-8 The S-curve for the dot product code-tracking loop. 
 
 
It can be shown that the gain slope is always 2, independent of  , as was observed in constructing 
these S-curves. Therefore at small errors we may linearize the error signal to be written as  
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           497 
                  
( )
( )
(
)[
]
( )
( )
(
)
(
)
( , )
2
         
cos
( )
sin
( )
(
)
(
)
        
( )cos
( )sin
( )
        
( )
( )
( )
( )
P
P
L E
L E
L E
P
L E
P
s
I
Q
PN
s
PN
s
I
Q
PN
I
I
Q
Q
D
t
P T
P
n
t
P
n
t
R
T
R
T
Pn
t
Pn
t
R
n
t n
t
n
t n
t
ε
ε
θ
θ
ε
δ
ε
δ
θ
θ
ε
−
−
−
−
≅
+
−
−
−
+
+
−
+
+
%
%
%
%
%
%
%
 
(7.2-110) 
 
Now define the two noise terms as  
 
 
( )
( )
(
)[
]
( )
( )
(
)
1( )
cos
( )
sin
( )
(
)
(
)
        
( )cos
( )sin
( )
P
P
L E
L E
I
Q
PN
s
PN
s
I
Q
PN
n t
P
n
t
P
n
t
R
T
R
T
Pn
t
Pn
t
R
θ
θ
ε
δ
ε
δ
θ
θ
ε
−
−
=
−
−
−
+
+
−
%
%
%
%
 
(7.2-111) 
and  
 
2( )
( )
( )
( )
( )
L E
P
L E
P
I
I
Q
Q
n t
n
t n
t
n
t n
t
−
−
=
+
%
%
%
%
 
(7.2-112) 
 
Therefore D( ) can be written succinctly as (neglecting the sign of the gain slope) 
 
 
1
2
( , )
2
( )
( )
s
D
t
P
n t
n t
T
ε
ε
≅
+
+
 
(7.2-113) 
 
If we denote the multiplier gain of each multiplier as Km (v/v) and the VCO gain as KVCO in Hz/v, 
then the code loop delay estimate is given by 
 
 
1
2
ˆ
( )2
( )
( )
2
m
VCO
s
s
K K
F s
P
n t
n t
T
T
s
T
P
ε
⎛
⎞
+
=
+
⎜
⎟
⎝
⎠
 
(7.2-114) 
 
and the loop filter has F(s) as its transfer function and KVCO/s is the transfer function of the VCO.  
 
Letting H(s) denote the closed-loop code loop transfer which can be written as 
 
 
2
( )/
( )
1
2
( ) /
VCO
m
VCO
m
PK
K F s
s
H s
PK
K F s
s
= +
 
(7.2-115) 
 
it is not hard to show that the linearized delay error can be written as 
 
 
[
]
1
2
( )
( )
( )
1
( )
2
s
s
n t
n t
T
H s
H s
T
P
T
ε
+
⎡
⎤
= −
+
−
⎢
⎥
⎣
⎦
 
(7.2-116) 
 
with T the input delay function (properly written as a function of time). Now the mean squared delay tracking 
error, assuming that the input delay variation is zero, can be written as 
 
 
(
)
(
)
1
2
1
2
2
2
2
2
2
( )
(2
)
( )
( 2
)
2
2
n
n
L
n
n
sym
s
S
f
B
S
f
E
H j
f
T
P
P
ε
σ
π
∞
+
+
−∞
⎧
⎫
⎛
⎞
⎪
⎪
=
=
≅
⎨
⎬
⎜
⎟
⎝
⎠
⎪
⎪
⎩
⎭∫
 
(7.2-117) 
 
 
Now in order to continue it is necessary to evaluate the spectral density of the two noise terms. First 
consider the first noise term. Since we are assuming that the error is small we shall let it be zero so that we 
greatly simplify n1(t) as 

 498                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
 
( )
( )
(
)
1( )
( )cos
( )sin
(0)
L E
L E
I
Q
PN
n t
Pn
t
Pn
t
R
θ
θ
−
−
=
−
%
%
 
(7.2-118) 
 
where RPN(0) = 1. Since both 
( )
L E
In
t
−
%
 and 
( )
L E
Q
n
t
−
%
 are statistically independent the power spectral density of 
n1(t) at f = 0 can be written as (let θ  = 0) 
 
 
1 (0)
(0)
IL E
n
n
S
PS
−
=
%
 
(7.2-119) 
 
 
Thus it is necessary to evaluate 
(0)
IL E
n
S
−
%
. In Problem 6 it is shown that 
1(0)
n
S
 can be evaluated as 
 
 
[
]
1
0
(0)
1
(2
)
n
PN
s
S
PN
R
T
δ
=
−
 
(7.2-120) 
 
 
Now consider obtaining the power spectral density of 
2( )
n t . Recall that it is defined by (7.2-112) 
 
 
2( )
( )
( )
( )
( )
L E
P
L E
P
I
I
Q
Q
n t
n
t n
t
n
t n
t
−
−
=
+
%
%
%
%
 
(7.2-121) 
 
with the four terms in (7.2-121) defined by (7.2-96), (7.2-98), (7.2-100), and (7.2-102).  
 
In order to proceed, it is convenient to approximate a Gaussian noise term times a code term by a 
Gaussian noise term. For example, from (7.2-103) we can write 
 
 
"
2
2
( )
( )
(
)
(
)
( )
(
)
P
I
I
I
n
t
h v n t
v PN t
v dv
h v n t
v dv
∞
∞
−∞
−∞
=
−
−
≅
−
∫
∫
%
 
(7.2-122) 
 
where  
 
 
"( )
( )
( )
I
I
n t
n t PN t
=
 
(7.2-123) 
 
In a similar manner one can write 
 
 
"
2
2
( )
( )
(
)
(
)
( )
(
)
P
Q
Q
Q
n
t
h v n
t
v PN t
v dv
h v n
t
v dv
∞
∞
−∞
−∞
=
−
−
≅
−
∫
∫
%
 
(7.2-124) 
 
where  
 
 
" ( )
( )
( )
Q
Q
n
t
n
t PN t
=
 
(7.2-125) 
 
The other two terms are approximated as 
 
       
 
2
'
2
ˆ
ˆ
( )
( )
(
)
(
)
(
)
          
( )
(
)
L E
I
I
s
s
I
n
t
h v n t
v
PN t
T
T
v
PN t
T
T
v
dv
h v n t
v dv
δ
δ
−
∞
−∞
∞
−∞
⎡
⎤
=
−
−
−
−
−
+
−
−
⎣
⎦
≅
−
∫
∫
%
 
(7.2-126) 
 
and  
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           499 
         
2
'
2
ˆ
ˆ
( )
( )
(
)
(
)
(
)
          
( )
(
)
L E
Q
Q
s
s
Q
n
t
h v n
t
v
PN t
T
T
v
PN t
T
T
v
dv
h v n
t
v dv
δ
δ
−
∞
−∞
∞
−∞
⎡
⎤
=
−
−
−
−
−
+
−
−
⎣
⎦
≅
−
∫
∫
%
 
(7.2-127) 
 
where the primed noise terms are defined by (7.2-126) and (7.2-127); that is, by  
 
 
'
ˆ
ˆ
( )
( )
(
)
(
)
I
I
s
s
n t
n t
PN t
T
T
PN t
T
T
δ
δ
⎡
⎤
≅
−
−
−
+
−
⎣
⎦ 
(7.2-128) 
 
and  
 
'
ˆ
ˆ
( )
( )
(
)
(
)
Q
Q
s
s
n
t
n
t
PN t
T
T
PN t
T
T
δ
δ
⎡
⎤
≅
−
−
−
+
−
⎣
⎦ 
(7.2-129) 
 
The primed and double primed noise terms are modeled as Gaussian random processes with zero 
mean values variances that are to be determined. Now consider the autocorrelation function of 
' ( )
In t . By 
definition 
 
                         
{
}
{
}
'
'
( )
(
)
( )
(
)
ˆ
ˆ
(
)
(
)
                               
ˆ
ˆ
(
)
(
)
I
I
I
I
s
s
s
s
E n t n t
E n t n t
PN t
T
T
PN t
T
T
E
PN t
T
T
PN t
T
T
τ
τ
δ
δ
δ
τ
δ
τ
−
=
−
×
⎧
⎫
⎡
⎤
−
−
−
+
−
×
⎪⎣
⎦
⎪
⎨
⎬
⎡
⎤
−
−
−
−
+
−
−
⎪
⎪
⎣
⎦
⎩
⎭
 
(7.2-130) 
 
This can be evaluated as 
 
 
{
}
(
)
'
'
'
0
( )
( )
(
)
( ) 2 1
(2
                            
2
I
I
I
D
PN
s
n
N
R
E n t n t
R
T
τ
τ
δ
τ
δ
=
−
=
−
⎡
⎤
⎣
⎦
 
(7.2-131) 
 
in which 
( )
D
δ
τ  is the Dirac delta function—a function that integrates to 1 if the origin is covered in the 
integration and integrates to zero otherwise. Furthermore it is zero everywhere except   = 0 and is unbounded 
at   = 0. Now consider 
" ( )
In
R
τ   
 
 
{
} {
}
"
ˆ
ˆ
( )
(
)
(
)
( )
(
)
I
I
I
n
R
E PN t
T PN t
T
E n t n t
τ
τ
τ
=
−
−
−
−
 
(7.2-132) 
 
which can be evaluated to 
 
 
"
0
( )
( )
2
I
D
n
N
R
τ
δ
τ
=
 
(7.2-133) 
 
In Problem 7 it is shown that power spectral density of n2(t) is given by 
 
 
{
}
2
2
(0) / 2
( )
( )
(
)
( )
(
)
L E
L E
P
P
n
n
I
I
I
I
S
R
E
n
t n
t
n
t n
t
d
τ
τ
τ
τ
−
−
∞
−∞
⎧
⎫
⎪
⎪
=
=
−
−
⎨
⎬
⎪
⎪
⎩
⎭
∫%
%
%
%
F
 
(7.2-134) 
 
To evaluate (7.2-134), write each noise term in terms of its filter function, so that 
 

 500                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
{
} {
}
2
'
'
"
"
2
2
2
2
(0)/ 2
( )
( )
( )
( )
(
)
(
)
(
)
(
)
n
I
I
I
I
S
h u h v h x h y E n t
u n t
v
E n t
x n t
y
dudvdxdy
τ
τ
∞
∞
∞
∞
−∞−∞−∞−∞
=
−
−−
−
−
−
∫∫∫∫
(7.2-135) 
 
 
and 
' ( )
In t  and 
"( )
In t  are defined via (7.2-128) and (7.2-123). Problem 8 shows that (7.2-135) can be 
evaluated as 
 
 
[
]
2
2
'
0
2
(0)
2
1
(2
)
n
PN
s
S
N B
R
T
δ
=
−
 
(7.2-136) 
 
where 
'
2
B  is given by 
 
 
4
'
2
2( )
B
H
f
df
∞
−∞
= ∫
 
(7.2-137) 
 
in which H2(f) is the transfer function of the low pass arm filters that have impulse response of h2(t). Note 
that the bandwidths indicated in Figure 7.2-5 denote the noise bandwidth, which is given by 
 
 
2
2
2( )
B
H
f
df
∞
−∞
= ∫
 
(7.2-138) 
 
 
We are now in a position to evaluate the tracking error variance of the dot product code-tracking 
loop. From (7.2-117) we have 
 
 
(
)
(
)
1
2
1
2
2
2
2
2
2
( )
(2
)
( )
( 2
)
2
2
n
n
L
n
n
sym
s
S
f
B
S
f
E
H j
f
T
P
P
ε
σ
π
∞
+
+
−∞
⎧
⎫
⎛
⎞
⎪
⎪
=
=
≅
⎨
⎬
⎜
⎟
⎝
⎠
⎪
⎪
⎩
⎭∫
 
(7.2-139) 
 
and since n1(t) and n2(t) are statistically independent, we have 
 
 
1
2
1
2
( )
( )
( )
n
n
n
n
S
f
S
f
S
f
+
=
+
 
(7.2-140) 
 
One has for the mean squared tracking error 
 
 
(
)
[
]
2
2
'
0
0
2
2
2
1
(2
)
2
1
(2
)
4
L
sym
PN
s
PN
s
B
PN
R
T
N B
R
T
P
σ
δ
δ
⎡
⎤
=
−
+
−
⎣
⎦ 
(7.2-141) 
 
Or in a little simpler form, our result for the noncoherent dot product with PMFs is 
 
 
(
)
'
2
2
0
0
2
1
(2
)
2
1
,    symbols
2
L
PN
s
sym
N B
R
T
N B
P
P
δ
σ
−
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(7.2-142) 
 
which is the general result. From [8] the relationship between B2 and 
'
2
B  for an n-pole Butterworth filter 
 
 
'
2
2
1
1
2
B
B
n
⎛
⎞
=
−
⎜
⎟
⎝
⎠
 
(7.2-143) 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           501 
Clearly 
'
2
B  is smaller than B2. In the limit for large n, it is seen that
'
2
2
B
B
≅
. This general result can yield the 
common NRZ case result, noting that (1–RPN(2 Ts)) = d. Therefore 
 
 
'
2
2
0
0
2
2
1
     symbols
2
L
sym
N B d
N B
P
P
σ
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(7.2-144) 
 
Conversion to the error variance in (s)2 is accomplished by multiplying the right side of (7.2-144) by 
2
sT . 
Furthermore conversion from time to distance for pseudonoise error estimates is accomplished by 
multiplying the variance of the time error by 
2c  so that 
 
 
(
)
'
0
2
2
2
2
0
2
1
(2
)
2
1
     meters
2
L
PN
s
r
s
N B
R
T
N B
T c
P
P
δ
σ
−
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(7.2-145) 
 
where c is the speed of light. In the same manner for NRZ symbols we have 
 
 
'
2
2
2
2
0
0
2
2
1
     meters
2
L
r
s
N B d
N B
T c
P
P
σ
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(7.2-146) 
 
 
7.2.5 Noncoherent I-Q Dot Product Code-Tracking Loop with Active Arm Filters  
 
Another important code-tracking loop is the dot product loop with active arm filters. Its model is shown in 
Figure 7.2-9 which illustrates the loop is very similar to the previous loop model, except that the arm filters 
are now active, rather than passive. 
 
In an analysis similar to the previous one [9], it has been shown than that the code-tracking error 
performance, in the general case, is given by  
 
 
(
)
0
2
2
0
1
(2
)
1
     symbols
2
L
PN
s
sym
d
N B
R
T
N
P
PT
δ
σ
−
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(7.2-147) 
 
I&D
VCO
F(s)
Q(t)
I(t)
0
2 cos(
)t
ω
ˆ
(
)
PN t
T
−
ˆ
ˆ
(
)
(
)
PN t
T
T
PN t
T
T
δ
δ
−
+
−
−
−
Code
generator
p
Q%
L E
Q −
%
pI%
L E
I −
%
( )
E L
P
E L
P
D
I
I
Q
Q
ε
−
−
=
+ %
%
%
%
y(t)
0
2 sin(
)t
ω
BPF
BPF
I&D
I&D
I&D
I&D
VCO
F(s)
Q(t)
I(t)
0
2 cos(
)t
ω
ˆ
(
)
PN t
T
−
ˆ
ˆ
(
)
(
)
PN t
T
T
PN t
T
T
δ
δ
−
+
−
−
−
Code
generator
p
Q%
L E
Q −
%
pI%
L E
I −
%
( )
E L
P
E L
P
D
I
I
Q
Q
ε
−
−
=
+ %
%
%
%
y(t)
0
2 sin(
)t
ω
BPF
BPF
I&D
I&D
I&D
 
 
Figure 7.2-9 Dot product noncoherent I-Q code-tracking loop model with integrate-and-dump arm filters. 
 

 502                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
in which Rd =1/Td is the symbol or bit rate depending on whether the signal is coded or not. When NRZ 
symbols are used the general result of (7.2-147) simplifies to  
 
 
2
2
0
0
1
     
2
L
sym
d
N B d
N
symbols
P
PT
σ
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(7.2-148) 
 
This result agrees with [10] for NRZ symbols. 
 
When the dot product loop (7.2-148) is compared to the early-late gate noncoherent loop 
performance (7.2-90), we see that the dot product loop has slightly lower tracking error variance at the lower 
P/N0 values, since (2/(2–d))≥ 1. 
 
Example 1 Let us compare the dot product and the late minus early squared code-tracking loops for tracking 
error performance. Assume that the BPSK signal is uncoded, and has a 50 bps data rate. Compare the two 
cases in tracking error squared. A comparison is illustrated in Figure 7.2-10. 
 
As can be seen in the figure the performance is very close with the dot product being slightly better 
(smaller sigma) at the lower values of C/N0.  
 
10
12
14
16
18
20
0
0.1
0.2
0.3
0.4
0.5
C/N0 (dB-Hz)
Sigma of tracking error (symbols)
E2-L2
Dot 
product
10
12
14
16
18
20
0
0.1
0.2
0.3
0.4
0.5
C/N0 (dB-Hz)
Sigma of tracking error (symbols)
E2-L2
Dot 
product
 
 
Figure 7.2-10 Comparison of the sigma for the dot product and early-late gate noncoherent code-tracking loops with BL = 2 Hz, 50 bps 
data rate, and d = ¼. 
 
 
7.3 EARLY-LATE GATE NONCOHERENT I-Q CODE-TRACKING WITH FILTERING  
AND INTERFERENCE  
Equation Section (Next) 
In this section we will treat the effects of channel filtering on the performance of the early-late gate code-
tracking loop when corrupted by white Gaussian noise and Gaussian interference [11]. The analysis is quite 
lengthy, so it will be summarized here and the curious reader can consult [11]. 
 
 
7.3.1 Signal Model for the Noncoherent I-Q Early-Late Gate Code-Tracking Loop with Channel 
Filtering 
 
The received signal is composed of the sum of a band-limited BPSK direct sequence signal with BPSK data 
modulation and a band-limited Gaussian random noise interference, which could be just thermal noise or the 
sum of thermal and Gaussian interference noise (including jammer noise). It will be assumed that the noise, 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           503 
which includes the thermal noise and the interfering noise-like signal, has a spectral density that is even in 
the frequency variable f. 
 
The received signal, at the input of the receiver, is described by 
 
 
( )
(
)
(
)
( )
(
)
( )
(
)
0
1
0
2
0
2
( )
cos
2
cos
2
sin
y t
Pd t PN t
T
t
n t
t
n
t
t
ω
ω
ω
=
−
+
+
 
(7.3-1) 
 
where P is the received signal power in watts, PN(t) is the binary valued ( 1)
±
 spread spectrum direct 
sequence spreading code with code symbol duration Ts, d(t) is the nonreturn to zero (NRZ) data signal, and T 
is the (initially) unknown delay from the transmitter to the receiver. It will be assumed that the data and the 
code sequence are connected to the same clock. Hence knowing the code-state implies knowing the data 
transition points in time. The last two terms in (7.3-1) represent the inphase and quadrature phases of the sum 
of two filtered, statistically independent random noise processes, representing the sum of thermal noise and a 
Gaussian interference process. Thus y(t) can be written as ( )
( )
( )
y t
x t
n t
=
+
, where x(t) is the signal and n(t) 
is the sum of thermal noise and interference. The channel filtering is due to the presence of a bandpass filter 
(BPF) at the front end of the receiver. 
The code-tracking loop under consideration is shown in Figure 7.3-1, which we have studied earlier. 
It will be assumed that BLTb =
 1, where BL is the closed-loop noise bandwidth of the loop and Tb is the bit 
duration. The input is filtered with a B Hz (3 dB) bandwidth filter, which produces the filtered input ( )
y t
%
. 
The transfer function of the bandpass filter is H(f), and the baseband equivalent transfer function is HBB(f). 
The baseband equivalent transfer function HBB(f) can be related to the bandpass filter transfer function H(f), 
by the following [12]: 
 
 
(
)
( )   
0
                
0        
0
BB
c
H
f
f
H
f
f
f
−
=
>
<
=    
 
(7.3-2) 
 
Late correlator
BPF
(W)
Carrier
source
LPF
LPF
PN
Code
Gen.
F(s)
Sample
& hold
( )2
Sample
& hold
( )2
+
Sample
& hold
( )2
Sample
& hold
( )2
+
y(t)
Late arm
VCXO
BPF
Carrier
Carrier
LPF
LPF
PN
Code
Gen.
F(s)
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Late
VCXO
-
ys(t)
yc(t)
Early arm
eL(t)
eE(t)
e(t)
2L
e
1L
e
2E
e
2L
e
Early correlator
BPF
Carrier
Carrier
LPF
LPF
PN
Code
Gen.
F(s)
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Late
VCXO
BPF
Carrier
Carrier
LPF
LPF
PN
Code
Gen.
+
F(s)
Sample
&
Sample
( )2
Sample
&
Sample
&
( )2
+
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Late
VCXO
ys
yc
Early
2L
e
1L
e
2E
e
2L
e
1E
e%
2E
e%
1L
e%
2L
e%
0
ˆ
2 sin(
)
t
ω
θ
+
0
ˆ
2 cos(
)
t
ω
θ
+
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
(
1)
(.)
b
b
nT
n
T
dt
−∫
(
1)
(.)
b
b
nT
n
T
dt
−∫
(
1)
(.)
b
b
nT
n
T
dt
−∫
(
1)
(.)
b
b
nT
n
T
dt
−∫
-
Late correlator
BPF
(W)
Carrier
source
LPF
LPF
PN
Code
Gen.
F(s)
Sample
& hold
Sample
& hold
( )2
Sample
& hold
Sample
& hold
( )2
+
Sample
& hold
Sample
& hold
( )2
Sample
& hold
Sample
& hold
( )2
+
y(t)
Late arm
VCXO
BPF
Carrier
Carrier
LPF
LPF
PN
Code
Gen.
F(s)
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Late
VCXO
-
ys(t)
yc(t)
Early arm
eL(t)
eE(t)
e(t)
2L
e2L
e
1L
e1L
e
2E
e2E
e
2L
e2L
e
Early correlator
BPF
Carrier
Carrier
LPF
LPF
PN
Code
Gen.
F(s)
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Late
VCXO
BPF
Carrier
Carrier
LPF
LPF
PN
Code
Gen.
+
F(s)
Sample
&
Sample
( )2
Sample
&
Sample
&
( )2
+
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Late
VCXO
ys
yc
Early
2L
e2L
e
1L
e1L
e
2E
e2E
e
2L
e2L
e
1E
e%
2E
e%
1L
e%
2L
e%
0
ˆ
2 sin(
)
t
ω
θ
+
0
ˆ
2 cos(
)
t
ω
θ
+
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
(
1)
(.)
b
b
nT
n
T
dt
−∫
(
1)
(.)
b
b
nT
n
T
dt
−∫
(
1)
(.)
b
b
nT
n
T
dt
−∫
(
1)
(.)
b
b
nT
n
T
dt
−∫
-
 
 
Figure 7.3-1 Noncoherent early-late gate code-tracking loop implemented at baseband with channel filtering. 
 
 

 504                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
Let h(t) denote the radio frequency filter impulse response and the Fourier transform of H(f); then 
since h(t) is real, it follows that  
 
 
(
)
( )
*
H
f
H
f
−
=
 
(7.3-3) 
 
Using (7.3-3) in (7.3-2) produces 
 
 
(
)
(
)
*
0              
0
                    
 
*
0
BB
c
H
f
f
f
H
f
f
−
−
=
>
=
−
<
 
(7.3-4) 
 
It follows that the RF filter transfer function can be written in terms of the baseband transfer function as 
 
 
( )
(
)
(
)
*
BB
c
BB
c
H
f
H
f
f
H
f
f
=
−
+
−
−
 
(7.3-5) 
 
In addition, the impulse function response can be written [12] as 
 
 
( )
( )
2
2Re
c
j
f t
BB
h t
h
t e
π
⎡
⎤
=
⎣
⎦ 
(7.3-6) 
 
where hBB(t) is the Fourier transform of HBB(f). Thus, the baseband impulse response can be written as  
 
 
( )
( )
{
}
( )
2
BB
BB
BB
j
ft
h
t
H
f
H
f e
df
π
∞
−∞
=
= ∫
F
 
(7.3-7) 
 
where 
{
}
( )
BB
H
f
F
denotes the Fourier transform of hBB(t). It will be assumed that the baseband equivalent 
filter transfer function is complex conjugate symmetric; that is, 
 
 
( )
(
)
*
BB
BB
H
f
H
f
=
−
 
(7.3-8) 
 
The received signal, after being filtered by the front-end bandpass filter, can be expressed as 
 
 
( )
(
)
(
)
( )
(
)
( )
(
)
0
1
0
2
0
2
( )
cos
         
2
cos
2
sin
y t
Pd t PN t
T
t
n t
t
n
t
t
ω
ω
ω
=
−
+
+
%
%
%
 
(7.3-9) 
 
where the tilde over a term in an equation implies that the front-end filter filters it. It was assumed that the 
data rate is very low compared to the PN code rate, and thus the filtered data and filtered code sequence can 
be factored with very small error. In fact since the data rate is so low, the filtering effect on the data will be 
negligible and is ignored in the analysis to follow. 
In this analysis the filter on the input models the product of the transmit filter and the receive 
filter(s). The baseband equivalent process can be described in terms of the baseband equivalent channel 
impulse response function as  
 
 
(
)
(
)
( )
(
)
(
)
                 
t T
BB
t
BB
PN t
T
h
t
T
u PN u du
h
t
PN v
T d
ν
ν
−
−∞
−∞
−
=
−
−
=
−
−
∫
∫
 
(7.3-10) 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           505 
Consider now the outputs at the ys(t) and yc(t) points in the code-tracking loop. The upper output 
labeled as ys(t) in Figure 7.3-1, neglecting the sum frequency terms, is given by  
 
 
( )
(
)
(
)
(
)
( )
( )
0
0
1
2
2
( )
cos
2 sin
          
sin
cos
sy
t
Pd t PN t
T
t
t
n t
n
t
ω
ω
φ
φ
φ
=
−
−
−
+
%
%
%
 
(7.3-11) 
 
It is assumed that the carrier reference is at some random phase  , relative to the input carrier phase. 
In the same manner, the lower signal yc(t) is given by 
 
 
( )
(
)
(
)
(
)
( )
( )
0
0
1
2
2
( )
cos
2 cos
          
cos
sin
cy
t
Pd t PN t
T
t
t
n t
n
t
ω
ω
φ
φ
φ
=
−
−
+
+
%
%
%
 
(7.3-12) 
 
where the filtered noise terms are given by the baseband equivalent impulse responses as  
 
 
( )
(
) ( )
1 or 2
t
i
BB
i
n t
h
t
u n u du
i
−∞
=
−
=
∫
%
 
(7.3-13) 
 
 
7.3.2 Signal and Noise Terms in the Noncoherent I-Q Early-Late Gate Code Loop with Channel  
Filtering 
 
With the signal and the interference modeled, the internal signals and interference can be modeled. Rewrite 
( )
cy t  as 
 
 
1
2
( )
( )
( )cos
( )sin
c
cc
y t
e
t
ñ t
ñ t
φ
φ
=
+
+
 
(7.3-14) 
 
Where 
 
 
(
)
(
)
(
)
0
0
( )
2
( )
cos
2 cos
cc
e
t
Pd t PN t
T
t
t
ω
ω
φ
=
−
−
 
(7.3-15) 
 
In a similar manner 
( )
sy
t  can be written as 
 
 
( )
( )
( )
1
2
sin
cos
s
cs t
y
t
e
n t
n
φ
φ
=
−
+
%
%
 
(7.3-16) 
 
where  
 
 
( )
(
)
(
)
(
)
0
0
2
( )
cos
2 sin
cs t
e
Pd t PN t
T
t
t
ω
ω
φ
=
−
−
 
(7.3-17) 
 
Now consider the four despread terms 
2L
e
, 
2E
e
, 
1L
e , and 
1E
e , which can be written as 
 
 
( )
(
)
( )
(
)
( )
(
)
2
1
2
ˆ
ˆ
sin
ˆ
       
cos
L
cs
s
s
s
e
e
t
PN t
T
T
n t
PN t
T
T
n
t
PN t
T
T
δ
φ
δ
φ
δ
=
⋅
−
−
−
−
−
+
−
−
%
%
 
(7.3-18) 
 

 506                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
( )
(
)
( )
(
)
( )
(
)
2
1
2
ˆ
ˆ
sin
ˆ
      
cos
E
cs
s
s
s
e
e
t
PN t
T
T
n t
PN t
T
T
n
t
PN t
T
T
δ
φ
δ
φ
δ
=
⋅
−
+
−
−
+
+
−
+
%
%
 
(7.3-19) 
 
 
( )
(
)
( )
(
)
( )
(
)
1
1
2
ˆ
ˆ
cos
ˆ
      
sin
L
cc
s
s
s
e
e
t
PN t
T
T
n t
PN t
T
T
n
t
PN t
T
T
δ
φ
δ
φ
δ
=
⋅
−
−
+
−
−
+
−
−
%
%
 
(7.3-20) 
 
 
( )
(
)
( )
(
)
( )
(
)
1
1
2
ˆ
ˆ
cos
ˆ
       
sin
E
cc
s
s
s
e
e
t
PN t
T
T
n t
PN t
T
T
n
t
PN t
T
T
δ
φ
δ
φ
δ
=
⋅
−
+
+
−
+
+
−
+
%
%
 
(7.3-21) 
 
Now to simplify the analysis let 
0
φ =
 on the noise terms only since it can be shown that this 
assumption does not affect the result (it is a noncoherent loop), so that one obtains 
 
 
( )
(
)
( )
(
)
2
2
ˆ
ˆ
L
cs
s
s
e
e
t
PN t
T
T
n
t
PN t
T
T
δ
δ
=
⋅
−
−
+
−
−
%
 
(7.3-22) 
 
 
( )
(
)
( )
(
)
2
2
ˆ
ˆ
E
cs
s
s
e
e
t
PN t
T
T
n
t
PN t
T
T
δ
δ
=
⋅
−
+
+
−
+
%
 
(7.3-23) 
 
 
( )
(
)
( )
(
)
1
1
ˆ
ˆ
L
cc
s
s
e
e
t
PN t
T
T
n t
PN t
T
T
δ
δ
=
⋅
−
−
+
−
−
%
 
(7.3-24) 
 
 
( )
(
)
( )
(
)
1
1
ˆ
ˆ
E
cc
s
s
e
e
t
PN t
T
T
n t
PN t
T
T
δ
δ
=
⋅
−
+
+
−
+
%
 
(7.3-25) 
 
The respective filtered signals with a “tilde” over the filtered variable, at the output of the averaging 
integrate-and-dump filters, are given by 
 
 
( )
(
)
( )
(
)
2
2
2
0
0
1
1
ˆ
ˆ
CSL
L
b
b
e
N
T
T
L
cs
s
s
b
b
e
e
t
PN
t
T
T
dt
n
t PN
t
T
T
dt
T
T
δ
δ
=
−
−
+
−
−
∫
∫
6444447444448
6444447444448
%
%
 
(7.3-26) 
 
 
( )
(
)
( )
(
)
2
2
2
0
0
1
1
ˆ
ˆ
CEL
E
b
b
e
N
T
T
E
cs
s
s
b
b
e
e
t
PN
t
T
T
dt
n
t PN
t
T
T
dt
T
T
δ
δ
=
−
+
+
−
+
∫
∫
6444447444448
6444447444448
%
%
 
(7.3-27) 
 
 
( )
(
)
( )
(
)
1
1
1
0
0
1
1
ˆ
ˆ
CEL
L
b
b
e
N
T
T
L
cc
s
s
b
b
e
e
t
PN
t
T
T
dt
n t PN
t
T
T
dt
T
T
δ
δ
=
−
−
+
−
−
∫
∫
6444447444448
6444447444448
%
%
 
(7.3-28) 
 
 
( )
(
)
( )
(
)
1
1
1
0
0
1
1
ˆ
ˆ
CSL
E
b
b
e
N
T
T
E
cc
s
s
b
b
e
e
t
PN
t
T
T
dt
n t PN
t
T
T
dt
T
T
δ
δ
=
−
+
+
−
+
∫
∫
6444447444448
6444447444448
%
%
 
(7.3-29) 
 
 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           507 
7.3.3 Signal Terms in the Noncoherent I-Q Early-Late Gate Code Loop with Channel Filtering 
 
In this section the signal terms out of the early and late correlators will be considered and complex notation 
will be utilized for analytical convenience. Figure 7.3-2 illustrates the signal model that will be used in the 
analysis to follow. 
 
BPF
2
2
 
 
L
E
e
or e
( )
x t
%
( )
(
1)
1
.
b
b
kT
b
k
T
dt
T
−∫
0
ˆ
( )
2
(
)cos(
)
CE
s
r
t
PN t
T
T
t
δ
ω
φ
=
−
+
−
0
ˆ
( )
2
(
)cos(
)
CL
s
r
t
PN t
T
T
t
δ
ω
φ
=
−
−
−
0
ˆ
( )
2
(
)sin(
)
SE
s
r
t
PN t
T
T
t
δ
ω
φ
=
−
+
−
0
ˆ
( )
2
(
)sin(
)
SL
s
r
t
PN t
T
T
t
δ
ω
φ
=
−
−
−
x(t)
BPF
2
2
 
 
L
E
e
or e
( )
x t
%
( )
(
1)
1
.
b
b
kT
b
k
T
dt
T
−∫
0
ˆ
( )
2
(
)cos(
)
CE
s
r
t
PN t
T
T
t
δ
ω
φ
=
−
+
−
0
ˆ
( )
2
(
)cos(
)
CL
s
r
t
PN t
T
T
t
δ
ω
φ
=
−
−
−
0
ˆ
( )
2
(
)sin(
)
SE
s
r
t
PN t
T
T
t
δ
ω
φ
=
−
+
−
0
ˆ
( )
2
(
)sin(
)
SL
s
r
t
PN t
T
T
t
δ
ω
φ
=
−
−
−
x(t)
 
 
Figure 7.3-2 Model for the signal components. 
 
 
 
The input is given by ( )
x t , as indicated in Figure 7.3-2. The filtered signal, out of the bandpass 
filter (BPF), is denoted by ( )
x t
%
. The two reference signals used for 
1
1
and
( ) 
 
( )
E
L
e
t
e
t  in the code-tracking 
loop of Figure 7.3-1, 
( )
CE
r
t  and 
( )
CLr
t , are shown in Figure 7.3-2. 
 
Repeating (7.3-26)–(7.3-29) and explicitly writing out 
( )
( )
 and 
CS
CC
e
t
e
t , one has, in slightly 
different order,  
 
 
 
(
)
(
)
(
)
(
)
( )
1
0
0
1
0
1
ˆ
2
( )
cos
2
cos
CE
b
r
t
T
E
s
E
b
e
Pd t PN t
T
t
PN t
T
T
t
dt
N
T
ω
δ
ω
φ
=
−
−
+
−
+
∫
644444474444448
%
%
 
(7.3-30) 
 
 
 
(
)
(
)
(
)
(
)
( )
1
0
0
1
0
1
ˆ
2
( )
cos
2
cos
CL
b
r
t
T
L
s
L
b
e
Pd t PN t
T
t
PN t
T
T
t
dt
N
T
ω
δ
ω
φ
=
−
−
−
−
+
∫
6444447444448
%
%
 
(7.3-31) 
 
 
 
(
)
(
)
(
)
(
)
( )
2
0
0
2
0
1
ˆ
2
( )
cos
2
sin
SL
b
r
t
T
E
s
E
b
e
Pd t PN t
T
t
PN t
T
T
t
dt
N
T
ω
δ
ω
φ
=
−
−
+
−
+
∫
6444447444448
%
%
 
(7.3-32) 
 
 
 
(
)
(
)
(
)
(
)
( )
2
0
0
2
0
1
ˆ
2
( )
cos
2
sin
SE
b
r
t
T
L
s
L
b
e
Pd t PN t
T
t
PN t
T
T
t
dt
N
T
ω
δ
ω
φ
=
−
−
−
−
+
∫
644444474444448
%
%
 
(7.3-33) 
 

 508                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
Now consider evaluating 
1E
e%
 and 
1L
e%
. To do this we shall neglect the data term, since in the actual 
model the correlation will only last for the data integration time and thus will not affect the noncoherent loop 
performance. To do this write the two terms in complex form. Hence5 
 
 
( )
(
)
( )
( )
(
)
0
0
1
1
2
Re
2
Re
2
j
t T
j
t
j
t
T
BB
x t
P
e
PN t
T
P
e
A
H
e
d
ω
ω
ω
ω
ω
ω
π
∞
−
−∞
⎡
⎤
⎡
⎤
=
−
=
⎢
⎥
⎣
⎦
⎣
⎦
∫
%
 (7.3-34) 
 
where the integral in brackets represents the filtered version of the Fourier transform of the voltage waveform 
PN(t) over T1 seconds. Later the limit, as T1 becomes unbounded,6 will be obtained. The two reference 
signals can be written in complex form, as  
 
    
( )
(
)
(
)
0
0
1
ˆ
'
(
)
1
2 Re
(
)
2 Re
'
'
2
s
CE
j
t T
T
j
t
j
t
j
s
T
r
t
e
PN t
T
T
e
e
A
e
d
ω
δ
ω
φ
ω
φ
δ
ω
ω
π
∞
−+
−
−
−∞
⎡
⎤
⎡
⎤
=
−
+
=
⎢
⎥
⎣
⎦
⎣
⎦
∫
 (7.3-35) 
 
      
( )
(
)
(
)
0
0
1
ˆ
'
(
)
1
2 Re
(
)
2 Re
'
'
2
s
CL
j
t T
T
j
t
j
t
j
s
T
r
t
e
PN t
T
T
e
e
A
e
d
ω
δ
ω
φ
ω
φ
δ
ω
ω
π
∞
−−
−
−
−∞
⎡
⎤
⎡
⎤
=
−
−
=
⎢
⎥
⎣
⎦
⎣
⎦
∫
 (7.3-36) 
 
where 
1T
A  is the 
1
2T  second Fourier transform of the PN code, that is  
 
 
1
1
2
( )
( )
j t
T
PN t
A
e
d
ω
π
ω
ω
−∞
−∞
=
∫
 
(7.3-37) 
 
where 
1 (
)
T
A
jω  is the Fourier transform and is given by 
 
 
1
1
1
( )
( )
T
j t
T
T
A
PN t e
dt
ω
ω
−
−
= ∫
 
(7.3-38) 
 
 
Now consider the signal part of 
1E
e% . Denote the signal part of 
1E
e%  as 
1E
s% , and let T1 become 
unbounded, so that 
 
 
( )
( )
1
1
1
1
1
1
1
1
lim 2
T
E
E
E
CE
T
T
s
e
N
E
x t r
t dt
T
→∞
−
⎧
⎫
⎪
⎪
=
−
≅
⎨
⎬
⎪
⎪
⎩
⎭
∫
%
%
%
 
(7.3-39) 
 
where E{x} denotes ensemble averaging, with the PN code sequence regarded as a random, equally likely 
(uncorrelated from chip to chip) sequence. 
Note that for complex variables 
1
Z  and 
2
Z , one has 
 
 
(
)
(
)
(
)
*
1
2
1
2
1
2
1
1
Re
Re
Re
Re
2
2
Z
Z
Z Z
Z Z
⎡
⎤
=
+
⎣
⎦ 
(7.3-40) 
 
                                                          
5 We have used HBB(f) previously, but for convenience we now use HBB( ) to mean the same thing, although technically it should be 
   HBB( /(2 )). 
6 In the analysis the correlation is taken over all time, but in the actual loop operation the correlation is only for the bit duration. Actually 
  the infinite time correlation used in the analysis simplifies some calculations.  

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           509 
and the first term is at the frequency of order 
0
2ω , and the second term is at baseband and is the term of 
interest in what follows. Using (7.3-39) in (7.3-40) yields (letting the E{.} denote the ensemble average) 
 
 
( )
(
)
(
)
(
)
(
)
1
1
1
1
1
1
ˆ
1
'
*
2
1
lim
Re
2
'
'
2
s
j
t T
T
BB
T
E
T
j
t T
T
T
j
T
d
A
H
j
e
s
P
E
T
d
e
A
e
dt
ω
ω
δ
φ
ω
ω
ω
π
ω
ω
π
∞
−
−∞
∞
→∞
−
−+
−
−∞
⎧
⎫
⎧
⎫
⎪
⎪×
⎪
⎪
⎨
⎬
⎪
⎪
⎪
⎪
⎩
⎭
=
⎨
⎬
⎧
⎫
⎪
⎪
⎪
⎪
⎨
⎬
⎪
⎪
⎪
⎪
⎩
⎭
⎩
⎭
∫
∫
∫
%
 
(7.3-41) 
 
Or collecting terms and noting that  
 
 
(
)
(
)
'
1
'
2
j
t
e
dt
ω ω
δ ω
ω
π
∞
−
−∞
=
−
∫
 
(7.3-42) 
 
and that  
 
 
{
}
1
1
1
*
1
( )
(
')
( )
lim
2
T
T
PN
T
E A
A
S
T
ω
ω
ω
→∞
⎛
⎞
⎜
⎟
=
⎜
⎟
⎝
⎠
 
(7.3-43) 
 
it can be shown [8] that 
 
 
( )
( )
(
)
ˆ
1
Re
2
s
j
T T
j
T
j
E
BB
PN
d
s
P
H
S
e
e
e
ω
ωδ
φ
ω
ω
ω
π
∞
−
−
−
−∞
⎡
⎤
=
⎢
⎥
⎣
⎦
∫
%
 
(7.3-44) 
 
Now define 
ˆ
 
T
T
ε
−
=
as the code timing error from input code to the reference code at the output of the 
bandpass filter. Then one can write (7.3-44) as 
 
 
( )
( )
(
)
1
Re
2
s
j
T
j
E
BB
PN
d
s
P
H
S
e
e
ω ε δ
φ
ω
ω
ω
π
∞
−
+
−∞
⎡
⎤
=
⎢
⎥
⎣
⎦
∫
%
 
(7.3-45) 
 
Changing to the variable f from the variableω  and suppressing7 the factors of 
π
2  in the arguments of 
HBB(j ), and reinserting the data terms (which were left out of the infinite time correlation) yield 
 
 
( )
( )
(
)
1 ( )
2
1
1
( )Re
E
s
I
j
f
T
j
E
BB
PN
E
e
Pd t
H
f S
f e
e df
N
ε
π
ε δ
φ
∞
−
+
−∞
⎡
⎤
=
+
⎢
⎥
⎣
⎦
∫
64444444744444448
%
 
(7.3-46) 
 
In a similar manner, one can show that 
 
                                                          
7 Strictly speaking, we should use a different symbol for HBB(jf) and HBB(j ) as well as SPN(f) and SPN( ); however, to simplify the  
   notation we will not. If the baseband response is written in a normalized form—that is, HBB(jf/f0) or HBB(j / 0)—there will be no  
   confusion, and the same is true for the power spectral density. 
 

 510                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
( )
( )
(
)
1 ( )
2
1
1
( )Re
L
s
I
j
f
T
j
L
BB
PN
L
e
Pd t
H
f S
f e
e df
N
ε
π
ε δ
φ
∞
−
−
−∞
⎡
⎤
=
+
⎢
⎥
⎣
⎦
∫
64444444744444448
%
 
(7.3-47) 
 
where I1E( ) and I1L( ) are defined from (7.3-46) and (7.3-47). The two expressions, (3.15) and (3.16), neglect 
the self-noise terms (we have used the mean value only), and they also neglect the double-frequency terms. 
These effects would normally be swamped out by thermal noise anyway except at very high signal-to-noise 
ratios. 
Now a simplification will be introduced that will reduce the number of terms in the analysis without 
affecting the result. First we will show that the value of φ in (7.3-46) and (7.3-47) that maximizes the output 
of the in-phase correlated channel is 
0
φ =
 mod 
!
2π  As a consequence, assuming 
( )
0,
0
cs
e
t
φ =
=
 
(neglecting the sum frequency term which will have no effect at baseband) at baseband so that at the output 
of the sample and hold  
 
 
2
2
E
E
e
N
=
%
 
(7.3-48) 
 
 
2
2
L
L
e
N
=
%
 
(7.3-49) 
 
 
( )
( )
(
)
2
1
1
( )Re
s
j
f
T
E
BB
PN
E
e
Pd t
H
f S
f e
df
N
π
ε δ
∞
−
+
−∞
⎡
⎤
=
+
⎢
⎥
⎣
⎦
∫
%
 
(7.3-50) 
 
 
( )
( )
(
)
2
1
1
( )Re
s
j
f
T
L
BB
PN
L
e
Pd t
H
f S
f e
df
N
π
ε δ
∞
−
−
−∞
⎡
⎤
=
+
⎢
⎥
⎣
⎦
∫
%
 
(7.3-51) 
 
Now let us see why 
0
φ =
 maximizes the signal component of the in-phase channel and at the same 
time zeros the signal component of the quadrature channel (see (7.3-48) and (7.3-49)) which indicate that the 
signal components of 
2
2
 and 
E
L
e
e
%
%
are zero. Also, we will show that the “real part of” the operator can be 
removed when 
0
φ =
. From (7.3-46) and (7.3-47), it follows that 
 
 
1
1
1
( )
( )
E
E
E
e
Pd t I
N
ε
=
+
%
 
(7.3-52) 
 
where 
 
 
( )
( )
(
)
2
1 ( )
Re
s
j
f
T
j
E
BB
PN
I
H
f S
f e
e df
π
ε δ
φ
ε
∞
−
+
−∞
⎡
⎤
=
⎢
⎥
⎣
⎦
∫
 
(7.3-53) 
 
For complex symmetric baseband equivalent filter transfer functions one has 
 
 
( )
(
)
*
BB
BB
H
f
H
f
=
−
 
(7.3-54) 
and since Re{Z}= (Z+Z*)/2, one has 
 
     
 
( )
( )
(
)
(
)
(
)
2
2
1
1
( )
2
s
s
j
f
T
j
f
T
j
j
E
PN
BB
BB
I
S
f
H
f e
e
H
f e
e
df
π
ε δ
π
ε δ
φ
φ
ε
∞
−
+
+
−
−∞
⎡
⎤
=
+
−
⎣
⎦
∫
 
(7.3-55) 
 
Let 
'
f
f
−
→
 in the last integral to obtain 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           511 
 
 
( )
( )
(
)
(
)
(
)
(
)
2
1
2
'
*
1
( )
2
1
          
'
'
2
s
s
j
f
T
j
E
PN
BB
j
f
T
j
BB
I
S
f
H
f e
e
df
H
f
e
e
df
π
ε δ
φ
π
ε δ
φ
ε
∞
−
+
−∞
−∞
−
+
−
+∞
=
+
−
∫
∫
 
(7.3-56) 
 
or simplifying the second term, one has 
 
 
( )
( )
(
)
2
1 ( )
2
s
j
j
j
f
T
E
PN
BB
e
e
I
S
f
H
f e
df
φ
φ
π
ε δ
ε
∞
−
−
+
−∞
⎡
⎤
+
=
⎢
⎥
⎣
⎦
∫
 
(7.3-57) 
 
or 
 
 
( )
( )
(
)
2
1 ( )
cos
s
j
f
T
E
PN
BB
I
S
f
H
f e
df
π
ε δ
ε
φ
∞
−
+
−∞
= ∫
 
(7.3-58) 
 
The maximum occurs at 
0 mod 2
φ
π
=
, so that one has 
 
 
( )
( )
( )
(
)
2
1
s
j
f
T
E
PN
BB
I
S
f
H
f e
df
π
ε δ
ε
∞
−
+
−∞
= ∫
 
(7.3-59) 
 
In a similar manner one has 
 
 
( )
( )
( )
(
)
2
1
s
j
f
T
L
PN
BB
I
S
f
H
f e
df
π
ε δ
ε
∞
−
−
−∞
= ∫
 
(7.3-60) 
 
From Figure 7.2-3 and (7.3-48) through (7.3-51), one obtains 
 
 
(
)
(
)
(
)
(
)
2
2
1
2
2
2
1
2
( )
( )
( )
and
( )
( )
( )
E
E
E
L
L
L
e
e
e
e
e
e
ε
ε
ε
ε
ε
ε
=
+
=
+
%
%
%
%
 
(7.3-61) 
 
 
(
)
( )
(
)
2
2
2
1
1
( )
( )
E
E
E
E
e
N
P d t I
N
ε
ε
=
+
+
 
(7.3-62) 
Expanding 
( )
Ee
ε , one has 
 
 
( )
(
)
( )
2
2
2
2
1
1
1
1
( )
2
( )
E
E
E
E
E
E
e
N
P I
Pd t I
N
N
ε
ε
ε
=
+
+
+
 
(7.3-63) 
 
and 
 
 
( )
( )
( )
E
L
e
e
e
ε
ε
ε
=
−
 
(7.3-64) 
 
Expanding 
( )
Le ε one has 
 
 
(
)
( )
(
)
( )
(
)
2
2
2
2
1
1
1
1
( )
2
( )
L
L
L
L
L
L
e
N
P I
Pd t I
N
N
ε
ε
ε
=
+
+
+
 
(7.3-65) 

 512                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
Summarizing, the signal terms are given by (7.3-59) and (7.3-60), and the noise terms by (7.3-26)–(7.3-29). 
It follows that the error control signal of the code-tracking loop, from (7.3-64), (7.3-63), and (7.3-65), is 
given by 
 
 
( )
( )
(
)
( )
(
)
( )
( )
( )
(
)
(
)
(
)
(
)
(
)
1
2
2
1
1
1
1
1
1
2
2
2
2
2
1
2
1
2
( )
( )
       
T
L
E
L
L
E
E
L
L
E
E
e
P I
P I
P d t I
N
P d t I
N
N
N
N
N
ε
ε
ε
ε
ε
ε
⎡
⎤
=
−
+
−
⎢
⎥
⎣
⎦
⎡
⎤
⎡
⎤
+
−
+
⎣
⎦
⎣
⎦
6444447444448
 
(7.3-66) 
 
We are now in a position to derive the closed-loop response of the code-tracking loop. However 
before we do let us observe the S-curves for the noncoherent early-late gate code-tracking loop. Figure 7.3-3 
illustrates the S-curves for d = 0.2, 0.4, 0.6, 0.8, and 1 for an NRZ random code running at 1.023 Mcps, with 
a 4-and 14-MHz bandwidth ideal bandpass filter. 
 
d =0.2
d =0.6
d =1
4 MHz BW:
2
1.75
1.5
1.25
1
0.75
0.5
0.25
0
0.25
0.5
0.75
1
1.25
1.5
1.75
2
1
0.75
0.5
0.25
0
0.25
0.5
0.75
1
d =0.4
d =0.8
S(ε)
ε
S(ε)
2
1.75
1.5
1.25
1
0.75
0.5
0.25
0
0.25
0.5
0.75
1
1.25
1.5
1.75
2
1
0.75
0.5
0.25
0
0.25
0.5
0.75
1
ε
d=1
d =0.6
d =0.4
14 MHz BW:
d=0.8
d=0.2
d =0.2
d =0.6
d =1
4 MHz BW:
2
1.75
1.5
1.25
1
0.75
0.5
0.25
0
0.25
0.5
0.75
1
1.25
1.5
1.75
2
1
0.75
0.5
0.25
0
0.25
0.5
0.75
1
d =0.4
d =0.8
S(ε)
ε
d =0.2
d =0.6
d =1
4 MHz BW:
2
1.75
1.5
1.25
1
0.75
0.5
0.25
0
0.25
0.5
0.75
1
1.25
1.5
1.75
2
1
0.75
0.5
0.25
0
0.25
0.5
0.75
1
d =0.4
d =0.8
S(ε)
ε
S(ε)
2
1.75
1.5
1.25
1
0.75
0.5
0.25
0
0.25
0.5
0.75
1
1.25
1.5
1.75
2
1
0.75
0.5
0.25
0
0.25
0.5
0.75
1
ε
d=1
d =0.6
d =0.4
14 MHz BW:
d=0.8
d=0.2
 
 
Figure 7.3-3 S-curve with 4-and 14-MHz ideal bandpass filter for the noncoherent early-late gate code-tracking loop. 
 
 
Notice that the peaks are rounded off in the 4-MHz case, and the nearly linear error curve peak 
value is reduced for smaller values of d. In the 14-MHz bandwidth case the S-curve is has very little rounding 
off. 
 
 
 
 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           513 
7.3.4 Closed-loop Operation of the Noncoherent I-Q Early-Late Gate Code Loop with Channel 
Filtering 
 
In this section the linearized code-tracking loop model will be developed. To do this, a linear error model 
must be obtained from the signal component of the error signal of the code-tracking loop. To this end, 
consider the gain (slope) around the point 
0,
ε
ε
=
 the lock point,8 by analyzing T1( ) in(7.3-66) for small 
values of error, one has 
 
 
( )
1
c
T
PKT
ε
ε
=
   (for small ε ) 
(7.3-67) 
 
where P is the received signal power, K is the gain which has units of seconds–1, K1 = KTs is the gain per PN 
symbol, and the code timing error    is in units of seconds. From (7.3-66), 
( )
1T ε  is the signal-dependent 
error control signal (also called the S-curve9 (or discriminator function). Consider the determination of K. 
 
 
( )
( )
( )
(
)
2
2
1
1
1
E
L
T
P I
I
ε
ε
ε
=
−
 
(7.3-68) 
 
 
The (power-normalized) slope K is defined by  
 
 
( )
1
0
T
K
P
ε ε
ε
ε
=
∂
=
∂
 
(7.3-69) 
 
and has units of seconds–1. Consider 
 
 
( )
( )
( )
( )
( )
11
12
2
2
1
1
1
T
T
E
L
T
P
I
P
I
ε
ε
ε
ε
ε
ε
ε
ε
⎡
⎤
⎢
⎥
∂
∂
∂
⎡
⎤
⎡
⎤
⎡
⎤=
−
⎢
⎥
⎣
⎦
⎣
⎦
⎣
⎦
∂
∂
∂
⎢
⎥
⎢
⎥
⎣
⎦
6447448 6447448
 
(7.3-70) 
 
 
So that one can write 
 
 
( )
( )
( )
1
11
12
T
T
T
ε
ε
ε
ε
∂
=
−
∂
 
(7.3-71) 
 
where 
 
 
( )
( )
( )
2
2
2
11
s
j
f T
j
f
BB
PN
T
P
H
f S
f e
e
df
π δ
π ε
ε
ε
∞
−
−
−∞
⎧
⎫
⎡
⎤
∂
⎪
⎪
=
⎨
⎬
⎢
⎥
∂
⎪
⎪
⎣
⎦
⎩
⎭
∫
 
(7.3-72) 
 
Taking the derivative 
 
                                                          
8 Note that the lock point will not be zero error except when the filtering is negligible for real filters. The lock point has to be determined  
  from the S-curve.  0  is obtained when the error control signal equals zero in the linear region of the S-curve. 
9 Note in this section we are using E2– L2 rather than the appropriate L2-E2, however the final results for tracking error are the same. 

 514                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
( )
( )
( )
(
)
( )
( )
(
)(
)
2
11
2
2
                
2
s
s
j
f
T
BB
PN
j
f
T
BB
PN
T
P
H
f S
f e
df
H
f S
f e
j
f df
π
ε δ
π
ε δ
ε
π
∞
−
+
−∞
∞
−
+
−∞
⎧
⎫
⎡
⎤
⎪
⎪
=
⎨
⎬
⎢
⎥
⎪
⎪
⎣
⎦
⎩
⎭
⎧
⎫
⎡
⎤
⎪
⎪
×
−
⎨
⎬
⎢
⎥
⎪
⎪
⎣
⎦
⎩
⎭
∫
∫
 
(7.3-73) 
 
Now evaluate this at the stable lock point,
0
ε
ε
=
 
 
 
( )
( )
( )
( )
( )
(
)
0
0
2
(
)
11
0
2
(
)
2
                   
2
s
s
j
f
T
BB
PN
j
f
T
BB
PN
T
P
H
f S
f e
df
H
f S
f e
j
f df
π
ε
δ
π
ε
δ
ε
π
∞
−
+
−∞
∞
−
+
−∞
⎧
⎫
⎡
⎤
⎪
⎪
=
⎨
⎬
⎢
⎥
⎪
⎪
⎣
⎦
⎩
⎭
⎧
⎫
⎡
⎤
⎪
⎪
×
−
⎨
⎬
⎢
⎥
⎪
⎪
⎣
⎦
⎩
⎭
∫
∫
 
(7.3-74) 
 
Consider 
( )
12
T
ε , from (7.3-70) and (7.3-53) one has 
 
 
( )
( )
( )
(
)
2
2
12
s
j
f
T
BB
PN
T
P
H
f S
f e
df
π
ε δ
ε
ε
∞
−
−
−∞
⎧
⎫
⎡
⎤
∂
⎪
⎪
=
⎨
⎬
⎢
⎥
∂
⎪
⎪
⎣
⎦
⎩
⎭
∫
 
(7.3-75) 
 
so that 
 
( )
( )
( )
( )
( )
(
)
0
0
2
(
)
12
0
2
(
)
2
                   
2
s
s s
j
f
T
BB
PN
j
f
T
BB
PN
T
P
H
f S
f e
df
H
f S
f e
j
f df
π
ε
δ
π
ε
δ
ε
π
∞
−
−
−∞
∞
−
−
−∞
⎧
⎫
⎡
⎤
⎪
⎪
=
⎨
⎬
⎢
⎥
⎪
⎪
⎣
⎦
⎩
⎭
⎧
⎫
⎡
⎤
⎪
⎪
×
−
⎨
⎬
⎢
⎥
⎪
⎪
⎣
⎦
⎩
⎭
∫
∫
 
(7.3-76) 
 
 
Now the gain (K, the slope) can be written as  
 
 
( )
(
)
( )
(
)
0
2
2
1
1
 
E
L
K
I
I
ε ε
ε
ε
ε
ε
=
∂
∂
⎡
⎤
=
−
⎢
⎥
∂
∂
⎣
⎦
 
(7.3-77) 
 
which can be also written in the per chip form10 as 
 
( )
( )
( )
( )(
)
( )
( )
( )
( )(
)
0
0
0
0
2
(
)
2
(
)
2
(
)
2
(
)
2
2
2
s
s
s
s
j
f
T
j
f
T
BB
PN
BB
PN
s
c
j
f
T
j
f
T
BB
PN
BB
PN
H
f S
f e
df
H
f S
f
j
f e
df
KT
T
H
f S
f e
df
H
f S
f
j
f e
df
π
ε
δ
π
ε
δ
π
ε
δ
π
ε
δ
π
π
∞
∞
−
+
−
+
−∞
−∞
∞
∞
+
−
+
−
−∞
−∞
⎧
⎫
⎡
⎤⎡
⎤
⋅
−
⎪
⎪
⎢
⎥⎢
⎥
⎪
⎪
⎣
⎦⎣
⎦
=
⎨
⎬
⎡
⎤⎡
⎤
⎪
⎪
−
⋅
−
⎢
⎥⎢
⎥
⎪
⎪
⎣
⎦⎣
⎦
⎩
⎭
∫
∫
∫
∫
(7.3-78) 
 
So, for small ε , (7.3-66), one can write 
 
  ( )
( )
( )
( )
( )
2
2
2
2
1
1
1
1
2
1
2
1
2
( )
0
0
B
A
L
L
E
E
L
L
E
E
n
t
n
t
e
KP
Pd t
I
N
I
N
N
N
N
N
ε
ε
⎡
⎤
⎡
⎤
⎡
⎤
=
+
−
+
+
−
+
⎣
⎦
⎣
⎦
⎣
⎦
644444474444448
64444744448
 
(7.3-79) 
 
                                                          
10 Note that since we assumed E2-L2 we will generally have a negative gain. If we had used L2-E2 we would obtain the negative of  
(7.3-78). 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           515 
where the assumption that small    was used for the signal term, but   = 0 was used in the noise terms, under 
the understanding that only small errors are considered. Therefore, in terms of the error signal and the two 
noise terms, one can write for small errors 
 
 
( )
( )
( )
( )
( )
1
s
A
B
A
B
e
KT P
n
t
n
t
K P
n
t
n
t
ε
ε
ε
=
+
+
=
+
+
 
(7.3-80) 
 
where nA(t) and nB(t) are defined in (7.3-79) and K1 = KTs. The delay estimate of the loop takes the error 
signal, filters it by the loop filter F(s) and the VCO model (Kv/s), and using the Heaviside operator notation, 
produces the code loop delay estimate ˆT  given by 
 
 
( )
( )
( )
( )
1
ˆ( )
N t
v
A
B
K F s
T s
K P
n
t
n
t
s
ε
⎡
⎤
⎢
⎥
=
+
+
⎢
⎥
⎢
⎥
⎣
⎦
644744
8
 
(7.3-81) 
 
where N(t) is the sum of the two noise terms 
 
 
( )
( )
( )
A
B
N t
n
t
n
t
=
+
 
(7.3-82) 
 
 
Since the code loop timing error is given by 
ˆ( )
iT
T s
ε =
−
, one can write 
 
 
ˆ( )
i
T s
T
ε
=
−
 
(7.3-83) 
 
where Ti is the input time delay process, which is assumed to be constant in this analysis. It follows that 
 
 
(
)
( )
( )
1
v
i
K K PF s
N t
T
s
K P
ε
ε
⎛
⎞⎡
⎤
⎜
⎟
−
=
+
⎢
⎥
⎜
⎟⎣
⎦
⎝
⎠
 
(7.3-84) 
 
Now let
'
v
K
K K
=
⋅
, then 
 
 
( )
( )
( )
1
'
1
'
i
N t
K PF s
T
K PF s s
K P
s
ε
ε
−
⋅
=
+
 
(7.3-85) 
 
Therefore the code timing error can be written as 
 
 
( )
( )
(
)
( )
1
'
( )
'
1
A
B
i
n
t
n
t
T
K PF s
K P
K F s
s
ε
⎛
⎞
+
−⎜
⎟
⎜
⎟
⎝
⎠
=
⎡
⎤
+
⎢
⎥
⎣
⎦
 
(7.3-86) 
 
Define the closed-loop code transfer function by 
 
 
( )
( )
( )
( )
'
/
1
  and therefore  1
( )
1
'
/
1
'
/
K PF s
s
H s
H s
K PF s
s
K PF s
s
=
−
=
+
+
 
(7.3-87) 
 
 
Then, from (7.3-86) and (7.3-87) and dividing by the symbol duration Ts, one can solve for 
 

 516                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
( )
( )
(
)
( )
( )
( )
1
1
i
s
s
s
t
T t
N t
H s
H s
T
T
K PT
ε
⎛
⎞
⎡
⎤
=
−
−
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
 
(7.3-88) 
 
Now the code-tracking loop variance, in symbols2, is given by 
 
 
( )
( )
(
)
2
2
2
2
2
2
1
,   symbols
N
s
s
S
f
E
H
f
df
T
K PT
ε
ε
σ
∞
−∞
⎡
⎤=
=
⎢
⎥
⎣
⎦
∫
 
(7.3-89) 
 
where E(x) denotes the ensemble average of x, and KTs is the normalized gain. Now approximate 
( )
N
S
f  
with 
( )
( )
0
0
A
B
N
n
n
S
S
+
=
; in other words, assume that the noise spectral density is essentially flat across the 
loop bandwidth, so that 
 
 
( )
(
)
2
2
2
2
1
2
0 , symbols
L
N
s
s
B
S
T
K PT
ε
σ
⋅
⎡
⎤≅
⎢
⎥
⎣
⎦
 
(7.3-90) 
 
where BL is the one-sided closed-loop noise bandwidth of the code-tracking loop, in Hz. Thus the closed-loop 
tracking error variance has been reduced to evaluating the noise spectral density at f = 0 and evaluating the 
gain of the discriminator function for a specified loop bandwidth BL. 
 
 
7.3.5 Noncoherent I-Q Early-Late Gate Code-Tracking Loop with Channel Filtering of N(t) at f = 0 
 
We now obtain spectral density at f = 0 of the N(t) process in order to evaluate (7.3-82). The noise process is 
based on the outputs of the integrate-and-dump arm filters, which change every Tb seconds. The noise 
process can be described in the following form [13], with the random variable θ  being uniform on (
)
0,
,
bT
 
independent of 
i
N   
 
 
( )
(
)
i
b
i
N t
N p t
iT
θ
∞
=−∞
=
−
−
∑
 
(7.3-91) 
 
where p(t) is a unit amplitude pulse being unity at t = 0 and having a duration of 
bT  seconds. Now the 
random variable Ni is given by the output of the error control point in the loop from (7.3-79) hence 
 
 
(
) (
)
( )
( )
(
)
2
2
2
2
2
1
2
1
1
1
1
1
2
0
0
i
i
i
i
i
i
i
i
i
L
L
E
E
i
L
L
E
E
N
N
N
N
N
Pd
I
N
I
N
=
+
−
+
+
−
 
(7.3-92) 
 
where the explicit dependence on the sequence at the i-th time has been used and di denotes d(iTb). In order to 
determine the spectral density it is necessary to determine the autocorrelation function of the noise process 
Ni. The autocorrelation function is defined by 
 
 
(
)
( )
(
)
,
N
R
t
t
E N t N t
τ
τ
⎡
⎤
+
=
+
⎣
⎦ 
(7.3-93) 
 
 
Therefore, from (7.3-91) one has 
 
 
(
)
(
)
(
) (
)
0
1
,
b
T
N
N
b
b
i
j
b
R
t
t
R
i
j
p t
iT
p t
jT
d
T
τ
τ
θ
θ
θ
∞
∞
=−∞
=−∞
+
=
−
+
−
−
−
−
∑∑
∫
 
(7.3-94) 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           517 
Now let 
 
 
   and   
   and   
b
b
i
j
n
t
jT
jT
t
θ
φ
θ
φ
−
=
−
−
=
= −−
+
 
(7.3-95) 
 
Then 
 
(
)
( )
( ) (
)
1
,
b
b
b
t
jT
T
N
N
b
n
j
b
t
jT
R
t
t
R
n
p
p
nT
d
T
τ
φ
τ
φ
φ
−
+
∞
∞
=−∞
=−∞
−
+
=
−
+
∑
∑
∫
 
(7.3-96) 
 
or 
 
 
( )
( )
(
)
N
N
b
b
n
R
R
n R
nT
τ
τ
∞
=−∞
=
−
∑
 
(7.3-97) 
 
where 
 
 
( )
(
) ( )
1
b
b
R
p
p
d
T
τ
τ
φ
φ
φ
∞
−∞
=
+
∫
 
(7.3-98) 
 
and is the finite autocorrelation function of the bit process (pulse) [13]. The power spectral density is 
therefore given by 
 
 
( )
( )
(
)
2
j
f
N
N
b
b
n
S
f
R
n
R
nT
e
d
π τ
τ
τ
∞
∞
−
=−∞
−∞
=
−
∑
∫
 
(7.3-99) 
 
Let 
b
nT
x
τ −
=
 to yield 
 
 
( )
( )
( )
(
)
2
b
j
f x nT
N
N
b
n
S
f
R
n
R
x e
dx
π
∞
∞
−
+
=−∞
−∞
= ∑
∫
 
(7.3-100) 
 
or 
 
 
( )
( )
( )
2
2
b
j
fnT
j
fx
N
N
b
n
S
f
R
n e
R
x e
dx
π
π
∞
∞
−
−
=−∞
−∞
= ∑
∫
 
(7.3-101) 
 
the integral is just the power spectral density of the PN code process, so that one can write 
 
 
( )
( )
( )
2
b
j
fnT
N
N
b
n
S
f
R
n e
S
f
π
∞
−
=−∞
= ∑
 
(7.3-102) 
 
At f = 0, the power spectral density becomes  
 
 
( )
( )
( )
0
0
N
N
b
n
S
R
n S
∞
=−∞
= ∑
 
(7.3-103) 
 
Now define  

 518                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
(
)
/
1
                      0      
b
b
b
b
t
t T
t
T
T
t
T
⎧
⎫
Λ
=
−
≤
⎨
⎬
⎩
⎭
>
 
(7.3-104) 
 
which is the autocorrelation function, normalized to unit power, for the random, unfiltered, bit sequence 
(NRZ shape assumed, and not related to the code symbol shape). Then the Fourier transform of the 
autocorrelation function is given by 
 
 
(
)
{
}
(
)
(
)
2
2
sin
/
b
b
b
b
fT
t T
T
fT
π
π
Λ
=
F
 
(7.3-105) 
 
so that 
 
 
( )
(
)
(
)
2
2
sin
b
b
b
b
fT
S
f
T
fT
π
π
=
 
(7.3-106) 
 
So that (7.3-103) becomes 
 
 
( )
( )
0
N
N
b
n
S
R
n T
∞
=−∞
= ∑
 
(7.3-107) 
 
 
Recall from (7.3-90) that  
 
 
( )
(
)
2
2
2
2
1
2
0 , symbols
L
N
s
s
B
S
T
K PT
ε
σ
⋅
⎡
⎤≅
⎢
⎥
⎣
⎦
 
(7.3-108) 
 
Now the noise process N(t) power spectral density, can be written as 
 
 
( )
( )
( )
( )
( )
(0)
0
0
A
B
A
B
A
B
N
n
n
n
n
b
n
n
b
n
n
S
S
R
n S
R
n
R
n T
∞
∞
+
+
=−∞
=−∞
⎡
⎤
=
=
=
+
⎣
⎦
∑
∑
 
(7.3-109) 
 
since 
( )
A
n
t  and 
( )
B
n
t  are statistically independent and 
(0)
b
b
S
T
=
. One has 
 
 
(0)
(0)
(0)
A
B
N
b
n
n
S
T
R
R
⎡
⎤
≅
+
⎣
⎦ 
(7.3-110) 
 
It can be shown that 
( )
0  and
( )
0,  
0
A
B
n
n
R
n
R
n
n
≅
≅
≠
. Rewrite 
i
N  from (7.3-92) as 
 
 
(
)
( )
( )
( )
( )
( )
1
1
1
1
( )
2
2
2
2
2
1
2
1
2
( , )
( )
,
( )  
      
A
B
n
i
i
i
E
E
L
L
n
i
E
E
L
L
N
P d
I
i
N
i
I
i
N
i
N
i
N
i
N
i
N
i
ε
ε
⎡
⎤
=
⋅
−
⎣
⎦
⎡
⎤
⎡
⎤
+
+
−
+
⎣
⎦
⎣
⎦
6444444447444444448
64444444744444448
 
(7.3-111) 
 
and clearly 
i
N  can be written as the sum of two noise processes 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           519 
 
( )
( )
i
A
B
N
n
i
n
i
=
+
 
(7.3-112) 
 
Consider the autocorrelation of the process 
i
N  
 
 
( )
[
]
N
i
i n
R
n
E N N +
=
 
(7.3-113) 
 
The calculations for this autocorrelation function calculation are quite detailed, so that the results 
will be (7.3-110) summarized here. The interested reader should consult [11] for more details. Starting from 
the fact that 
 
 
( )
( )
0
0
N
b
N
S
T R
≅
 
(7.3-114) 
 
one can show that RN(0) can be written as the sum of two terms of the form 
 
 
( )
( )
( )
0
0
0
N
A
B
R
R
R
=
+
 
(7.3-115) 
 
The first autocorrelation function can be written as 
 
 
( )
( )
( )
( )
( )
( )
( )
( )
( )
( )
( )
[
]
2
2
2
1
1
2
1
1
4
0
0
0
8
0
0
cos 2
A
E
L
PN
BB
n
b
L
E
PN
BB
n
s
b
P
R
I
I
S
f
H
f
S
f df
T
P I
I
S
f
H
f
S
f
fdT df
T
π
∞
−∞
∞
−∞
⎡
⎤
=
+
⋅
⎣
⎦
−
∫
∫
 
(7.3-116) 
 
The second autocorrelation function can be written as  
 
 
( )
( )
( )
( )
( )
( )
( )
1
1
2
2
2
2
2
2
2
8
0
8
         
s
B
n
BB
PN
b
i
fdT
PN
BB
n
b
R
S
f
H
f
S
f df
T
S
f
H
f
S
f e
df
T
π
∞
−∞
∞
−
−∞
⎡
⎤
=
⎢
⎥
⎣
⎦
⎡
⎤
−
⎢
⎥
⎣
⎦
∫
∫
 
(7.3-117) 
 
Hence, summing (7.3-116) and (7.3-117) and multiplying by Tb yields the total noise spectral 
density at f = 0. Now the closed-loop tracking error variance can be obtained. 
 
 
7.3.6 Noncoherent Early-Late Gate I-Q Code Loop Tracking Error Variance with Channel Filtering 
 
In this section the code-tracking error variance will be determined using the results obtained in Section 7.3.5. 
From (7.3-116) and our results for 
( )
0
A
R
 and 
( )
0
B
R
, one has our general result for the code loop tracking 
error variance expressed in symbols2.  
 
 
( )
(
)
2
2
2
2
1
2
0 ,    symbols
L
N
s
s
B
S
T
K PT
σ
⋅
⎛
⎞=
⎜
⎟
⎝
⎠
 
(7.3-118) 
 
Using (7.3-118), (7.3-117), (7.3-110), (7.3-115), and (7.3-114) and utilizing the assumptions that 
( )
1n
S
f  is 
even in f , 
( )
f
SPN
 is even in f, and the magnitude of HBB(f) is even in f, we have our general result 

 520                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
      
(
)
( )
( )
(
)
( )
( )
( )
( )
( )
(
)
( )
( )
( )
(
)
1
1
2
1
2
2
2
1
1
2
1
1
2
2
2
1
4P I
0
0
8P I
0
0
cos 2
2
8
T
E
L
n
BB
PN
T
E
L
n
BB
PN
s
L
s
s
b
I
S
f
H
f
S
f
df
I
S
f
H
f
S
f
f
T
df
B
T
K PT
T
π
σ
∞
−∞
∞
−∞
−∞
⎛
⎞
+
⎜
⎟
⎝
⎠
⎛
⎞
−
Δ
⎜
⎟
⎝
⎠
⎛
⎞=
⎜
⎟
⎝
⎠
+
∫
∫
G 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5H
G 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
5 5 5 5 5H
( )
( )
( )
( )
( )
( )
(
)
3
1
4
1
2
2
2
2
2
8
cos 2
 chips
T
n
BB
PN
T
n
BB
PN
s
b
S
f
H
f
S
f df
S
f
H
f
S
f
f
T
df
T
π
∞
∞
−∞
⎧
⎫
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎬
⎪
⎪
⎛
⎞
⎪
⎪
⎜
⎟
⎪
⎪
⎝
⎠
⎪
⎪
⎪
⎪
⎪
⎪
⎛
⎞
⎪
⎪
−
Δ
⎜
⎟
⎪
⎪
⎝
⎠
⎩
⎭
∫
∫
G 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 H
G 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5H
 
(7.3-119) 
 
where we have used   = d = 2  and where K1 is defined in (7.3-78), that is, 
 
 
( )
( )
( )
( )(
)
( )
( )
( )
( )(
)
0
0
0
0
2
(
)
2
(
)
1
2
(
)
2
(
)
2
2
2
s
s
s
s
j
f
T
BB
PN
j
f
T
BB
PN
s
s
j
f
T
BB
PN
j
f
T
BB
PN
H
f S
f e
df
H
f S
f
j
f e
df
K
KT
T
H
f S
f e
df
H
f S
f
j
f e
df
π
ε
δ
π
ε
δ
π
ε
δ
π
ε
δ
π
π
∞
−
−
−∞
∞
−
−
−∞
∞
−
+
−∞
∞
−
+
−∞
⎧
⎫
⎡
⎤×
⎪
⎪
⎢
⎥
⎪
⎪
⎣
⎦
⎪
⎪
⎡
⎤
⎪
⎪
−
⎢
⎥
⎪
⎪
⎪⎣
⎦⎪
=
=
⎨
⎬
⎡
⎤
⎪
⎪
−
×
⎢
⎥
⎪
⎪
⎣
⎦
⎪
⎪
⎪
⎪
⎡
⎤
⎪
⎪
−
⎢
⎥
⎪
⎪
⎣
⎦
⎩
⎭
∫
∫
∫
∫
 
(7.3-120) 
 
and note that KTs is the normalized slope in arithmetic units (per symbol). Recall that from (7.3-59) and 
(7.3-60) for   = 0 one has 
 
 
( )
( )
( )
(
)
2
1
0
s
j
f T
E
PN
BB
I
S
f
H
f
e
df
π δ
∞
−
−∞
= ∫
 
(7.3-121) 
 
 
( )
( )
( )
(
)
2
1
0
s
j
f T
L
PN
BB
I
S
f
H
f
e
df
π δ
∞
+
−∞
= ∫
 
(7.3-122) 
 
It is to be noted that this is the general case including both thermal noise plus interference with channel 
filtering for binary valued code formatting ( 1
± ). 
 
The important case for which there is no interference other than thermal noise and negligible 
transmitter and receiver filtering is considered in the next section as a check against our original unfiltered 
results. 
 
 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           521 
7.3.7 Noncoherent Early-Late Gate Code I-Q Tracking Error Variance with Thermal Noise and  
Without Channel Filtering 
 
In this section the receiver tracking performance without channel filtering is considered for binary valued 
code symbols. The only interference is the naturally occurring thermal noise. This can be accomplished by 
utilizing a baseband equivalent filter of the form
( )
1, for all 
BB
H
f
f
=
. Furthermore, the thermal noise is 
modeled as a white Gaussian noise process with two-sided noise spectral density of N0/2 W/Hz; therefore the 
baseband equivalent process is also white Gaussian noise. From (7.3-121) and (7.3-122) one has (in the case 
that HBB(f) = 1) 
 
 
1 ( )
(
)
E
PN
s
I
R
T
ε
ε
δ
=
+
 
(7.3-123) 
 
and  
 
 
1 ( )
(
)
L
PN
s
I
R
T
ε
ε
δ
=
−
 
(7.3-124) 
 
Also note that  
 
 
0
0
( )
2
2
PN
N
N
S
f df
∞
−∞
=
∫
 
(7.3-125) 
 
 
1
0
( )
/ 2
n
S
f
N
=
 
(7.3-126) 
 
From (7.3-119), using (7.3-123)–(7.3-126) yields  
 
     
(
)
(
)
(
)
(
)
(
)
(
)
(
)
(
)
( )
( )
1
2
4
3
2
2
2
2
2
2
1
2
2
2
4
2
2
8
2
8
8
2
2
s
s
T
PN
s
PN
s
T
i
f
T
L
PN
s
PN
s
PN
s
s
T
T
i
f
T
PN
b
b
No
P
R
T
R
T
B
No
P R
T
R
T
S
f e
df
T
K T P
No
No
S
f e
df
T
T
π
π
δ
δ
σ
δ
δ
∞
−
Δ
−∞
∞
−
Δ
−∞
⎛
⎞
⎡
⎤
+
−
⎜
⎟
⎢
⎥
⎣
⎦⎝
⎠
⎡
⎤
=
−
−
⎢
⎥
⎣
⎦
⎡
⎤
⎡
⎤
⎛
⎞
+
−
⎢
⎥
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
⎣
⎦
∫
∫
644444444744444444
8
64444444444744444444448
64748
⎧
⎫
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎬
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
⎭
6444447444448
 
(7.3-127) 
and 
 
(
)
(
)
2
2
0
PN
s
PN
s
K
R
T
R
T
ε
ε
δ
ε
δ
ε
=
∂⎡
⎤
=
+
−
−
⎣
⎦
∂
 
(7.3-128) 
 
Therefore the general results for the unfiltered signal with binary valued code symbols ( 1
± ), in white 
Gaussian noise (WGN), is given by: 
 
 
(
)
(
)
(
)
{
}
(
)
{
}
2
2
0
2
0
2
1
2
1
2
2
4
1
2
, 
PN
s
L
PN
s
PN
s
s
b
s
N
R
T
N B
R
T
R
T
T
PT
K T
P
δ
σ
δ
δ
⎡
⎤
−
⎛
⎞
⎢
⎥
=
−
+
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
 
(7.3-129) 
 
which is in units of symbols2, and the normalized gain is given by 

 522                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
 
 
 
(
)
(
)
2
2
0,   symbols
s
s
PN
s
PN
s
KT
T
R
T
R
T
ε
ε
δ
ε
δ
ε
=
∂⎡
⎤
=
+
−
−
⎣
⎦
∂
 
(7.3-130) 
 
 
Equations (7.3-129) and (7.3-130) form the general solution for unfiltered, binary valued, code-
tracking error variance in white Gaussian thermal noise with arbitrary early-late correlator spacing and is the 
same as (7.2-86). Thus the model for the noncoherent early-late gate code-tracking loop tracking error with 
filtering collapses to the known unfiltered case, as it should.  
 
We have already established the result the variance of the tracking error performance for NRZ 
symbols 
 
 
2
2
0
0
2
1
,     symbols
2
(2
)(
/
)
L
s
b
N B d
T
P
d
E
N
σ
⎛
⎞
⎡
⎤
=
+
⎜
⎟
⎢
⎥
−
⎝
⎠
⎣
⎦
 
(7.3-131) 
 
which is the same as chips2 for the NRZ code formatting case. 
 
To summarize the parameters, N0 is the one-sided noise spectral density in watts/Hz, BL is the code 
loop closed-loop noise equivalent bandwidth in Hz, d is the early minus late correlator spacing (d = 2 ) in 
chips, P is the received signal power in watts, and Eb/N0 is the received signal to noise ratio in the data 
bandwidth (symbol bandwidth for the coded case) 
 
 
0
0
/
b
b
PT
E
N
N
=
 
(7.3-132) 
 
where Rb = 1/Tb is the bit rate and Tb is the bit duration. It is to be noted that the tracking error in terms of 
distance (global navigational satellite systems (GNSS) applications) can be found from  
 
 
0
0
2
1
,   m
2
(2
)(
/
)
L
m
s
b
N B d
cT
P
d
E
N
σ
⎛
⎞
=
+
⎜
⎟
−
⎝
⎠
 
(7.3-133) 
 
where c is the speed of light (3×108 m/s) and Ts is the symbol duration in seconds. 
 
 
7.3.8 Noncoherent Early-Late Gate I-Q Code-Tracking Error Variance with Channel Filtering in 
White Gaussian Noise with NRZ Symbols 
 
In this section we will specialize the general equations for the tracking error variance to a case in which 
filtering effects are included in the face of WGN. From (7.3-119) the equation for the tracking error variance 
can be simplified for the case of white Gaussian noise, by letting 
( )
1
0 / 2
n
S
f
N
=
 so that one obtains for 
WGN 
 
 
 
 
 
 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           523 
 
( )
( )
(
)
( )
( )
( )
( )
( )
( )
(
)
( )
( )
( )
( )
(
)
 
2
2
2
1
1
2
1
1
2
0
2
2
2
2
1
0
2
2
0
2
0
0
4
0
0
cos 2
2
 
2
2
cos 2
 
E
L
BB
PN
E
L
BB
PN
s
L
s
s
BB
PN
b
BB
PN
s
b
I
I
H
f
S
f df
I
I
H
f
S
f
f
T
df
B N
T
K T P
N
H
f
S
f df
PT
N
H
f
S
f
f
T
df
PT
π
σ
π
∞
−∞
∞
−∞
∞
−∞
∞
−∞
⎡
⎤
⎛
⎞
+
⎢
⎥
⎜
⎟
⎢
⎥
⎝
⎠
⎢
⎥
⎛
⎞
⎢
⎥
−
Δ
⎜
⎟
⎢
⎥
⎝
⎠
⎛
⎞
⎢
⎥
=
⎜
⎟
⎢
⎥
⎡
⎤
⎝
⎠
⎢
⎥
+
⎢
⎥
⎢
⎥
⎣
⎦
⎢
⎥
⎡
⎤
⎢
⎥
−
Δ
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
∫
∫
∫
∫
 
(7.3-134) 
 
Where again   = d = 2 . This equation holds for all symbols of the type studied here (that is, with 
amplitudes of 1
± ) with only WGN present at the input. In order to visualize the tracking performance for 
NRZ symbols (also chips in this case) consider a model of an ideal bandpass filter that has 3-dB channel 
bandwidths of W = 2, 4, and 6, and ∞ MHz, as seen in Figure 7.3-4.  
 
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
0.01
0.1
d
∞bandwidth
2 MHz
4 MHz
6 MHz
σ
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
0.01
0.1
d
∞bandwidth
∞bandwidth
2 MHz
4 MHz
6 MHz
σ
 
 
Figure 7.3-4 Early-late gate (L2-E2) I-Q code-tracking loop one sigma error for a 1.023 Mcps code symbol rate for various RF 
bandwidths and early-late separation.  
 
 
In the figure the chip rate is 1.023 Mcps, C/N0 = 25 dB-Hz, BL = 1 Hz, and the data rate is 50 bps 
(uncoded). 
As can be seen from the plots, as the correlator spacing (d) is reduced, the tracking error tends to be 
reduced. When the bandwidth is very wide compared to the chip rate, the result for no filtering (W =∞) is a 
good approximation (see (7.3-131) for the W=∞ case). Furthermore, using the infinite bandwidth case as an 
estimate with filtering is not unreasonable as a quick approximation to the tracking performance. 
 
 
7.3.9 Noncoherent Early-Late Gate I-Q Code-Tracking Performance with Narrowband Gaussian 
Interference Plus White Gaussian Noise with NRZ Symbols and No Channel Filtering  
 
In this section, we consider the code-tracking error variance for an unfiltered narrowband interference 
process. The objective of this calculation is to determine that the response to narrowband interference is quite 
different from wideband interference.  

 524                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
Let the radio frequency interference be a pair of narrowband Gaussian random process in which 
each has a rectangular power spectral density as shown in Figure 7.3-5(a). In this figure the positive 
frequency bandwidth of the process is 2B1 Hz and the interference is centered at fc + fI and fc – fI Hz. Each of 
the narrowband pair has a bandwidth of B1 Hz. It is assumed that fI is variable; in other words, the 
interference spectra are not necessarily centered at the carrier frequency.  
 
0
Sn1(f)
fI
f
fI+B1/2
fI-B1/2
J0/2
NRZ BPSK SS signal
B1 Hz
B1 Hz
(b) Baseband model
Sn (f)
B1 Hz
fc+fI
f
-fc
fc+fI+B1/2
fc+fI-B1/2
J0/2
0
NRZ BPSK SS signal
fc
fc-fI+B1/2
fc-fI-B1/2
(a) Radio frequency model
-fI
fI+B1/2
-fI-B1/2
fc-fI
0
Sn1(f)
fI
f
fI+B1/2
fI-B1/2
J0/2
NRZ BPSK SS signal
B1 Hz
B1 Hz
B1 Hz
(b) Baseband model
Sn (f)
B1 Hz
fc+fI
f
-fc
fc+fI+B1/2
fc+fI-B1/2
J0/2
0
NRZ BPSK SS signal
fc
fc-fI+B1/2
fc-fI-B1/2
(a) Radio frequency model
-fI-fI
fI+B1/2
-fI-B1/2
fc-fI
 
 
 
Figure 7.3-5 (a, b) Narrowband interference model spectral characteristics. 
 
 
Figure 7.3-5(b) illustrates the baseband equivalent power spectral density. Basically one pair of 
interferers has been translated down to zero center frequency. The signal spectrum illustrated in Figure 7.3-4 
is for an NRZ encoded BPSK SS signal. The signal could well have been any other 1
±  valued symbol shape. 
We will see that the optimum value of the interferer frequency offset fI is not zero for NRZ waveforms. 
Thus the interference model for the power spectral density is given by 
 
 
( )
1
1
1
0
1
1
/ 2
/ 2
/ 2
/ 2
2
I
I
I
I
I
f
B
f
f
B
J
S
f
f
B
f
f
B
−
≤
≤
+
⎧
⎫
=
⎨
⎬
−
−
≤
≤−
+
⎩
⎭
 
(7.3-135) 
 
where
 
If
is the interferer frequency and 
1
B is the positive frequency bandwidth of the interference. 
 
From (7.3-121) and (7.3-122), it follows that 
 
 
2
1 (0)
( )
(
)
s
f T
E
PN
PN
s
I
e
S
f df
R
T
π δ
δ
∞
−
−∞
=
=
−
∫
 
(7.3-136) 
 
and 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           525 
 
2
1 (0)
( )
(
)
s
f T
L
PN
PN
s
I
e
S
f df
R
T
π δ
δ
∞
+
−∞
=
=
∫
 
(7.3-137) 
 
 
So, (7.3-119), for the tracking error variance, can be written in the form 
 
      
(
)
(
)
( )
( )
(
)
(
)
( )
( )
(
)
( )
( )
1
1
1
1
2
2
2
1
2
1
4
8
cos 2
2
 (
)
8
B
A
PN
s
PN
s
n
PN
D
C
PN
s
PN
s
n
PN
s
B
L
s
s
n
PN
b
R
T
R
T
S
f S
f df
R
T
R
T
S
f S
f
f
T
df
B
T
K T
P
S
f S
f df
PT
δ
δ
δ
δ
π
σ
∞
−∞
∞
−∞
∞
−∞
⎡
⎤
⎡
⎤
+
−
⎢
⎥
⎣
⎦⎣
⎦
⎛
⎞
−
−
⋅
Δ
⎜
⎟
⎝
⎠
⎛
⎞
⎛
⎞
=
⎜
⎟
⎜
⎝
⎠
+
⎜
⎜⎜⎝
⎠
∫
∫
∫
64444744448
64444744448
6444444474444444
8
644474448
644474448
( )
( )
(
)
1
2
2
8
cos 2
D
n
PN
s
b
S
f S
f
f
T
df
PT
π
∞
−∞
⎧
⎫
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎬
⎟
⎪
⎪
⎟
⎪
⎪
⎟
⎪
⎪
⎟
⎪
⎪
⎪
⎪
⎛
⎞
⎪
⎪
⎜
⎟
⎪
⎪
−
Δ
⎜
⎟
⎪
⎪
⎜
⎟
⎪
⎪
⎜
⎟
⎝
⎠
⎩
⎭
∫
644444474444448
 
(7.3-138) 
 
where 
( )
x
RPN
 is the autocorrelation function evaluated at the time difference x. Equation (7.3-138) applies 
to any 1
±  valued PN code, without filtering effects. Now consider the case when the noise is the sum of 
thermal noise and narrowband noise of the type just discussed.  
 
We will assume that the PN code has random NRZ symbols, with the probability of being flipped or 
not flipped is ½. The noise process in (7.3-138) will be modeled as the sum of WGN noise and narrowband 
Gaussian noise, which are mutually statistically independent of each other. Thus the power spectral density 
of the total noise is given by, for all f  
 
 
1
1
0
( )
( ),   
2
n
J
N
S
f
S
f
f
=
+
∀ 
(7.3-139) 
 
and 
1 ( )
J
S
f  is the narrowband Gaussian noise process (see Figure 7.3-5) whose spectral density is modeled 
in (7.3-135), and B1 is assumed to be very small. 
 
Now consider the evaluation of the terms A, B1, C, and D in (7.3-138). For the NRZ symbols the 
power spectral density is given by 
 
 
( )
(
)
(
)
2
sin
s
PN
s
s
fT
S
f
T
fT
π
π
=
 
(7.3-140) 
 
Consider first the evaluation of the term A in (7.3-138). A can be evaluated as  
 
 
2
2
2
4 (1
)
(1
)
8(1
)
A
δ
δ
δ
⎡
⎤
=
−
+
−
=
−
⎣
⎦
 
(7.3-141) 
 

 526                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
Consider next the evaluation of the term B1 in (7.3-138). Recall that the noise power spectral 
density and the PN waveform are the baseband versions of the respective processes. From Figure 7.3-5 one 
has 
 
0
0
(4 )
2
2
J
J
B
J B
=
=
 
(7.3-142) 
Hence  
 
 
(
)
(
)
(
)
(
)
1
2
1
1
1
2
2
0
2
2
sin
sin
1
( )
2
B
B
s
s
s
J
s
s
s
fT
fT
N
B
T
df
S
f T
df
fT
fT
π
π
π
π
∞
∞
−∞
−∞
=
+
∫
∫
64444744448
64444744448
 
(7.3-143) 
 
The value of B1 can be evaluated as 
 
 
2
0
2
sin(
)
1
2
2
(
)
s
J
s
J
s
N
JT
f T
B
f T
π
π
=
+
 
(7.3-144) 
 
Now consider the term denoted as D. 
 
                     
( )
(
)
( )
(
)
1
2
1
0
cos
( )
cos
2
D
D
PN
s
J
PN
s
N
D
S
f
f
T
df
S
f S
f
f
T
df
π
π
∞
∞
−∞
−∞
=
Δ
+
Δ
∫
∫
6444447444448
644444474444448
 
(7.3-145) 
 
The term D can be shown to be given by 
 
 
(
)
(
)
(
)
2
0
2
sin
(
)
cos 2
2
2
J
s
c
PN
s
J
s
J
s
f T
N
JT
D
R
T
f
T
f T
π
π
π
=
Δ
+
Δ
 
(7.3-146) 
 
Using A, B1, C, and D in (7.3-138) yields (for 
1/ 2
δ ≤
)   hereh 
 
 
(
)
(
)
(
)
(
)
(
)
(
)
(
)
(
)
2
2
0
2
2
2
2
0
2
2
1
2
2
0
2
sin
8 1
1 cos 2
2
sin
2
(
)
2
2
8
sin
(1 2 )
cos(2
)
2
2
J
s
s
J
s
J
s
J
s
s
L
s
s
J
s
b
J
s
s
J
s
J
s
f T
JT
N
f
T
f T
f T
N
JT
B
T
K T
P
f T
PT
f T
N
JT
f T
f T
π
δ
δ
π
π
π
σ
π
π
δ
π
π
⎧
⎫
⎛
⎞
⎪
⎪
⎜
⎟
⎡
⎤
−
+
−
Δ
⎣
⎦
⎜
⎟
⎪
⎪
⎝
⎠
⎪
⎪
⎛
⎞
⎪
⎪
⎡
⎤
⎛
⎞
⎪
⎪
⎜
⎟
=
+
⎢
⎥
⎨
⎬
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎪
⎪
⎣
⎦
⎜
⎟
+
⎪
⎪
⎜
⎟
⎡
⎤
⎪
⎜
⎟
−
−
+
⎢
⎥
⎪
⎜
⎟
⎢
⎥
⎪
⎣
⎦
⎝
⎠
⎩
⎭
⎪
⎪
⎪
 
(7.3-147) 
 
Now consider the effect of thermal noise along with a narrowband interferer of the type considered 
in (7.3-135). From (7.3-147) one can simplify the expression somewhat to 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           527 
(
)
(
)
(
)
(
)
(
)
(
)
(
)
2
2
0
2
2
2
0
2
0
0
2
2
2
2
0
sin
1 cos 2
sin
1
2
1
2
sin
(1
(1
)
cos(2
)
2
J
s
s
J
s
J
c
J
s
L
s
s
J
s
J
s
c
b
J
s
J
s
f T
JT
d
f
T
N
f T
f T
N B
JT
T
P
N
f T
N
d
f T
JT
PT
d
f T
N
f T
π
π
π
π
σ
π
π
π
π
⎧
⎫
⎛
⎞
⎪
⎪
⎜
⎟
⎡
⎤
+
−
Δ
⎣
⎦
⎜
⎟
⎪
⎪
⎝
⎠
⎪
⎪
⎛
⎞
⎪
⎪
⎡
⎤
⎛
⎞
⎪
⎪
⎜
⎟
=
+
⎢
⎥
⎨
⎬
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎪
⎪
⎣
⎦
⎜
⎟
+
⎪
⎪
⎜
⎟
⎛
⎞
⎡
⎤
⎪
−
⎜
⎟
⎜
⎟
−
−
+
⎢
⎥
⎪
⎝
⎠
⎜
⎟
⎢
⎥
⎪
⎣
⎦
⎝
⎠
⎩
⎭
⎪
⎪
⎪
 
(7.3-148) 
 
and again the units are symbols2 (or chips2 when NRZ formatting is used). This result, for tracking error 
variance, is applicable for NRZ symbols with both thermal noise and narrowband interference, and   = d.  
Figure 7.3-6 illustrates the effect of interference plus thermal noise affecting the code-tracking loop 
for NRZ symbol formatting. In this figure the following parameters have been used: I/P = 40 dB, P/N0 = 40 
dB (I/N = 20 dB), Tc = 1/(1.023*106), BL = 1 Hz, and Rb = 50 Bps. It is seen that the interference has an 
optimum frequency offset from the carrier frequency that depends on the early-late spacing, d. 
The tracking error varies with the carrier frequency offset and the correlator spacing (d). The error is 
greatly suppressed when d is made very small. 
In [14] the authors have measured a somewhat similar type of frequency dependence on the location 
of the narrowband interference for NRZ symbols, with a very low response at the carrier frequency for a 
coherent baseband code-tracking loop.  
 
0
5 .105
1 .106
1.5 .106
2 .106
0
0.05
0.1
0.15
f1
Notes: I/P = 40 dB, P/N0 = 40 dB, I/N = 20 dB,  Tc = 10-6, BL =1, Rb= 50 bps
d = 1
d = 0.125
d = 0.25
d = 0.5
d = 1/32
d = 1/256
Code tracking sigma (symbols)
0
5 .105
1 .106
1.5 .106
2 .106
0
0.05
0.1
0.15
f1
Notes: I/P = 40 dB, P/N0 = 40 dB, I/N = 20 dB,  Tc = 10-6, BL =1, Rb= 50 bps
d = 1
d = 0.125
d = 0.25
d = 0.5
d = 1/32
d = 1/256
Code tracking sigma (symbols)
 
 
Figure 7.3-6 Noncoherent code-tracking sigma with thermal noise with a 1.023 Mcps NRZ code versus the offset frequency of the 
interference from the carrier frequency. 
 
 
An alternate viewpoint to the analysis of code-tracking in the presence of Gaussian random 
interference and filtering can be found in [15]. Another analysis for the filtered code-tracking of the dot 
product code-tracking loop has been presented in [16].  
 
 
7.4 TIME-SHARED NONCOHERENT CODE-TRACKING LOOPS 
Equation Section (Next) 
Now we consider an efficient method of sharing the early and late correlators by time-sharing. This work 
follows Holmes [8]. Numerous other authors have considered the time-shared loop, including Simon [17], 
Stone [18], Huang [19], and Hartmann [20].  

 528                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
Consider a code-tracking loop that time-shares the early and late correlators as shown in  
Figure 7.4-1.  
 
This loop operates by time-sharing the early and late code reference signals 
ˆ
(
/ 2)
c
PN t
T
T
−
+
 and 
ˆ
(
/ 2)
c
PN t
T
T
−
−
 in a periodic manner controlled by the periodic switch function g( ). Thus only one of the 
correlators is correlating against the input y(t) at any one time. In this loop only two correlators are needed, 
one for the early and late correlations and one for the on-time dispreading channel.  
 
We model the received signal plus noise by   
 
 
0
( )
2
( )
(
)cos(
)
( )
y t
Pd t PN t
T
t
n t
ω
θ
=
−
+
+
 
(7.4-1) 
 
Despread signal (to carrier demodulator)
BPF
(H(f))
1e%
(.)2
Loop
filter
VCXO
PN 
gen.
E
L
e2
P
Time
share
Time
share
wipe-off
y(t)
g(t)
Switch
generator
e1
( )
2
1e%
Despread signal (to carrier demodulator)
BPF
(H(f))
BPF
(H(f))
1e%
(.)2
(.)2
Loop
filter
Loop
filter
VCXO
PN 
gen.
PN 
gen.
E
L
e2
P
Time
share
Time
share
wipe-off
y(t)
g(t)
Switch
generator
e1
( )
2
1e%
 
 
Figure 7.4-1 Noncoherent time-shared RF implemented code-tracking loop with the early (E), late (L), and punctual channels (P). 
 
 
where P is the received signal power, T is the delay in the propagation time from the transmitter to the 
receiver, 
0
ω  is the carrier radian frequency, and θ  is the carrier phase. The noise is assumed to be white 
Gaussian noise. We model the gating function along with two multiplexing functions in Figure 7.4-2. 
 
g(t)
t
1
( )
2
g t
+
1
( )
2
g t
−
Td/2
t
t
g(t)
t
1
( )
2
g t
+
1
( )
2
g t
−
Td/2
t
t  
 
Figure 7.4-2 Gating and multiplexing functions for the time-shared, code-tracking loop. 
 
 
 
The waveform at the point e1 in Figure 7.4-1 is expressed by 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           529 
 
1
0
( )
2
( )
(
)cos(
)
( )
1
( )
1
( )
ˆ
ˆ
        
(
/ 2)
(
/ 2)
2
2
s
s
e t
Pd t PN t
T
t
n t
g t
g t
PN t
T
T
PN t
T
T
ω
θ
⎡
⎤
=
−
+
+
⎣
⎦
⎡
⎤
−
+
⎛
⎞
⎛
⎞
×
−
+
+
−
−
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
 
(7.4-2) 
 
Out of the bandpass filter the signal is modeled, neglecting the self-noise term due to the variation about the 
mean output, as  
 
   
(
)
(
)
0
1
0
1
( )
ˆ
( )
(
)
(
/ 2)cos
2
2
( )
1
( )
ˆ
( )
(
)
(
/ 2)cos
2
1
( )
1
( )
ˆ
ˆ
     
( )
( )
(
/ 2)
( )
(
/ 2)  
2
2
s
BB
s
BB
s
s
g t
d t PN t
T PN t
T
T
t
e
PH
s
g t
d t PN t
T PN t
T
T
t
g t
g t
H
s
n t PN t
T
T
n t PN t
T
T
ω
θ
ω
θ
⎡
−
⎤
⎛
⎞
−
−
+
+
⎜
⎟
⎢
⎥
⎝
⎠
⎢
⎥
=
⎢
⎥
+
⎛
⎞
+
−
−
−
+
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
⎡
−
+
⎤
⎛
⎞
⎛
⎞
+
−
+
+
−
−
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
%
 
(7.4-3) 
 
where HBB(s) is the baseband equivalent filter of the bandpass filter H(s). 
Now we neglect the effects of the filter on the data and the multiplexing function since they 
normally run at much lower speed. We also assume that the filter produces the correlation of the PN codes, 
out of the filter process. Thus we have  
 
 
(
)
(
)
0
1
0
1
( )
ˆ
( )
(
/ 2)cos
2
2
1
( )
ˆ
( )
(
/ 2)cos
2
1
( )
1
( )
     
2
( )
( )  
2
2
PN
s
PN
s
E
L
g t
d t R
T
T
T
t
e
P
g t
d t R
T
T
T
t
g t
g t
P
n
t
n t
ω
θ
ω
θ
⎡
−
⎤
⎛
⎞
−
+
+
⎜
⎟
⎢
⎥
⎝
⎠
⎢
⎥
≅
⎢
⎥
+
⎛
⎞
+
−
−
+
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
⎡
−
+
⎤
⎛
⎞
⎛
⎞
+
+
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
%
 
(7.4-4) 
 
in which the noise terms are given by 
 
 
[
]
[
]
( )
( )
( )
(
)
( )
( )
( )
(
)
E
BB
s
L
BB
s
n
t
H
s
n t PN t
T
T
n t
H
s
n t PN t
T
T
δ
δ
=
−
+
=
−
−
 
(7.4-5) 
 
With the timing error 
ˆ
T
T
ε =
−
, within the linear region we can rewrite (7.4-4) as 
 
 
1
0
1
( )
1
( )
( )
2
( )cos(
)
(
/ 2)
(
/ 2)
2
2
1
( )
1
( )
         
( )
( )
2
2
PN
s
PN
s
E
L
g t
g t
e t
Pd t
t
R
T
R
T
g t
g t
n
t
n t
ω
θ
ε
ε
⎡
⎤
−
+
⎛
⎞
⎛
⎞
=
+
+
+
−
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
⎡
⎤
−
+
⎛
⎞
⎛
⎞
+
+
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
%
 
(7.4-6) 
 
Now consider the square of 
1( )
e t
%
 

 530                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
2
2
2
2
2
1
2
1
( )
1
( )
( )
(
/ 2)
(
/ 2)
2
2
1
( )
1
( )
            
( )
( )
2
2
1
( )
1
( )
           
2 2
(
/ 2)
(
/ 2)
2
2
   
PN
s
PN
s
E
L
PN
s
PN
s
g t
g t
e t
P
R
T
R
T
g t
g t
n
t
n t
g t
g t
P
R
T
R
T
ε
ε
ε
ε
⎡
⎤
−
+
⎛
⎞
⎛
⎞
=
+
+
−
⎢
⎥
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎢
⎥
⎣
⎦
⎡
⎤
−
+
⎛
⎞
⎛
⎞
+
+
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
⎡
⎤
−
+
⎛
⎞
⎛
⎞
+
+
+
−
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
%
0
1
( )
1
( )
                   
( )
( ) cos(
)
2
2
E
L
g t
g t
n
t
n t
t
ω
θ
⎡
⎤
−
+
⎛
⎞
⎛
⎞
×
+
+
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
 
(7.4-7) 
 
Simplifying (7.4-7) produces 
 
 
2
2
2
1
2
2
1
( )
1
( )
( )
(
/ 2)
(
/ 2)
2
2
1
( )
1
( )
            
( )
( )
2
2
1
( )
(
/ 2)
( )
2
           
2 2
1
( )
(
/ 2)
( )
2
PN
s
PN
s
E
L
PN
s
E
PN
s
L
g t
g t
e t
P
R
T
R
T
g t
g t
n
t
n t
g t
R
T
n
t
P
g t
R
T
n t
ε
ε
ε
ε
⎡
⎤
−
+
⎛
⎞
⎛
⎞
=
+
+
−
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
⎡
⎤
−
+
⎛
⎞
⎛
⎞
+
+
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
⎡
−
⎛
⎞
+
⎜
⎟
⎝
⎠
+
+
⎛
⎞
+
−
⎜
⎟
⎝
⎠
⎣
%
0
cos(
)
t
ω
θ
⎤
⎢
⎥
⎢
⎥
+
⎢
⎥
⎢
⎥⎦
 
(7.4-8) 
 
since it is true that  
 
 
2
2
1
( )
1
( )
1
( )
1
( )
,      
2
2
2
2
g t
g t
g t
g t
+
+
−
−
⎛
⎞
⎛
⎞
⎛
⎞
⎛
⎞
=
=
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎝
⎠
⎝
⎠
 
(7.4-9) 
 
and is also true that 
 
 
1
( )
1
( )
0
2
2
g t
g t
+
−
⎛
⎞⎛
⎞=
⎜
⎟⎜
⎟
⎝
⎠⎝
⎠
 
(7.4-10) 
 
Now e2(t) is obtained when (
)
2
1( )
e t
%
 is multiplied by g(t). Hence letting 
0
ε =
 for the correlation function 
weights of the noise terms, we obtain 
 
 
2
2
2
2
2
0
1
( )
1
( )
( )
(
/ 2)
(
/ 2)
2
2
1
( )
1
( )
         
( )
( )
2
2
1
( )
 
(
/ 2)
( )
2
        
2 2
( )cos(
)
1
( )
(
/ 2)
2
PN
s
PN
s
E
L
PN
s
E
PN
s
g t
g t
e t
P
R
T
R
T
g t
g t
n
t
n t
g t
R
T
n
t
Pd t
t
g t
R
T
n
ε
ε
ω
θ
⎡
−
+
⎤
⎛
⎞
⎛
⎞
=
−
+
+
−
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
⎡
−
+
⎤
⎛
⎞
⎛
⎞
+
−
+
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
−
⎛
⎞
−
⎜
⎟
⎝
⎠
+
+
+
⎛
⎞
+⎜
⎟
⎝
⎠
( )
L t
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
 
(7.4-11) 
Since it is true that  

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           531 
 
(
) (
)
(
)
(
)
( ) 1
( )
1
( )
( ) 1
( )
1
( )
g t
g t
g t
g t
g t
g t
+
=
+
−
= −
−
 
(7.4-12) 
 
 
Equation (7.4-11) can be rewritten as 
 
 
(
)
2
2
2
2
2
0
1
1
(
/ 2)
(
/ 2)
2
2
( )
( )
(
/ 2)
(
/ 2)
2
1
( )
1
( )
         
( )
( )
2
2
1
( )
(
/ 2)
( )
2
        
2 2
( )cos(
)
1
PN
s
PN
s
PN
s
PN
s
E
L
PN
s
E
R
T
R
T
e t
P
g t
R
T
R
T
g t
g t
n
t
n t
g t
R
T
n
t
Pd t
t
g
ε
ε
ω
θ
⎡
⎤
⎛
⎞
⎛
⎞
−
−
+
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎢
⎥
=
⎢
⎥
+
+
−
⎢
⎥
⎣
⎦
⎡
−
+
⎤
⎛
⎞
⎛
⎞
+
−
+
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
−
⎛
⎞
−
⎜
⎟
⎝
⎠
+
+
+
+
( )
(
/ 2)
( )
2
PN
s
L
t
R
T
n t
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
⎛
⎞
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
 
(7.4-13) 
 
 
The first two terms in (7.4-13) represent the correction signal to maintain tracking and the third and 
fourth terms represent a high frequency dither that can be assumed to be negligible if 2/Td << BL. In this 
inequality BL is the closed-loop noise bandwidth of the time-shared code-tracking loop. Therefore we can 
rewrite (7.4-13) as 
 
 
2
2
2
1
2
1
1
( )
(
/ 2)
(
/ 2)
( )
( )
2
2
PN
s
PN
s
e t
P
R
T
R
T
n t
n t
ε
ε
⎡
⎤
⎛
⎞
⎛
⎞
≅
−
−
+
+
+
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
 
(7.4-14) 
 
where  
 
 
2
2
1
2
0
1
( )
1
( )
           ( )
( )
( )
2
2
1
( )
(
/ 2)
( )
2
( )
2 2
( )cos(
)
1
( )
(
/ 2)
( )
2
L
E
PN
s
E
PN
s
L
g t
g t
n t
n t
n
t
g t
R
T
n
t
n t
Pd t
t
g t
R
T
n t
ω
θ
⎡
+
−
⎤
⎛
⎞
⎛
⎞
=
−
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
⎡
−
⎤
⎛
⎞
−
⎜
⎟
⎢
⎥
⎝
⎠
⎢
⎥
=
+
⎢
⎥
+
⎛
⎞
+
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
 
(7.4-15) 
 
If we linearize the S-curve for NRZ code symbol shapes, when the early-late spacing is one symbol, and let 
ˆ
T
T
ε =
−
, (7.4-14) can be simplified to  
 
 
2
1
2
1
2
( )
( )
( )
2
s
e t
P
P
n t
n t
T
ε
⎡
⎤
⎛
⎞
⎛
⎞
≅
+
+
⎢
⎥
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎣
⎦
 
(7.4-16) 
 
Now to close the loop, write the code loop estimate of the code phase as 
 
 
1
2
ˆ( )
( )
( )
( )
VCO
s
s
K
T t
F s
P
n t
n t
T
s
T
ε
⎡
⎤
=
+
+
⎢
⎥
⎣
⎦
 
(7.4-17) 
 

 532                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
Using (7.4-17), it can be shown that the following relationship is obtained from (7.4-17) 
 
 
1
2
1
2
( )
( )
'
( )
( )
( )
( )
( )
'
( )
s
n t
n t
K PF s
n t
n t
t
P
H s
T
s
K PF s
P
ε
+
⎡
⎤
−
⎢
⎥
+
⎡
⎤
⎣
⎦
=
= −
⎢
⎥
+
⎣
⎦
 
(7.4-18) 
 
where H(s) is the closed-loop response of the time-shared code-tracking loop, and K’ is equal to PKVCO. The 
explicit dependence on t for 
( )t
ε
 and 
ˆ( )
T t  has been used in the previous equations, that is, 
ˆ
( )
( )
( )
t
T t
T t
ε
=
−
. The variance of the tracking error can be described by 
 
 
(
)
1
2
2
2
2
2
2
( )
( )
( 2
)
   chips
n
n
s
S
f
S
f
H j
f
df
T
P
ε
σ
π
∞
−∞
+
= ∫
 
(7.4-19) 
 
where 
( )
in
S
f  are the two spectral densities of the two noise terms. Using the reasonable assumption that the 
two noise terms are wide compared to the closed-loop noise bandwidth (BL) produces 
 
 
(
)
1
2
2
2
2
2
(0)
(0)
2
   chips
n
n
L
s
S
S
B
T
P
ε
σ
+
≅
 
(7.4-20) 
 
Therefore to complete our analysis it is necessary to evaluate the two noise spectral densities at  
f = 0. Consider the first noise term n1(t) defined in (7.4-15) and repeated here 
 
 
(
)
(
)
(
)
(
)
(
)
(
)
1
2
2
2
2
1
( )
( )
1
( )
( )
1
( )
4
1
(
)
(
)
1
(
)
(
)
L
E
n
L
E
g t
n t
g t
n
t
R
E
g t
n t
g t
n
t
τ
τ
τ
τ
τ
⎧
⎫
−
−
+
+
⎪
⎪
=
⎨
⎬
× −
−
+
+
+
+
+
+
⎪
⎪
⎩
⎭
 
(7.4-21) 
 
where x  denotes the time average of x. This can be written as  
 
 
(
)(
)
{
}
(
)(
)
{
}
(
)(
)
{
}
(
)(
)
{
}
1
2
2
2
2
2
2
2
2
1
( )
1
( ) 1
(
)
( )
(
)
4
1
          
1
( ) 1
(
)
( )
(
)
4
1
          
1
( ) 1
(
)
( )
(
)
4
1
          
1
( ) 1
(
)
( )
(
)
4
n
E
E
E
L
L
L
L
L
R
g t
g t
E n
t n
t
g t
g t
E n
t n t
g t
g t
E n t n t
g t
g t
E n t n t
τ
τ
τ
τ
τ
τ
τ
τ
τ
=
+
+
+
+
−
+
−
+
+
+
−
−
+
+
−
−
−
+
+
 
(7.4-22) 
 
Recall that 
(2 /
)
d
dT
τ
Λ
 is defined by (7.3-104) and can be written in the form 
 
 
2
1
  when
/ 2
(2 /
)
0               when
/ 2               
d
d
d
d
d
T
T
T
T
τ
τ
τ
τ
⎧⎡
⎤
−
>
⎪⎢
⎥
Λ
= ⎨⎣
⎦
⎪
>
⎩
 
(7.4-23) 
 
Denote the two autocorrelation functions 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           533 
 
(
)(
)
(
)(
)
1
1
( )
1
( )
1
(
)
( )
1
( )
1
(
)
g
g
R
g t
g t
R
g t
g t
τ
τ
τ
τ
+
−
=
+
+
+
=
=
−
−
+
 
(7.4-24) 
 
and the two cross-correlation functions by 
 
           
(
)(
)
(
)(
)
(1
)(1
)
(1
)(1
)
( )
1
( )
1
(
)
( )
1
( )
1
(
)
g
g
g
g
R
g t
g t
R
g t
g t
τ
τ
τ
τ
+
−
−
+
=
+
−
+
=
=
−
+
+
 
(7.4-25) 
 
These auto- and cross-correlation functions are plotted in Figure 7.4-3. 
 
2
/ 2
dT
dT
3
/ 2
dT
2 dT
5
/ 2
dT
/ 2
dT
−
3
/ 2
dT
−
5
/ 2
dT
−
0
dT
−
2 dT
−
3 dT
t
1
1
( )
( )
g
g
R
R
τ
τ
+
−
=
1
,1
( )
g
g
R
τ
+
−
2
/ 2
dT
dT
3
/ 2
dT
2 dT
5
/ 2
dT
/ 2
dT
−
3
/ 2
dT
−
5
/ 2
dT
−
0
dT
−
2 dT
−
3 dT
t
7
/ 2
dT
2
/ 2
dT
dT
3
/ 2
dT
2 dT
5
/ 2
dT
/ 2
dT
−
3
/ 2
dT
−
5
/ 2
dT
−
0
dT
−
2 dT
−
3 dT
t
1
1
( )
( )
g
g
R
R
τ
τ
+
−
=
2
/ 2
dT
dT
3
/ 2
dT
2 dT
5
/ 2
dT
/ 2
dT
−
3
/ 2
dT
−
5
/ 2
dT
−
0
dT
−
2 dT
−
3 dT
t
1
1
( )
( )
g
g
R
R
τ
τ
+
−
=
1
,1
( )
g
g
R
τ
+
−
2
/ 2
dT
dT
3
/ 2
dT
2 dT
5
/ 2
dT
/ 2
dT
−
3
/ 2
dT
−
5
/ 2
dT
−
0
dT
−
2 dT
−
3 dT
t
7
/ 2
dT
1
,1
( )
g
g
R
τ
+
−
2
/ 2
dT
dT
3
/ 2
dT
2 dT
5
/ 2
dT
/ 2
dT
−
3
/ 2
dT
−
5
/ 2
dT
−
0
dT
−
2 dT
−
3 dT
t
7
/ 2
dT
2
/ 2
dT
dT
3
/ 2
dT
2 dT
5
/ 2
dT
/ 2
dT
−
3
/ 2
dT
−
5
/ 2
dT
−
0
dT
−
2 dT
−
3 dT
t
7
/ 2
dT
 
Figure 7.4-3 The auto- and cross-correlation functions related to the multiplexing function. 
 
 
 
Now the autocorrelation function 
1
( )
g
R
τ
+
 can be written as 
 
 
1
1
( )
( )
2
( )
(
)
g
g
d
d
n
R
R
nT
τ
τ
τ
δ τ
∞
−
+
=−∞
=
= Λ
⊗
+
∑
 
(7.4-26) 
 
where the ⊗ symbol denotes the convolution of the functions before and after it. In addition, it is clear that 
the autocorrelation and the cross-correlation functions are related by 
 
 
(1
)(1
)
1
( )
2
( )
2
2
( )
(
)
g
g
g
d
d
n
R
R
nT
τ
τ
τ
δ τ
∞
+
−
+
=−∞
=
−
=
−Λ
⊗
+
∑
 
(7.4-27) 
 
Noting that  
 
 
{
} (
)
2
2
2
2
0
( )
(
)
2
( )
E
E
E
n
E n
t n
t
N B
R
τ
τ
+
=
+
 
(7.4-28) 
 
Using (7.4-26)–(7.4-28) in (7.4-22) produces  
 

 534                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
(
)
(
)
(
)
1
2
2
2
0
0
( )
2
( )
2
( )
(
)
E
n
n
d
d
n
R
R
N B
nT
N B
τ
τ
τ
δ τ
∞
=−∞
⎛
⎞
=
+
Λ
⊗
+
−
⎜
⎟
⎝
⎠
∑
 
(7.4-29) 
 
In order to obtain the spectral density at f = 0 note that 
 
 
{
}
1
(
)
(
/
)
         
( )
sinc
2
2
d
d
n
n
d
d
d
d
nT
f
n T
T
T
fT
δ τ
δ
τ
∞
∞
=−∞
=−∞
⎧
⎫
+
=
+
⎨
⎬
⎩
⎭
⎛
⎞
Λ
=
⎜
⎟
⎝
⎠
∑
∑
F
F
 
(7.4-30) 
 
Now the spectral density at f = 0 can be obtained by integrating (7.4-29) over all  . Thus 
 
 
(
)
(
)
1
2
2
d
0
0
2
0
1
(0)
( )
2
sinc
2
2
            
2
( )
( )
(
)
E
d
n
d
n
d
d
n
f
T
fT
S
N B
f
N B
T
R
nT
d
δ
τ
τ
δ τ
τ
∞
∞
=−∞
−∞
=
⎛
⎞
= −
+
⎜
⎟
⎝
⎠
⎡
⎤
+
Λ
⊗
+
⎢
⎥
⎣
⎦
∑
∫
 
(7.4-31) 
 
We have neglected the higher order terms in the second term in (7.4-31), since it is assumed that it will not be 
passed by the loop. Note that the first two terms in (7.4-31) cancel. Thus (7.4-31) can be rewritten as 
 
 
(
)
1
2
1
(0)
2
( )
( )
sinc
(
/
)
2
2
E
E
d
d
n
n
n
d
n
d
T
fT
S
S
f
S
f
f
n T
T
δ
∞
∞
=−∞
−∞
⎡
⎤
⎛
⎞
=
⊗
+
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
∑
∫
 
(7.4-32) 
 
Evaluating (7.4-32) produces 
 
 
1
2
(0)
2
(
')
( /
') sinc
'
2
E
E
n
n
n
d
n
n
S
S
f
S
n T
f
df
∞
∞
=−∞
−∞
⎛
⎞
=
−
⎜
⎟
⎝
⎠
∑
∫
 
(7.4-33) 
 
With the assumption that the bandpass filter bandwidth satisfies B >>1/Td, (7.4-33) can be rewritten as 
 
 
1
2
2
0
2
2
2
1
1
(0)
' 1
2
1
...
2
3
5
n
N
S
B
π
⎡
⎤
⎛
⎞⎡
⎤
=
+
+
+
+
⎢
⎥
⎜
⎟⎢
⎥
⎝
⎠⎣
⎦
⎢
⎥
⎣
⎦
 
(7.4-34) 
 
where B’ is defined by 
 
4
2
'
( )
BB
B
H
f
df
∞
−∞
= ∫
 
(7.4-35) 
 
where HBB(f) is the baseband equivalent filter of the RF filter. From Jolley [21] we have 
 
 
2
2
2
1
1
1
...
 
3
5
8
π
+
+
+
=
 
(7.4-36) 
 
so that (7.4-34) can be written as 
 
 
 1
2
0
(0)
'
n
S
N B
=
 
(7.4-37) 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           535 
 
 
Now consider the calculation of 
  
 
2(0 )
nS
 . The noise terms nE(t) and nL(t) can be written in the form  
 
 
0
0
0
0
( )
2
( )cos(
)
2
( )sin(
)
( )
2
( )cos(
)
2
( )sin(
)
c
s
c
s
E
E
E
L
L
L
n
t
n
t
t
n
t
t
n t
n
t
t
n
t
t
ω
θ
ω
θ
ω
θ
ω
θ
=
+
+
+
=
+
+
+
 
(7.4-38) 
 
Using (7.4-38) in n2(t) of (7.4-15) produces 
 
 
2
0
1
( )
1
( )
( )
( )
( )
( )
(2
)
2
2
c
c
E
L
g t
g t
n t
Pd t
n
t
n
t
O
ω
⎡
−
+
⎤
⎛
⎞
⎛
⎞
=
−
+
+
⎜
⎟
⎜
⎟
⎢
⎥
⎝
⎠
⎝
⎠
⎣
⎦
 
(7.4-39) 
 
where O(2 0) denotes on the order of 2 0. The autocorrelation function of n2(t) is given by 
 
 
 
2
1
( )
1
( )
( )
( )
2
2
( )
( )
1
(
)
1
(
)
(
)
(
)
2
2
c
c
c
c
E
L
n
d
E
L
g t
g t
n
t
n
t
R
PR
E
g t
g t
n
t
n
t
τ
τ
τ
τ
τ
τ
⎧
⎫
⎛
−
+
⎞
⎛
⎞
⎛
⎞
−
+
⎪
⎪
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎪⎝
⎠
⎪
=
⎨
⎬
⎛
−
+
+
+
⎞
⎛
⎞
⎛
⎞
⎪
⎪
× −
+
+
+
⎜
⎟
⎜
⎟
⎜
⎟
⎪
⎪
⎝
⎠
⎝
⎠
⎝
⎠
⎩
⎭
 
(7.4-40) 
 
Equation (7.4-40) can be simplified to 
 
 
(
)(
) (
)
2
( )
( )
1
( ) 1
( )
2
( )
4
Ec
d
n
n
PR
R
g t
g t
R
τ
τ
τ
=
+
−
 
(7.4-41) 
 
where the “2” on the right side comes from the fact that both 
( )
Ec
n
R
τ  and 
( )
Lc
n
R
τ  have the same 
autocorrelation functions. From (7.4-26) we have  
 
 
 
2 ( )
( )
( )
( )
(
)
Ec
n
n
d
d
d
n
R
PR
R
nT
τ
τ
τ
τ
δ τ
∞
=−∞
=
Λ
⊗
+
∑
 
(7.4-42) 
 
It follows that the power spectral density of n2(t) is given by 
 
 
2 (0)
( )
( )
( )
(
)
Ec
n
d
n
d
d
n
S
P
R
R
nT
d
τ
τ
τ
δ τ
τ
∞
∞
−∞
=−∞
⎧
⎫
=
Λ
+
⎨
⎬
⎩
⎭
∑
∫
 
(7.4-43) 
 
Since the Fourier transform of a convolution is the product of the Fourier transforms we have 
 
 
2
2
1
(0)
(
')
(
')
sinc
(
/
)
'
2
2
Ec
d
d
n
n
d
d
n
d
T
fT
S
S
f
S
f
f
f
n T df
T
δ
∞
∞
−∞
=−∞
⎛
⎞
=
−
+
⎜
⎟
⎝
⎠
∑
∫
 
(7.4-44) 
 
Evaluating the delta functions produces 
 
 
2
2
(0)
(
')
'
inc
'
2
2
Ec
n
n
d
n
d
P
n
n
S
S
f
S
f
s
df
T
∞
∞
−∞
=−∞
⎛
⎞
⎛
⎞
=
−
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
∑
∫
 
(7.4-45) 
 

 536                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
If Td >>Ts then one can write 
 
 
2
2
2
0
(0)
(
')
(
')
'
inc
4
2
n
d
BB
n
PN
n
S
S
f
H
f
df
s
∞
∞
=−∞
−∞
⎛
⎞
=
⎜
⎟
⎝
⎠
∑
∫
 
(7.4-46) 
 
Since  
 
 
2
2
2
2
0
2
2
1
sinc
1
1
2
2
n
n
n
n
n
n
n
π
π
∞
∞
∞
=−∞
=−∞
=−∞
≠
⎛
⎞
⎛
⎞
⎛
⎞
=
+ = +
=
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎝
⎠
∑
∑
∑
 
(7.4-47) 
 
So 
2 (0)
n
S
 is well approximated by 
 
 
2
0
(0)
2
n
PN
S
α
=
 
(7.4-48) 
 
where   is given by 
 
 
2
( )
( )
1
d
BB
S
f
H
f
df
α
∞
−∞
=
≅
∫
 
(7.4-49) 
 
since the data rate is small compared to the RF filter bandwidth, B. It therefore follows that the tracking error 
variance of the time-shared code-tracking loop is given by 
 
 
2
2
0
0
2
2
1
,   chips
L
s
N B
N B
T
P
P
ε
σ
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
(7.4-50) 
 
 
In comparing (7.4-50) with (7.2-93) it is seen that the variance of the time-shared loop is exactly 
twice that of the full-time bandpass version loop, when   is essentially one, which is the normal case. If fact, 
if   was not approximated as one, (7.4-50) would contain   as a product with P in the expression, and this 
would be exactly twice that of (7.2-93). 
 
 
7.5 PERFORMANCE OF A NONCOHERENT RF IMPLEMENTED TIME GATED EARLY-LATE 
GATE BANDPASS CODE-TRACKING LOOP  
Equation Section (Next)  
Up until this point we have been concerned with tracking constant envelope signals. Now we will turn our 
attention to time gated or pulsed envelope signals such as is used in time division multiple access (TDMA) 
systems. The approach presented here differs from that of Spilker [22] and Huff and Reinhard [23]. The 
gating function, which we denote by g(t), is illustrated in Figure 7.5-1. It is assumed that the receiver is 
synchronized with the received pulse signal so that the noise is shut off when the signal is in the “off” state, 
and it will be further assumed that the repetition (gating) rate (1/T0) is much greater than the code loop 
bandwidth BL (that is, it is assumed that 
0
1
L
B T
). It will also be assumed that the data symbol rate is much 
greater than the gating rate (i.e., 
0
(
/
)
1
s
T
T
).  
The gating function is on for dfT0 seconds every T0 second. Thus the duty factor is df. It therefore 
follows that the gating function is off (1– df ) T0 seconds every T0 seconds, and T0 is the period of the gating 
function. The received, gated signal is gated synchronously by the receiver and is modeled by 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           537 
t
dfT0
T0
g(t)
Rg(τ)
df
dfT0
-dfT0
T0
-T0
(a)
(b)
L
L
L
τ
t
dfT0
T0
g(t)
Rg(τ)
df
dfT0
-dfT0
T0
-T0
(a)
(b)
L
L
L
t
dfT0
T0
g(t)
t
dfT0
T0
g(t)
Rg(τ)
df
dfT0
-dfT0
T0
-T0
(a)
(b)
L
L
L
τ
 
 
Figure 7.5-1 Gating function and its autocorrelation function: (a) the gating function and (b) the gating autocorrelation function. 
 
 
 
(
)
0
( )
2
( )
( ) ( )cos
( ) ( )
y t
Pd t PN t g t
t
g t n t
ω
θ
=
+
+
 
(7.5-1) 
 
where it is clear that the input noise is gated also. In (7.5-1) P is the received power, d(t) is the baseband data 
stream, PN(t) is the direct sequence code,  0 is the received angular frequency in radians/second, θ  is the 
received carrier phase in radians, and n(t) is the received white noise process with dimensions of volts.  
The late and early signals are given  
 
 
ˆ
( )
(
/ 2)
ˆ
( )
(
/ 2)
s
s
L t
PN t
T
T
E t
PN t
T
T
=
−
−
=
−
+
 
(7.5-2) 
 
Now consider the calculation of the code-tracking error variance. Figure 7.5-2 illustrates the code-
tracking loop model with gating.  
 
y(t)
Gating
signal
Timing
BPF
BPF
(.)2
(.)2
-
+
-
-
F(s)
VCXO
PN
generator
Late
Early
( )
Le t
%
( )
Ee
t
%
( )
e t
ε
y(t)
Gating
signal
Timing
BPF
BPF
BPF
BPF
(.)2
(.)2
(.)2
(.)2
-
+
-
-
F(s)
F(s)
VCXO
PN
generator
Late
Early
( )
Le t
%
( )
Ee
t
%
( )
e t
ε
 
 
Figure 7.5-2 Time gated RF implemented code-tracking code loop. 

 538                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
 
The two correlator outputs are expressed as follows  
 
 
0
ˆ
( )
( )
( ) ( )
(
/ 2)cos(
)
( )
L
PN
s
L
e t
H s
d t g t R
T
T
T
t
n t
ω
θ
⎡
⎤
=
−
−
+
+
⎣
⎦
%
 
(7.5-3) 
 
and 
 
 
0
ˆ
( )
( )
( ) ( )
(
/ 2)cos(
)
( )
E
PN
s
E
e
t
H s
d t g t R
T
T
T
t
n
t
ω
θ
⎡
⎤
=
−
+
+
+
⎣
⎦
%
 
(7.5-4) 
 
in which H(s) is the Heaviside operator representing the bandpass filters, and the two noise terms are defined 
by 
 
ˆ
( )
( )
( )
(
/ 2)
ˆ
( )
( )
( )
(
/ 2)
L
s
E
s
n t
H s
n t PN t
T
T
n
t
H s
n t PN t
T
T
⎡
⎤
=
−
−
⎣
⎦
⎡
⎤
=
−
+
⎣
⎦
 
(7.5-5) 
 
            After squaring and forming the difference one obtains 
 
 
[
]
2
2
2
0
2
2
ˆ
ˆ
( )
( )
( )
( )
(
/ 2)
(
/ 2)
ˆ
( ) ( )
(
/ 2)
       
2 2
( )
( ) ( )cos(
)
ˆ
( ) ( )
(
/ 2)
       
( ) ( )
( ) ( )
BB
PN
s
PN
s
L
PN
s
E
PN
s
L
E
e t
PH
s
d t
g t
R
T
T
T
R
T
T
T
n t g t R
T
T
T
PH s
d t g t
t
n
t g t R
T
T
T
n t g t
n
t g t
ε
ω
θ
⎡
⎤
⎡
⎤
≅
−
−
−
−
+
⎣
⎦⎣
⎦
⎡
⎤
−
−
+
+
⎢
⎥
−
−
+
⎢
⎥
⎣
⎦
+
−
 
(7.5-6) 
 
where HBB(s) is the Heaviside operator representing the baseband equivalent filter of the RF filter. With the 
assumption of an early-late spacing of one symbol and taking the average dc signal as the error control 
component, we can write the error signal as 
 
 
1
2
3
2
( )
( )
( )
( )
f
s
P
e t
d
n t
n t
n t
T
ε
=
+
+
+
 
(7.5-7) 
where  
 
[
]
1
0
ˆ
( ) ( )
(
/ 2)
( )
2 2
( )
( ) ( )cos(
)
ˆ
( ) ( )
(
/ 2)
L
PN
s
E
PN
s
n t g t R
T
T
T
n t
PH s d t g t
t
n t g t R
T
T
T
ω
θ
⎡
⎤
−
−
=
+
⎢
⎥
−
−
+
⎢
⎥
⎣
⎦
 
(7.5-8) 
 
and  
 
 
2
2
2( )
( ) ( )
( ) ( )
L
E
n t
n t g t
n
t g t
=
−
 
(7.5-9) 
 
and n3(t) is the non-dc component of self-noise due to the time gating process. We will neglect this latter 
term since it will only be significant at high loop SNRs, where it normally is not a concern.  
Now to close the loop, write the code loop estimate of the code phase as 
 
 
1
2
ˆ
( ) 2
( )
( )
VCO
f
s
s
K
T
F s
d P
n t
n t
T
s
T
ε
⎡
⎤
=
+
+
⎢
⎥
⎣
⎦
 
(7.5-10) 
 
Using 
ˆ
T
T
ε =
−
 it can be shown that the following relationship is obtained 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           539 
 
1
2
1
2
( )
( )
'
( )
2
( )
( )
( )
'
( )
2
f
s
f
n t
n t
K PF s
d P
n t
n t
H s
T
s
K PF s
d P
ε
⎡
⎤
+
−
⎢
⎥
⎡
⎤
+
⎢
⎥
⎣
⎦
=
= −
⎢
⎥
+
⎢
⎥
⎣
⎦
 
(7.5-11) 
 
where H(s) is the closed-loop response of the time-shared code-tracking loop and 
'
2
VCO
f
K
K
d
=
. It is to be 
noted that both ε  and ˆT  are functions of time, even though they have not been indicated as functions of 
time explicitly in the loop equations. The variance of the tracking error can be described by 
 
 
(
)
1
2
2
2
2
2
2
2
( )
( )
( 2
)
   chips
4
n
n
s
f
S
f
S
f
H j
f
df
T
d P
ε
σ
π
∞
−∞
+
= ∫
 
(7.5-12) 
 
where 
( )
in
S
f  are the two spectral densities of the two noise terms. Using the reasonable assumption that the 
two noise terms are wide compared to the closed-loop noise bandwidth (BL) produces 
 
 
(
)
1
2
2
2
2
2
2
(0)
(0)
2
   chips
4
n
n
L
s
f
S
S
B
T
d P
ε
σ
+
≅
 
(7.5-13) 
 
 
It is reasonably assumed that the gating process is statistically independent of the receiver noise, so 
that the autocorrelation function of n1(t) is given by 
 
 
[
]
1 ( )
2
( )
( )
( )
(
/ 2)
(
/ 2)
Lc
n
d
g
n
PN
s
PN
s
R
PR
R
R
R
T
R
T
τ
τ
τ
τ
ε
ε
=
−
+
+
 
(7.5-14) 
 
For NRZ code symbols the sum of the last two terms can be approximated by 1, when the error,    is small 
(during strong signal tracking for example). Thus (7.5-14) can be approximated by  
 
 
1 ( )
2
( )
( )
( )
Lc
n
d
g
n
R
PR
R
R
τ
τ
τ
τ
=
 
(7.5-15) 
 
 
In order to determine the power spectral density at f = 0, it is necessary to obtain the autocorrelation 
function of the gating function. Figure 7.5-1 illustrates the autocorrelation function. We therefore have from 
(7.3-104)  
 
 
(
)
0
0
0
1
    
( )
/(
)
0                   elsewhere
f
f
d
f
f
d T
d T
d T
τ
τ
τ
τ
⎧⎛
⎞
−
≤
⎪⎜
⎟
⎜
⎟
Λ
= Λ
= ⎨⎝
⎠
⎪
⎩
 
(7.5-16) 
 
It follows that the autocorrelation function can be written as 
 
 
0
( )
( )
(
)
f
g
f
d
n
R
d
nT
τ
τ
δ τ
∞
=−∞
=
Λ
⊗
+
∑
 
(7.5-17) 
 
Since the noise spectral density at f = 0 is obtained by obtaining the Fourier transform of the 
autocorrelation function we can write for n1(t) that 
 
 
1
0
(0)
2
( )
( )
( )
(
)
L
f
c
n
n
d
f
d
n
S
P
R
R
d
nT
d
τ
τ
τ
δ τ
τ
∞
∞
=−∞
−∞
⎧
⎫
⎛
⎞
=
Λ
⊗
+
⎨
⎬
⎜
⎟
⎝
⎠
⎩
⎭
∑
∫
 
(7.5-18) 

 540                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
However since it is true that 
 
 
{
}
1
2
1
2
( )
( )
( )
( )
f t
f t
f
f
⊗
=
F
F
F
 
(7.5-19) 
 
where Fi(f) is the Fourier transform of fi(t). Further noting from Section 7.4 that  
 
 
{
}
(
)
1
(
)
(
/
)
( )
sinc
d
d
n
n
d
d
f
d
f
d
nT
f
n T
T
d T
fd T
δ τ
δ
τ
∞
∞
=−∞
=−∞
⎧
⎫
+
=
+
⎨
⎬
⎩
⎭
Λ
=
∑
∑
F
F
 
(7.5-20) 
 
             Using (7.5-19) and (7.5-20) in (7.5-18) produces 
 
 
1
2
0
0
0
0
1
(0)
2
(
')
(
')
'(
)
sinc (
)
Lc
n
n
d
f
f
f
n
n
S
P
S
f
S
f
f
df
d
d T
fd T
f
df
T
T
δ
∞
∞
∞
=−∞
−∞−∞
⎛
⎞
⎡
⎤
=
−
+
⎜
⎟
⎣
⎦
⎝
⎠
∑
∫∫
 
(7.5-21) 
 
Evaluating the above expression produces  
 
 
1
2
2
0
(0)
2
(
')
'
sinc (
)
'
Lc
n
f
n
d
f
n=-
n
S
d P
S
f
S
f
nd
df
T
∞
∞
∞
−∞
⎛
⎞⎡
⎤
=
−
⎜
⎟⎢
⎥
⎣
⎦
⎝
⎠∑
∫
 
(7.5-22) 
 
By assumption the symbol rate was much larger than the gating rate, so that we obtain 
 
 
(
)
2
2
2
0
(0)
( )
( )
sinc
Lc
n
f
BB
d
f
n
S
N d P
H
f
S
f df
nd
∞
∞
=−∞
−∞
⎡
⎤
=
⎢
⎥
⎣
⎦
∑
∫
 
(7.5-23) 
 
where HBB(f) is the baseband equivalent low-pass filter corresponding to the bandpass filter arm filters. 
 
Consider the summation in (7.5-23). It can be written as 
 
 
(
)
(
)
(
)
( )
2
2
2
2
2
sin
sin
1
(
)
f
n
n
f
f
n d
n
S
d
n
n d
π
θ
π
π
∞
∞
=−∞
=−∞
⎛
⎞
=
= ⎜
⎟
⎜
⎟
⎝
⎠
∑
∑
 
(7.5-24) 
 
where we have substituted 
f
d
θ
π
=
. Breaking the summation into the n = 0 term and all the rest of the terms 
we have 
 
 
(
)
( )
2
2
2
2
1
sin
1
2
(
)
n
f
n
S
d
n
θ
θ
π
∞
=
⎡
⎤
=
+
⎢
⎥
⎢
⎥
⎣
⎦
∑
 
(7.5-25) 
 
From Jolley [21] it is shown that 
 
 
2
2
1
sin(
)
1 (
)       0
(
)
2
n
n
n
θ
θ π
θ
θ
π
θ
∞
=
=
−
≤
≤
∑
 
(7.5-26) 
 
In Problem 10 it is shown that  
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           541 
 
1
f
S
d
=
 
(7.5-27) 
 
Therefore it follows that  
 
 
1
0
(0)
n
f
S
d PN α
=
 
(7.5-28) 
 
where   is the filter loss of the data passing through the bandpass filter. Since this loss is very small we 
approximate it as 1. Thus we have 
 
 
1
0
(0)
n
f
S
d PN
≅
 
(7.5-29) 
 
 
Now we are in a position to evaluate the second noise term n2(t). Recall that  
 
 
2
2
2( )
( ) ( )
( ) ( )
L
E
n t
n t g t
n
t g t
=
−
 
(7.5-30) 
 
From Section 7.4 it can be deduced that the autocorrelation function can be written as  
 
 
2
2
2
2
2
0
( )
( )
( )
i
f
n
g
R
N
H f
e
df
R
π τ
τ
τ
∞
−
−∞
⎛
⎞
=
⎜
⎟
⎝
⎠
∫
 
(7.5-31) 
 
in which H(f) is the RF frequency response of the bandpass filters in the arms of the time gated code-tracking 
loop. Evaluating the Fourier transform at f = 0 yields 
 
 
2
2
2
2
2
'
2
''
0
(0)
(
'')
(
')
( )
'
''
f
f
n
g
S
N
H f
H f
e
e
R
df df d
π
τ
π
τ
τ
τ
∞
∞
∞
−
−∞−∞−∞
=
∫∫∫
 
(7.5-32) 
 
 
Using (7.5-17) to represent Rg( ), and noting that {
}
(
)
( )
sinc
d
f
d
f
d
d T
fd T
τ
Λ
=
F
, produces  
 
 
2
2
2
2
2
2 (
''
'
)
0
2
(0)
(
'')
(
')
                                        
sinc (
)
'
''
i
f
f
f
n
f
f
d
n
d
S
N d
H f
H f
e
d
n
fd T
f
dfdf df
T
π
τ τ
δ
∞∞∞
∞
∞
−
−
+
−∞−∞−∞
−∞
−∞
∞
=−∞
⎧
⎫
=
⎨
⎬
⎩
⎭
⎛
⎞
×
+
⎜
⎟
⎝
⎠
∫∫∫
∫∫
∑
 
(7.5-33) 
 
This expression is evaluated in Problem 11 with the result that  
 
                                              
2
2
2
2
2
2
0
(0)
(
')
'
sinc (
)
'
n
f
f
n
d
n
S
N d
H f
H
f
nd
df
T
∞
∞
=−∞−∞
⎛
⎞
=
+
⎜
⎟
⎝
⎠
∑∫
 
 
(7.5-34) 
 
Evaluating (7.5-34), assuming that Rs/Rd >> 1 produces 
 
 
2
2
'
0
(0)
(2
)
n
f
S
N d
B
=
 
(7.5-35) 
 
where  

 542                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
4
2 '
( )
B
H f
df
∞
−∞
= ∫
 
(7.5-36) 
 
 
Using (7.5-28) and (7.5-35) in (7.5-13) produces the result 
 
 
2
0
0
2
2
'
1
2
L
s
f
N B
N B
T
d P
P
ε
σ
⎛
⎞
⎡
⎤
=
+
⎜
⎟
⎢
⎥
⎣
⎦
⎝
⎠
 
(7.5-37) 
 
Thus we see that by pulsing the signal with a power of P watts, the increase in the tracking error variance is 
just 1/df of what it would have been if the duty factor was 100%. 
 
 
7.6 STEADY STATE ERROR OF CODE-TRACKING LOOPS WITHOUT NOISE 
Equation Section (Next) 
Up to this point in this chapter we have considered various code loop configurations with noise or with noise 
and Gaussian interference. The code-tracking error is determined by the noise or interference. However, 
many times the noise or interference is not the dominant source of the code loop error. This can occur when 
the noise or interference is small and the dynamics on the line of sight between the transmitter and the 
receiver has relative movement. Starting with (7.3-86), it is not hard to show that in general for a gate late 
noncoherent code-tracking loop without noise the code error is given by 
 
 
[
]
1
1
( )
1
( )/
i
i
s
s
s
T
T
H s
T
KPF s
s T
T
ε
⎛
⎞
⎛
⎞
=
=
−
⎜
⎟
⎜
⎟
+
⎝
⎠
⎝
⎠
 
(7.6-1) 
 
where K is an appropriate gain,   is the timing error in seconds, F(s) is the loop filter transfer function, P is 
the received signal power, H(s) is the closed-loop transfer function, and Ti is the input timing delay, which is 
a function of time. Again for convenience, we have left off the dependence on time on both   and Ti. If the 
code loop is a baseband code loop the received power P would be replaced with 
P  in (7.6-1). In this 
expression the closed-loop transfer function (CLTF) is given by 
 
 
( ) /
( )
1
( ) /
PKF s
s
H s
PKF s
s
= +
 
(7.6-2) 
 
where K in this equation includes the multiplier and VCO gains, and the loop gain is KP. 
 
 
7.6.1 First-Order Noncoherent I-Q Early-Late Gate Code-Tracking Loop 
 
First we consider the first-order code-tracking loop. In this case F(s) = 1, so that 
 
 
( )
PK
H s
s
PK
=
+
 
(7.6-3) 
 
has one pole. It is to be noted that most GPS receivers utilize first-order code-tracking loops with carrier 
aiding. That is, the carrier loop transfers Doppler frequency information to the code loop, weighted by the 
ratio of the code symbol rate to carrier frequency. The steady state error can be computed in a similar manner 
as was used in Chapter 5 for carrier loops. The steady state code timing error is given by 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           543 
 
(
)
0
lim
( )
ss
i
s
s
s
s
T
ε
→
=
T
 
(7.6-4) 
 
where Ti(s) is the Laplace transform of Ti(t). Now it is true that 
 
 
1
( )
s
H s
s
PK
−
=
+
 
(7.6-5) 
 
From Chapter 5 it is known that the noise bandwidth, BL, is ¼ of the loop gain, so that the loop transfer 
function and one minus the transfer function can be written as 
 
 
4
( )
4
1
( )
4
L
L
L
B
H s
s
B
s
H s
s
B
=
+
−
=
+
 
(7.6-6) 
 
 
The final value theorem of Laplace transform theory allows us to compute the steady state code-
tracking error just as we did in Chapter 5. Write the input line of sight time delay as a function of time as 
 
 
2
0
1
  symbols
2
i
s
T
T
Tt
Tt
u(t)
T
⎛
⎞
=
+
+
⎜
⎟
⎝
⎠
&
&&
 
(7.6-7) 
 
where u(t) is the unit step function that is zero before zero and unity after t = 0. Then the corresponding 
Laplace transform of the input function is given by 
 
 
0
2
3
( )
i
s
s
T
T
T
T
s
s
s
=
+
+
&
&&
T
 
(7.6-8) 
 
In general the resulting error signal in Laplace transform variables is given by  
 
 
[
]
( )
( )
1
( )
i
s
s
s
t
H s
T
T
ε
=
−
T
 
(7.6-9) 
 
Now apply the Laplace transform final value theorem to our problem 
 
 
[
]
( )
( )
lim
lim
1
( )
i
t
t
s
s
s
t
s
H s
T
T
ε
→∞
→∞
⎛
⎞
⎛
⎞
=
−
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
T
 
(7.6-10) 
 
 
For the first-order loop one has with 
0
T =
&&
, the result11 
 
 
( )
lim
4
t
s
L
t
T
T
B
ε
→∞
⎛
⎞=
⎜
⎟
⎝
⎠
&
 
(7.6-11) 
 
Therefore if the signal time delay is at a constant rate of 
 T t& , the long-term (asymptotic) time tracking error is 
/(4
)
L
T
B
&
 as long as this error lies within the linear region. 
                                                          
11 If T&&  is not set to zero, the limit is unbounded. 

 544                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
7.6.2 Second-Order Ideal Noncoherent I-Q Early-Late Gate Code-Tracking Loop 
 
Now consider the ideal second-order code-tracking loop. The loop filter transfer function is given by 
 
 
2
1
1
( )
s
F s
s
τ
τ
+
=
 
(7.6-12) 
 
It follows from (7.6-12) that the CLTF is given by  
 
 
(
)
2
2
2
1
1
( )
1
/
s
H s
s
KP s
τ
τ
τ
+
= +
+
 
(7.6-13) 
 
This can be written as 
 
 
2
2
2
2
2
2
2
( )
2
1
( )
2
n
n
n
n
n
n
s
H s
s
s
s
H s
s
s
ςω
ω
ςω
ω
ςω
ω
+
=
+
+
−
=
+
+
 
(7.6-14) 
 
where ς  is the damping factor and 
n
ω  is the natural frequency. These parameters can be related to the loop 
parameters, just as was done for the carrier loop results, in the form 
 
 
2
1
2
1
  
2
n
PK
PK
ω
τ
τ
ς
τ
=
=
 
(7.6-15) 
 
In addition the loop natural frequency and the damping factor can be related to the closed-loop noise 
bandwidth BL via 
 
2
2
2
1
1
4
L
r
B
KP
r
τ
τ
τ
+
=
=
 
(7.6-16) 
or alternatively 
 
 
1
2
4
n
L
B
ω
ς
ς
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
(7.6-17) 
 
When 
1/
2
ς =
, a commonly selected value in practice, it can be seen that 
0.53
L
n
B
ω
=
.  
Now consider the steady state response to a varying input delay process. Using (7.6-14) and 
assuming a delay model of the form of (7.6-8), the steady state error becomes 
 
 
2
0
2
2
2
3
2
( )
lim
lim
2
t
t
s
n
n
n
T
t
s
T
T
T
s
T
s
s
s
s
s
ε
ςω
ω
ω
→∞
→∞
⎛
⎞
⎛
⎞
⎡
⎤⎛
⎞
=
+
+
=
⎜
⎟
⎜
⎟
⎜
⎟
⎢
⎥
⎜
⎟
+
+
⎝
⎠
⎝
⎠
⎣
⎦
⎝
⎠
&
&&
&&  
(7.6-18) 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           545 
 
This can also be written, for an active second-order code-tracking loop with ζ  = 0.707 as 
 
 
2
2
( )
lim
3.56
t
s
n
L
t
T
T
T
B
ε
ω
→∞
⎛
⎞=
=
⎜
⎟
⎝
⎠
&&
&&
 
(7.6-19) 
 
Thus we see that a first-order code-tracking loop can track a delay rate ( )
T&  if the loop bandwidth is 
large enough so that the error does not exceed the tracking range, and similarly an ideal second-order code-
tracking loop can track a delay acceleration if the bandwidth is large enough. It is clear that the third-order 
code-tracking loop will track a constant T&&&, if the loop bandwidth is sufficiently large enough.  
 
 
7.7 EARLY-LATE GATE NONCOHERENT I-Q CODE-TRACKING LOOP PULL-IN WITHOUT 
NOISE 
Equation Section (Next) 
Now consider the pull-in behavior of a noncoherent I-Q early-late gate code-tracking loop when no noise is 
present. The tool to characterize the behavior is the phase plane, which is a plot of the timing error, in 
symbols, versus the timing error rate in symbols per second. The presentation given here follows [22, 24] 
with modifications. Consider now a second-order active code-tracking loop with loop transfer function 
 
 
2
1
1
( )
p
s
F s
s
τ
τ
+
=
 
(7.7-1) 
 
for the active loop filter. In general the second-order code-tracking loop has a timing estimate of the form 
 
 
( )
ˆ
( )
GF s
T
D
s
ε
=
 
(7.7-2) 
 
where 
( )
D ε  is defined by 
 
 
( )
( )
(0)
S
D
S
ε
ε = &
 
(7.7-3) 
 
is the normalized to unity slope S-curve characteristic. Now use the definitions in (7.7-4) and divide  
 
 
       
      
( )
( )
c
i
c
c
x
T
T
y
T
D
D
T
ε
ε
ε
=
=
=
 
(7.7-4) 
 
Equation (7.7-2) by Tc to produce 
 
 
(
)
( )
( )
s y
x
GF s D x
−
=
 
(7.7-5) 
 
Let 
/
n
g
G ω
=
 in (7.7-5) to yield 
 

 546                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
(
)
( )
( )
n
s
y
x
gGF s D x
ω
−
=
 
(7.7-6) 
 
Consider the active loop filter of the form 
 
 
2
1
1
( )
s
F s
s
τ
τ
+
=
 
(7.7-7) 
 
For the passive loop filter we can write the following 
 
 
2
2
n
ς
τ
ω
=
 
(7.7-8) 
 
and  
 
1
2
n
G
τ
ω
=
 
(7.7-9) 
 
to produce for the filter response in terms of ς  and 
n
ω  
 
 
1
2
/
( )
/
n
n
s
gF s
s
ς
ω
ω
+
=
 
(7.7-10) 
 
Define  
 
 
1
1
n
n
dy
y
dt
dx
x
dt
ω
ω
=
=
&
&
 
(7.7-11) 
 
Using (7.7-6) in terms of the (7.7-11) yields 
 
 
( )
( )
2 dD x
y
x
D x
x
dx
ς
−
=
+
&&
&&
 
(7.7-12) 
 
Noting that  
 
 
x
d x
x
d x
=
&&
&
&
 
(7.7-13) 
 
along with (7.7-12) produces the phase plane equation 
 
 
( )
( )
2
dD x
D x
x
y
dx
dx
dx
x
ς ⎛
⎞
−
−
+
⎜
⎟
⎝
⎠
=
&
&&
&
&
 
(7.7-14) 
 
Nielson [25] observed that the two previously cited authors [22, 24] did not use the required 
normalization  
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           547 
 
0
( )
1
x
dD x
dx
=
=  
(7.7-15) 
 
The results used here are based on this normalization. The phase plane is symmetric about 
0
x =
&
. The phase 
plane is generated by picking a value of 
n t
ω Δ  and (0)
x&
 that determines  x(0) via 
 
 
(
)
(0)
(0)
n
x
x
t
ω
Δ
=
Δ
&
 
(7.7-16) 
 
Therefore after t seconds one has 
 
 
(
)
(0)
(0)
(
)
(0)
(0)
x
t
x
x
x
t
x
x
Δ
=
+ Δ
Δ
=
+ Δ
&
&
&
 
(7.7-17) 
 
This procedure continues with an appropriately small value of 
n t
ω Δ  until the code loop moves off the 
restricted phase plane or converges to the lock point. This yields one curve on the phase plane. This process 
continues with a new initial point ( (0), (0))
x
x&
 that also constructs a curve on the phase plane. This process 
continues until the phase plane is sufficiently populated with curves. Figures for the baseband loop and with 
the second-order active filter loop are plotted in Figure 7.7-1. Both Figures 7.7-1(a) and 7.7-1(b) are for the 
second order active code loop with 
0.707
ς =
 and 
0
y =
&&
. In the figures the ordinate is (1/
n
ω )(dx/dt) = 
(1/
n
ω )( ( /
)(1/
)
c
d
dt
T
ε
). The abscissa is 
/
c
x
T
ε
=
. Note that the trajectories on the phase plane rotate 
clockwise; when x&  is positive, then x must increase, whereas when x&  is negative, x must decrease. The plots 
are taken from Holmes [8]. 
 
(a)
(a)
 
 
Figure 7.7-1 (a) Acquisition trajectories for the noncoherent loop with   = Tc. 
 
 
 
Consider Figure 7.7-1(a), which is the phase plane for the early-late spacing of one chip (Tc 
seconds) for the noncoherent early-late gate active filter, code-tracking loop. In both Figures 7.7-1(a) and 

 548                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
7.7-1(b), it is assumed that 
0
y =
, and both x and ( /
)
n
x ω
&
 are assumed to be some nonzero value. As an 
example in Figure 7.7-1(a) if 
(0)
1.1
y
=
&
 and x = –3, then with time the error and normalized error rate 
converge to zero, making a clockwise convergence on the diagram. If, however, (0)
1.5
y
=
&
 and x = –3, then 
it is seen that the error reduces, but then slowly increases and x increases. Figure 7.7-1(b) is similar to Figure 
7.7-1(a), except that the allowable error rates and errors are smaller to be able to achieve lock, that is—
when
0 and 
0
x
x
=
=
&
. 
 
(b)
(b)
 
 
Figure 7.7-1 (b) Acquisition trajectories for the noncoherent loop with  = Tc/2. 
 
 
7.8 MULTIPATH EFFECTS 
 
Equation Section (Next) 
For the clear access (C/A) code in the GPS multipath errors are perhaps the largest of any location error 
contributor, including thermal noise.12 Thus multipath cannot normally be ignored when discussing the 
performance of a code-tracking loop in an Earth involved propagation environment. 
Multipath relates to the phenomena of a signal reaching an antenna by two or more paths. 
Commonly, the direct path signal arrives first and subsequent versions of the signal arrive slightly later in 
time, due to the fact that they are reflections from (normally) nearby objects. Typically the reflected versions 
of the signal are delayed in time and are normally weaker in signal strength and have a different carrier 
phase. The multipath phenomenon affects both the code-tracking process and the carrier-tracking process. 
The early-late S-curve only has a range of 1.5 symbols to as small as about 1 symbol, depending on the early-
late spacing. Delays larger than these values (depending on the early-late spacing) of multipath delay of the 
signal have a negligible effect due to the much lower correlation value and can normally be neglected.  
 
Ideally the receiver should be located in a location in which the receiver antenna is far away from 
items that can cause reflections, such as buildings, metal structures, water bodies, and the ground. However, 
in practice, reflections normally cannot be avoided. We will only consider the effect of multipath on code-
tracking loops here. Figure 7.8-1 illustrates a direct ray along with two reflected rays. 
 
 
7.8.1 Multipath Effects on Filtered Noncoherent Code-Tracking Loops 
 
Now consider the characterization of the effects of multipath on a early-late gate noncoherent code-tracking 
loop. Figure 7.8-2 illustrates an I-Q baseband version of a noncoherent code-tracking loop. This loop has 
been discussed previously. The method that is commonly used to assess the impact of a single reflected 
component is to plot the code-tracking loop bias error against the multipath delay for a given relative level of 
the multipath component. We will refer to this as the multipath diagram (or more appropriately the multipath 
induced code-tracking error diagram).  
                                                          
12 This excludes intentional or unintentional jamming or interference, of course. 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           549 
 
Reflected ray 1
Reflected ray 2
Direct ray
Reflected ray 1
Reflected ray 2
Direct ray
 
 
Figure 7.8-1 An example of multipath with two reflected rays and the direct ray. 
 
 
 
Carrier
source
LPF
LPF
PN
code
gen.
F(s)
+
+
VCXO
Late correlator
Carrier
Carrier
LPF
LPF
PN
.
-
+
+
+
VCXO
-
eL
Sample
& hold
Sample
&
Sample
&
( )2
ˆSL
e
I
Q
es(t)
ec(t)
SE
e
CE
e
Sample
& hold
Sample
&
Sample
&
Sample
& hold
Sample
&
Sample
&
Sample
& hold
Sample
&
Sample
&
eE
Carrier
Carrier
LPF
LPF
PN
.
+
+
y(t)
VCXO
BPF
(B)
BPF
(B)
BPF
(B)
BPF
(B)
Carrier
Carrier
LPF
LPF
PN
.
-
+
+
+
VCXO
-
e
e
SL
e
( )2
ˆSL
e
Sample
Sample
Sample
Sample
Sample
Sample
( )
2
( )2
( )
2
ˆSL
e
I
Q
es(t)
e
c (t)
CE
e
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
( )2
( )2
( )2
( )2
Sample
&
Sample
&
Sample
&
Sample
Sample
Sample
Sample
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
e
ˆSL
e
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
(
)
0
2 sin
t
ω
θ
−
−
(
)
0
2 cos
t
ω
θ
−
( )
(
1)
1
.
b
b
kT
b
k
T
dt
T
−∫
CL
e
ˆCL
e
( )
s t

( )
(
1)
1
.
b
b
kT
b
k
T
dt
T
−∫
ˆSE
e
( )2
( )2
( )2
( )2
( )
(
1)
1
.
b
b
kT
b
k
T
dt
T
−∫
( )2
( )2
( )2
( )2
( )
(
1)
1
.
b
b
kT
b
k
T
dt
T
−∫
Early correlator
Carrier
source
Carrier
source
LPF
LPF
PN
code
gen.
F(s)
+
+
VCXO
Late correlator
Carrier
Carrier
LPF
LPF
PN
.
-
+
+
+
VCXO
-
eL
Sample
& hold
Sample
&
Sample
&
Sample
& hold
Sample
& hold
Sample
&
Sample
&
( )2
( )2
( )2
ˆSL
eˆSL
e
I
Q
es(t)
ec(t)
SE
eSE
e
CE
eCE
e
Sample
& hold
Sample
&
Sample
&
Sample
& hold
Sample
& hold
Sample
&
Sample
&
Sample
& hold
Sample
&
Sample
&
Sample
& hold
Sample
& hold
Sample
&
Sample
&
Sample
& hold
Sample
&
Sample
&
Sample
& hold
Sample
& hold
Sample
&
Sample
&
eE
Carrier
Carrier
LPF
LPF
PN
.
+
+
y(t)
VCXO
BPF
(B)
BPF
(B)
BPF
(B)
BPF
(B)
BPF
(B)
BPF
(B)
BPF
(B)
BPF
(B)
Carrier
Carrier
LPF
LPF
PN
.
-
+
+
+
VCXO
-
e
e
SL
eSL
e
( )2
( )2
( )2
ˆSL
eˆSL
e
Sample
Sample
Sample
Sample
Sample
Sample
( )
2
( )
2
( )2
( )
2
ˆSL
eˆSL
e
I
Q
es(t)
e
c (t)
CE
eCE
e
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
Sample
&
Sample
&
Sample
&
Sample
&
Sample
Sample
Sample
Sample
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
Sample
&
e
ˆSL
e
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
(
)
0
2 sin
t
ω
θ
−
−
(
)
0
2 cos
t
ω
θ
−
( )
(
1)
1
.
b
b
kT
b
k
T
dt
T
−∫
CL
e
ˆCL
eˆCL
e
( )
s t

( )
(
1)
1
.
b
b
kT
b
k
T
dt
T
−∫
ˆSE
e
( )2
( )2
( )2
( )2
( )
(
1)
1
.
b
b
kT
b
k
T
dt
T
−∫
ˆSE
eˆSE
e
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )
(
1)
1
.
b
b
kT
b
k
T
dt
T
−∫
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )2
( )
(
1)
1
.
b
b
kT
b
k
T
dt
T
−∫
Early correlator
 
 
Figure 7.8-2 Early-late gate (L2-E2) noncoherent I-Q loop for code-tracking. 
 
 
 
Model the received, channel filtered signal as 
 
 
(
)
(
)
0
0
( )
2
(
)cos
2
(
)cos
s t
P PN t
T
t
P PN t
T
t
t
ω
θ
α
ω
θ
θ
=
−
+
+
−
−Δ
+
+ Δ
%
 
(7.8-1) 
 
where A is the signal amplitude,   is the multipath relative power,  t is the time delay (in seconds) of the 
multipath line component from the direct component, θ  is the direct component signal carrier phase, θ
Δ
 is 
the carrier phase difference between the multipath and the direct components, and 
(
)
PN t
T
−
 denotes the 
baseband equivalent filtered (by the RF filter with bandwidth B Hz) pseudonoise code process that is delayed 
by T seconds and that has a symbol time of Ts seconds.13 The early-late spacing is 2 Ts, where   is a number 
between 0 and 0.5. The effect of a channel filter on the multipath error is determined by the modification of 
the correlation function and therefore the S-curve (discriminator function). The filtering effect on the 
correlation function is determined by (see Section 1.4.1.2 of Chapter 1) 
                                                          
13 Note that as before when the symbol shape is a simple rectangular pulse (i.e., NRZ), the chip time equals the symbol time. 

 550                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
 
( )
Re
( ) ( )exp( 2
)
PN
BB
R
H
f S f
j
f
df
τ
π τ
∞
−∞
⎧
⎫
=
⎨
⎬
⎩
⎭
∫
%
 
(7.8-2) 
 
and is the resulting cross-correlation function between unfiltered and filtered PN codes. 
           Let the output es(t) be derived from the product of the signal and the sine wave reference signal, with 
the sum frequency suppressed by the low-pass filter, and assuming that the carrier estimate is perfect. Then 
we have 
 
 
(
)
0
( )
( )
sin(
)
se t
s t
t
ω
θ
=
−
+
%
 
(7.8-3) 
 
Doing the indicated multiplication yields (leaving the sum frequency off, since it will be removed by 
the low-pass filter) 
 
 
0
( )
2 sin(
) ( )
se t
t
s t
ω
θ
= −
+
%
 
(7.8-4) 
 
or evaluating we have 
 
 
( )
2
(
)sin(
)
se t
P PN t
T
t
α
θ
=
−
−Δ
Δ
 
(7.8-5) 
 
In a like manner ec(t) is defined by 
 
 
0
( )
2 cos(
) ( )
ce t
t
s t
ω
θ
=
+
%
 
(7.8-6) 
 
And after the multiplication, and leaving off the sum term, we are left with 
 
 
( )
2
(
)
2
(
)cos(
)
ce t
P PN t
T
P PN t
T
t
α
θ
=
−
+
−
−Δ
Δ
 
(7.8-7) 
 
 
Now determine the four components: ˆ
ˆ
ˆ
ˆ
(
), 
(
), 
(
), and 
(
)
SL
b
CL
b
SE
b
CL
b
e
T
e
T
e
T
e
T
. Consider first the 
definition of ˆ (
)
CL
b
e
T
 and consider the approximation suggested on the right-hand side of (7.8-8) 
 
 
0
1
ˆ
ˆ (
)
( )
(
)
b
T
CL
b
c
s
b
e
T
e t PN t
T
T dt
T
δ
=
−
−
∫
 
(7.8-8) 
 
where ˆT  is the receiver code timing delay estimate. The integration time is Tb seconds, which could be the 
bit time, the coded symbol time, or some multiple divisor of the coded symbol time. Evaluating (7.8-8) leads 
to the result 
 
 
ˆ (
)
(
)
(
)cos(
)
CL
b
PN
s
PN
s
e
T
PR
T
PR
T
t
ε
δ
α
ε
δ
θ
≅
−
+
−
+ Δ
Δ
%
%
 
(7.8-9) 
 
where 
( )
R ε
%
 denotes the cross-correlation of the filtered baseband code 
(
)
PN t
T
−
 and the unfiltered 
receiver code estimate 
ˆ
(
)
PN t
T
−
 and 
ˆ
T
T
ε =
−
 . In the same manner ˆ
(
)
CE
b
e
T
 is evaluated as 
 
 
0
1
ˆ
ˆ
(
)
( )
(
)
b
T
CE
b
c
s
b
e
T
e t PN t
T
T dt
T
δ
=
−
+
∫
 
(7.8-10) 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           551 
 
This can be evaluated as 
 
 
ˆ
(
)
(
)
(
)cos(
)
CE
b
PN
s
PN
s
e
T
PR
T
PR
T
t
ε
δ
α
ε
δ
θ
≅
+
+
+
+ Δ
Δ
%
%
 
(7.8-11) 
 
Furthermore ˆSL
e
 is defined as 
 
 
0
1
ˆ
ˆ (
)
( )
(
)
b
T
SL
b
s
s
b
e
T
e t PN t
T
T dt
T
δ
=
−
−
∫
 
(7.8-12) 
 
which can be evaluated as 
 
 
ˆ (
)
(
)sin(
)
SL
b
PN
s
e
T
PR
T
t
α
ε
δ
θ
≅
−
+ Δ
Δ
%
 
(7.8-13) 
 
In a similar manner ˆSE
e
 is defined by 
 
 
0
1
ˆ
ˆ (
)
( )
(
)
b
T
SE
b
s
s
b
e
T
e t PN t
T
T dt
T
δ
=
−
+
∫
 
(7.8-14) 
 
Which can be simplified to 
 
 
ˆ (
)
(
)sin(
)
SE
b
PN
s
e
T
PR
T
t
α
ε
δ
θ
≅
+
+ Δ
Δ
%
 
(7.8-15) 
 
The discriminator function is defined from Figure 7.8-2 as  
 
 
2
2
2
2
ˆ
ˆ
ˆ
ˆ
(
)
(
)
(
)
(
)
SL
b
CL
b
SE
b
CE
b
D
e
T
e
T
e
T
e
T
=
+
−
−
 
(7.8-16) 
 
Using (7.8-9), (7.8-11), (7.8-13), and (7.8-15) in (7.8-16) produces the result 
 
 
2
2
2
2
2
2
2
2
( )
(
)
sin (
)
(
)
sin (
)
           
(
)
2
(
)
(
)cos(
)
          
(
)
cos (
)
         
(
)
2
nc
PN
s
PN
s
PN
s
PN
s
PN
s
PN
s
PN
s
D
P R
T
t
P R
T
t
P R
T
PR
T
t R
T
P R
T
t
P R
T
ε
α
ε
δ
θ
α
ε
δ
θ
ε
δ
α
ε
δ
ε
δ
θ
α
ε
δ
θ
ε
δ
⎡
⎤
⎡
⎤
=
−
+ Δ
Δ
−
+
+ Δ
Δ
⎣
⎦
⎣
⎦
⎡
⎤
+
−
+
−
+ Δ
−
Δ
⎣
⎦
⎡
⎤
+
−
+ Δ
Δ
⎣
⎦
⎡
⎤
−
+
−
⎣
⎦
%
%
%
%
%
%
%
2
2
(
)
(
)cos(
)
        
(
)
cos (
)
PN
s
PN
s
PN
s
PR
T
t R
T
P R
T
t
α
ε
δ
ε
δ
θ
α
ε
δ
θ
+
+ Δ
+
Δ
⎡
⎤
−
+
+ Δ
Δ
⎣
⎦
%
%
%
 
(7.8-17) 
 
Equation (7.8-17) can be simplified to 
 
     
{
}
{
}
2
2
2
2
( )
(
)
(
)
             
(
)
(
)
            
2
cos(
)
(
)
(
)
(
)
(
)  
nc
PN
s
PN
s
PN
s
PN
s
PN
s
PN
s
PN
s
PN
s
D
P
R
T
R
T
P
R
T
t
R
T
t
P
R
T
t R
T
R
T
t R
T
ε
ε
δ
ε
δ
α
ε
δ
ε
δ
α
θ
ε
δ
ε
δ
ε
δ
ε
δ
⎡
⎤
⎡
⎤
=
−
−
+
⎣
⎦
⎣
⎦
⎡
⎤
⎡
⎤
+
−
+ Δ
−
+
+ Δ
⎣
⎦
⎣
⎦
⎡
⎤
−
Δ
−
+ Δ
−
−
+
+ Δ
+
⎣
⎦
%
%
%
%
%
%
%
%
 
(7.8-18) 
 

 552                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
This result is similar to as M. S. Braasch’s result, in Chapter 14 of [26] with some algebraic sign differences. 
The solution of the problem at hand involves determining the range of ε  values that causes D(ε ) to be zero. 
This will yield the envelope of errors (   values) that can provide a stable lock point of the code-tracking loop 
(Dnc(ε ) = 0) with the appropriate assumptions of the value of θ
Δ
. This will be discussed in the following 
example. 
 
Example 2 In (7.8-18) the following parameters will be used in order to plot the error envelope due to 
multipath as a function of the multipath delay f0 = 1,575.42 MHz (f0 =  0/(2 )), A = 1,   = 0.5 (the power of 
the multipath is one-fourth the power of the signal, or 6 dB down),   = 0.5 (an early-late separation of one 
chip), t
Δ a variable delay time plotted in chips (representing the multipath delay), and Ts = 0.009775  s. The 
value of 
θ
Δ
 will be set to the two extreme values of 0 and   radians. The reader might notice that these 
parameters are for the L1 P(Y) code in the GPS navigation system. When 
θ
π
Δ
=
 the lower portion of the 
curve is generated. When 
0
θ
Δ
=
 the upper portion of the curve is generated. Figure 7.8-3 illustrates the 
resulting multipath induced error diagram in this case. The ordinate shows the error in chips ( ) versus the 
value of the multipath component delay  
 t on the abscissa. Basically the interior area of the allowable code-
tracking errors has a diamond-like shape and is the allowable set of all tracking errors that can occur for all 
values of the multipath delay, for that particular relative multipath amplitude (value of  ). At, for example, a 
delay of 0.25 chip, the error can range from –0.25 to +0.08 chips. This plot is nearly identical to the dot 
product multipath plot reported by Van Dierendonck et al. [27]. The line defines the possible value of 
tracking error as a function of the delay of the multipath component relative to the desired signal. It is to be 
noted that even though the multipath component is always delayed with respect to the direct component, the 
multipath induced error can be either positive or negative! 
 
0
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
1.1 1.2 1.3 1.4 1.5 1.6
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
Multipath delay (chips)
Tracking Error (chips)
Tracking error (chips)
0
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
1.1 1.2 1.3 1.4 1.5 1.6
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
Multipath delay (chips)
Tracking Error (chips)
Tracking error (chips)
 
 
Figure 7.8-3 Multipath diagram (envelope of the timing error in chips as a function of the multipath delay in chips) for the early-late gate 
I-Q discriminator function, with   =1/2, infinite bandwidth. 
 
 
Now consider what happens when the early-late amplitude is reduced. Consider the case when  
  = 0.05 chip, with the other parameters the same. Figure 7.8-4 illustrates the new multipath induced error 
diagram. 
The first thing that is noticed about the plot with   reduced to one-tenth the value is the fact that the 
peak error is reduced to 0.025 chip! Thus it is clear that reducing the early-late correlator spacing reduces the 
peak multipath induced tracking error (when no filtering is accounted for). However it is seen that the peak 
error occurs over a larger range of multipath errors. It is to be noted that the range of delay in which the 
errors are not negligible is greater. Another aspect of the multipath problem is the fact that both the error and 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           553 
the multipath delay are plotted in chips. Therefore, if the chip rate is high, the actual error, in time, is small 
and the converse is true also. In addition with a high chip rate, the induced tracking error occurs only over a 
small multipath time delay window. The converse is true also. 
The relationship between chip errors and actual timing errors is given by 
 
 
1 chip error
seconds error
sT
=
 
 
(7.8-19) 
 
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
1.1
1.2
1.3
1.4
1.5
1.6
0.04
0.03
0.02
0.01
0
0.01
0.02
0.03
0.04
Multipath delay (chips)
Tracking Error (chips)
Tracking error (chips)
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
1.1
1.2
1.3
1.4
1.5
1.6
0.04
0.03
0.02
0.01
0
0.01
0.02
0.03
0.04
Multipath delay (chips)
Tracking Error (chips)
Tracking error (chips)
 
 
Figure 7.8-4 Multipath diagram (envelope of the timing error in chips as a function of the multipath delay in chips) for the early-late gate 
I-Q discriminator function, with  =0.05, infinite bandwidth. 
 
 
Let us now consider an example in which filtering is accounted for. It will be seen that the filtering 
has a major effect on the range of the code-tracking error. 
 
Example 3 Consider the same parameters as in Example 2, but include an ideal bandpass filter (IBP) having 
a RF bandwidth of 24 MHz. Evaluation of (7.8-18) produces the results indicated in Figures 7.8-5 and 7.8-6.  
 
It is seen that the reduction in multipath induced code-tracking error is not nearly as much at a 
narrower correlator spacing, when significant filtering is present in the channel. In fact when the 24 MHz 
ideal bandpass filter is present the maximum errors are about 0.18 chip at  = 0.5, and about 0.16 chip at  
 = 0.05. Thus narrow correlator spacing tends to not yield significantly lower multipath errors when the 
bandwidth of the channel is commensurate with the signal bandwidth and the errors are not as small as when 
the bandwidth is very wide. In addition, it is noticed that channel filtering causes the sharp corners of the 
diagram to be rounded off and the shapes are smoother in general. In summary the higher the chip rate, the 
smaller the effect of the multipath induced code-tracking errors. 
 
0
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
1
1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9
2
0.2
0.15
0.1
0.05
0
0.05
0.1
0.15
0.2
Multipath delay (chips)
Tracking Error (chips)
Tracking error (chips)
0
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
1
1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9
2
0.2
0.15
0.1
0.05
0
0.05
0.1
0.15
0.2
Multipath delay (chips)
Tracking Error (chips)
Tracking error (chips)
 
 
Figure 7.8-5 Multipath diagram (envelope of the timing error in chips as a function of the multipath delay in chips) for the early-late gate 
I-Q discriminator function, with  =0.5 with 24-MHz IBP filtering. 

 554                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
 
It is to be noted that a great amount of work has been done in the effort to minimize the effect of 
multipath on the receiver solution. The additional references list a few pertinent articles to aid the reader in 
understanding the techniques used to minimize the effects of multipath. 
 
 
 
0
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
1
1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9
2
0.25
0.2
0.15
0.1
0.05
0
0.05
0.1
0.15
0.2
0.25
Multipath delay (chips)
Tracking Error (chips)
Tracking error (chips)
0
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
1
1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9
2
0.25
0.2
0.15
0.1
0.05
0
0.05
0.1
0.15
0.2
0.25
Multipath delay (chips)
Tracking Error (chips)
Tracking error (chips)
 
 
Figure 7.8-6 Multipath diagram (envelope of the timing error in chips as a function of the multipath delay in chips), for the early-late 
gate discriminator function, with  =0.05 with 24-MHz IBP filtering. 
 
 
7.8.2 Multipath Effects on Baseband Coherent I-Q Code-Tracking Loops 
 
In this section we will establish the equation that defines the multipath error for a single delayed multipath 
component. Again the input is modeled as (again including the channel filtering on the received code) 
 
 
(
)
(
)
0
0
( )
2
(
)cos
2
(
)cos
s t
P PN t
T
t
P PN t
T
t
t
ω
θ
α
ω
θ
θ
=
−
+
+
−
−Δ
+
+ Δ
%
 
(7.8-20) 
 
Figure 7.8-7 illustrates the coherent code tracking model. 
 
( )
s t
%
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
0
1
(.)
b
T
b
dt
T ∫
0
1
(.)
b
T
b
dt
T ∫
-
+
-
( )
coh
D
ε
( )
s t
%
0
2 cos(
)
t
ω
θ
+
x(t)
( )
Le t
( )
Ee
t
(
)
L
b
e T
%
(
)
E
b
e T
%
BPF
(B)
( )
s t
( )
s t
%
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
0
1
(.)
b
T
b
dt
T ∫
0
1
(.)
b
T
b
dt
T ∫
0
1
(.)
b
T
b
dt
T ∫
0
1
(.)
b
T
b
dt
T ∫
-
+
-
( )
coh
D
ε
( )
s t
%
0
2 cos(
)
t
ω
θ
+
x(t)
( )
Le t
( )
Ee
t
(
)
L
b
e T
%
(
)
E
b
e T
%
BPF
(B)
BPF
(B)
( )
s t
 
 
Figure 7.8-7 The baseband coherent code-tracking loop with integrators used in the correlation processes.  
 
 
It is assumed that the coherent carrier reference is exactly in phase with the received carrier signal. 
Thus the signal at the point called x(t) is given by 
 
 
( )
(
)
(
)cos(
)
x t
P PN t
T
P PN t
T
t
α
θ
=
−
+
−
−Δ
Δ
 
(7.8-21) 
 
where the double carrier frequency term has been dropped since it will be filtered out by the integrate-and-
dump filter. The late and early signals (eL(t) and eE(t)) are then given by 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           555 
          
ˆ
ˆ
( )
(
)
(
)
(
)
(
)cos(
)
E
s
s
e
t
P PN t
T PN t
T
T
P PN t
T
t PN t
T
T
δ
α
δ
θ
=
−
−
+
+
−
−Δ
−
+
Δ
 
(7.8-22) 
 
and 
 
          
ˆ
ˆ
( )
(
)
(
)
(
)
(
)cos(
)
L
s
s
e t
P PN t
T PN t
T
T
P PN t
T
t PN t
T
T
δ
α
δ
θ
=
−
−
−
+
−
−Δ
−
−
Δ
 
(7.8-23) 
 
Again letting 
ˆ
T
T
ε =
−
 we can obtain the outputs of the integrators 
 
 
(
)
(
)
(
)cos(
)
L
b
PN
s
PN
s
e T
PR
T
PR
t
T
ε
δ
α
ε
δ
θ
=
−
+
+ Δ −
Δ
%
%
 
(7.8-24) 
 
and  
 
(
)
(
)
(
)cos(
)
E
b
PN
s
PN
s
e T
PR
T
PR
t
T
ε
δ
α
ε
δ
θ
=
+
+
+ Δ +
Δ
%
%
 
(7.8-25) 
 
The S-curve is given by 
 
 
( )
(
)
(
)
coh
L
b
E
b
D
e T
e T
ε =
−
%
%
 
(7.8-26) 
 
After rearranging, the S-curve can be written as 
 
{
}
( )
(
)
(
)
(
)
(
) cos(
)
coh
PN
s
PN
s
PN
s
PN
s
D
P R
T
R
T
R
t
T
R
t
T
ε
ε
δ
ε
δ
α
ε
δ
ε
δ
θ
⎡
⎤
=
−
−
+
+
+ Δ −
−
+ Δ +
Δ
⎣
⎦
%
%
%
%
(7.8-27) 
 
which is our final result for the discriminator function in the coherent case to determine the envelope of 
timing errors when one delayed multipath signal is present. The envelope of multipath induced errors 
involves determining the range of ε  values that causes Dcoh(ε ) to be zero. This will yield the envelope of 
errors (   values) that can provide a stable lock point of the code-tracking loop (Dcoh(ε ) = 0) with the 
appropriate assumptions of the value of θ
Δ
. Now we will show that the multipath error envelope is the same 
for the coherent and the noncoherent code-tracking loops. 
 
 
7.8.3 The Multipath Error Plots Are the Same for Coherent and Noncoherent Code-Tracking Loops 
 
In this section we will prove that the error envelope plots of the coherent baseband code-tracking loop are the 
same as for the noncoherent I Q code-tracking loop for a single delayed multipath component. To do this we 
will show that the values of ε  are the same in the case that Dcoh(ε ) = 0 and Dnc(ε ) = 0.14  
 
The normalized value of the coherent discriminator function is given by 
 
   
{
}
( )
(
)
(
)
(
)
(
) cos(
)
coh
PN
s
PN
s
PN
s
PN
s
D
R
T
R
T
R
t
T
R
t
T
P
ε
ε
δ
ε
δ
α
ε
δ
ε
δ
θ
⎡
⎤
=
−
−
+
+
+ Δ −
−
+ Δ +
Δ
⎣
⎦
%
%
%
%
 (7.8-28) 
 
 
We will consider two cases that define the limits of the multipath error: (1) 
θ
Δ
= 0 and (2)  
θ
Δ
 = π . First consider case (1): for Dcoh( ) = 0 we require from (7.8-28) that 
 
 
(
)
(
)
(
)
(
)
PN
s
PN
s
PN
s
PN
s
R
T
R
t
T
R
T
R
t
T
ε
δ
α
ε
δ
ε
δ
α
ε
δ
−
+
+ Δ −
=
+
+
+ Δ +
%
%
%
%
 
(7.8-29) 
 
and for the second case when θ
Δ
 =π  in order that Dcoh( ) = 0, we must have 
 
                                                          
14 This approach on equivalence was based on an unpublished paper written by G. Fan of The Aerospace Corporation. 

 556                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
(
)
(
)
(
)
(
)
PN
s
PN
s
PN
s
PN
s
R
T
R
t
T
R
T
R
t
T
ε
δ
α
ε
δ
ε
δ
α
ε
δ
−
−
+ Δ −
=
+
−
+ Δ +
%
%
%
%
 
(7.8-30) 
 
 
Now we consider the noncoherent code-tracking loop case for the late2–early2 discriminator 
function. From (7.8-18) we have for the normalized discriminator function 
 
        
{
}
{
}
2
2
2
2
( )
(
)
(
)
             
(
)
(
)
            
2
cos(
)
(
)
(
)
(
)
(
)
nc
PN
s
PN
s
PN
s
PN
s
PN
s
PN
s
PN
s
PN
s
D
R
T
R
T
P
R
T
t
R
T
t
R
T
t R
T
R
T
t R
T
ε
ε
δ
ε
δ
α
ε
δ
ε
δ
α
θ
ε
δ
ε
δ
ε
δ
ε
δ
⎡
⎤
⎡
⎤
=
−
−
+
⎣
⎦
⎣
⎦
⎡
⎤
⎡
⎤
+
−
+ Δ
−
+
+ Δ
⎣
⎦
⎣
⎦
⎡
⎤
−
Δ
−
+ Δ
−
−
+
+ Δ
+
⎣
⎦
%
%
%
%
%
%
%
%
 (7.8-31) 
 
First consider the case when θ
Δ
= 0. Then it is not difficult to show that  
 
 
2
2
(
)
(
)
(
)
(
)
PN
s
PN
s
PN
s
PN
s
R
T
R
T
t
R
T
R
T
t
ε
δ
α
ε
δ
ε
δ
α
ε
δ
⎡
⎤
⎡
⎤
−
+
−
+ Δ
=
+
+
+
+ Δ
⎣
⎦
⎣
⎦
%
%
%
%
 
(7.8-32) 
 
It follows from (7.8-32) by taking the square root of both sides that the following must be true 
 
 
(
)
(
)
(
)
(
)
PN
s
PN
s
PN
s
PN
s
R
T
R
T
t
R
T
R
T
t
ε
δ
α
ε
δ
ε
δ
α
ε
δ
⎡
⎤
⎡
⎤
−
+
−
+ Δ
=
+
+
+
+ Δ
⎣
⎦
⎣
⎦
%
%
%
%
 
(7.8-33) 
 
It is noticed that (7.8-33) is identical to the coherent case in (7.8-29). Now consider the second case when 
θ
Δ
 = π . In this case the normalized discriminator function is given by 
 
       
2
2
( )
(
)
(
)
(
)
(
)
nc
PN
s
PN
s
PN
s
PN
s
D
R
T
R
T
t
R
T
R
T
t
P
ε
ε
δ
α
ε
δ
ε
δ
α
ε
δ
⎡
⎤
⎡
⎤
=
−
−
−
+ Δ
−
+
−
+
+ Δ
⎣
⎦
⎣
⎦
%
%
%
%
 (7.8-34) 
 
In order for the noncoherent discriminator function to be zero we see that the square of the first term must 
equal the square of the second term. So taking the square root of both sides produces the requirement 
 
 
(
)
(
)
(
)
(
)
PN
s
PN
s
PN
s
PN
s
R
T
R
T
t
R
T
R
T
t
ε
δ
α
ε
δ
ε
δ
α
ε
δ
⎡
⎤
⎡
⎤
−
−
−
+ Δ
=
+
−
+
+ Δ
⎣
⎦
⎣
⎦
%
%
%
%
 
(7.8-35) 
 
Notice that (7.8-35) is the same as (7.8-30). Thus we have proven that the same conditions apply for the 
coherent and noncoherent code-tracking loops when only one multipath component exists for late2–early2 
discriminator functions. Now since the multipath diagrams are the same for both the noncoherent and 
coherent baseband I-Q code-tracking loops (7.8-27) may be plotted rather than the more cumbersome 
(7.8-18). 
 
 
7.9 MEAN TIME TO LOSE LOCK FOR A FIRST-ORDER EARLY-LATE GATE RF CODE- 
TRACKING LOOP  
Equation Chapter 1 Section 1Equation Chapter (Next) Section 7.9 
The threshold to losing lock in a code-tracking loop is difficult to define by arbitrarily specifying a specific 
code timing error or the code loop signal-to-noise ratio. As a consequence a more refined notion of threshold 
will be proposed here; although also arbitrary, it is hopefully more satisfying in a conceptual sense. We will 
use the mean time to lose lock in the sense of exceeding the discriminator function lock range as the criteria. 
This work follows Holmes and Biederman [28] and was generalized to arbitrary, binary valued ( 1)
±
 code 
symbols in [7]. 
The analysis that is used here is based on an analog, first-order, noncoherent, RF code-tracking loop. 
The reason for the analog model was to ameliorate the analysis to some extent, using known Markov mean 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           557 
first passage time techniques. This model is shown in Figure 7.9-1. It is based on an early-late gate 
discriminator function model.  
BPF
(B)
BPF
(B)
(.)2
(.)2
-
F(s)
VCO
Code
gen.
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
+
-
y(t)
1( )
e t
2( )
e t
1( )
e t
%
2( )
e t
%
BPF
(B)
BPF
(B)
BPF
(B)
BPF
(B)
BPF
(B)
BPF
(B)
(.)2
(.)2
(.)2
(.)2
-
F(s)
F(s)
VCO
VCO
Code
gen.
Code
gen.
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
+
-
y(t)
1( )
e t
2( )
e t
1( )
e t
%
2( )
e t
%
 
 
Figure 7.9-1 First-order BPF implemented code-tracking loop model. 
 
 
The discriminator function controls the loop filter. The loop filter, a constant in this case for first 
order loop, drives a voltage-controlled oscillator (VCO) that provides the clock frequency for the early and 
late local estimates of the receiver codes. However, the baseband implementation shown in Figure 7.9-2 is 
more common. 
We have already seen both loops earlier in this chapter. The I2+Q2 of the early correlators is 
subtracted from the I2+Q2 of the late correlators to achieve an error control signal to control the code-tracking 
loop. This error signal drives the loop filter, which in turns controls the voltage-controlled crystal oscillator 
(VCXO), which drives the timing of the early and late receiver estimates of the received pseudonoise (PN) 
code. 
The approach used here is to formulate the mean slip time with the IF code loop model which 
depends on the linearized code loop error variance and then substitute the known code loop error variance for 
the integrate-and-dump (I&D) code loop model. The basic approximation is based on replacing a discrete 
time process (I&D loop) with a continuous code loop model (IF loop). The goal is to obtain an analysis to 
allow prediction of the I&D model. 
 

 558                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
Early correlator
BPF
(W)
Carrier
LPF
LPF
PN
code
gen.
F(s)
Sample
& hold
( )2
Sample
& hold
( )2
+
Sample
& hold
( )2
Sample
& hold
( )2
+
Late Arm
VCXO
BPF
Carrier
source
Carrier
LPF
LPF
PN
-
+
F(s)
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
y(t)
VCXO
-
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
ys(t)
yc(t)
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
ysLI(t)
ycLI(t)
ysEI(t)
ycEI(t)
Early arm
eL(t)
eE(t)
e(t)
0
ˆ
2 sin(
)
t
ω
θ
+
0
ˆ
2 cos(
)
t
ω
θ
+
2L
e
1L
e
2E
e
2L
e
2L
e%
1L
e%
2E
e%
1E
e%
Late correlator
Early correlator
BPF
(W)
Carrier
Carrier
LPF
LPF
PN
code
gen.
F(s)
Sample
& hold
Sample
& hold
( )2
Sample
& hold
Sample
& hold
( )2
+
Sample
& hold
Sample
& hold
( )2
Sample
& hold
Sample
& hold
( )2
+
Late Arm
VCXO
BPF
Carrier
source
Carrier
LPF
LPF
PN
-
+
F(s)
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
Sample
&
Sample
&
( )2
Sample
&
Sample
&
( )2
+
y(t)
VCXO
-
ˆ
(
)
s
PN t
T
T
δ
−
−
ˆ
(
)
s
PN t
T
T
δ
−
+
ys(t)
yc(t)
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
(
1)
( )
b
b
nT
n
T
dt
−∫
ysLI(t)
ycLI(t)
ysEI(t)
ycEI(t)
Early arm
eL(t)
eE(t)
e(t)
0
ˆ
2 sin(
)
t
ω
θ
+
0
ˆ
2 cos(
)
t
ω
θ
+
2L
e
1L
e
2E
e
2L
e
2L
e%
1L
e%
2E
e%
1E
e%
Late correlator
 
 
Figure 7.9-2 Baseband I-Q version of a noncoherent code-tracking loop with early-late gate code separation of 
2
d
δ
=
. 
 
7.9.1 Model for the Analysis of the Mean Slip Time Performance of the Early-Late Gate Code- 
Tracking Loop with RF Implementation 
 
It is shown in Appendix 7A that the stochastic nonlinear differential equation governing the operation of the 
IF code loop model is given by 
 
 
( )
( )
( )
( )
1
2
v
n
k
T
F s
PKg
n t
n
t
s
ε
α
ε
⎡
⎤
=
−
+
+
⎣
⎦ 
(7.9-1) 
 
where   is the code timing error (
ˆ
T
T
ε =
−
) and is a function of time, T is the delay between the transmitter 
and the receiver, ˆT  is the code estimate of the delay, F(s) is the loop filter transfer function in the Laplace 
variable s, P is the received power, K is the discriminator function gain, Kv is the VCO frequency per voltage 
scale parameter, gn( ) is the normalized unit gain discriminator function for the symbol shape under 
discussion, and n1(t) and n2(t) are the signal times noise and noise times noise terms that result and are 
described in the Appendix.  
After considerable analysis, the Fokker-Planck Equation [29–31], for the density function as a 
function of the code phase error   at time t, as long as the phase error stays inside the code error boundaries 
(
LL
ε
ε
∀
<
), for the problem at hand is given by  
 
 
(
)
( ) (
)
(
)
'
2
2
0
2
,
,
,
4
v
v
n
q
t
N K
PKK
g
q
t
q
t
t
t
ε
α
ε
ε
ε
ε
∂
∂
∂
⎡
⎤
⎡
⎤
=
+
⎣
⎦
⎣
⎦
∂
∂
∂
 
(7.9-2) 
 
where 
'
0
N  is the one-sided noise spectral density, P is the received signal power, the Ks are gains (see the 
appendix), and   is a signal power loss. This equation is not valid after a boundary is reached. The partial 
differential equation is subject to the initial conditions  
 
 
(
)
( )
,0
q ε
δ ε
=
 
(7.9-3) 
 
and the boundary conditions 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           559 
 
 
(
)
(
)
(
)
,
0
,
,
LL
q
t
g
t
q
t
t
ε
ε
ε
ε
ε
=
∀
≥
=
−
∀
 
(7.9-4) 
 
where 
x
∀ denotes “all values of x.”  
From Appendix 7A the solution to the mean slip time performance, for the IF model (continuous 
time), leads to the following general formulation 
 
 
( )
( )
( )
1
4
2
G
G
L
T
e
e
u
d
d
B
ε
ε
ε
ε
σ
σ
ε
ε
ε
ε
ε
σ
⎡
⎤
⎡
⎤
−⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
−
−
⎡
⎤
=
−
⎢
⎥
⎣
⎦
∫
∫
2
2
'
2
1
'
'
 
LL
LL
LL
 
(7.9-5) 
 
In this expression T  denotes the mean time to lose lock in seconds,  LL is the magnitude of the 
upper and lower code phase error in symbols where loss of lock is defined, BL is the code one-sided closed-
loop noise bandwidth in Hz, 
2
σ  is the linearized code-tracking error expressed in symbols squared for either 
the RF or baseband versions of the code-tracking loops, u(x) is the unit step function that is one for 
0
x ≥
 
and zero otherwise, and G( ) is an even function of   and is the indefinite integral of gn( ). Figure 7.9-3 
illustrates an example of the 
( )
G ε  function.  
 
1.5
1.13
0.75
0.38
0
0.38
0.75
1.13
1.5
0
0.05
0.1
0.15
0.2
0.25
0.3
ε
G( ε )
ε
G( ε )
1.5
1.13
0.75
0.38
0
0.38
0.75
1.13
1.5
0
0.05
0.1
0.15
0.2
0.25
0.3
1.5
1.13
0.75
0.38
0
0.38
0.75
1.13
1.5
0
0.05
0.1
0.15
0.2
0.25
0.3
ε
G( ε )
ε
G( ε )
 
 
Figure 7.9-3 G( ) for BPSK(10) with d = 1 symbol correlation separation. 
 
 
The variance of the bandpass filter (BPF) code loop model is given from Appendix 7A, as  
 
 
(
)
(
)
(
)
1
1
2
2
L
0
PN
s
PN
s
PN
s
2
N B
4N W
8R
δT
R
2δT
+
R
2δT
K
P
P
σ
α
α
⎡
⎤
⎡
⎤
⎡
⎤
=
−
−
⎢
⎥
⎣
⎦
⎣
⎦
⎣
⎦
2
0
(
)
 
(7.9-6) 
 
in units of symbols squared. However the model of interest is the baseband model, illustrated in Figure 7.9-2, 
which has [2] the linearized tracking variance (this does not include quantization errors) given by  
 
 
(
)
(
)
(
)
(
)
2
0
L
PN
2
1
1
2
0
PN
s
2
I&D
s
PN
s
b
4N
R
2 T
N B
8R
T
R
2 T
K P
PT
δ
σ
δ
δ
⎡
⎤
⎡
⎤
−
⎣
⎦
⎢
⎥
=
−
+
⎢
⎥
⎣
⎦
 
(7.9-7) 
 

 560                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
in units of symbols squared. This expression for the tracking error variance was used in the actual mean slip 
time results. Note that (7.9-6) and (7.9-7) are very similar in form. It is to be noted that it has not been proved 
that it is legitimate to use (7.9-7) in (7.9-5), but it is conjectured that it is correct. 
 
 
7.9.2 Mean Slip Time Comparison of Theory and Simulation for the Early-Late Gate Code-Tracking  
Loop with RF Implementation 
 
Figure 7.9-4 compares the theoretical and simulated values of the mean slip time for the BOC(10,5)15 and the 
NRZ(10) modulations. The simulation was developed to model the loss of code lock phenomena with two 
samples per code chip.  
As can be seen from Figure 7.9-4, although there is agreement between the theoretical and the 
simulation results in terms of the trend in which mean slip time depends on the C/N0 value, the absolute 
values of loss of lock (LOL) do not agree exactly. The shapes are similar but the simulation performance 
prediction was better than the theory predicted in the range of comparison. The theory suggests that there is a 
1-2-dB improvement in threshold for NRZ waveforms at d = 1, compared to the optimized spacing (d = 1/7) 
BOC(10,5) signal. However the simulation shows about a 3-dB improvement in the threshold performance of 
NRZ (at d = 1) compared to the optimum BOC modulation. It is expected that narrower spacing (d < 1) will 
additionally improve (raise the LOL time) the NRZ slip time performance. The main point here is the fact 
that increasing the loop SNR greatly improves the mean time to lose lock. In fairness, it should be stated that 
the BOC(10,5) signal has much better code-tracking performance above threshold than the NRZ(10) signal 
has. 
 
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
1  10 3
0.01
0.1
1
10
100
1  103
1  104
1  105
1  106
1  107
1  108
C/N0 (dB-Hz)
Mean Slip Time (sec)
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
1  10 3
0.01
0.1
1
10
100
1  103
1  104
1  105
1  106
1  107
1  108
C/N0 (dB-Hz)
Mean Slip Time (sec)
BOC(10,5)
(simul.)
NRZ(10)
(simul.)
BOC(10,5)
(theory)
NRZ(10)
(theory)
Mean slip time (sec)
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
1  10 3
0.01
0.1
1
10
100
1  103
1  104
1  105
1  106
1  107
1  108
C/N0 (dB-Hz)
Mean Slip Time (sec)
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
1  10 3
0.01
0.1
1
10
100
1  103
1  104
1  105
1  106
1  107
1  108
C/N0 (dB-Hz)
Mean Slip Time (sec)
BOC(10,5)
(simul.)
NRZ(10)
(simul.)
BOC(10,5)
(theory)
NRZ(10)
(theory)
Mean slip time (sec)
 
Figure 7.9-4 BOC(10,5) and NRZ(10) mean slip time in seconds at BL = 5 Hz for the early-late gate code-tracking loop with RF 
implementation. 
 
 
                                                          
15 Note the BOC(10,5) code is based on the synchronous product of a squarewave operating at 10.23 MHz and a 5.115 Msps underlying 
NRZ code. It is used in at least one navigational system. 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           561 
The reason for the difference in the absolute values between theory and simulation is not fully 
understood at the time of this writing, although the simulation did include the discrete time model of the 
loop. The IF model analyzed here is based on a continuous error control model, whereas the baseband loop is 
piecewise continuous (every 20 ms the correction is updated). This is not an essential difference as long as 
the BL×(Update period) <<1. Quantization was not accounted for in the theoretical model. 
 
 
7.10 WIDEBAND JAMMING EFFECTS ON TRACKING AND MEAN TIME TO LOSE LOCK  
FOR THE EARLY-LATE GATE CODE-TRACKING LOOP WITH RF IMPLEMENTATION 
Equation Section (Next) 
In this section we desire to show the effect of broadband jamming on the performance of code-tracking and 
the mean time to lose lock with unfiltered signals. Assume that the input signal plus interference is given  
 
 
0
( )
2
( )
( )cos(
)
( )
( )
y t
Pd t PN t
t
n t
J t
ω
θ
=
+
+
+
 
(7.10-1) 
 
in which the first term denotes the received BPSK signal, the second term denotes white Gaussian noise, and 
the third term is a broadband flat jammer, assumed to be flat over the band of f0+BJ/2 to f0–BJ/2, with a one-
sided jammer spectral density given by 
 
 
 
 
0
0
0
/
 for  
/ 2 to 
/ 2
J
J
J
J
J B
f
B
f
B
=
−
+
 
(7.10-2) 
 
It is assumed that the bandwidth BJ is wide compared to the signal in the following discussion. 
Consequently the total jammer plus noise spectral density over the bandwidth BJ  (Hz) is given by 
 
 
0
0
0
I
N
J
=
+
 
(7.10-3) 
 
The degradation relative to the only thermal noise is given by the factor multiplying the noise 
spectral density; thus from 
 
 
0
0
0
0
0
0
1
1
J
J
J
I
N
N
N
N B
⎛
⎞
⎛
⎞
⎛
⎞
⎛
⎞
=
+
=
+
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎝
⎠
⎝
⎠
 
(7.10-4) 
 
where I0 is the effective one-sided noise spectral density, we obtain the degradation 
 
 
0
1
1
D
J
L
J
N B
= ⎛
⎞
⎛
⎞
+
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(7.10-5) 
 
Therefore the effective Eb/N0 performance of, say, a code-tracking loop, under broadband flat jamming, can 
be written as  
 
 
0
0
0
0
1
1
1
/
(
)
b
b
b
J
b
J
E
PT
I
J
J
N
E
N
P B T
N B
=
=
⎛
⎞
⎛
⎞
⎛
⎞
+
+
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎝
⎠
 
(7.10-6) 
 

 562                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
where I0 is the total effective noise-like spectral density and the interference is expressed as a function of J/P, 
the jammer-to-signal power ratio. Note that it is common to call degradation due to jamming the jamming 
degradation  
 
 
0
1
J
J
Degr
N B
⎛
⎞
⎛
⎞
=
+
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(7.10-7) 
 
The metric is P/(N0Bsys), where Bsys is the appropriate system bandwidth, such as the arm filter bandwidth in a 
bandpass implemented code-tracking loop. In this case the following expression can be used 
 
 
0
0
1
1
/
sys
sys
sys
J
P
I B
JB
P N B
PB
= ⎛
⎞
+
⎜
⎟
⎜
⎟
⎝
⎠
 
(7.10-8) 
 
and the interference is again expressed as a function of J/P.  
 
For code acquisition N0 can be replaced by I0, just as in the code-tracking case. To see how these 
equations apply in the code-tracking case, consider an example. 
 
Example 4 Determine the expression for the variance of the code loop tracking error as a function of J/P 
when a broadband noise jammer is utilized for NRZ symbols and there is no channel filtering. Consider 
(7.2-90), which is repeated here 
 
 
2
2
0
0
2
1
   symbols
2
(2
)(
/
)
L
sym
b
N B d
P
d
E
N
σ
⎡
⎤
=
+
⎢
⎥
−
⎣
⎦
 
 
Replacing N0 everywhere with 
0
0
0
1
J
J
I
N
N B
⎛
⎞
⎛
⎞
=
+
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 produces the result 
 
 
(
)
(
)
0
0
2
2
/
2
/
1+
   symbols
2
(2
)
J
L
J
sym
b
N
J B
B d
N
J B
P
d E
σ
⎡
⎤
+
+
=
⎢
⎥
−
⎣
⎦
 
 
as our result as a function of the J/P ratio. 
 
 
7.11 CRAMER-RAO BOUND ON CODE-TRACKING ERROR 
Equation Section (Next) 
The Cramer-Rao bound (CRB) on code-tracking error is a useful lower bound on the performance one can 
expect from an estimate of code tracking. In other words, a bound on code-tracking error variance is useful 
so as to compare it to a practical estimator such as a code-tracking loop. The CRB is a general lower bound 
on the minimum mean square estimate of a random parameter [32]. This bound has been applied to code-
tracking [33], symbol synchronizers [34], Carrier tracking [35], and joint carrier and code-tracking [36], as 
well as other applications. 
 
Let the set of N scalar measurements at time i t be denoted as  
 
 
(
)
(
, )
(
)
x
t
s i t
n i t
τ
Δ
=
Δ
+
Δ
 
(7.11-1) 
 
for i = 0, 1, 2,…N–1. The n(i t) are white Gaussian noise terms of zero mean and covariance given by 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           563 
 
{
}
2
T
E
σ
=
n n
I  
(7.11-2) 
 
where I is the unit matrix of dimension N × N and n is the row vector described by 
 
 
(
)
(0), (
), (2
),... ((
1)
)
n
n
t n
t
n N
t
=
Δ
Δ
−
Δ
n
 
(7.11-3) 
 
and   is the parameter to be estimated. Assume that the probability density function (pdf) for the samples is 
given by (
)
p
τ
n
. Let ˆτ  be the maximum-likelihood (ML) estimator of the parameter  , then let the bias of 
the estimator be b( ) so that  
 
 
{ }
ˆ
( )
E
b
τ
τ
τ
=
+
 
(7.11-4) 
 
Then the Cramer-Rao bound states in the general case that  
 
 
(
)
2
2
( )
1
ˆ
ln
(
)
db
d
Var
p
E
τ
τ
τ
τ
τ
τ
⎡
⎤
−
+
⎢
⎥
⎣
⎦
−
≥
⎧
⎫
∂
⎪
⎪
⎨
⎬
∂
⎪
⎪
⎩
⎭
x
 
(7.11-5) 
 
where 
(
)
p
τ
x
 is the likelihood function viewed as function of  , where 
=
x
s + n and n is defined 
previously and s is defined in a similar fashion; that is,  
 
 
(
)
(0), (
), (2
),... ((
1)
)
s
s
t s
t
s N
t
=
Δ
Δ
−
Δ
s
 
(7.11-6) 
 
In the case that the estimate is unbiased (b( ) = 0) then the CRB reduces to  
 
 
(
)
2
2
1
ˆ
ln
(
)
Var
p
E
τ
τ
τ
τ
−
−
≥
⎧
⎫
∂
⎪
⎪
⎨
⎬
∂
⎪
⎪
⎩
⎭
x
 
(7.11-7) 
 
An alternate expression for the bound on the estimator error is obtained from Problem 12 as 
 
 
(
)
2
( )
1
ˆ
ln
(
)
db
d
Var
p
E
τ
τ
τ
τ
τ
τ
⎡
⎤
+
⎢
⎥
⎣
⎦
−
≥
⎧
⎫
⎛∂
⎞
⎪
⎪
⎨
⎬
⎜
⎟
∂
⎝
⎠
⎪
⎪
⎩
⎭
x
 
(7.11-8) 
 
where the negative second derivative is replaced with the first derivative squared. The denominator is called 
the Fisher information matrix, J( ) [33]; that is, 
 
 
2
ln
(
)
( )
p
J
E
τ
τ
τ
⎧
⎫
⎛∂
⎞
⎪
⎪
=
⎨
⎬
⎜
⎟
∂
⎝
⎠
⎪
⎪
⎩
⎭
x
 
(7.11-9) 
 

 564                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
The Fisher information matrix is roughly a measure of the sharpness of the peak of the likelihood 
function. For a Gaussian noise example, one has for the likelihood function 
 
 
(
)
1
2
2
0
1
1
(
)
exp
(
)
(
,
2
2
N
N
i
p
x i t
s i t
τ
τ
σ
σ
π
−
=
⎡
⎤
⎛
⎞
=
−
Δ
−
Δ
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
∑
x
 
(7.11-10) 
 
The Fisher information matrix is evaluated as follows 
 
 
1
2
0
(
)
1
( )
N
i
s i t
J
τ
τ
σ
τ
−
=
⎡∂
Δ
⎤
= −
⎢
⎥
∂
⎣
⎦
∑
 
(7.11-11) 
 
More generally [33] if τ  is a vector parameter with components 
iτ , then the Cramer-Rao bound 
states that the following is true 
 
 
2
1( )
ij
ij
σ
τ
−
⎡
⎤
≥⎣
⎦
I
 
(7.11-12) 
 
where the rectangular matrix I( ) has components given by 
 
 
[
]
2
 
[ln( (
))]
( )
ij
i
j
p
E
τ τ
⎧
⎫
∂
⎪
⎪
= −
⎨
⎬
∂∂
⎪
⎪
⎩
⎭
x
I
τ
τ
 
(7.11-13) 
 
Assume that the signal is received through an ideal low-pass filter of bandwidth W Hz, the signal 
samples are taken at the Nyquist rate (i.e., 
t
Δ
 = 1/(2W) seconds), and the delay is given by 
(
, )
(
)
s i t
s i t
τ
τ
Δ
=
Δ −
; then the CRB is given by [33] 
 
 
2
2
2
1
2
0
0
2
(
)
N
s
i
E
s i t
N
τ
σ
σ
τ
ω
τ
−
=
≥
=
∂
Δ −
⎛
⎞
Δ
⎜
⎟
∂
⎝
⎠
∑
 
(7.11-14) 
 
where 
 
 
2
0
( )
N t
s
E
s t dt
Δ
= ∫
 
(7.11-15) 
 
and the mean squared bandwidth, 
2
ω
Δ
, is given by 
 
 
(
)
2
2
2
2
2
( )
2
( )
f
S f
df
S f
df
ω
π
∞
−∞
∞
−∞
Δ
=
∫
∫
 
(7.11-16) 
 
where S(f) is the Fourier transform of s(t). The square root of 
2
ω
Δ
 is the Gabor bandwidth and is defined by 
2
ω
Δ
. Note that if the numerator and the denominator are divided by Ts, the symbol duration of the signal 
s(t), then we may write for random code sequences 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           565 
 
(
)
2
2
2
( )
2
( )
PN
PN
f P
f df
P
f df
ω
π
∞
−∞
∞
−∞
Δ
=
∫
∫
 
(7.11-17) 
 
where PPN(f) is the power spectral density of the baseband code signal. Alberty [35] has shown that when a 
filter limits the PSD, (7.11-17) is modified to 
 
 
(
)
2
2
2
2
2
( )
( )
2
( )
( )
PN
BB
PN
BB
f P
f
H
f
df
P
f
H
f
df
ω
π
∞
−∞
∞
−∞
Δ
=
∫
∫
 
(7.11-18) 
 
where 
2
( )
BB
H
f
 is the magnitude squared of the low-pass equivalent combined transmitter and receiver 
filter.  
 
Example 5 Consider an NRZ ranging code operates at R chip/sec. Assume that the code is essentially a 
random code. Determine the CRB under the assumption that the equivalent baseband filter is an ideal low-
pass filter with a bandwidth of 4R Hz. Evaluating produces 
 
 
4
2
2
2
2
2
2
4
sin(
)
(2 )
16
(
)
R
c
c
R
fT
f
df
R
fT
π
ω
π
π
−
Δ
=
=
∫
 
 
Thus we see via (7.11-14) that the mean squared error is proportional to the inverse chip rate2 under 
these conditions. Clearly a higher code rate improves the performance in the sense that the minimum mean 
squared tracking error bound is reduced. For additional insight see Problem 13. 
 
 
7.12 PHASE ROTATION AND HETERODYNING FOR RECEIVER USE 
Equation Section (Next) 
In this section we discuss the difference between a heterodyning operation and a phase rotation translation 
(also known as single sideband rotation). In a receiver it is often necessary to translate the signal from an IF 
frequency to baseband in order to process the signal when the IF frequency is smaller than the bandwidth of 
the signal. Typically navigational receivers utilize phase rotation. 
 
7.12.1 Heterodyning the Signal to Near Baseband 
Now we will consider a convenient method of changing the frequency of a signal by in effect phase rotating 
it up or down in frequency. The need to phase rotate the signal down in frequency (or up in frequency) 
occurs, for example, when an approximate frequency is known a priori and the signal then is to be 
heterodyned down to essentially zero frequency. This approximate frequency estimate may be obtained, for 
example, from known dynamics of the transmitter and receiver. When a carrier-tracking loop is employed to 
track the carrier signal, the final shift to baseband is normally accomplished with a phase rotation. 
Let the received BPSK signal (or one phase of a quadriphase signal) be the received signal of the 
form  
 
 
(
)
0
( )
2
( )
( )cos
y t
Pd t PN t
t
ω
θ
=
+
 
(7.12-1) 
 

 566                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
Consider a heterodyne operation for generating the I and Q baseband components for processing, 
such as code-tracking, code acquisition or bit error rate detection, that is shown in Figure 7.12-1. Figure 7.12-
2 illustrates the heterodyning process in which one output resides at the sum frequency and the other one at 
the difference frequency for the signals only (noise is not considered). 
 
LPF
I(t)
LPF
Q(t)
(
)
0
1
2 cos (
)t
ω
ω
θ
−Δ
+
(
)
0
1
2 sin (
)t
ω
ω
θ
−
−Δ
+
y(t)
( )
I t
%
( )
Q t
%
LPF
I(t)
LPF
I(t)
LPF
Q(t)
LPF
Q(t)
(
)
0
1
2 cos (
)t
ω
ω
θ
−Δ
+
(
)
0
1
2 sin (
)t
ω
ω
θ
−
−Δ
+
y(t)
( )
I t
%
( )
Q t
%
 
Figure 7.12-1 Baseband heterodyned output for a BPSK signal where f0 =  0/(2 ). 
 
 
 
 
f0
2f0-Δf
0
Δf
f0-Δf
f
Spectral density
Reference
frequency
Difference
sideband
Original
signal
Sum
sideband
f0
2f0-Δf
0
Δf
f0-Δf
f
Spectral density
Reference
frequency
Difference
sideband
Original
signal
Sum
sideband
f0
2f0-Δf
0
Δf
f0-Δf
f
f0
2f0-Δf
0
Δf
f0-Δf
f
Spectral density
Reference
frequency
Difference
sideband
Original
signal
Sum
sideband
  
 
Figure 7.12-2 The results of heterodyning a BPSK carrier to near zero frequency. 
 
 
It is seen that the heterodyne process has produced two signals (the sum and difference terms) per 
channel (I and Q). There is one at near baseband and one at near double the carrier frequency.  
It is easy to show that the two components out of the I-Q demodulator, before the low-pass filters 
(LPF), is of the form 
 
 
(
)
(
)
1
0
1
( )
( )cos
( )cos (2
)
I t
Pd t
t
Pd t
t
ω
θ
θ
ω
ω
θ
θ
=
Δ
+
−
+
−Δ
+
+
%
 
(7.12-2) 
 
and 
 
 
(
)
(
)
1
0
1
( )
( )sin
( )sin (2
)
Q t
Pd t
t
Pd t
t
ω
θ
θ
ω
ω
θ
θ
=
Δ
+
−
−
−Δ
+
+
%
 
(7.12-3) 
 
when the I and Q references are lower by  f =   /2  Hz. 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           567 
 
After filtering with a low-pass filter that cuts off at around  0, the two baseband components 
become 
 
 
(
)
1
( )
( )cos
I t
Pd t
t
ω
θ
θ
=
Δ
+
−
 
(7.12-4) 
 
and 
 
 
(
)
1
( )
( )sin
Q t
Pd t
t
ω
θ
θ
=
Δ
+
−
 
(7.12-5) 
 
Thus, after the low-pass filtering we see that the effect of the heterodyning is to shift the signal to 
near baseband. If the frequency uncertainty    were zero, then the signals would be right at baseband. It is 
clear that the low pass filter was important to remove the double frequency or sum term. It should be noted 
that as long as the difference term (near baseband signal) and the sum term (signal near 2 0) do not overlap, 
the frequency translation to baseband is easily accomplished via heterodyning. 
Now let us consider a method to translate the heterodyned signal directly to baseband, without 
generating the other sideband. The alternative method is known as a phase rotation (translation). 
 
7.12.2 Phase Rotation or Single Sideband Translation 
Assume that the I and Q signals have already been generated, as shown in Figure 7.12-1, from an initial 
heterodyne process. Also assume that    is the IF frequency and it is desired to do an additional frequency 
correction via the control element of a Costas loop, for example, for carrier tracking. One means to do this 
and to avoid overlapping of the signal spectra is to use a phase rotation translation. This process only 
produces one signal (sideband) at a lower frequency and does not produce two sidebands, and thus there is no 
concern about overlapping signal spectra. 
Now consider the single sideband translation,16 to lower the frequency by, say, 
ˆω
Δ
, which is also 
known as a phase rotation downward. The translation (rotational transformation) from I’ and Q’ from I and Q 
is given by 
 
(
)
(
)
(
)
(
)
'
'
ˆ
ˆ
( )
( )cos
( )
( )sin
( )
ˆ
ˆ
( )
( )cos
( )
( )sin
( )
I t
I t
t
Q t
t
Q t
Q t
t
I t
t
=
Φ
+
Φ
=
Φ
−
Φ
 
(7.12-6) 
where ˆ ( )t
Φ
 is given by 
 
1
ˆ
ˆ
ˆ
( )t
t
t
ω
θ
θ
ω
θ
Φ
= Δ
+
−
= Δ
+ Δ
 
(7.12-7) 
 
and is the estimate of 
ω
Δ
 and the phase difference. Let 
1
( )t
t
t
ω
θ
θ
ω
θ
Φ
= Δ
+
−
= Δ
+ Δ
; then the 
transformation (phase rotation) can be written as 
 
 
( )
( )
( )
( )
'
ˆ
ˆ
( )
( )cos
cos
( )sin
sin
I t
Pd t
Pd t
=
Φ
Φ +
Φ
Φ  
(7.12-8) 
 
which can be simplified to 
 
 
'
ˆ
( )
( )cos
I t
Pd t
⎡
⎤
=
Φ −Φ
⎣
⎦ 
(7.12-9) 
 
 
Now consider the Q’ term. It can be written as 
 
 
                                                          
16 In this case the phase is assumed to be known, so it is included in the rotation. 

 568                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
'
ˆ
ˆ
( )
( )sin(
)cos(
)
( )cos(
)sin(
)
Q t
Pd t
Pd t
=
Φ
Φ −
Φ
Φ  
(7.12-10) 
 
Simplifying one obtains 
 
'
ˆ
( )
( )sin(
)
Q t
Pd t
=
Φ −Φ  
(7.12-11) 
 
 
Thus from (7.12-9) and (7.12-11) it is seen that the effect of the transformation is to shift the 
frequencies of the signal down. If 
ˆ
Φ = Φ then the signal I and Q components have been “rotated” to 
baseband, and furthermore since this is a true translation in frequency there is only a difference frequency 
term coming out of the transformation. Figure 7.12-3 illustrates the phase rotation pictorially. 
 
 
PSD
Signal phase rotated down
to baseband PSD
Original signal PSD
Would occur with
a simple heterodyne
f
PSD
Signal phase rotated down
to baseband PSD
Original signal PSD
Would occur with
a simple heterodyne
f
 
 
Figure 7.12-3 An example of how phase rotation shifts the signal spectra down but does not produce a sum term like heterodyning does. 
 
One application of this rotation is after an approximate heterodyne to near baseband is completed 
second and final heterodyne exactly to baseband may well produce sum terms that are overlapping the 
desired terms at baseband. Thus a single sided translation has the advantage of not only producing the desired 
translation to the difference frequency located at baseband; it does not produce the sum frequency term. It 
can be shown that the signal-to-noise performance is the same in either case. 
 
This translation subtracted the estimate frequency from the residual frequency on the I and Q terms. 
In order to add to the residual frequency on the I and Q signals the following transformation may be used 
 
 
(
)
(
)
(
)
(
)
'
'
ˆ
ˆ
( )
( )cos
( )
( )sin
( )
ˆ
ˆ
( )
( )cos
( )
( )sin
( )
I t
I t
t
Q t
t
Q t
Q t
t
I t
t
=
Φ
−
Φ
=
Φ
+
Φ
 
(7.12-12) 
 
By comparing (7.12-12) with (7.12-6) it is seen that they are similar but the signs are changed in the second 
terms. This transformation can alternately be viewed as a complex rotation transforming I(t)+jQ(t) to 
I’(t)+jQ’(t). 
 
It is to be noted that another way of looking at single sideband rotation is to view it as a vector 
rotation. That is, consider (7.12-6) written as a vector relationship, let Z’= I’+jQ’ and let Z = I+jQ, then 
 
 
   '
exp(
)
Z
Z
j t
ω
=
 
(7.12-13) 
 
This leads to 
 
 
'
cos(
)
sin(
)
'
cos(
)
sin(
)
I
I
t
Q
t
Q
Q
t
I
t
ω
ω
ω
ω
=
−
=
+
 
(7.12-14) 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           569 
which is equivalent to (7.12-6), in that the signal is rotated down by ω  radians/sec. Alternatively to rotate the 
signal up by ω  radians/second we just change the sign of the rotating vector; that is, 
 
 
''
exp(
)
Z
Z
j t
ω
=
−
 
(7.12-15) 
 
This leads to 
 
 
''
cos(
)
sin(
)
''
cos(
)
sin(
)
I
I
t
Q
t
Q
Q
t
I
t
ω
ω
ω
ω
=
+
=
−
 
(7.12-16) 
 
A model of an actual direct sequence receiver in which the phase rotation is used is shown in Figure 
7.12-4. It is based on the Rockwell Collins miniature airborne GPS receiver (MAGR) described in Parkinson 
and Spilker [10]. 
The receiver converts the signal down to an IF frequency and is sampled at IF and then the phase 
rotation removes the residual Doppler frequency. The I and Q baseband components are correlated and 
accumulated and sent to the microprocessor, which controls the acquisition functions (carrier and code), the 
tracking functions (carrier and code), as well as the lock detection monitoring and data detection. Finally the 
navigational solution (user’s location) is provided based on the pseudorange estimates and other inputs. 
 
 
7.13 PULSING AND BLANKING IN A BASEBAND EARLY-LATE CODE-TRACKING LOOP  
Equation Section (Next) 
Some special GPS-like transmitters, known as pseudolites (PL), are considered augmentations to the 
normally present GPS signals. They are commonly used in local area augmentation systems (LAAS). Many 
authors view pulsing as a necessary method to overcome the near-far problem that can occur with PLs. The  
 
Preamp. &
downconv.
BPF
RF
IF
IF samp.
& A/D
I
Q
Phase rot.
(Doppler
removal)
I & Q
corr.
I & Q
accum.
Carrier
NCO
Iref
Qref
Ref.
osc.
Synthesizer
Microprocessor
functions:
(1)  filtering
(2) acquisition 
algorithms
(3) tracking loops
(4) lock detector
(5) data detector
(6) navigation
solution
PN
coder
Code
NCO
Code
Chan.
clocks
Sampling
Clock
Δf
Preamp. &
downconv.
BPF
RF
IF
IF samp.
& A/D
I
Q
Phase rot.
(Doppler
removal)
I & Q
corr.
I & Q
accum.
Carrier
NCO
Iref
Qref
Ref.
osc.
Synthesizer
Microprocessor
functions:
(1)  filtering
(2) acquisition 
algorithms
(3) tracking loops
(4) lock detector
(5) data detector
(6) navigation
solution
PN
coder
Code
NCO
Code
Chan.
clocks
Sampling
Clock
Δf
Preamp. &
downconv.
BPF
BPF
RF
IF
IF samp.
& A/D
IF samp.
& A/D
I
Q
Phase rot.
(Doppler
removal)
Phase rot.
(Doppler
removal)
I & Q
corr.
I & Q
corr.
I & Q
accum.
I & Q
accum.
Carrier
NCO
Iref
Qref
Ref.
osc.
Ref.
osc.
Synthesizer
Synthesizer
Microprocessor
functions:
(1)  filtering
(2) acquisition 
algorithms
(3) tracking loops
(4) lock detector
(5) data detector
(6) navigation
solution
PN
coder
Code
NCO
Code
NCO
Code
Chan.
clocks
Sampling
Clock
Δf
 
 
Figure 7.12-4 MAGR functional block diagram showing the phase rotation [10]. 
 
near-far problem occurs when a receiver is located very close to one PL and some distance from another PL. 
If the closer PL is much closer, its received power will be much greater than the one farther away. In this 
environment, the weaker PL signal might not be properly acquired and tracked. This is the essence of the 
near-far problem. One way to overcome this problem is to use pulsing for each PL signal at high power for a 
short duration burst at nonoverlapping times. One important application for PLs is for airports, where high 
location accuracy is required [37]. 
This section will only deal with receiver code-tracking performance with pulsing when (1) the 
receiver is designed to blank out the signal plus noise when the signal pulse occurs and (2) the case when the 
receiver is not designed to blank out the signal plus noise when the signal pulse occurs. This work is based on 
unpublished notes of the author. Thus we only consider receivers that are not designed to process the PL 
signals, but may or may not be able to blank out the PL signals. 

 570                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
 
7.13.1 Baseband Signal and Code Loop Model for a Baseband Early-Late Gate I-Q Code-Tracking  
Loop with Pulsing 
 
Consider a baseband direct sequence signal of the form 
 
                                                       ( )
(
) ( )
( )
y t
PPN t
T g t
n t
=
−
+
                                                       (7.13-1) 
 
in which P is the signal power, T is the unknown delay from the transmitter, PN(t–T) is the pseudonoise 
sequence with NRZ code chips (or symbols), g(t) is the transmitter pulse gating function that gates on the 
transmitted signal, and n(t) is the assumed continuous input white Gaussian noise process. The gating 
function is shown in Figure 7.13-1. 
 
1
0
T0
Tb
2Tb
Tb+T0
t
1
0
T0
Tb
2Tb
Tb+T0
t
 
1
0
T0
Tb
2Tb
Tb+T0
t
1
0
T0
Tb
2Tb
Tb+T0
t
1
0
T0
Tb
2Tb
Tb+T0
t
1
0
T0
Tb
2Tb
Tb+T0
t
 
g(t)
1
0
T0
Tb
2Tb
Tb+T0
t
1
0
T0
Tb
2Tb
Tb+T0
t
 
1
0
T0
Tb
2Tb
Tb+T0
t
1
0
T0
Tb
2Tb
Tb+T0
t
1
0
T0
Tb
2Tb
Tb+T0
t
1
0
T0
Tb
2Tb
Tb+T0
t
 
g(t)
 
 
Figure 7.13-1 Model of the gating function that turns the signal on and off. 
 
We see that the gating function takes the value of “1” (is on) for df = T0/Tb fractions of time and is 
“0” (off) for (1–df) fractions of time. The fraction df is called the duty factor. It should be noted that the time 
that the gating function is off could correspond to when the code symbols are periodically a higher bandwidth 
symbol type with a low duty factor, such as when BOC(6,1) may be inserted in place of BOC(1,1) on GPS 
L1C for example, as well as when the signal is blanked off by the transmitter. It is convenient to model the 
gating function as shown for simplicity, however. The goal of this section is to show that the tracking error 
variance of the code-tracking loop varies as 1/(df)2 if no receiver noise blanking is employed in the receiver, 
and the tracking error variance of the code-tracking loop varies as 1/(df ) when receiver blanking is 
employed. Thus synchronous blanking reduces tracking error performance compared to no blanking when 
the signal is pulsed. Clearly the best performance (minimum tracking error) occurs when df = 1, of course, 
but this only occurs when signal pulsing is not employed. 
 
 
7.13.2 Full Correlation in the Coherent Baseband I-Q Code-Tracking Loop When the Signal Is Pulsed 
 
First we consider the case that the receiver does not blank or mask the portion of the signal when it is pulsed 
off. Figure 7.13-2 shows the model for the code-tracking loop when blanking is not being utilized. It is also 
assumed that the receiver correlates for the full correlation time which is a bit time (Tb seconds) in this 
analysis. 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           571 
PN gen.
-
+
-
e(t)
eE(t)
eL(t)
VCXO
+
-
e (t)
e (t)
y(t)
y(t)
Ee
Le 
F(s)
-
+
-
e(t)
(t)
e (t)
0
1 (.)
bT
b
dt
T∫
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
VCXO
+
-
(t)
t)
y(t)
y(t)
y(t)
y(t)
Ee
Le 
0
1 (.)
bT
b
dt
T∫
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
ˆ
(
)
PN
PN t
T
T
δ
−
−
ˆ
(
)
PN
PN t
T
T
δ
−
+
PN gen.
-
+
-
e(t)
eE(t)
eL(t)
VCXO
+
-
e (t)
e (t)
y(t)
y(t)
y(t)
y(t)
EeEe
Le 
Le 
F(s)
-
+
-
e(t)
(t)
e (t)
0
1 (.)
bT
b
dt
T∫
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T∫
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
VCXO
+
-
(t)
t)
y(t)
y(t)
y(t)
y(t)
EeEe
Le 
Le 
0
1 (.)
bT
b
dt
T∫
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T∫
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
0
1 (.)
bT
b
dt
T
ˆ
(
)
PN
PN t
T
T
δ
−
−
ˆ
(
)
PN
PN t
T
T
δ
−
+
 
 
Figure 7.13-2 Baseband coherent early-late gate code-tracking loop model that does not employ receiver blanking. 
 
 
Let d = 2  where d is the early minus late gate code separation, and   is the one-sided early or late 
offset, in code symbols. The output out of the upper multiplier is given by 
 
                                    
ˆ
ˆ
( )
( )
(
)
(
)
( )
(
) 
E
PN
PN
e
t
Pg t PN t
T PN t
T
T
n t PN t
T
T
δ
δ
=
−
−
+
+
−
+
 
(7.13-2) 
 
where ˆT  is the code loop estimate of T. Now let 
ˆ
T
T
ε =
−
 and consider the signal out of integrator (part of 
the correlator) so that 
 
 
0
1
ˆ
(
)
( )
(
)
b
T
E
f
PN
PN
PN
b
e
Pd R
T
n t PN t
T
T
dt
T
ε
δ
δ
=
+
+
−
+
∫
%
 
(7.13-3) 
 
and df is the duty factor and was defined as T0/Tb. In a similar manner the late correlation value, 
Le%  can be 
evaluated as 
 
 
0
1
ˆ
(
)
( )
(
)
b
T
L
f
PN
PN
PN
b
e
Pd R
T
n t PN t
T
T
dt
T
ε
δ
δ
=
−
+
−
−
∫
%
 
(7.13-4) 
 
The loop error control signal is defined as e is defined as 
 
 
E
L
e
e
e
=
−
%
%
 
(7.13-5) 
 
Therefore, combining (7.13-2), (7.13-3), and (7.13-4) produces over one bit time 
 
 
[
]
0
(
)
(
)
1
ˆ
ˆ
     
( )
(
)
(
)
b
f
PN
PN
PN
PN
T
PN
PN
b
e
Pd
R
T
R
T
n t
PN t
T
T
PN t
T
T
dt
T
ε
δ
ε
δ
δ
δ
=
+
−
−
⎡
⎤
+
−
+
−
−
−
⎣
⎦
∫
 
(7.13-6) 
 
Let the noise term be defined over one bit time as 
 

 572                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
0
1
ˆ
ˆ
( )
( )
(
)
(
)
( ( ))
b
T
PN
PN
b
N t
n t
PN t
T
T
PN t
T
T
dt p t
T
δ
δ
⎡
⎤
=
−
+
−
−
−
⎣
⎦
∫
 
(7.13-7) 
 
where p(t) is a Tb second unit amplitude pulse that repeats every Tb  seconds. Note that the integral that is in 
front of p(t) is a random variable that varies from bit to bit. Equation (7.13-6) can be rewritten for all time as 
 
 
( )
f
e
Pd K
N t
ε
=
+
 
(7.13-8) 
 
in which it is assumed that the code loop error is small (within the linear region), and K is the discriminator 
function slope at zero tracking error, and the noise has been extended to all bits. Now the timing estimate out 
of the receiver code generator is given by 
 
 
ˆ
( )
( )
f
PN
PN
PN
K
Pd F s
T
N t
T
s
T
KT
ε
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(7.13-9) 
 
in which F(s) is the loop filter expressed in the Laplace variable, 1/s denotes the integration operation in 
Laplace notation due to the VCO, and TPN is the PN code symbol duration in seconds. Since  
 
 
ˆ
PN
PN
PN
T
T
T
T
T
ε
=
−
 
(7.13-10) 
 
Using (7.13-10) in (7.13-9) produces 
 
 
( )
( )
( )
( )
f
f
PN
PN
PN
f
K
Pd F s
K
Pd F s
N t
T t
T
s
T
s
T
Kd
P
ε
ε
⎡
⎤
= −
−
+
⎢
⎥
⎢
⎥
⎣
⎦
 
(7.13-11) 
 
Solving for the error ( /TPN), one has 
 
 
( )
( )
1
( ) /
( ) /
f
f
PN
PN
f
N t
T t
K
Pd F s
s
K
Pd F s
s
T
T
Kd
P
ε
⎡
⎤
⎡
⎤
+
= −
+
⎢
⎥
⎣
⎦
⎢
⎥
⎣
⎦
 
(7.13-12) 
 
or 
 
 
[
]
( )
( )
( )
1
( )
PN
PN
f
N t
T t
H s
H s
T
T
Kd
P
ε
⎡
⎤
= −
+
−
⎢
⎥
⎢
⎥
⎣
⎦
 
(7.13-13) 
 
where H(s) is the closed-loop response of the code-tracking loop and 1–H(s) are given by 
 
 
( )/
( )
1
( ) /
1
1
( )
1
( ) /
f
f
f
K
Pd F s
s
H s
K
Pd F s
s
H s
K
Pd F s
s
=
+
−
=
+
 
(7.13-14) 
 
We have let the input time delay T(t) be written as a function of t to reflect the case that it is not necessarily 
constant. However in our case, we are only interested in the noise induced error so we will let T(t) be zero. 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           573 
Under the zero input conditions (T(t) = 0), we have  
 
 
( )
( )
PN
f
N t
H s
T
d
PK
ε
⎡
⎤
= −
⎢
⎥
⎢
⎥
⎣
⎦
 
(7.13-15) 
 
Now N(t) can be written for one bit time as 
 
 
0
0
0
1
ˆ
ˆ
( )
(
)
(
)
T
i
PN
PN
i
b
N
n t
PN t
T
T
PN t
T
T
dt
T
δ
δ
=
⎡
⎤
=
−
+
−
−
−
⎣
⎦
∫
 
(7.13-16) 
 
over the first Tb seconds, where 
0
i i
N
=  is the value of N(t) for time between 0 and Tb seconds. Since the 
integrate-and-dump has a constant output over Tb seconds and changes every Tb seconds we can model N(t) 
over all time as  
 
 
( )
(
)
i
b
i
N t
N p t
iT
∞
=−∞
=
−
∑
 
(7.13-17) 
 
Evaluation of this noise representation yields 
 
 
[
]
(
)
2
( )
( )
(
)
1
  ,   
( )
0  otherwise
N
i
PN
PN
N
R
E N t N t
E N
T
T
R
τ
τ
τ
τ
τ
⎡
⎤
=
+
=
−
≤
⎢
⎥
⎣
⎦
=
 
(7.13-18) 
 
where x  denotes the time average of x. 
Thus it is only necessary to evaluate the variance of the correlation of the noise over one bit time. 
The variance can be written as 
 
  
  {
}
2
2
0 0
ˆ
ˆ
(
)
(
)
1
( ) ( )
ˆ
ˆ
(
)
(
)
b
b
T T
PN
PN
b
PN
PN
PN t
T
T
PN t
T
T
E N
n t n u
dtdu
T
PN u
T
T
PN u
T
T
δ
δ
δ
δ
⎡
⎤
−
+
−
−
−
⎣
⎦
=
×
⎡
⎤
×
−
+
−
−
−
⎣
⎦
∫∫
 
(7.13-19) 
 
Noting that  
 
 
{
}
0
( ) ( )
(
)
2
N
E n t n u
t
u
δ
=
−
 
(7.13-20) 
 
and  (u) is the Dirac delta function of the variable u. Using this property it can be shown that 
 
 
{
}
[
]
2
0
2
(0)
2
(2
)
2
PN
PN
PN
PN
N
E N
R
R
T
T
δ
=
−
 
(7.13-21) 
 
Therefore the autocorrelation function can be written as 
 
 
[
]
0
( )
2
(0)
2
(2
) 1
2
N
PN
PN
PN
PN
PN
N
R
R
R
T
T
T
τ
τ
δ
⎡
⎤
=
−
−
⎢
⎥
⎣
⎦
 
(7.13-22) 
 

 574                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
Since the closed-loop noise bandwidth is very narrow, we can simply evaluate the noise spectral density 
(NSD) at f = 0 as a simplifying assumption. The NSD is given by the Fourier transform of the autocorrelation 
function, so that at f = 0 we have 
 
 
(0)
( )
N
N
S
R
d
τ
τ
∞
−∞
= ∫
 
(7.13-23) 
 
or 
 
 
(
)
0
0
(0)
N
PN
PN
N d
S
T
N d
T
=
=
 
(7.13-24) 
 
where is can be shown [1] that  
 
 
(0)
(2
)
2 ,    
1
PN
PN
PN
R
R
T
d
d
δ
δ
−
=
=
≤ 
(7.13-25) 
 
in symbols. From (7.13-11), the loop gain is given by  
 
 
loop gain
f
Kd
P
=
 
(7.13-26) 
 
It follows that the code loop tracking error is given by 
 
 
(
)
2
0
2
2
(0)(2
)
2 (
)
2
N
L
L
f
f
S
B
dN B
P d
Pd
σ
=
=
 
(7.13-27) 
 
where the fact that K = 2, regardless of the early-late spacing, for a baseband code loop that has an E-L 
discriminator function, was established earlier in this chapter. Thus, from (7.13-27) we see that the variance 
is (1/df)2 times larger than the case that the signal lasts for the full correlation time (Tb is this analysis). Now 
consider the case when the receiver noise is synchronously blanked off when the signal pulse is off, thus 
eliminating some noise. This requires that the receiver have timing knowledge of signal pulsing. This timing 
could be derived from the tracking of the PN code. 
 
 
7.13.3 Synchronous Blanking of the Noise When the Signal Is Pulsed Off 
 
In this section we consider the effect of blanking the receiver noise when the transmitter signal has been 
pulsed off. Since the code-tracking loop knows time down to a small fraction of a symbol it will be assumed 
that the receiver code loop knows time perfectly, as a first-order assumption for the analysis. The advantage 
in blanking the noise is that in this case a smaller signal component has to contend with less noise when the 
noise is blanked. We model the baseband-received signal plus noise as 
 
 
( )
(
) ( )
( )
y t
PPN t
T g t
n t
=
−
+
 
(7.13-28) 
 
with g(t) defined in Figure 7.13-1. It is assumed for convenience that the “on time” of the signal pulse is the 
first T0 seconds and is off for the remaining Tb–T0 seconds. Figure 7.13-3 illustrates the receiver model with 
signal and noise blanking.  
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           575 
PN Gen.
-
+
-
eE(t)
eL(t)
PN Gen.
PN Gen.
+
-
e(t)
e (t)
e (t)
y(t)
y(t)
Ee
Le 
g(t)
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
VCXO
F(s)
PN Gen.
PN Gen.
-
+
-
e (t)
e (t)
PN Gen.
PN Gen.
+
-
e(t)
(t)
e (t)
y(t)
y(t)
y(t)
y(t)
Ee
Le 
g(t)
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
VCXO
ˆ
(
)
PN
PN t
T
T
δ
−
+
ˆ
(
)
PN
PN t
T
T
δ
−
−
PN Gen.
PN Gen.
-
+
-
eE(t)
eL(t)
PN Gen.
PN Gen.
+
-
e(t)
e (t)
e (t)
y(t)
y(t)
y(t)
y(t)
EeEe
Le 
Le 
g(t)
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
VCXO
F(s)
PN Gen.
PN Gen.
-
+
-
e (t)
e (t)
PN Gen.
PN Gen.
+
-
e(t)
(t)
e (t)
y(t)
y(t)
y(t)
y(t)
EeEe
Le 
Le 
g(t)
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
0
0 0
1
(.)
T
dt
T ∫
VCXO
ˆ
(
)
PN
PN t
T
T
δ
−
+
ˆ
(
)
PN
PN t
T
T
δ
−
−
 
 
Figure 7.13-3 Model of the baseband early-late gate I-Q code-tracking loop with signal and noise blanking. 
 
 
This loop has been modified from that of Figure 7.13-1, in that the input is assumed to be 
synchronous to the pulse signal so that only the signal plus noise is admitted to the loop when the signal is 
present and is off otherwise. The signal at the upper multiplier is given by 
 
 
2
ˆ
ˆ
( )
( )
(
)
(
)
( ) ( )
(
)
E
PN
PN
t
Pg t
PN t
T PN t
T
T
n t g t PN t
T
T
ε
δ
δ
=
−
−
+
+
−
+
 
(7.13-29) 
 
For the time period of 0 to T0 seconds the output of the upper correlator is given by 
 
 
0
0
1
ˆ
(
)
( )
(
)
T
E
f
PN
PN
b
Pd R
T
n t PN t
T
T
dt
T
ε
ε
δ
δ
=
+
+
−
+
∫
%
 
(7.13-30) 
 
And in a similar manner, the output of the lower correlator is given by 
 
 
0
0
1
ˆ
(
)
( )
(
)
T
L
f
PN
PN
b
Pd R
T
n t PN t
T
T
dt
T
ε
ε
δ
δ
=
+
+
−
−
∫
%
 
(7.13-31) 
 
Over the time period of 0 to T0 seconds, the error signal that controls the loop is given by 
 
 
E
L
e
ε
ε
=
−
%
%  
(7.13-32) 
 
This can be written as 
 
 
[
]
0
0
(
)
(
)
1
ˆ
ˆ
   
( )
(
)
(
)
f
PN
PN
T
PN
PN
b
e
Pd
R
T
R
T
n t
PN t
T
T
PN t
T
T
dt
T
ε
δ
ε
δ
δ
δ
=
+
−
−
⎡
⎤
+
−
+
−
−
−
⎣
⎦
∫
 
(7.13-33) 
 
For small errors (ε  small) we have 
 
 
[
]
f
E
L
e
Pd
K
n
n
ε
=
+
−
 
(7.13-34) 
 
where K is the gain slope of the early-late gate discriminator function, which is equal to 2, as noted earlier. In 
addition the two noise terms are given by 
 

 576                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
0
0
0
0
1
ˆ
( )
(
)
1
ˆ
( )
(
)
T
E
PN
b
T
L
PN
b
n
n t PN t
T
T
dt
T
n
n t PN t
T
T
dt
T
δ
δ
=
−
+
=
−
−
∫
∫
 
(7.13-35) 
 
The code loop estimate of the time delay is ˆT , so that the estimate, in symbols, is given by 
 
 
ˆ
( )
E
L
f
PN
PN
f
n
n
T
F s
K
Pd
T
s
T
K
Pd
ε
⎡
⎤
−
=
+
⎢
⎥
⎢
⎥
⎣
⎦
 
(7.13-36) 
 
Now the normalized code-tracking error is given by 
 
 
ˆ
i
PN
PN
PN
T
T
T
T
T
ε
=
−
 
(7.13-37) 
 
in which Ti is the input time delay, which will be neglected in this analysis. Therefore the code-tracking error 
is given by (see (7.13-13)) 
 
 
[
]
( )
( )
( )
1
( )
PN
PN
f
N t
T t
H s
H s
T
T
Kd
P
ε
⎡
⎤
= −
+
−
⎢
⎥
⎢
⎥
⎣
⎦
 
(7.13-38) 
 
We will assume that T(t) is zero since we are only interested in the noise performance. 
The variation with time has been suppressed; however, the functions are assumed to vary slowly 
with time, changing from bit time to bit time. The function H(s) is the closed-loop transfer function of the 
code loop. The variance of the code-tracking loop due to the noise is given by 
 
 
2
2
2
( )
( )
2
(0) , symbols
N
L
N
H f
S
f df
B S
ε
σ
∞
−∞
=
≅
∫
 
(7.13-39) 
 
The noise term N(t) is given by 
 
 
( )
( )
( )
E
L
f
f
n
t
n t
N t
K
Pd
K
Pd
⎛
⎞
−
= ⎜
⎟
⎜
⎟
⎝
⎠
 
(7.13-40) 
 
with the understanding that the noise only changes every bit time (Tb). Therefore N(t) can be written as  
 
 
0
0
0
1
ˆ
ˆ
( )
(
)
(
)
T
i
PN
PN
i
b
N
n t
PN t
T
T
PN t
T
T
dt
T
δ
δ
=
⎡
⎤
=
−
+
−
−
−
⎣
⎦
∫
 
(7.13-41) 
 
over the first Tb seconds, where 
0
i i
N
=  is the value of N(t) for time between 0 and Tb seconds. Since the 
integrate-and-dump has a constant output over Tb seconds and changes every Tb seconds we can model N(t) 
over all time as  
 
( )
(
)
i
b
i
N t
N p t
iT
∞
=−∞
=
−
∑
 
(7.13-42) 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           577 
 
Following the same approach as in Section 7.3.2, we have 
 
 
[
]
(
)
2
( )
( )
(
)
1
  ,   
( )
0  otherwise
N
i
PN
PN
N
R
E N t N t
E N
T
T
R
τ
τ
τ
τ
τ
⎡
⎤
=
+
=
−
≤
⎢
⎥
⎣
⎦
=
 
(7.13-43) 
 
where x  denotes the time average of x. This can be evaluated as  
 
  
(
)
(
)
(
)
0
0
2
2
0 0
ˆ
ˆ
(
)
(
)
1
( ) ( )
ˆ
ˆ
(
)
(
)
T T
PN
PN
i
b
PN
PN
PN t
T
T
PN t
T
T
E N
n t n u
dtdu
T
PN u
T
T
PN u
T
T
δ
δ
δ
δ
⎡
⎤
−
+
−
−
−
⋅
⎣
⎦
=
⎡
⎤
−
+
−
−
−
⎣
⎦
∫∫
 
(7.13-44) 
 
This can be evaluated to  
 
 
(
)
[
]
0
0
2
0
2
0 0
1
(
) 2
(0)
2
(2
)
2
T T
i
PN
PN
PN
b
N
E N
t
u
R
R
T
dtdu
T
δ
δ
=
−
−
∫∫
 
(7.13-45) 
 
Finally this can be written as 
 
         
(
)
[
]
[
]
0
2
0
0
1
(0)
(2
)
(0)
(2
)
T
i
PN
PN
PN
f
PN
PN
PN
b
E N
R
R
T
dt
d N
R
R
T
T
δ
δ
=
−
=
−
∫
 
(7.13-46) 
 
Using the result from (7.13-20) it follows that 
 
 
0
( )
1
 ,   
( )
0  otherwise
N
f
PN
PN
N
R
d N d
T
T
R
τ
τ
τ
τ
⎡
⎤
=
−
≤
⎢
⎥
⎣
⎦
=
 
(7.13-47) 
 
The power spectral density of the noise process is given by 
 
 
2
0
2
sin(
)
( )
( )
(
)
f
j
b
N
N
b
b
b
d dN
fT
S
f
R
e
d
T
T
fT
ωτ
π
τ
τ
π
∞
−
−∞
=
=
∫
 
(7.13-48) 
 
Approximating the noise spectral density by the value at f = 0 yields 
 
 
0
(0)
N
f
S
d dN
=
 
(7.13-49) 
 
From (7.13-39) and (7.13-49) the tracking error variance is given by 
 
 
2
0
2
(0)(2
)
4
2
N
L
L
f
f
S
B
dN B
d
P
d P
σ
=
=
 
(7.13-50) 
 
Upon comparing (7.13-50) with (7.13-27) we see that receiver blanking has reduced the tracking error 
variance of a baseband early minus late, first-order code-tracking loop by df. In other words, the tracking 
error variance of the unblanked code loop tracking error variance depends on 1/(df)2, whereas the blanked 

 578                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
code loop tracking error variance depends on only 1/(df)! Since df < 1 it clearly pays to blank the noise when 
the signal is not present. However, it is necessary to know the timing of the PL signal pulse in order to blank 
the signal and noise when the PL signal is pulsed on. For a direct sequence system this information could 
normally be obtained from the code itself. However, for nonspread spectrum systems, the timing would have 
to be obtained from the receiver system clock or by other means. This result is compatible with the result of 
Section 7.5 for blanked bandpass implemented early-late gate code-tracking loops. 
 
This work was done for a baseband code-tracking loop. However, it is expected that a similar 
degradation would occur for noncoherent (nonbaseband) I-Q code-tracking loops.  
 
7.14 SUMMARY 
 
This chapter has attempted to summarize many known or recently discovered results for code-tracking loops 
that have the function of tracking the codes modulated onto the carrier. Accurate code-tracking is very 
important (for example, in global navigational satellite systems (GNSS) such as GPS, the code-tracking 
accuracy directly affects the pseudorange error used in computing the navigational solution).  
 
First we determined the maximum-likelihood estimate for the code delay and showed that it 
provides a closed-loop model of a code-tracking loop. Both a coherent and three noncoherent code-tracking 
loop error performances were developed. For the noncoherent code loops: (a) the late2–early2 code loop base 
on an I-Q architecture was analyzed, (b) the radio frequency (RF) version of the same loop implemented at 
RF, and (c) the I-Q dot product code-tracking loop was analyzed. Next a new result for the effects of channel 
filtering and interference was developed for the I-Q late2–early2 type discriminator function showing how 
channel filtering affects performance. Various cases were obtained and the very wide bandwidth case was 
shown to agree with a known result. In addition, steady state errors in a code-tracking loop, time-shared 
early-late gate implementations were investigated for tracking error performance. Additional topics include 
the following: (1) the effects of a single component of multipath was analyzed for its effect on both coherent 
and noncoherent code-tracking loops and the fact that they both have the same multipath diagram, (2) the 
mean time to lose lock of a code-tracking loop was examined, (3) phase rotation (single sideband frequency 
shifting) was also considered, and (4) the effect of PL pulsing and receiver blanking on coherent code-
tracking loop tracking error performance was explored. 
 
References 
 
[1] 
J. G. Proakis, Digital Communications, 4th ed., New York: McGraw-Hill, 2001. 
 
[2] 
J. K. Holmes, S. Raghavan, and S. Lazar, “Acquisition and Tracking Performance of NRZ and Square Wave Modulated Symbols  
         for Use in GPS,” Institute of Navigation 54th Annual Meeting, June 1–3, 1998. 
 
[3] 
W. C. Lindsey and M. K. Simon, Telecommunication Systems Engineering, Upper Saddle River, NJ: Prentice-Hall, 1973. 
 
[4] 
W. B. Davenport and W. L. Root, An Introduction to Random Signals and Noise, New York: McGraw-Hill, 1958.  
 
[5] 
A. J. Van Dierendonck, P. Fenton, and T. Ford, “Theory and Performance of Narrow Correlator Spacing in a GPS Receiver,”  
         Navigation, Vol. 39, No. 3, Fall 1992. 
 
[6] 
J. K. Holmes, “Code-tracking Loop Performance Including the Effects of Channel Filtering and Gaussian Interference,” 
        Proceedings of the 56th Annual Meeting of the ION, San Diego, CA, June 2000. 
 
[7] 
J. K. Holmes and S. Raghavan, “Code Loop Mean Slip Time Comparison of NRZ and BOC Signals,” IEEE Aerospace  
        Conference, Big Sky, Montana, August 2003. 
 
[8] 
J. K. Holmes, Coherent Spread Spectrum Systems, New York: Wiley-Interscience, 1982, p. 127. 
 
[9] 
J. K. Holmes, Unpublished notes on the I&D arm filter dot product code-tracking loop tracking performance. 
 
[10] B. W. Parkinson and J. J. Spilker (eds.), Global Positioning System: Theory and Application, Vol. 1, Washington, D.C.:  
         Progress in Astronautics and Aeronautics, Chapter 8, 1996. 
 
[11] J. K. Holmes, “Code-tracking Performance Including the Effects of Channel Filtering and Gaussian Interference,” Proceedings  
        of the 56th Annual Meeting of the Institute of Navigation, San Diego, CA, June 2000. 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           579 
 
[12] J. Proakis, Digital Communications, 2nd ed., New York: McGraw-Hill, 1989. 
 
[13] L. E. Franks, Signal Theory, Englewood Cliffs, NJ: Prentice-Hall, 1969. 
 
[14] J.-M. Lopez-Almansa and P. A. Pablos, “Derivation of an Analytical Model for Estimation of Measurement Error Induced by an  
        Arbitrary Disturbance on a Coherent Delay Lock Loop,” ION 98, June 1998. 
 
[15] J. Betz, “Effect of Jamming on GPS M Code Signal SNIR and Code-tracking Accuracy,” Proceedings of the Institute of  
        Navigation, 2000 National Technical Meeting, January 2000. 
 
[16] C. J. Hegarty, “Noise Performance of Narrow Correlator GPS Receivers with the Inmarsat Transponder Package,” MITRE  
         CAASD study report done for the FAA contracts office, June 1994. 
 
[17] M. K. Simon, “Noncoherent Pseudonoise Code-tracking Performances of Spread Spectrum Receivers,” IEEE Trans. on  
         Communications., Vol. COM 25, No. 3, March 1977. 
 
[18] M. Stone, “Noncoherent  -Dither Code-tracking Loop Performance Analysis,” TRW IOC 7131.50-2, June 13, 1972. 
 
[19] T. C. Huang, “Analysis of a Time Shared Early/Late PN Code-Tracking Loop and Signal Dropout Considerations,” TRW IOC  
        SCTE-50-75-063/TCH, September 1975.  
 
[20] H. P. Hartmann, “Analysis of a Dithering Loop for PN Code-Tracking,” IEEE Trans. on Aerospace and Electronic Systems,  
        January 1974. 
 
[21] L. B. W. Jolley, Summation of Series, 2nd ed. (rev.), New York: Dover Publications, 1961. 
 
[22] J. J. Spilker, Digital Communications by Satellite, Englewood Cliffs, NJ: Prentice-Hall, Chapter 18, 1977. 
 
[23] R. J. Huff and K. L. Reinhard, “A Delay Lock Loop for Tracking Pulsed-Envelope Signals,” IEEE Trans. on Aerospace and  
        Electronics Systems, May 1971. 
 
[24] W. J. Gill, “A Comparison of Binary Delay-Lock Tracking-Loop Implementations,” IEEE Trans. on Aerospace and Electronics  
        Systems, Vol. AES-2. No. 4, July 1966. 
 
[25] P. T. Nielsen, “On the Acquisition of Binary Delay-Lock Loops,” IEEE Trans. on Aerospace and Electronics Systems, Vol.  
         AES-11, No. 3, May 1975. 
 
[26] B. W. Parkinson and J. J. Spilker (eds.), Global Positioning System: Theory and Application, Vol. 1, Washington D.C.: Progress  
         in Astronautics and Aeronautics, Chapter 14, 1996. 
 
[27] A. J. Van Dierendonck, P. Fenton and P. Ford, “Theory and Performance of Narrow Correlator Spacing in a GPS Receiver,”  
         Navigation: Journal of The Institute of Navigation, Vol. 39, No. 3, Fall 1992. 
 
[28] J. K. Holmes and L. Biederman, “Delay-Lock Loop Mean Time to Lose Lock,” IEEE Trans. on Communications, November  
         1978. 
 
[29] 
A. J. Viterbi, Principles of Coherent Communication, Upper Saddle River, NJ: Prentice-Hall, 1972. 
 
[30] R. L. Stratonovich, Topics in the Theory of Random Noise Vol. I, Chapter 4, New York: Gordon and Breach, 1966. 
 
[31] T. C. Huang and J. K. Holmes, “Performance of Noncoherent Time Shared PN Code-Tracking Loops,” National Telemetry  
        Conference (NTC), November 29–December 1, 1976. 
 
[32] A. P. Sage and J. C. Melsa, Estimation Theory with Applications to Communications and Control, New York: McGraw-Hill, 1971. 
 
[33] B. W. Parkinson and J. J. Spilker, editors, Global Positioning System: Theory and Application, Vol. 1, Washington D.C.:Progress  
         in Astronautics and Aeronautics, Chapter 3, 1996. 
 
[34] M. Moeneclaey, “Simple Lower Bound on the Linearized Performance of Practical Symbol Synchronizers,” IEEE Trans. on  
         Communications, Vol. COM-31, No. 9, September 1983. 
 
[35] T. Alberty, “Frequency Domain Interpretation of the Cramer-Rao Bound for Carrier and Clock Synchronization,” IEEE Trans. on  
        Communications, Vol. 43, No. 2/3/4, February/March/April 1995. 
 
[36] M. Moeneclaey, “Fundamental Lower Bound on the Performance of Practical Joint Carrier and Bit Synchronizers,” Trans. on  
         Communications, Vol. COM-32, No. 9, September 1984. 

 580                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
[37] A. J. Van Dierendonck, P. Fenton, and C. Hegarty, “Proposed Airport Pseudolite Signal Specification,” NovAtel report TP0046,  
         circa 1999. 
 
Selected Bibliography 
 
R. Schwiekert and T. Worz, “Technical Note on Cramer-Rao Bound for Chip Tracking,” Doc. No. SDS-TN-DLR/NT-01/97, Issue  
No. 3, January 10, 1997. 
 
L. Weill, “Achieving Theoretical Accuracy Limits for Pseudoranging in The Presence of Multipath,” 8th International Technical  
Meeting of the Satellite Division of The Institute of Navigation, Part 2 of 2, September 12–15, 1995. 
 
L. Weill, “Conquering Multipath: The GPS Accuracy Battle,” GPS World, April 1977. 
 
L. Weill, “GPS Multipath Mitigation by Means of Correlator Reference Waveform Design,” National Technical Meeting Satellite  
Navigation of the Institute of Navigation, January 14–16, 1997. 
 
 
Problems 
 
1. Assume that one is designing an NRZ baseband code-tracking loop in which BL = 2 Hz,  
P/N0 = 30 dB-Hz, and the early-late correlator spacing is ½ of a code chip. Determine the standard 
deviation of the code-tracking error in chips. 
 
2. Using the general expression for unit amplitude NRZ symbols, (7.2-86) and (7.2-88), show that the 
variance of the tracking error in symbols2 for NRZ symbol types is given by 
 
 
2
2
0
0
2
1
   symbols
2
(2
)(
/
)
sym
L
s
b
N B d
T
P
d
E
N
σ
⎛
⎞
⎡
⎤
=
+
⎜
⎟
⎢
⎥
−
⎝
⎠
⎣
⎦
 
(P7-1) 
 
3. Assume that one is designing a noncoherent code-tracking loop in which BL = 2 Hz,  
P/N0 =30 dB-Hz, Rd = 50 bps, and the early-late correlator spacing satisfies d = ½ of a code symbol 
(chip in this case). Determine the standard deviation of the code-tracking error in chips. Compare to 
the result of Problem 1.  
 
4. Show that the I(t) and Q(t) noise terms for the PAF dot product code-tracking loop are statistically 
independent; that is, show that 
 
 
 
(
)(
)
( )sin( )
( )cos( )
( )sin( )
( )cos( )
0
c
s
c
s
E
n t
n t
n t
n t
θ
θ
θ
θ
−
+
−
+
=
⎡
⎤
⎣
⎦
 
(P7-2) 
 
5. Starting with the error signal 
( , )
L E
P
L E
P
D
t
I
I
Q
Q
ε
−
−
=
+ %
%
%
%
 show that the error signal can be written as 
 
 
[
]
( )
( )
(
)[
]
( )
( )
(
)
(
)
( , )
(
)
(
)
( )
cos
( )
sin
( )
(
)
(
)
( )cos
( )sin
( )
( )
( )
( )
( )
P
P
L E
L E
L E
P
L E
P
PN
PN
PN
I
Q
PN
PN
I
Q
PN
I
I
Q
Q
D
t
P R
T
R
T
R
P
n
t
P
n
t
R
T
R
T
Pn
t
Pn
t
R
n
t n
t
n
t n
t
ε
ε
δ
ε
δ
ε
θ
θ
ε
δ
ε
δ
θ
θ
ε
−
−
−
−
=
−
−
+
+
−
−
−
+
+
−
+
+
%
%
%
%
%
%
%
 
(P7-3) 
 
where the noise terms are defined in (7.2-101) to (7.2-107), and d(t) times a noise term has been 
approximated by the noise term since d(t) is very narrowband compared to the noise term, by 
assumption. 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           581 
 
6. Evaluate the first noise term in n1(t) for the dot product code-tracking loop with PAFs. Starting with 
(7.2-119) show that 
( )
L E
In
t
−
%
 can be written as  
7.  
 
2
ˆ
ˆ
( )
(
)
(
)
(
)
( )
L E
I
I
s
s
n
t
n t
u
PN t
u
T
T
PN t
u
T
T
h u du
δ
δ
−
∞
−∞
⎡
⎤
=
−
−
−
−
−
−
+
−
⎣
⎦
∫
%
 
(P7-4) 
 
Furthermore, show that the autocorrelation function can be written as 
 
 
[
]
0
2
2
( )
1
(2
)
(
)
( )
2
IL E
n
PN
s
N
R
R
T
h v
h v dv
τ
δ
τ
−
∞
−∞
=
−
+
∫
%
 
(P7-5) 
 
By taking the Fourier transform of the autocorrelation function obtain the spectral density at f = 0 in 
the form 
 
[
]
0
2
2
(0)
1
(2
)
(
)
( )
IL E
n
PN
s
S
N
R
T
h v
h v dvd
δ
τ
τ
−
∞
∞
−∞−∞
=
−
+
∫∫
%
 
(P7-6) 
 
finally show that 
1 (0)
n
S
 can be written as  
 
 
[
]
1
0
(0)
1
(2
)
n
PN
s
S
PN
R
T
δ
=
−
 
(P7-8) 
 
8. Starting with (7.2-121), show that 
2 (0)
n
S
 can be written as 
 
 
2 (0)
2
( )
( )
I
I
L E
P
n
n
n
S
R
R
d
τ
τ
τ
−
∞
−∞
= ∫
 
(P7-9) 
 
by evaluating the autocorrelation function 
2 ( )
n
R
τ  and noticing the autocorrelation functions of the 
first product and the second product of (7.2-121) are the same. 
 
 
9. Show that (7.2-135) can be written as (7.2-136) by direct evaluation. Represent the noise terms as 
white Gaussian noise with the appropriate variances, that is 
 
 
{
}
[
]
'
'
0
( )
(
)
1
(2
)
( )
I
I
PN
s
D
E n t n t
N
R
T
τ
δ
δ
τ
−
−
 
(P7-10) 
and  
 
 
{
}
"
"
0
( )
(
)
( )
2
I
I
D
N
E n t n t
τ
δ
τ
−
=
 
(P7-11) 
 
10. Derive the equation for the phase plane for the passive loop filter code-tracking loop. Start with 
 
 
(
)
( )
( )
n
s
y
x
GF s D x
ω
−
=
 
(P7-12) 
 
and use 
 

 582                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
2
1
2
1
2
1
( )
1
1
2
 
    
n
n
s
F s
s
G
G
τ
τ
ς
τ
ω
τ
ω
+
=
+
+
=
=
 
(P7-13) 
 
so that 
 
 
1
2
/
( )
1/
/
n
n
s
gF s
g
s
ς
ω
ω
+
=
+
 
(P7-14) 
 
and finally show that the phase plane for the passive second-order code-tracking loop is given by 
 
 
( )
( )
2
(1/
)(
)
dD x
D x
x
y
g
x
y
dx
dx
dx
x
ς ⎛
⎞
−
−
+
−
−
⎜
⎟
⎝
⎠
=
&
&&
&
&
&
&
 
(P7-15) 
 
11. Show, for the time gated code-tracking loop, using (7.5-25) and (7.5-26), that S can be evaluated as 
1/
f
S
d
=
. 
 
12. By evaluating the delta functions on the variable t’ show that (7.5-33) can be written as (7.5-34). 
 
13. Show that (7.11-5) and (7.11-8) are equivalent, by noting that  
 
 
 
2
2
2
2
'
''
(
')
f
f
f
f
f
f
θ
⎡
⎤
∂
−
=
⎢
⎥
∂
⎣
⎦
 
(P7-16) 
 
and the fact that (establish this fact) 
 
 
''
0
f
E
f
⎧
⎫=
⎨
⎬
⎩
⎭
 
(P7-17) 
 
14. Reconsider Example 5 by allowing the bandwidth to be increased from 4R to 40R. Show that the 
standard deviation of the mean squared error is increased by 
10 . Thus increased chip rate or 
bandwidth yields improvement in the minimum mean squared error possible in code-tracking. 
 
15. Show that (7.12-12) does in fact shift the center frequency up by   . 
 
 
 
APPENDIX 7A 
 
MEAN TIME TO LOSE LOCK FOR A FIRST-ORDER EARLY-LATE GATE CODE-TRACKING 
LOOP WITH EITHER BANDPASS ARM FILTERS OR BASEBAND ARM FILTERS 
Equation Chapter (Next) Section 1 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           583 
7A1.0 SUMMARY OF THE TRACKING ERROR VARIANCE 
In this appendix the mean slip time expression is derived for an analog first-order code-tracking loop. The 
derivation will turn out to be in terms of the linearized code-tracking loop variance, the loop bandwidth, and 
the integral of the discriminator function curve. The evaluations will be based on replacing the variance 
expression for the bandpass loop model expression with the baseband code-tracking loop variance 
expression. The received signal plus thermal noise is of the form 
 
              
(
)
(
)
(
)
0
0
0
( )
2
( )
(
)cos
2
( )cos
2
( )sin
c
s
y t
Pd t PN t
T
t
n t
t
n t
t
ω
θ
ω
θ
ω
θ
=
−
+
+
+
+
+
 
(7A1.0-1) 
 
where P is the received power, PN(t) has values of 1
± , d(t) is the baseband data process, 
0
ω  is the carrier 
angular frequency (rad/sec), and θ  is the carrier phase in radians. The second and third terms together 
comprise the white Gaussian noise process expressed in terms of the two baseband Gaussian white noise 
processes 
( ) 
cn t
 and 
( )
sn t . Figure 7.9-2 illustrates the bandpass filter analog first-order code-tracking loop 
model. From Section 7.2.2 it was determined that the variance of the tracking error was given by  
 
 
(
)
(
)
(
)
2
2
2
0
0
2
2
4
8
1
(2
)
1
(2
)
L
PN
s
PN
s
PN
s
N B
N W
R
T
R
T
R
T
P
P
K
ε
σ
δ
δ
δ
α
⎡
⎤
⎡
⎤
=
−
+
−
⎢
⎥
⎣
⎦
⎣
⎦
 
(7A1.0-2) 
 
where the bandpass RF filter at the input is assumed to be W Hz (positive frequency) wide. For NRZ symbols 
it is known that K = 2 if  TS = Ts/2, so that this reduces to the known result 
 
 
2
2
0
0
2
1
2
L
N B
N W
P
P
ε
σ
α
α
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(7A1.0-3) 
Equation Section (Next) 
7A2.0 MEAN SLIP TIME DERIVATION 
 
In this section the derivation of the mean time to lose lock for arbitrary binary valued symbol shapes will be 
obtained. From Section 7.2.2 one has that the code loop estimate of the signal timing is given by  
 
 
 
 
 
 
( )
( )
( )
( )
1
2
ˆ
v
n
K
T
F s
PKg
n t
n
t
s
α
ε
⎡
⎤
=
+
+
⎣
⎦ 
(7A2.0-1) 
 
Since ˆ=
T T
ε
−
 so that (7A2.0-1) can be written as 
 
 
( )
( )
1
2
( )
( )
v
n
F s
n t
n t
T
PKK
g
s
KP
ε
α
ε
α
+
⎡
⎤
−
=
+
⎢
⎥
⎣
⎦
 
(7A2.0-2) 
 
Noting that multiplication by s denotes the derivative, for a first order loop F(s) = 1, and assuming that 
/
dT dt  is zero, one has 
 
 
( )
1
2
( )
( )
v
n
n t
n t
d
PKK
g
dt
KP
ε
α
ε
α
+
⎡
⎤
= −
+
⎢
⎥
⎣
⎦
 
(7A2.0-3) 
 

 584                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
Stratonovich [7A1] shows that the probability density satisfies the Fokker-Planck equation. Let 
LL
ε
ε
= ±
 denote the limit when loss of lock is declared (the value when    (the code phase error) causes the 
error signal to go to zero). When the code timing error  , satisfies
LL
ε
ε
<
, then 
 
 
(
)
( ) (
)
( ) (
)
2
1
2
2
,
1
,
,
2
P
t
A
P
t
A
P
t
t
ε
ε
ε
ε
ε
ε
ε
∂
∂
∂
⎡
⎤
⎡
⎤
=
+
⎣
⎦
⎣
⎦
∂
∂
∂
 
(7A2.0-4) 
 
where the two normalized moments are defined by 
 
 
( )
(
)
( )
(
)
2
1
2
lim
lim
       
0
0
E
E
A
A
t
t
t
t
ε
ε
ε ε
ε
ε
⎧
⎫
⎡
⎤
Δ
⎧
⎫
⎡
⎤
Δ
⎪
⎪
⎪
⎪
⎣
⎦
⎣
⎦
=
=
⎨
⎬
⎨
⎬
Δ →
Δ →
Δ
Δ
⎪
⎪
⎪
⎪
⎩
⎭
⎩
⎭
 
(7A2.0-5) 
 
From (7A2.0-3) integrate from t to t +  t to yield 
 
 
(
)
( )
( )
( )
1
2
t
t
v
n
v
t
n t
n
t
t
t
PKK g
t
PKK
dt
KP
ε
ε
ε
α
ε
α
α
+Δ
+
+ Δ
−
= Δ
= −
Δ −
∫
 
(7A2.0-6) 
 
From the definition of A1( ), (7A2.0-5), one has 
 
 
( )
(
)
( )
1
lim
0
v
n
E
PKK g
t
A
t
t
t
ε ε
α
ε
ε
⎡
⎤
Δ
Δ
=
= −
⎢
⎥
Δ →
Δ
Δ
⎢
⎥
⎣
⎦
 
(7A2.0-7) 
 
Now consider A2( ), where 
 
 
( )
(
)
2
2
lim
0
E
A
t
t
ε
ε
ε
⎡
⎤
⎡
⎤
Δ
⎣
⎦
⎢
⎥
=
⎢
⎥
Δ →
Δ
⎢
⎥
⎣
⎦
 
(7A2.0-8) 
 
 
 
Therefore  
 
      
( )
( )
(
)
( )
( )
( )
( )
( )
(
)
( )
( )
(
)
2
1
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
1
2
1
2
2
2
2
lim
1
0
lim
1
          
0
t
t
v
n
v
n
t
t
t t
t
v
t
t
n t
n
t
A
E
P K K
g
t
P K K g
t
dt
t
t
KP
P K K
E
n u
n
u
n v
n
v
dudv
t
d K P
t
ε
α
ε
α
ε
α
α
+Δ
+Δ
+Δ
⎧
⎫
+
⎪
⎪
=
Δ
+
Δ
⎨
⎬
Δ →
Δ
⎪
⎪
⎩
⎭
⎧
⎫
+
+
+
⎨
⎬
Δ →
Δ
⎩
⎭
∫
∫∫
 (7A2.0-9) 
 
The first and second terms are zero since the first one goes to zero as 
0
t
Δ →
 and the second one has zero 
mean value; hence 
 
 
( )
( )
( )
(
)
( )
( )
(
)
2
1
2
1
2
2
lim
0
t
t t
t
t
t
K E
n u
n
u
n v
n
v
dudv
A
t
t
ε
+Δ
+Δ
⎧
⎫
+
+
⎨
⎬
⎩
⎭
= Δ →
Δ
∫∫
 
(7A2.0-10) 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           585 
 
Model the sum of the two new processes as essentially white as far as the effect on the loop is concerned. So 
 
 
( )
'
2
0
2
2
v
N
A
K
ε =
 
(7A2.0-11) 
 
where 
'
0
N  is the effective one-sided noise spectral density. From Section 7.2.2 we have 
 
 
(
)
(
)
(
)
'
2
2
2
0
0
0
4
1
2
2
1
2
  
2
PN
s
PN
s
PN
s
N
N PR
T
R
T
N W
R
T
δ
δ
α
δ
⎡
⎤
⎡
⎤
=
−
+
−
⎣
⎦
⎣
⎦
 
(7A2.0-12) 
 
For as long as |   | <  LL the density function of     which we call q( , t), satisfies the Fokker-Planck equation 
so that 
 
 
(
)
( ) (
)
( ) (
)
2
1
2
2
,
1
,
,
2
q
t
A
q
t
A
q
t
t
t
ε
ε
ε
ε
ε
ε
∂
∂
∂
⎡
⎤
⎡
⎤
= −
+
⎣
⎦
⎣
⎦
∂
∂
∂
 
(7A2.0-13) 
 
after inserting the values of A1( ) and A2( ) one obtains 
 
 
(
)
( ) (
)
(
)
'
2
2
0
2
,
,
,
4
v
v
n
q
t
N K
PKK
g
t q
t
q
t
t
t
ε
α
ε
ε
ε
∂
∂
∂
⎡
⎤
⎡
⎤
=
+
⎣
⎦
⎣
⎦
∂
∂
∂
 
(7A2.0-14) 
 
with the initial conditions 
 
 
(
)
( )
,0
q ε
δ ε
=
 
(7A2.0-15) 
 
and with the boundary conditions 
 
 
 
 
 
 
 
 
(
)
(
)
(
)
,
0
,
,
LL
q
t
g
t
q
t
t
ε
ε
ε
ε
ε
=
∀
≥
=
−
∀
 
(7A2.0-16) 
 
A comment on the first equation in (7A2.0-16) is worthwhile. The density function exists as long as the error 
does not exceed the boundaries (|   | <  LL). The integral over the interval (– LL,  LL), 
( )t
Φ
, gives the 
probability that    has not exceeded 
LL
ε
, so 
 
 
( )
(
)
,
1
LL
LL
t
q
t d
ε
ε
ε
ε
−
Φ
=
≤
∫
 
(7A2.0-17) 
 
Let 
( )
1
( )
t
t
ψ
= −Φ
 to denote the probability that that the boundary has been reached at time t; note that 
 

 586                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
( )
( )
t
t
t
t
ψ
∂
∂Φ
= −
∂
∂
 
(7A2.0-18) 
 
and 
(0)
( )
0
ψ
ψ
=
∞=
. The probability density function is given by this derivative so that the mean time to 
lose lock is given by 
 
 
0
0 (
)
T
t
dt
t
dt
t
t
ψ
∞
∞
∂
∂Φ
=
=
−
∂
∂
∫
∫
 
(7A2.0-19) 
 
Integrate by parts, and let u = −t and v
t
∂Φ
= ∂
 and recall that 
 
 
 
 
 
 
udv
uv
vdu
=
=
∫
∫
 
 
 
            (7A2.0-20) 
 
Now the mean time to lose lock is given by 
 
 
( )
( )
( )
0
0
0
T
t
t
t dt
t dt
∞
∞
∞
= −Φ
+
Φ
=
Φ
∫
∫
 
(7A2.0-21) 
 
since 
( )t
Φ
 must decrease with t faster than t to exist and clearly the lower limit is zero. Using the definition 
of 
( )t
Φ
 produces 
 
 
(
)
0
,
LL
LL
T
q
t dt
ε
ε
ε
∞
−
= ∫∫
 
(7A2.0-22) 
 
To evaluate (7A2.0-22) it is necessary to obtain q(t). To do this integrate the Fokker-Planck equation, 
(7A2.0-14) from 0 to ∞ to produce 
 
      
(
)
( )
(
)
(
)
'
2
2
0
2
0
0
0
,
,
,
4
v
n
v
N
q
t dt
K PK
q
q
t dt
K
q
t dt
t
δ
ε
α
ε
ε
ε
ε
δε
∞
∞
∞
∂
∂⎡
⎤
⎡
⎤
=
+
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
∂
∂
∫
∫
∫
 
(7A2.0-23) 
 
 
 
 
 
 
( )
(
)
0
Let Q
,
q
t dt
ε
ε
∞
= ∫
 so that (7A2.0-23) becomes 
 
 
(
)
(
)
( ) ( )
( )
'
2
2
0
2
,
,0
2
4
v
n
v
N
q
q
PK
g
Q
K
Q
ε
ε
ε
ε
ε
ε
ε
∂
∂
⎡
⎤
⎡
⎤
∞−
=
+
⎣
⎦
⎣
⎦
∂
∂
 
(7A2.0-24) 
 
Now it must be true that for the density function to exist that 
 
 
( ,
)
0          ( ,0)
( )
q
q
ε
ε
δ ε
∞=
=
 
(7A2.0-25) 
 
Using (7A2.0-25) leads to 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           587 
 
( )
( ) ( )
( )
'
2
2
0
2
4
v
n
v
N
d
KK P
q
Q
K
Q
d
δ ε
α
ε
ε
ε
ε
ε
∂
⎡
⎤
⎡
⎤
−
=
+
⎣
⎦
⎣
⎦
∂
 
(7A2.0-26) 
 
Notice the boundary conditions become 
 
 
(
)
(
)
0
LL
LL
Q
Q
ε
ε
=
−
=
 
(7A2.0-27) 
 
The solution to (7A2.0-26) is called the Green’s function [7A2] for the problem. Forming an indefinite 
integration of    one obtains 
 
 
( )
( ) ( )
( )
'
2
0
4
v
n
v
N
d
u
KK Pg
Q
K
Q
c
d
ε
α
ε
ε
ε
ε
⎡
⎤
−
=
+
−
⎣
⎦
 
(7A2.0-28) 
 
where u( ) is the unit step function and c is a constant of integration. Rearranging 
 
 
( )
( ) ( )
( )
'
2
0
4
v
v
n
N
d
Q
K
KK Pq
Q
c
u
d
ε
α
ε
ε
ε
ε
⎛
⎞
⎡
⎤
+
=
−
⎜
⎟
⎣
⎦
⎝
⎠
 
(7A2.0-29) 
 
again yields 
 
 
( )
( ) ( )
( )
'
'
2
0
0
4
4
n
v
v
c
u
d
KP
Q
g
Q
d
K N
N
K
ε
α
ε
ε
ε
ε
−
⎡
⎤
⎡
⎤=
⎣
⎦
⎣
⎦
⎛
⎞
⎜
⎟
⎝
⎠
 
(7A2.0-30) 
 
From [7A3] the solution of (7A2.0-30) is given by 
 
 
( )
( )
(
)
( )
( )
'
'
'
'
'
'
''
''
n
n
n
LL
g
d
g
d
g
d
c
u
Q
e
e
d
De
ε
ε
ε
ε
γ
ε
ε
γ
ε
ε
γ
ε
ε
ε
ε
ε
ε
β
−
−
−
⎡
⎤
−
∫
∫
∫
=
+
⎢
⎥
⎣
⎦
∫
 
(7A2.0-31) 
 
Now the following two conditions apply 
 
 
 
 
 
 
 
(
)
(
)
0
0
0
1 2
LL
LL
Q
D
Q
c
ε
ε
−
=
⇒
=
=
⇒
=
 
(7A2.0-32) 
 
Using these two conditions leads to 
 
 
( )
( )
(
)
( )
'
'
'
'
1/ 2
''
''
n
n
LL
g
d
g
d
u
Q
e
e
d
ε
ε
ε
γ
ε
ε
γ
ε
ε
ε
ε
ε
ε
β
−
−
⎡
⎤
−
∫
∫
=
⎢
⎥
⎣
⎦
∫
 
(7A2.0-33) 
 
Denote G( ) as the following indefinite integral 
 

 588                                 Spread Spectrum Systems for GNSS and Wireless Communications 
  
 
( )
( ')
'
n
G
g
d
ε
ε
ε
ε
= ∫
 
(7A2.0-34) 
 
such that G( ) is an even function of  . Using (7A2.0-34) in (7A2.0-33) produces 
 
 
( )
(
)
( )
( )
1/ 2
''
''
LL
G
G
u
Q
e
e
d
ε
γ
ε
γ
ε
ε
ε
ε
ε
β
−
−
⎡
⎤
−
=
⎢
⎥
⎣
⎦
∫
 
(7A2.0-35) 
 
From (7A2.0-21) and (7A2.0-22) one has 
 
 
0
( , )
( )
LL
LL
LL
LL
T
q
t dtd
Q
d
ε
ε
ε
ε
ε
ε
ε
ε
∞
−
−
=
=
∫∫
∫
 
(7A2.0-36) 
 
Using the definition of Q( ) produces 
 
 
( )
( )
( ')
1
1/ 2
'
'
LL
LL
LL
G
G
T
e
u
e
d
d
ε
ε
γ
ε
γ
ε
ε
ε
ε
ε
ε
β
−
−
−
⎡
⎤
=
−
⎣
⎦
∫
∫
 
(7A2.0-37) 
 
Now using the definitions 
 
 
'
2
0
'
0
4
   
    
4
v
v
N
KP
and
K
K N
α
γ
β
⎛
⎞
=
=
⎜
⎟
⎝
⎠
 
(7A2.0-38) 
 
and 
 
 
   
   
4
eq
L
eq
v
A
B
and
A
PKK
α
=
=
 
(7A2.0-39) 
 
Using the value of 
'
0
N  from (7A2.0-11) produces for    
 
 
 
 
 
 
 
(
)
(
)
2
2
2
0
0
2
4
(
) 1
(2
2
1
(2
v
PN
s
PN
s
PN
s
KP
K
N
PR
T
R
T
N W
R
T
α
γ
α
δ
δ
α
=
⎡
⎤
−
+
−
⎣
⎦
 
(7A2.0-40) 
 
Recognizing that   is 1/(
2
σ ) yields 
 
           
(
)
(
)
(
)
2
2
2
2
2
0
0
0
2
4
8
1
2
1
2
symbols
L
PN
s
PN
s
PN
s
N B
N W
N R
δT
R
δT
+
R
δT
K
P
P
σ
α
α
⎡
⎤
⎡
⎤
⎡
⎤
=
−
−
⎢
⎥
⎣
⎦
⎣
⎦
⎣
⎦
  
(
)
 
(7A2.0-41) 
 

 
                                  Direct Sequence Code-Tracking Loops 
 
 
           589 
which is the tracking error variance result for the first-order bandpass noncoherent code-tracking loop. It is 
known [7A4] that for an integrate-and-dump filter code-tracking loop that the variance of the code-tracking 
error is given by 
 
 
(
)
(
)
(
)
(
)
2
0
2
2
0
2
4
1
2
8
1
2
PN
s
L
I&D
PN
s
PN
s
b
N
R
T
N B
R
T
R
T
K P
PT
δ
σ
δ
δ
⎡
⎤
⎡
⎤
−
⎣
⎦
⎢
⎥
=
−
+
⎢
⎥
⎣
⎦
 
(7A2.0-42) 
 
again in symbols2. Equation (7A2.0-42) is used in the slip time estimates with the integrate-and-dump arm 
filters version of the first-order code-tracking loop. Solving for 1/  produces 
 
 
2
8
4
L
L
B
B
γ
β
σ
=
=
2
1
1
 
(7A2.0-43) 
 
Therefore the final expression for the mean slip time is given by 
 
 
( )
( )
( )
1
(s)
4
2
G
G
L
T
e
e
u
d
d
B
ε
ε
ε
ε
σ
σ
ε
ε
ε
ε
ε
σ
⎡
⎤
⎡
⎤
−⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
−
−
⎡
⎤
=
−
⎢
⎥
⎣
⎦
∫
∫
2
2
'
2
1
'
'
   
 
LL
LL
LL
 
(7A2.0-44) 
 
Thus this double integral determines the mean time to lose lock in seconds for the first-order code-
tracking loop and depends on the one-sided closed-loop noise bandwidth BL, the linearized tracking error 
variance 
2
σ , and the integral of the discriminator function curve, 
( )
G ε . This expression holds for any binary 
valued ( 1) 
±
symbol waveform such as NRZ or BOC symbols.  
In the theoretical results presented in this chapter, in Section 7.9 for the mean slip time results, the 
variance of the integrate-and-dump arm filter, tracking error variance (7A2.0-42) was used in (7A2.0-44). 
However either (7A2.0-41) or (7A2.0-42) can be used to access the mean slip time performance, depending 
on which loop structure is considered. 
 
 
Appendix 7A References 
 
 
[7A1] R. L. Stratonovich, Topics in the Theory of Random Noise, Vol. I, Chapter 4, New York: Gordon and Breach, 1966. 
 
[7A2] B. Friedman, Principles and Techniques of Applied Mathematics, Chapter 3, New York: John Wiley & Sons. 1956. 
 
[7A3] I. S. Sokolnikoff and R. M. Redheffer, Mathematics of Physics and Modern Engineering, New York: McGraw-Hill, 1958. 
 
[7A4] J. K. Holmes and S. Raghavan, “Acquisition and Tracking Performance of NRZ and Squarewave Modulated Symbols for Use in  
          GPS,” The Institute of Navigation, Denver, CO, June 1–3, 1998. 
 
 
Appendix 7A Selected Bibliography 
 
 
L. Biederman and J. K. Holmes, “Delay-Lock Loop Mean Time to Lose Lock,” National Telemetry Conference, 1977. 
 
W. B. Davenport and W. L. Root, An Introduction to the Theory of Random Signals and Noise, New York: McGraw-Hill, 1958. 
 
J. K. Holmes and L. Biederman, “Delay-Lock Loop Mean Time to Lose Lock,” IEEE Trans. on Communications, November 1978. 
 
A. J. Viterbi, Principles of Coherent Communication, New York: McGraw-Hill, 1972. 
 
 

 
                                       591 
CHAPTER 8 
Tracking of Frequency-Hopped Signals 
 
 
8.0 INTRODUCTION 
Equation Chapter 8 Section 1 
In this chapter we will present the tracking performance of a frequency-hopped spread spectrum (SS) signal. 
We will see that the loop configuration is very similar to the direct sequence code tracking loop, which was 
considered in Chapter 7.  
Frequency-hopped signals are commonly used with differential binary shift keying (DPSK) 
modulation, M-ary frequency shift keying (MFSK), or binary phase shift keying (BPSK). Initially we will 
limit our analysis to the case of frequency-hopping without data modulation. Later the performance of 
tracking with BPSK or DPSK data modulation will be presented.  
 
This chapter does not address frequency-hopping acquisition; however, it is worthwhile to note that 
it is very similar to direct sequence code acquisition. In fact the same procedure that was used in Chapter 6, 
Section 6.5, for active search can be used to determine the false alarm probability, the effective false alarm 
probability, and the detection probability. The reason that the acquisition process for frequency-hopping is 
typically much faster than direct sequence code acquisition is the fact that the frequency hop symbols are 
usually milliseconds in duration, rather than microseconds as are the direct sequence SS symbols. Thus, 
when the initial time uncertainty is divided by the search update time (usually 1/2 of one hop time for 
frequency-hopping or ½ a code symbol for direct sequence SS), the number of acquisition hypotheses to be 
tested is much less for a frequency hop system than for a direct sequence system. And therefore the 
acquisition time is greatly reduced, since the acquisition time is proportional to the number of hypotheses that 
have to be tested. 
Another possible application of a frequency-hopping signal is its use as an acquisition aid to direct 
sequence code acquisition. The frequency-hopped signal acquisition aid is a signal that is used in addition to, 
(and accompanies) the direct sequence signal. This type of signal, for use as an acquisition aid, has been 
proposed for use in conjunction with the direct sequence signal used in an existing spread spectrum system.  
This approach is most useful when the initial timing error is large. The idea is to send a low rate 
hopping signal, of hop duration on the order of tens of milliseconds, to be acquired initially and then 
frequency hop tracked. This provides synchronization at the receiver to a millisecond or two of timing error. 
Then using a short direct sequence SS search, the acquisition of the direct sequence signal system can be 
completed. The technique of first acquiring the frequency-hopped signal and then the direct sequence signal 
can greatly decrease the acquisition time when there are large initial time uncertainties. For a small initial 
time uncertainty, direct sequence acquisition is normally quicker. 
 
 
8.1 DATALESS FREQUENCY-HOPPED TIME TRACKING LOOP MODEL  
 
Now we consider a model that describes a loop capable of tracking a frequency-hopped signal. Basically is it 
very similar to the I-Q noncoherent code-tracking loop for direct sequence tracking.  
Before we discuss the loop we will first describe the frequency-hopped signal, which is modeled as 
 

 592                               Spread Spectrum Systems for GNSS and Wireless Communications  
 
             
 
(
)
0
( )
2
cos
(
)
(
)
c
n
n
T
h
d
n
s t
P
t
t
p
t
T
nT
t
T
ω
ω
φ
θ
∞
=−∞
⎡
⎤
=
+
+
−
−
+
−
⎢
⎥
⎣
⎦
∑
 
(8.1-1) 
 
in which 
0
ω  is the carrier radian frequency, radians/sec, 
n
ω  is the hop frequency at time n (from a set of 
many frequencies), 
n
φ  is the phase change that occurs at time n, 
( )
h
Tp
t  is a unit amplitude pulse that is non-
zero for 0 to Th seconds, T is the unknown time delay between the transmitter and the receiver in seconds, 
and 
( )
d t
θ
 is the data modulation on the hopped signal, which will be assumed to be either BPSK or DPSK.  
 
The type of modulation on the hopping signal impacts the tracking ability of the frequency-hopping 
tracking loop (FHTL). For example, if the modulation is BPSK, then in order to demodulate the data, the 
dehopping signal must be able to coherently dehop the received frequency-hopped signal. In addition, for 
coherent demodulation the acquisition time of the carrier tracking loop on each hop must be accounted for. It 
is possible that the first few data bits, while not be demodulated due to the carrier acquisition time, pull in 
transient. Thus the effective data rate might be reduced due to this phenomenon. 
Alternatively if the dehopped signal can provide a stable channel in phase and frequency, then it 
may be possible to differently encode the data on a low hop rate system by using the first bit or two as the 
reference bit(s) in the demodulation process. In this case only one or two data bits will not be able to carry 
useful data. 
 
Figure 8.1-1 illustrates the noncoherent FHTL over one hop time when no data modulation exists on 
the hopped signal. The four integrators have to be reset at the end of each hop frequency.  
 
BPF
(B)
( )
CE
r
t
( )
0
1
.
h
T
h
dt
T ∫
( )
2
.
( )
CE
e
t
' ( )
CE
e
t
( )
SE
r
t
( )
0
1
.
h
T
h
dt
T ∫
( )
2
.
( )
SE
e
t
' ( )
SE
e
t
( )
CL
r
t
( )
0
1
.
h
T
h
dt
T ∫
( )
2
.
( )
CL
e
t
' ( )
CL
e
t
( )
SL
r
t
( )
0
1
.
h
T
h
dt
T ∫
( )
2
.
( )
CE
e
t
' ( )
SL
e
t
+
F(s)
NCXO
Hopping
generator
( )
SL
r
t
( )
SE
r
t
( )
CL
r
t
( )
CE
r
t
y(t)
BPF
(B)
BPF
(B)
BPF
(B)
( )
CE
r
t
( )
0
1
.
h
T
h
dt
T ∫
( )
2
.
( )
0
1
.
h
T
h
dt
T ∫( )
0
1
.
h
T
h
dt
T ∫
( )
2
.( )
2
.
( )
CE
e
t
' ( )
CE
e
t
( )
SE
r
t
( )
0
1
.
h
T
h
dt
T ∫
( )
2
.
( )
0
1
.
h
T
h
dt
T ∫( )
0
1
.
h
T
h
dt
T ∫
( )
2
.( )
2
.
( )
SE
e
t
' ( )
SE
e
t
( )
CL
r
t
( )
0
1
.
h
T
h
dt
T ∫
( )
2
.
( )
0
1
.
h
T
h
dt
T ∫( )
0
1
.
h
T
h
dt
T ∫
( )
2
.( )
2
.
( )
CL
e
t
' ( )
CL
e
t
( )
SL
r
t
( )
0
1
.
h
T
h
dt
T ∫
( )
2
.
( )
0
1
.
h
T
h
dt
T ∫( )
0
1
.
h
T
h
dt
T ∫
( )
2
.( )
2
.
( )
CE
e
t
' ( )
SL
e
t
+
F(s)
F(s)
NCXO
NCXO
NCXO
Hopping
generator
Hopping
generator
( )
SL
r
t
( )
SE
r
t
( )
CL
r
t
( )
CE
r
t
y(t)
 
 
Figure 8.1-1 Noncoherent frequency-hopping tracking loop functional model. 
 
 
 
In the figure the four reference signals are given by 
 
 
(
)
'
0
ˆ
( )
2 cos
(
/ 2
h
CE
n
n
T
h
h
n
r
t
t
t
p
t
T
nT
T
ω
ω
φ
∞
=−∞
⎡
⎤
=
+
+
−
−
+
⎢
⎥
⎣
⎦
∑
 
(8.1-2) 
 

 
                                                    Tracking of Frequency-Hopped Signals 
 
 
            593 
 
(
)
'
0
ˆ
( )
2 sin
(
/ 2
h
SE
n
n
T
h
h
n
r
t
t
t
p
t
T
nT
T
ω
ω
φ
∞
=−∞
⎡
⎤
=
+
+
−
−
+
⎢
⎥
⎣
⎦
∑
 
(8.1-3) 
 
 
(
)
'
0
ˆ
( )
2 cos
(
/ 2
h
CL
n
n
T
h
h
n
r
t
t
t
p
t
T
nT
T
ω
ω
φ
∞
=−∞
⎡
⎤
=
+
+
−
−
−
⎢
⎥
⎣
⎦
∑
 
(8.1-4) 
 
 
(
)
'
0
ˆ
( )
2 sin
(
/ 2
h
SL
n
n
T
h
h
n
r
t
t
t
p
t
T
nT
T
ω
ω
φ
∞
=−∞
⎡
⎤
=
+
+
−
−
−
⎢
⎥
⎣
⎦
∑
 
(8.1-5) 
 
where the early (E) components have the arguments located early in time, the late (L) components are placed 
late in time, and the (C) and (S) denote cosine and sine, respectively. In addition 
'
n
φ  is the reference phase, 
modeled as a random phase, and is unrelated to 
n
φ , by assumption. Finally ˆT  is the FHTL’s estimate of the 
propagation time delay between the transmitter and the receiver, and is obtained from the initial acquisition 
process. These reference signals beat the incoming signal down to baseband where it is noncoherently 
processed.  
It is to be noticed that the correlators with the second subscript E are both early by one-half of a hop, 
and the ones with the second subscript L are late by one-half of a hop. Thus, the in-phase and quadrature 
channels (sine and cosine) have a pair of early and a pair of late correlators that generate the error signal. The 
resultant signals out of the multipliers are given by  
 
(
)
(
)
( )
( )
'
0
(
)
( )
cos
ˆ
(
/ 2)
            
( )sin(
( ))
( )cos(
( ))
(2
)
h
h
t
n
n
T
h
CE
t
n
n
n
T
h
h
n
c
s
t
p
t
T
nT
e
t
P
t
p
t
T
nT
T
n t
t
n t
t
ω
φ
ω
φ
ω
+
Φ
∞
Φ
∞
=−∞
=−∞
+
+
⎡
⎤
⎛
⎞
⎢
⎥
⎜
⎟
+
−
−
⎢
⎥
⎜
⎟
=
⎢
⎥
⎜
⎟
⎢
⎥
⎜
⎟
−
+
−
−
+
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
+
Φ
−
Φ
+
∑
∑
64444744448
64444447444444
8
 
 
    (8.1-6) 
 
 
(
)
(
)
'
0
(
)
( )
sin
ˆ
(
/ 2)
           
( )sin(
( ))
( )cos(
( ))
(2
)
h
h
n
n
T
h
SE
n
n
n
T
h
h
n
c
s
t
p
t
T
nT
e
t
P
t
p
t
T
nT
T
n t
t
n t
t
O
ω
φ
ω
φ
ω
∞
∞
=−∞
=−∞
+
+
⎡
⎤
⎛
⎞
+
−
−
⎢
⎥
⎜
⎟
=
⎢
⎥
⎜
⎟
−
+
−
−
+
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
+
Φ
+
Φ
+
∑
∑
 
(8.1-7) 
 
 
(
)
(
)
( )
'
0
(
)
( )
cos
ˆ
(
/ 2)
          
( )sin(
( ))
( )cos(
( ))
(2
)
h
h
n
n
T
h
t
CL
n
n
n
T
h
h
n
c
s
t
p
t
T
nT
e
t
P
t
p
t
T
nT
T
n t
t
n t
t
O
ω
φ
ω
φ
ω
−
∞
Φ
∞
=−∞
=−∞
−
−
⎡
⎤
⎛
⎞
+
−
−
⎢
⎥
⎜
⎟
⎢
⎥
⎜
⎟
=
⎢
⎥
⎜
⎟
−
+
−
−
−
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
+
Φ
−
Φ
+
∑
∑
64444447444444
8
 
(8.1-8) 
 
 
(
)
(
)
'
0
(
)
( )
sin
ˆ
(
/ 2)
          
( )sin(
( ))
( )cos(
( ))
(2
)
h
h
n
n
T
h
SE
n
n
n
T
h
h
n
c
s
t
p
t
T
nT
e
t
P
t
p
t
T
nT
T
n t
t
n t
t
O
ω
φ
ω
φ
ω
∞
∞
=−∞
=−∞
−
−
⎡
⎤
⎛
⎞
+
−
−
⎢
⎥
⎜
⎟
=
⎢
⎥
⎜
⎟
−
+
−
−
−
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
+
Φ
+
Φ
+
∑
∑
 
(8.1-9) 
 

 594                               Spread Spectrum Systems for GNSS and Wireless Communications  
 
             
Note the three phase terms 
( ),
( ), and 
( )
t
t
t
+
−
Φ
Φ
Φ
 are defined in (8.1-6) and (8.1-8). 
Consider the autocorrelation function of each noise term 
 
 
(
)
(
)
( )
( )cos
( )
( )sin
( )
CE
c
s
n
t
n t
t
n t
t
+
+
Φ
−
Φ
@
 
(8.1-10) 
 
so that 
 
(
)
(
)
(
)
(
)
(
)
(
)
( )cos
( )
( )sin
( )
( )
( )cos
(
)
( )sin
(
)
CE
c
s
n
c
s
n t
t
n t
t
R
E
n t
t
n t
t
τ
τ
τ
+
+
+
+
⎡
⎤
Φ
−
Φ
⎢
⎥
=
⎢
⎥
×
Φ
+
−
Φ
+
⎣
⎦
 
(8.1-11) 
 
Simplifying the above equation leads to 
 
 
(
)
(
)
2
2
0
0
0
( )
( )cos
( )
( )sin
( )
( )
2
2
2
CE
n
N
N
N
R
t
t
τ
δ τ
δ τ
δ τ
+
+
=
Φ
+
Φ
=
 
(8.1-12) 
 
In a similar manner it can be shown that 
 
 
0
( )
( )
( )
( )
( )
2
CE
SE
CL
SL
n
n
n
n
N
R
R
R
R
τ
τ
τ
τ
δ τ
=
=
=
=
 
(8.1-13) 
 
Now the early inphase and quadrature phase noise terms are statistically independent, it is also true 
that the early and late signals are statistically independent since the early and late hops do not overlap when 
the early late spacing is one hop. Thus all the noise terms are statistically independent of each other. 
The signals denoted 
( )
CE
e
t  and the corresponding other four can be written as 
 
 
( )
cos
( )
( )
( )
CE
CE
e
t
P
t
t
n
t
+
⎡
⎤
=
Φ
−Φ
+
⎣
⎦
 
(8.1-14) 
 
 
( )
sin
( )
( )
( )
SE
SE
e
t
P
t
t
n
t
+
⎡
⎤
=
Φ
−Φ
+
⎣
⎦
 
(8.1-15) 
 
 
( )
cos
( )
( )
( )
CL
CL
e
t
P
t
t
n
t
−
⎡
⎤
=
Φ
−Φ
+
⎣
⎦
 
(8.1-16) 
 
 
( )
sin
( )
( )
( )
SL
SL
e
t
P
t
t
n
t
−
⎡
⎤
=
Φ
−Φ
+
⎣
⎦
 
(8.1-17) 
 
 
Since the multiplier outputs will produce a signal component that is offset in frequency (usually out 
of band) when the time difference between the actual delay T and the estimated delay ˆT  is not zero, we can 
approximate the correlator outputs by the following approximations with the assumption that signal 
component is out of band when the timing error is not zero. Thus 
 
    
  
(
)
'
ˆ
( )
(
)
(
/ 2)cos
( )
h
h
CE
T
h
h
T
h
h
n
n
CE
n
e
t
P
p
t
T
nT
p
t
T
nT
T
n
t
φ
φ
∞
=−∞
≅
−
−
−
−
+
−
+
∑
 
(8.1-18) 
 
   
 
(
)
'
ˆ
( )
(
)
(
/ 2)sin
( )
h
h
SE
T
h
h
T
h
h
n
n
SE
n
e
t
P
p
t
T
nT
p
t
T
nT
T
n
t
φ
φ
∞
=−∞
≅−
−
−
−
−
+
−
+
∑
 
(8.1-19) 
 

 
                                                    Tracking of Frequency-Hopped Signals 
 
 
            595 
   
(
)
'
ˆ
( )
(
)
(
/ 2)cos
( )
h
h
CL
T
h
h
T
h
h
n
n
CL
n
e
t
P
p
t
T
nT
p
t
T
nT
T
n
t
φ
φ
∞
=−∞
≅
−
−
−
−
−
−
+
∑
 
(8.1-20) 
 
   
(
)
'
ˆ
( )
(
)
(
/ 2)sin
( )
h
h
SL
T
h
h
T
h
h
n
n
SL
n
e
t
P
p
t
T
nT
p
t
T
nT
T
n
t
φ
φ
∞
=−∞
≅−
−
−
−
−
−
−
+
∑
 
(8.1-21) 
 
Basically these equations are based on the assumption that if the input and reference signals don’t 
overlap in time, they are assumed to be zero. Each reference signal, when in lock, will correlate over about 
one-half of the hop duration with the same frequency and one-half the time with a previous or subsequent 
frequency. Thus it is assumed here that the “wrong frequency” doesn’t correlate. This is a reasonable 
assumption when the frequency difference between the two is significant. If, however, the early or late 
frequency is very close in frequency, then some correlation output will occur. This effect, which should be 
small, is neglected in what follows. These approximations are actually more justifiable out of the correlator, 
since then different frequencies would produce a very small output from the correlators, as the correlation 
would filter out the difference frequencies.  
 
Now consider the output from the correlators with the previous approximations. Over one hop time 
we have 
 
 
(
)
'
0
1
(
)
/ 2 cos(
)
( )
h
T
CE
h
h
n
CE
h
e
T
PR
T
n
t dt
T
ε
φ
=
+
Δ
+
∫
 
(8.1-22) 
 
 
(
)
'
0
1
(
)
/ 2 sin(
)
( )
h
T
SE
h
h
n
SE
h
e
T
PR
T
n
t dt
T
ε
φ
= −
+
Δ
+
∫
 
(8.1-23) 
 
 
(
)
'
0
1
(
)
/ 2 cos(
)
( )
h
T
CL
h
h
n
CL
h
e
T
PR
T
n
t dt
T
ε
φ
=
+
Δ
+
∫
 
(8.1-24) 
 
 
(
)
'
0
1
(
)
/ 2 sin(
)
( )
h
T
SL
h
h
n
SL
h
e
T
PR
T
n
t dt
T
ε
φ
= −
+
Δ
+
∫
 
(8.1-25) 
 
where 
'
n
n
n
φ
φ
φ
Δ
=
−
 and the tracking error is 
ˆ.
T
T
ε =
−
 Equations (8.1-22)–(8.1-25) can be written more 
succinctly as  
 
 
(
)
' (
)
/ 2 cos(
)
(
)
CE
h
h
n
CE
h
e
T
PR
T
N
T
ε
φ
=
+
Δ
+
 
(8.1-26) 
 
 
(
)
' (
)
/ 2 sin(
)
(
)
SE
h
h
n
SE
h
e
T
PR
T
N
T
ε
φ
= −
+
Δ
+
 
(8.1-27) 
 
 
(
)
' (
)
/ 2 cos(
)
(
)
CL
h
h
n
CL
h
e
T
PR
T
N
T
ε
φ
=
+
Δ
+
 
(8.1-28) 
 
 
(
)
' (
)
/ 2 sin(
)
(
)
SL
h
h
n
SL
h
e
T
PR
T
N
T
ε
φ
= −
+
Δ
+
 
(8.1-29) 
 
where the integrated noise terms are defined over the first hop for convenience, by 
 

 596                               Spread Spectrum Systems for GNSS and Wireless Communications  
 
             
 
0
1
(
)
( )
h
T
CE
h
CE
h
N
T
n
t dt
T
=
∫
 
(8.1-30) 
 
 
0
1
(
)
( )
h
T
SE
h
SE
h
N
T
n
t dt
T
=
∫
 
(8.1-31) 
 
 
0
1
(
)
( )
h
T
CL
h
CL
h
N
T
n
t dt
T
=
∫
 
(8.1-32) 
 
 
0
1
(
)
( )
h
T
SL
h
SL
h
N
T
n
t dt
T
=
∫
 
(8.1-33) 
 
Now the error correction signal is given by  
 
 
(
)
(
)
(
)
(
)
2
2
2
2
'
'
'
'
( )
(
)
(
)
(
)
(
)
CL
h
SL
h
CE
h
SE
h
e t
e
T
e
T
e
T
e
T
=
+
−
−
 
(8.1-34) 
 
Using (8.1-26)–(8.1-29) in (8.1-34) produces the result 
 
   
[
]
[
]
2
2
2
2
2
2
( )
(
/ 2)
(
/ 2)
(
)
(
)
(
)
(
)
      
2
(
) (
/ 2)cos(
)
(
) (
/ 2)cos(
)
     
2
(
) (
/ 2)sin(
)
(
) (
/ 2)sin(
)
h
h
CE
h
SE
h
CL
h
SL
h
CE
h
h
n
CL
h
h
n
SE
h
h
n
SL
h
h
n
e t
P R
T
R
T
N
T
N
T
N
T
N
T
P N
T R
T
N
T R
T
P N
T R
T
N
T R
T
ε
ε
ε
φ
ε
φ
ε
φ
ε
φ
⎡
⎤
=
−
−
+
−
−
+
+
⎣
⎦
+
+
Δ
−
−
Δ
−
+
Δ
−
−
Δ
 
(8.1-35) 
 
By assuming that the adjacent hop frequencies are uncorrelated in the hop time correlator, we can 
describe the normalized autocorrelation function as 
 
 
( )
1
 
 
1
( )
0 
 
1
R
for
R
for
ε
ε
ε
ε
ε
= −
≤
=
>
 
(8.1-36) 
 
Thus the normalized autocorrelation function and the S-curve (tracking function curve) are shown in Figure 
8.1-2. 
 
1
0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1
0
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
1
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
R  ( )
 
2
1.8 1.6 1.4 1.2
1
0.8 0.6 0.4 0.2
0
0.2 0.4 0.6 0.8
1
1.2 1.4 1.6 1.8
2
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
S  ( )
 
Autocorrelation function
S-curve
1
0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1
0
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
1
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
R  ( )
 
2
1.8 1.6 1.4 1.2
1
0.8 0.6 0.4 0.2
0
0.2 0.4 0.6 0.8
1
1.2 1.4 1.6 1.8
2
1
0.8
0.6
0.4
0.2
0
0.2
0.4
0.6
0.8
1
S  ( )
 
Autocorrelation function
S-curve
 
 
Figure 8.1-2 The autocorrelation function and the S-curve for the frequency-hopping tracking loop. 
 
 
Within the linear region, (8.1-35) can be written as 
 

 
                                                    Tracking of Frequency-Hopped Signals 
 
 
            597 
 
1
2
( )
2
(
)
(
)
h
h
e t
P
N T
N T
ε
=
+
+
 
(8.1-37) 
 
since the slope of the S-curve is 2, as can be seen from the S-curve in Figure 8.1-2. The two noise terms of 
(8.1-37) are defined by 
 
    
 
[
]
[
]
1(
)
2
(
) (
/ 2)cos(
)
(
) (
/ 2)cos(
)
           
2
(
) (
/ 2)sin(
)
(
) (
/ 2)sin(
)
h
CE
h
h
n
CL
h
h
n
SE
h
h
n
SL
h
h
n
N T
P N
T R
T
N
T R
T
P N
T R
T
N
T R
T
ε
φ
ε
φ
ε
φ
ε
φ
=
+
Δ
−
−
Δ
−
+
Δ
−
−
Δ
 
(8.1-38) 
 
and 
 
 
2
2
2
2
2(
)
(
)
(
)
(
)
(
)
h
CL
h
SL
h
CE
h
SE
h
N T
N
T
N
T
N
T
N
T
=
+
−
−
 
(8.1-39) 
 
 
Consider the variance of the individual noise terms.  
 
 
{
}
{
}
2
0
2
0 0
1
(
)
(
)
( )
( )
2
h
h
T T
CL
h
CL
h
CL
CL
h
h
N
Var N
T
E N
T
E
n
t n
u dtdu
T
T
⎧
⎫
⎪
⎪
=
=
=
⎨
⎬
⎪
⎪
⎩
⎭
∫∫
 
(8.1-40) 
 
Furthermore, it can be shown that 
 
 
{
}
{
}
{
}
{
}
0
(
)
(
)
(
)
(
)
2
CL
h
SL
h
CE
h
SE
h
h
N
Var N
T
Var N
T
Var N
T
Var N
T
T
=
=
=
=
 
(8.1-41) 
 
Recall that we indicated that all four of the noise terms are mutually statistically independent. We 
can rewrite the error signal as for the time between 0 and Th seconds as 
 
 
1
2
( )
2
(
)
( )  0
h
i
i
T
h
e t
P
N
N
p
t
t
T
ε
=
+
+
≤≤
 
(8.1-42) 
in the linear region (
/ 2
hT
ε ≤
). Now the noise samples are defined, as before 
 
 
[
]
1
2
(
/ 2)
(
/ 2)
i
CEi
h
CLi
h
N
P N
R
T
N
R
T
ε
ε
=
+
−
−
 
(8.1-43) 
 
and  
 
 
2
2
2
2
2i
CLi
SLi
CEi
SEi
N
N
N
N
N
=
+
−
−
 
(8.1-44) 
 
at the i-th sample.  
 
 
8.1.1 Loop Model for the Frequency-Hopping Loop Without Data 
 
Now consider writing the loop equation for the frequency-hopping loop. The delay estimate ˆT  is formed 
from the loop filter as 
 
 
ˆ
( ) ( )
v
K
T
F s e t
s
=
 
(8.1-45) 
 

 598                               Spread Spectrum Systems for GNSS and Wireless Communications  
 
             
Since ˆT  is related to the error signal,1 we have, in the linear region for the i-th hop, 
 
 
[
]
( ) 2
v
i
i
i
K
T
F s
P
N
s
ε
ε
−
=
+
 
(8.1-46) 
 
where 
1
2
i
i
i
N
N
N
=
+
. Solving for 
iε , we obtain 
 
 
2
( )
2
2
1
( )
1
( ) 2
v
i
i
i
v
v
PK F s N
T
s
PK
PK
F s
F s
P
s
s
ε =
−⎛
⎞
+
+
⎜
⎟
⎝
⎠
 
(8.1-47) 
 
Letting H(s) be the closed loop transfer function, it is defined as 
 
 
2
( )
( )
2
1
( )
v
v
PK F s
s
H s
PK F s
s
=
+
 
(8.1-48) 
 
So that the error signal can be written as 
 
 
( )
(1
( )) 2
i
i
i
N
H s T
H s
P
ε =
−
−
 
(8.1-49) 
 
Since we are only concerned with the effect of the thermal noise, we can write (Ti = 0) 
 
 
( ) 2
i
i
N
H s
P
ε
⎛
⎞
= −
⎜
⎟
⎝
⎠
 
(8.1-50) 
 
It follows that the tracking error variance is given by 
 
 
2
2
2
2
( )
2
(0)
( )
4
4
N
L
N
S
f
B S
H f
df
P
P
ε
σ
∞
−∞
=
≅
∫
 
(8.1-51) 
 
where BL is the closed loop noise bandwidth of the frequency-hopping tracking loop. Now it is necessary to 
evaluate the noise spectral density at f = 0 in order to obtain the variance of the tracking error.  
 
 
8.1.2 Evaluation of the Spectral Density of the Noise Terms 
 
The integrate and dump process produces a step-wise process error control process that is known to have a 
noise process autocorrelation of form 
 
 
                                                          
1 In reality ˆT  should be written as ˆ( )
T t , but we don’t, for notational simplicity. This is true for other variables also. 

 
                                                    Tracking of Frequency-Hopped Signals 
 
 
            599 
 
{
}
2
( )
1
( )
0
i
i
N
i
h
N
R
E N
T
R
τ
τ
τ
⎡
⎤
=
−
⎢
⎥
⎣
⎦
=
 
(8.1-52) 
 
The corresponding power spectral density of the noise, is given by the Fourier transform of the 
autocorrelation function, so that  
 
 
(
)
(
)
2
1
2
2
sin(
)
( )
Var
Var
(
)
i
h
N
i
i
h
h
fT
S
f
N
N
T
fT
π
π
=
+
⎡
⎤
⎣
⎦
 
(8.1-53) 
 
Clearly from (8.1-53), since the sinc( fTh) function is unity at f = 0, we have 
 
 
(
)
(
)
1
2
(0)
Var
Var
i
N
i
i
h
S
N
N
T
=
+
⎡
⎤
⎣
⎦
 
(8.1-54) 
 
Therefore it is necessary to evaluate each variance term to evaluate the noise spectral density at f = 0. First 
consider N1i. We have  
 
 
(
)
(
)
(
)
1
(
/ 2)
(
/ 2)
Var
4
(
/ 2)
(
/ 2)
CEi
h
CLi
h
i
CEi
h
CLi
h
N
R
T
N
R
T
N
PE
N
R
T
N
R
T
ε
ε
ε
ε
⎧
⎫
+
−
−
⎪
⎪
=
⎨
⎬
×
+
−
−
⎪
⎪
⎩
⎭
 
(8.1-55) 
 
Since the early and late noise terms are statistically independent, we can simplify the result to 
 
 
(
)
(
)
2
2
1
Var
4
Var(
)
(
/ 2)
Var(
)
(
/ 2)
i
CEi
h
CLi
h
N
P
N
R
T
N
R
T
ε
ε
⎡
⎤
=
+
+
−
⎣
⎦ 
(8.1-56) 
 
 
To make the analysis tractable we will approximate the correlation functions for the noise at 
0
ε =
; 
this leads to the result using (8.1-41) 
 
 
0
0
0
1
Var(
)
4
8
8
i
h
h
h
N
N
N P
N
P
T
T
T
⎡
⎤
=
+
=
⎢
⎥
⎣
⎦
 
(8.1-57) 
 
Now consider the evaluation of the second noise term. Consider the variance of N2i. One has 
 
 
(
)
(
)(
)
{
}
2
2
2
2
2
2
2
2
2
Var
i
CLi
SLi
CEi
CLi
CLi
SLi
CEi
CLi
N
E
N
N
N
N
N
N
N
N
=
+
−
−
+
−
−
 
(8.1-58) 
 
This can be written as four terms thusly  
 
 
(
)
2
1
2
3
4
Var
i
N
T
T
T
T
=
+
+
+
 
(8.1-59) 
 
where  
 
 
{
}
{
}
{
}
{
}
4
2
2
2
2
2
2
1
SLi
SLi
CLi
SLi
SEi
SLi
CEi
T
E N
E N
N
E N
N
E N
N
=
+
−
−
 
(8.1-60) 
 
 
{
}
{
}
{
}
{
}
2
2
4
2
2
2
2
2
SLi
CLi
CLi
CLi
SEi
CLi
CEi
T
E N
N
E N
E N
N
E N
N
=
+
−
−
 
(8.1-61) 
 

 600                               Spread Spectrum Systems for GNSS and Wireless Communications  
 
             
 
{
}
{
}
{
}
{
}
2
2
2
2
4
2
2
3
SEi
SLi
SEi
CLi
SEi
SEi
CEi
T
E N
N
E N
N
E N
E N
N
= −
−
+
+
 
(8.1-62) 
 
 
{
}
{
}
{
}
{
}
2
2
2
2
2
2
4
4
CEi
SLi
CEi
CLi
CEi
SEi
CEi
T
E N
N
E N
N
E N
N
E N
= −
−
+
+
 
(8.1-63) 
 
All the Ti yield the same value, so let us consider just T1. We have 
 
 
2
2
2
2
2
2
0
0
0
0
0
0
1
2
3
2
2
2
2
2
2
2
h
h
h
h
h
h
N
N
N
N
N
N
T
T
T
T
T
T
T
⎛
⎞
⎛
⎞
⎛
⎞
⎛
⎞
⎛
⎞
=
+
−
−
=
=
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎝
⎠
⎝
⎠
⎝
⎠
 
(8.1-64) 
 
It follows that  
 
 
(
)
2
0
2
1
2
2
4
i
h
N
Var N
T
T
=
=
 
(8.1-65) 
 
 
8.1.3 Closed Loop Tracking Loop Performance 
 
In Problem 1 it is shown that the tracking error variance for the frequency-hopping tracking loop, based on 
the previous calculations, is given by 
 
 
2
2
0
0
2
1
   (hopping symbols)
2
L
h
N B
N
P
PT
ε
σ
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(8.1-66) 
 
 
Thus we see that the tracking error variance depends on product of the inverse loop SNR (N0BL/P) 
and a term that is the sum of one plus the inverse hop SNR (N0/PTh). Thus, this signal would allow 
accuracies on the order of a small fraction of a hop duration.  
 
Example 1 Consider a simple example for the tracking standard deviation when BL = 2 Hz and Th = 1 ms, 
and plot it as a function of the C/N0 (P/N0) ratio. Figure 8.1-3 illustrates the tracking standard deviation under 
these conditions, as a function of the C/N0 (P/N0) ratio. Clearly, the greater the C/N0 ratio (dB-Hz), the 
smaller the standard deviation of the tracking error. 
 
25
30
35
40
45
50
55
1  10 3
0.01
0.1
1
C/N0 (dB-Hz)
Sigma (symbols)
25
30
35
40
45
50
55
1  10 3
0.01
0.1
1
C/N0 (dB-Hz)
Sigma (symbols)
 
 
Figure 8.1-3 Frequency-hopping tracking one sigma error as a function of the C/N0 ratio expressed in dB-Hz. 
 

 
                                                    Tracking of Frequency-Hopped Signals 
 
 
            601 
 
 
Based on this model the standard deviation of tracking error is about 0.01 hops at C/N0 of 43.5 dB-
Hz. This corresponds to an rms time tracking error of about 10 microseconds (0.01×1/1,000 = 10–5). 
 
8.2 FREQUENCY-HOPPING TRACKING WITH BPSK AND DPSK DATA MODULATION 
 
So far we have not discussed data modulation on the frequency-hopping signal. In order to carry data in a 
useful manner on the frequency-hopped signal, it is desirable to have the hopping frequency synthesizer be 
frequency synchronous with the data rate. Let the number of data symbols per hop be N. Then the data can be 
modulated on each frequency hop such that an integer number of N data symbols per hop exist.  
 
This noncoherent hopping tracking loop can be accomplished with the understanding that the 
correlation time for frequency-hopping tracking must correspond to the data symbol time period, rather than 
the hop period. This may provide somewhat poorer tracking performance, as measured in symbols2, than the 
unmodulated case, since the energy per hop is normally N times better than the energy per data symbol. 
However, in absolute time (seconds) the data tracker would be expected to be much better (on the order of 
roughly 1/N as large as the frequency-hopping tracking case). Figure 8.2-1 illustrates the frequency-hopping 
tracking model when BPSK or DPSK data is modulated on the hop frequencies.  
 
BPF
(B)
( )
CE
r
t
( )
0
1
.
sT
s
dt
T ∫
( )
2
.
( )
CE
e
t
' ( )
CE
e
t
( )
SE
r
t
( )
2
.
( )
SE
e
t
' ( )
SE
e
t
( )
CL
r
t
( )
2
.
( )
CL
e
t
' ( )
CL
e
t
( )
SL
r
t
( )
2
.
( )
CE
e
t
' ( )
SL
e
t
+
F(s)
NCXO
Hopping
generator
( )
SL
r
t
( )
SE
r
t
( )
CL
r
t
( )
CE
r
t
y(t)
( )
0
1
.
sT
s
dt
T ∫
( )
0
1
.
sT
s
dt
T ∫
( )
0
1
.
sT
s
dt
T ∫
BPF
(B)
BPF
(B)
BPF
(B)
( )
CE
r
t
( )
0
1
.
sT
s
dt
T ∫
( )
2
.( )
2
.
( )
CE
e
t
' ( )
CE
e
t
( )
SE
r
t
( )
2
.( )
2
.
( )
SE
e
t
' ( )
SE
e
t
( )
CL
r
t
( )
2
.( )
2
.
( )
CL
e
t
' ( )
CL
e
t
( )
SL
r
t
( )
2
.( )
2
.
( )
CE
e
t
' ( )
SL
e
t
+
F(s)
F(s)
NCXO
NCXO
NCXO
Hopping
generator
Hopping
generator
( )
SL
r
t
( )
SE
r
t
( )
CL
r
t
( )
CE
r
t
y(t)
( )
0
1
.
sT
s
dt
T ∫
( )
0
1
.
sT
s
dt
T ∫
( )
0
1
.
sT
s
dt
T ∫
 
 
Figure 8.2-1 The tracking loop model for a frequency-hopped signal with BPSK or DPSK data modulation. 
 
Equation Section (Next) 
 
Here the reference signals are the same, but the integration is only over the code bit time. 
Again it is assumed that the integrators are reset after every coded bit time. If we assume that the 
time to change any frequency of the frequency-hopper to any other frequency is small compared to a data 
symbol duration, then the tracking error variance can be obtained for BPSK of DPSK modulation with the 
understanding that the correlation (integration) is over a coded symbol time, rather than a hop time. The 
tracking error variance, in the linear region, follows from (8.1-66) and is given by 
 
 
2
2
0
0
0
0
2
2
1
1
   (data symbols)
2
2
L
L
s
h
N B
N
N B
NN
P
PT
P
PT
ε
σ
⎡
⎤
⎡
⎤
=
+
=
+
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
 
(8.2-1) 
 

 602                               Spread Spectrum Systems for GNSS and Wireless Communications  
 
             
where Ts is the symbol duration, in seconds. The loop bandwidth has to be picked so that the bandwidth is 
large enough to track any expected dynamical disturbances, yet be narrow enough to limit the noise influence 
on the tracking error. Conversion to time is accomplished by the following equation 
 
 
( )
0
0
2
1
   (s)
2
L
t
s
s
N B
N
T
P
PT
σ
⎡
⎤
=
+
⎢
⎥
⎣
⎦
 
(8.2-2) 
 
Further references on the subject of frequency-hopped signal tracking are cited in [1–5].  
 
It should be pointed out that the use of BPSK in frequency hop systems is now feasible in view of 
the ability of the digital synthesizers to maintain phase coherence from hop to hop. 
 
 
8.3 SUMMARY 
 
This short chapter has presented an analysis of a frequency-hopped tracking loop performance designed to 
time track a spread SS frequency-hopping signal that has no data. Frequency hop acquisition was discussed 
briefly and it was noted that it is quite similar to direct sequence acquisition. A model was presented for 
tracking the frequency-hopping signal and an analysis of the closed loop noise analysis was accomplished for 
the variance of the tracking error. The variance of the tracking error was derived and a plot of the tracking 
performance was presented in an example.  
Then the case that the frequency-hopping waveform has either BPSK or DPSK modulation on it was 
considered. The tracking error performance (i.e., the variance of the tracking error) was obtained, based on 
the previous analysis of the unmodulated frequency-hopping tracking loop. 
 
 
References 
 
[1] 
C. Lo, E. Masry, and L. Milstein, “Performance of Fast Frequency-Hopped DBPSK Spread Spectrum Communication in 
AWGN,” IEEE Milcom 1990, September 30–October 3, 1990. 
 
[2] 
G. Cherubini and L. Milstein, “Performance of Both Hybrid and Frequency-Hopped Phase-Coherent Spread-Spectrum 
Systems Part II: An FH System,” IEEE Trans. on Communications, Vol. 37, No. 6, June 1999. 
 
[3] 
T. Saba, D. Park, and S. Mori, “A Modified Time-Shared Code Tracking Loop for Frequency-Hopping Systems,” 1995 IEEE 
Global Telecommunications conf. Vol. 3, November 13–17, 1995, pp. 1884–1888. 
 
[4] 
T. Saba, Y. Sato, and S. Mori, “Performance of the Time-Shared Code Tracking Loop with Extended Tracking Range for 
Frequency Hopped Signals,” 8th Symposium Personal Indoor and Mobile Radio Comm. Conference, Vol. 2, September 1– 4, 
1997. 
 
[5] 
R. E. Ziemer and R. L. Peterson, Digital Communications and Spread Spectrum Systems, New York: Macmillan Publishing 
Company, 1985. 
 
Problem 
 
1. Show that (8.1-66) follows from (8.1-51), (8.1-57), and (8.1-65). 
 


 
                                       603 
CHAPTER 9 
Multiple Access Methods for Digital Wireless Cellular 
Communications  
 
 
9.0 INTRODUCTION 
Equation Chapter 9 Section 1 
In this chapter we will present an introduction to multiple access techniques for digital wireless cellular 
communications [1–7]. The basic idea of multiple access techniques in general is the simultaneous usage of 
multiple signals over the same bandwidth. The sharing of the spectrum is necessary to achieve high capacity 
by simultaneously allocating the available bandwidth to multiple users. The must be done in such a way that 
each signal does not suffer significant degradation in performance by affecting one another. 
 
 
9.1 BRIEF HISTORY OF CELLULAR SYSTEMS 
 
The Advanced Mobile Phone Service (AMPS) was an analog cellular phone service that originated in 
Chicago in 1983. It was an immensely popular 1G (first generation) cellular system and was used in North 
and South America. Later the Electronic Industry Association Interim Standard IS-54 and later IS-136 
provided the opportunity for some single-user analog providers to replace the analog channels (AMPS) with 
digital channels, which supported three users in the same 30-kHz bandwidth. IS-54, IS-136, IS-95, and 
Global System for Mobile (GSM) are all 2G (second generation) cellular systems. 
 
A digital cellular system, based on code division multiple access (CDMA), was developed by 
Qualcomm Inc. and standardized by the Telecommunications Industry Association (TIA) as an Interim 
Standard (IS-95). It is a second generation (2G) system. This standard supports a variable number of users in 
a 1.25-MHz bandwidth, using direct sequence CDMA. Digital CDMA systems have been shown to operate 
at a lower power level, for the same bandwidth, than analog systems. In addition CDMA allows the use of 
multiple users over the same bandwidth. However IS-95 utilized a variable rate vocoder with voice activity 
detection, which reduces the required data rate by the cell phone transmitter. IS-95 is 2G. Second generation 
versions of CDMA include cdmaOne which includes IS-95, IS-95A, and IS-95B. Third generation CDMA 
systems are called 3G, and include cdma2000, WCDMA, and others. The 3G standards offer increased 
network capacity for wireless services and high-speed data services. 
 
Another CDMA standard that is not interoperable with these standards is known as wideband 
CDMA (WCDMA). The world’s first WCDMA service, Freedom of Mobile Multimedia Access (FOMA), 
was launched by NTT DoCoMo in Japan in 2001. It utilizes 5-MHz channels, whereas CDMA standards 
utilize a 1.25 MHz channel.  
 
The Universal Mobile Telecommunication System (UMTS) is a 3G evolution of the 2G system 
GSM, which is a time division multiple access (TDMA) system. WCDMA networks are already being 
operated commercially in Austria, Italy, Sweden, and the U.K. with more to come. There is a 2.5G system 
based on General Packet Radio Service (GPRS), which is a natural stepping-stone toward UMTS.  
 
Another CDMA-based 3G system is time division synchronous code division multiple access (TD-
SCDMA). The design was based on the cooperation of Siemens and its Chinese partners. It is to be noted that 
China is the largest mobile phone market in the world. Via time division duplex (TDD), the UMTS 
transmission mode, traffic is sent and received over the same frequency band, but using different time slots. 

 604                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
The synchronous “S” signifies that TD-SCDMA can master both synchronous circuit-switched services (such 
as speech or video services) and asynchronous packet-switched services via an Internet access.  
 
 
9.2 CELLULAR COMMUNICATIONS 
 
 
A cellular communication system has the ability to connect to the public switched telephone network (PSTN) 
for any cellular user within the radio range of the mobile base station. A cellular system is capable of 
accommodating a large number of users with a reasonable bandwidth requirement. 
Each mobile station utilizes a separate radio channel to talk to the cell site. The cell site allows 
communication of many mobile stations at the same time, using one channel per mobile station. Figure 9.2-1 
illustrates the mobile links and the connection to the public PSTN. 
 
Forward link
Reverse link
Mobile base
station n
Mobile base
station n+1
Mobile switching center
PSTN
Cell n
Cell n +1
Forward link
Reverse link
Mobile base
station n
Mobile base
station n+1
Mobile switching center
PSTN
Cell n
Cell n +1
 
Figure 9.2-1 Basic mobile telephone service network. 
 
 
 
The mobile units, or mobile stations (cars in the figure), communicate in both directions to the 
mobile base station in its cell location. The mobile base station communicates to the mobile switching center 
(MSC) which communicates to the copper wire telephone system that is the PSTN. The link from base 
station to the mobile user (mobile) is called the forward link or the downlink. The link from the mobile to the 
base station is called the reverse link or the uplink. These terms will be used interchangeably in what follows. 
 
 
9.2.1 Cellular System Architecture  
 
Increases in demand and poor quality of the then existing services led mobile service providers to obtain 
ways to improve the capacity of the systems and to increase the quality of service. The communication 
between the base station and the users is accomplished at two different frequencies, one for transmission and 
the other for reception.  
 
 
 
9.2.2 Mobile Cells 
 
A cell is the basic geographic element of a cellular system. The honey combed shape of the areas into which 
a coverage region is divided is termed “cellular.” A cell is a hexagon shape in which the base station is 
usually located near its center, and the base station communicates with the mobile stations within the cellular 
region. Each cell may vary somewhat in size, depending on the landscape. In reality because of the 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           605 
constraints imposed by the natural terrain as well as manmade structures, the actual shape of the cell is not 
exactly a hexagon. The actual shape of the cell can be determined by field measurements or propagation 
modeling. 
 
 
9.2.3 Mobile Clusters 
 
A cluster is a group of n cells. Channels are not reused within a cluster. Figure 9.2-2 illustrates a cluster of 
seven cells. 
 
1
2
3
4
5
6
7
1
2
3
4
5
6
7
 
 
Figure 9.2-2 An example of a cluster of n = 7 cells. 
 
 
9.2.4 Frequency Reuse in a Cellular System 
 
Due to the fact that only a few radio channels were available for mobile systems, the designers had to 
develop a method to reuse the radio channels in order to increase the capacity of the system. The solution 
was frequency reuse. Frequency reuse was based on the assignment of each cell to a group of radio channels 
used within a small geographic area. Cells are assigned a group of radio channels that are different from all 
the adjacent cells. The coverage area of the cells is called the footprint. The footprint is roughly limited by 
the cell boundary, so that the same group of radio channels can be used in different cells that are sufficiently 
far away from each other, so that radio frequency interference does not occur. Figure 9.2-3 illustrates an 
example of frequency reuse with three clusters (bold lines). 
 
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
 
 
Figure 9.2-3 An example of frequency reuse. 

 606                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
Cells with the same cell number utilize the same set of frequencies. The frequency reuse factor is 
the rate at which the same frequency can be used in the network. It is equal to 1/n where n is the number of 
cells in a cluster. In the previous example the number of cells in a cluster is seven, and the frequency reuse 
factor is 1/7. In other words each cell is using 1/7 of the available channels.  
 
 
9.2.5 Cell Splitting  
 
Economic considerations have made the concept of creating systems that work well in heavy traffic areas as 
well as low traffic areas, but that do not work well because the traffic demand is not homogeneous. To 
overcome this problem system operators have developed the concept of cell splitting. This involves splitting 
a cell into smaller cells to accommodate the need for high traffic volume. In this manner urban areas can be 
broken into many small areas as is needed, in order to provide adequate performance in heavy traffic areas. 
Then low traffic areas (for example, rural areas) can be covered with less expensive larger cells. Figure 9.2-4 
illustrates an example of cell splitting in which rural areas have large size cells and urban areas have smaller 
cells. In the figure the parallel lines denote the ocean and the dark curving line, the shore line. Clusters, small 
cells, and individual cells are shown in the example.  
 
Another technique that is used to reduce interference is called sectoring. Sectoring is a procedure 
that utilizes, for example, three directive antennas at a cell site. Each antenna then covers about 120º. 
However sectors are not constrained to 120º. Thus sectoring allows frequency reuse within a cell, or more 
often, simply narrows the pattern of interference in adjacent cells. Figure 9.2-5 illustrates an example of 
sectoring one cell. It is seen that there are three sectors in the one cell, numbered 1, 2, and 3. There are 
actually three cell sizes. (1) Macrocells provide the main coverage in a cellular network. These macrocell 
base stations typically have tens of watts output power. (2) Microcells provide radio coverage in areas with a 
high number of users. Their output power is a few watts. (3) Picocells are normally found in buildings where 
coverage is poor or there are a very large number of users, such as in an airport terminal or shopping center.  
 
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
7
2
6
1
4
5
7
Small cells
for urban areas
Clusters-
dark lines
around 7 cells
Individual
cells
Note: No cells are
shown in the
blank area here 
for simplicity
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
7
2
6
1
4
5
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
7
2
6
1
4
5
7
Small cells
for urban areas
Clusters-
dark lines
around 7 cells
Individual
cells
Note: No cells are
shown in the
blank area here 
for simplicity
 
 
Figure 9.2-4 An example of cell splitting with the small cells used for urban areas. 
 
 
9.2.6 Handoff 
 
An obstacle in the development of the cellular network involves the problem created when a mobile 
subscriber (station) travels from one cell to another adjacent cell. Since adjacent cells do not use the same 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           607 
radio channels, a call must either be dropped or transferred from one radio channel to another one when a 
user crosses the line between adjacent cells. Due to the fact that dropping the call is unacceptable 
operationally, the process of handoff was developed. A handoff occurs when the mobile telephone network 
automatically transfers a call from one radio channel in the current cell to another radio channel as the mobile 
station crossed into the adjacent cell. A handoff is normally made when one base station in which the mobile 
station is entering supplies a stronger signal than that received from the current base station. In second 
generation systems the decision to make a handoff is decided in the mobile station (cell phone). First 
generation systems made the decision in the base station.  
 
1
2
3
1
2
3
 
 
Figure 9.2-5 An example of cell sectoring from one cell to three sectors. 
 
 
 
During a call, two parties are on one voice channel. When the mobile unit moves out of the coverage 
area of a given cell site, the reception becomes progressively weaker. At a preset point, the cell site in use 
requests a handoff. The system switches the call to a stronger frequency channel in a new cell site without 
interrupting the call or alerting the users. The call is thus not interrupted when changing cells as the mobile 
unit travels to its destination, and the users are unaware of the handoff.  
 
In summary a cellular approach offers advantages and disadvantages: Advantages are that: (1) the 
required transmitter power is reduced, and (2) the capacity through frequency reuse is increased. 
Disadvantages are that: (1) the network has increased complexity, (2) handoffs must be performed, and (3) if 
the system is not well designed, cochannel interference can be a problem.  
 
9.2.7 More on Cell Structure 
Equation Section (Next) 
As was noted earlier the cellular concept replaced a large area with a high power transmitter (large cell) with 
many low power transmitters, using a small area (small cell) with each cell providing coverage to only a 
small portion of the service area. Each base station is allocated a portion of the total number of channels 
available to the complete communication system, and the nearby base stations are assigned different groups 
of channels so that all of the available channels are assigned to a relatively small number of neighboring base 
stations. By systematically arranging the base stations and their channel groups throughout the market area, 
the allowed channels are distributed throughout the geographical area and they may be reused as many times 
as needed, so long as the interference between channels is maintained at permissible levels.  
 
As the demand for more channels increases, the demand can be met by increasing the number of 
base stations with the decrease in the required transmitter power. This small cell size allows for increased 
capacity without requiring an increase in the radio spectrum.  
 
Assume that the cellular system of interest has a total of n duplex channels available for use. If each 
cell is allocated a group of k ≤ n channels, and if the n channels are divided among N cells into unique and 
disjoint channel groups each of which have the same number of channels, the total number of available radio 
channels is simply 
 
 
n
kN
=
 
(9.2-1) 
 

 608                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
We have already identified the N cells that collectively use the complete set of frequencies as a 
cluster. When the cluster is replicated M times within the system, the total number of duplex channels that 
are available is given by 
 
 
C
MkN
Mn
=
=
 
(9.2-2) 
 
and is a measure of capacity of the system. As seen from (9.2-2) the capacity of a mobile cellular system is 
directly proportional to the number of times a cluster is repeated. The factor N is the cluster size and is 
typically a value of 4, 7, or 12. It can be seen from (9.2-2) that if the cluster size N, is reduced while the cell 
size is kept constant, more clusters are required to cover the desired area, and therefore more capacity 
(greater value of C) is achieved. The frequency reuse factor is defined as Ffr = 1/N, because each cell within a 
given cluster is only assigned 1/N of the total available channels in the system.  
 
Due to the hexagonal geometry only certain repeat patterns can tessellate (connect without gaps 
between adjacent cells) [8]. The number N of cells per cluster is given by [9] 
 
 
2
2
N
i
ij
j
=
+
+
 
(9.2-3) 
 
where i and j are nonnegative integers. The allowable values of N are given by [9] 
 
 
1, 3, 4,7, 9, 12, 13, 16, 19, 21, 25...
N =
 
(9.2-4) 
 
 
In order to find the nearest cochannel neighbor one must do the following [1, 10]: (1) move i cells 
along any chain of hexagons and then (2) turn 60º counterclockwise and move j cells. It is to be noted that if 
the construction is altered slightly (the two lower clusters are rotated counterclockwise to the next position of 
tessellation) rule (2) must be changed to turn clockwise rather than counterclockwise. The former rule is 
illustrated in Figure 9.2-6 for the case that N = 7, based on i = 2 and j = 1. 
 
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
R
D
(Reuse 
distance)
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
1
2
3
4
5
6
7
R
D
(Reuse 
distance)
 
 
Figure 9.2-6 An example of locating the next cochannel neighbor (1), N = 7, i = 2, and j = 1, in this case. 
 
 
 
The reuse distance is given by the relationship 
3
D
N R
=
, where R is the cell radius.  
 
Example 1 Compute the reuse distance for this example. Using 
3
D
N R
=
 produces the result 
4.58*
D
R
=
. 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           609 
 
Example 2 Assume that a frequency division duplexing (FDD) cellular system has 31 MHz available for 
telephone usage. Also assume that two 25-kHz channels are used to provide duplex operation. Determine the 
number of available channels per cell if the system uses (1) 7-cell reuse, (2) 9-cell reuse, and (3) 12-cell 
reuse. Determine the frequency reuse factor for each case. The FDD channel bandwidth is given by 2(25 
kHz) = 50 kHz for each duplex channel. The total number of channels that are available is given by 
31(106)/50≅620. For (1) N = 7 we have Nch = 620/7 ≅88 channels, and the reuse factor is Ffr = 1/7 = 
0.1428. For (2) we have Nch = 620/9 ≅ 68 channels, and the reuse factor is Ffr = 1/9 = 0.1111. Finally for (3) 
we have Nch = 620/12 ≅51 channels, and the reuse factor is Ffr = 1/12 = 0.0833. 
 
 
9.2.8 Assignment Strategies for Channelization 
 
Any channel assignment strategy of the available radio spectrum must consider frequency reuse capacity 
needs and the minimization of interference when being designed. A number of channel strategies have been 
devised to achieve these objectives. The channel assignment can be either dynamic or fixed. The choice of 
the assignment can affect the performance of the system, particularly how the calls are managed in the case 
of handoff from one cell to another cell [1, 11–13].  
 
In a dynamic channel assignment strategy, voice channels are allocated to difference cells as 
required; they are not permanent assignments. When a call request is made, the serving base station requests 
a channel from the MSC. The switch then allocates a channel to the requested cell based on an algorithm that 
accounts for the possibility of future blocking within a cell, the candidate cell frequency of use, the reuse 
distance of the cell, and other applicable costs functions.  
In a fixed channel assignment strategy, each cell is allocated a predetermined set of voice channels. 
Any new call attempt with the cell can only be satisfied by the unused channels in that cell. When all the 
channels are in use, the call is blocked and the subscriber will not receive service immediately. There is one 
variant that allows for borrowing of unused channels in an adjacent cell when all of its channels are occupied. 
The MSC supervises the borrowing process and the strategy is called a borrowing strategy. 
 
Dynamic channel assignment can reduce the chance of blocking, which increases the trunking 
capacity of the system.  
 
In this section we have attempted to discuss the concepts but have not provided the detail needed to 
design the system. Numerous books are available that cover considerably more than is possible in this 
chapter, such as [1, 3, 8, 14]. 
 
 
9.3 MULTIPLE ACCESS TECHNIQUES FOR WIRELESS COMMUNICATIONS  
Equation Section (Next) 
In utilizing wireless communication systems, it is often desirable to allow the mobile units (subscribers) to 
send information to the base station and concurrently receive information from the base station. In 
conventional wired telephone systems it is possible to talk and listen at the same time. Communication in 
both directions simultaneously is known as duplexing. 
 
Duplexing can be accomplished with frequency domain techniques or with time domain techniques. 
FDD provides two distinct frequency bands for every user. The forward band provides traffic from the base 
station to the mobile unit, and the reverse band allows traffic from the mobile unit to the base station.  
 
Time division duplexing (TDD) utilizes time to provide a forward and a reverse link. In TDD 
multiple users each share time slots in the time domain. Each user is assigned one time slot for the forward 
data flow and one time slot for the reverse data flow.  
 
Figure 9.3-1 illustrates a simple example of FDD and TDD. Both TDD and FDD have advantages 
and disadvantages. FDD fits well with radio communications systems that allocate individual radio 
frequencies for each user. Since both transmitter and receiver work simultaneously and there can be a very 
large difference in the transmitted and received signal power, the forward and reverse channels must be 
carefully chosen to avoid cross talk from the transmitted signal to the received signal. In addition careful 

 610                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
assignment of channels must be employed in order to utilize inexpensive radio frequency components and 
oscillators.  
 
TDD enables each transceiver (transmitter-receiver) to operate on the same frequency, thereby 
eliminating the need for separate forward and reverse frequency bands. Because of the very tight timing 
requirements needed to form precise time slots, TDD is normally limited to cordless phones or for short 
range portable access. TDD is also effective in a stationary environment in which the propagation delays are 
fixed. 
 
f
Reverse channel
Forward channel
Frequency separation
(a) FDD example
t
Reverse channel
Forward channel
Time separation
(b) TDD example
f
Reverse channel
Forward channel
Frequency separation
(a) FDD example
t
Reverse channel
Forward channel
Time separation
(b) TDD example
 
 
Figure 9.3-1 (a, b) Simplified FDM and TDD duplex channel. 
 
 
9.3.1 A Brief Introduction to Multiple Access 
 
A number of multiple access techniques have been used for wireless communications: frequency division 
multiple access (FDMA), time division multiple access (TDMA), and code division multiple access 
(CDMA). These systems are usually grouped into either narrowband or wideband wireless systems.  
 
Narrowband systems relate to the bandwidth of a single channel to the expected coherence 
bandwidth of the channel [1]. In a narrowband multiple access system, the available radio frequency 
spectrum is broken up into a large number of narrowband channels. In this case the channels are usually 
operated using FDD.  
In narrowband FDMA a user is assigned a particular channel, which is not shared by others users, in 
the near vicinity. If FDD is also used in this case it is known as FDMA/FDD.  
In narrowband TDMA usually there are a large number of radio channels allocated with either FDD 
or TDD, and each channel is shared using TDMA. These systems are known as TDMA/FDD or 
TDMA/TDD. 
 
Wideband systems have a transmission bandwidth of a single channel that is much larger than the 
coherence bandwidth of the channel [1]. In wideband multiple access systems, a large number of transmitters 
are permitted to transmit on the same channel. In contrast to narrowband systems, a wideband system 
sustaining multipath fading does not cause a large variation in the received power in the channel undergoing 
multipath fading. TDMA and CDMA systems could be found utilizing either FDD or TDD multiplexing 
techniques. Table 9.3-1 [1, 2] illustrates the multiple access and duplexing method in various multiple access 
systems.  
 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           611 
Table 9.3-1 Multiple Access and Duplexing Techniques for Different Wireless Systems 
 
CDMA/FDD
IS-95 (U.S. Narrowband Spectrum)
CDMA/FDD
CDMA/TDD
cdma2000
CDMA/FDD
CDMA/TDD
W-CDMA (3G)
FDMA/TDD
Digital European Cordless Telephone 
(DECT)
FDMA/TDD
CT2 (Cordless telephone) 
FDMA/FDD
Advanced Mobile Phone System (AMPS)
TDMA/FDD
US Digital Cellular (USDC)
TDMA/FDD
Pacific Digital Cellular (PDC)
TDMA/FDD
Global System for Mobile (GSM)
Multiple Access and Duplex Technique
Cellular System
CDMA/FDD
IS-95 (U.S. Narrowband Spectrum)
CDMA/FDD
CDMA/TDD
cdma2000
CDMA/FDD
CDMA/TDD
W-CDMA (3G)
FDMA/TDD
Digital European Cordless Telephone 
(DECT)
FDMA/TDD
CT2 (Cordless telephone) 
FDMA/FDD
Advanced Mobile Phone System (AMPS)
TDMA/FDD
US Digital Cellular (USDC)
TDMA/FDD
Pacific Digital Cellular (PDC)
TDMA/FDD
Global System for Mobile (GSM)
Multiple Access and Duplex Technique
Cellular System
 
 
 
9.3.2 Frequency Division Multiple Access 
 
Frequency division multiple access (FDMA) allocates individual channels to individual users. Each user is 
assigned a unique frequency band or channel. Users who request the channels are assigned them on a demand 
basis. The channel is given to that user during that call. When FDD duplexing is employed, the users are 
allocated as a pair of frequencies, one for the forward channel and one for the reverse channel. Figure 9.3-2 
illustrates a conceptual view of FDMA for the case of four FDMA signals. It is seen that each channel is 
separated in frequency, with a guard band between each channel. 
 
Now consider some salient features of FDMA [1]. (1) There is only one phone circuit on at one 
time. (2) When a channel is not in use, it cannot be used by other users to share the capacity. (3) When a 
channel is assigned, the mobile unit and the base station communicate continuously. (4) Normally FDMA 
channels are narrowband. (5) Since FDMA is on continuously, fewer overhead bits are needed for 
synchronization, compared to TDMA. (6) Partly due to the need for somewhat costly bandpass filters, the 
costs of the cell site system is higher than with TDMA. (7) Typically little or no equalization is needed in an 
FDMA system, since the symbol time duration is large compared to the average delay spread time.  
 
One effect that FDMA users have to deal with is the phenomena of intermodulation frequencies 
(IM) that occur when many channels are amplified through a common high power amplifier that is operated 
near saturation, in order to maximize the efficiency of the link. If there are N frequencies in the nonlinear 
amplifier and the mi are integers that satisfy the following 
 
 
(... 3, 2, 1,0,1,2,3,...)
i
m ∈
−
−
−
 
(9.3-1) 
 
then any signal frequency that is produced at the output of the nonlinear amplifier is of the form 
 
 
1
2
1
(
,
,...
)
(
)
i
N
IM
N
i
i
f
m m
m
m f
=
=∑
 
(9.3-2) 
 
for all possible values of the mi.  
Thus many frequencies are generated from the nonlinear amplifier, some of which fall in band, and 
some fall out of band, and some of which are very weak, while some are strong. Those that fall in band cause 
interference [3] and appear to be near noise-like when there are a fair number of signals feeding the 
amplifier. 
 

 612                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
t
User 4
User 3
User 2
User 1
Guard band
Guard band
Guard band
f
t
User 4
User 3
User 2
User 1
Guard band
Guard band
Guard band
f
 
 
Figure 9.3-2 Conceptual view of a FDMA multiple access communication system. 
 
 
9.4 TIME DIVISION MULTIPLE ACCESS  
Equation Section (Next) 
Time division multiple access (TDMA) systems partition the radio frequency spectrum into distinct time 
slots. In each slot, only one user is allowed to transmit or receive at a time. Figure 9.4-1 illustrates four 
TDMA users. 
 
It is to be noted that each channel has access to the system via a cyclically repeating time slot. The 
same channel has access to the system via this time slot and has some “protection time” afforded by the 
guard time slots. TDMA systems transmit data in a buffer-and-burst method, and therefore the transmission 
for any user is noncontinuous. As a consequence of this fact TDMA, unlike FDMA, which accommodates 
analog modulation, must utilize digital data and digital modulation. 
 
t
User 1
Guard time
Guard time
Guard time
Guard time
User 2
User 3
User 4
f
t
User 1
Guard time
Guard time
Guard time
Guard time
User 2
User 3
User 4
f
 
 
Figure 9.4-1 Conceptual view of a TDMA multiple access communication system. 
 
 
The transmission from the various users is interlaced into a repeating frame structure as is seen in 
Figure 9.4-2. Each frame has M slots. The beginning of a frame is formed with a preamble sequence, then an 
information message, followed by the post amble sequence. The figure indicates the usual functional 
elements and they may be arranged in a different order. For the case of TDMA/TDD one half of the time 
slots in the information message would be used for the forward channels and the other half would be used for 
the reverse channels. However in TDMA/FDD systems, an identical or similar frame structure would be used 
only for the forward channels or only the reverse channels, but the carrier frequencies would be different for 
the forward and reverse links. In general TDMA/FDD systems design in several time slots of delay between 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           613 
the forward and reverse time slots for a particular user, in order to not need duplexers in the subscriber unit 
[1].  
 
Preamble
Information message
Post amble
Slot 1
Slot 2
Slot 3
Slot M
…………….
Preamble 
Sync. bits
Information bits
Post amble
One TDMA frame
Preamble
Information message
Post amble
Slot 1
Slot 2
Slot 3
Slot M
…………….
Preamble 
Sync. bits
Information bits
Post amble
Preamble
Information message
Post amble
Preamble
Information message
Post amble
Slot 1
Slot 2
Slot 3
Slot M
…………….
Preamble 
Sync. bits
Information bits
Post amble
Preamble 
Sync. bits
Information bits
Post amble
One TDMA frame
 
 
Figure 9.4-2 The TDMA repeating frame structure. 
 
 
 
For a TDMA frame structure the preamble contains the synchronization and address information 
that both the base station and the subscribers use to identify each other. Each TDMA standard may have a 
somewhat different structure, but the concepts are very similar.  
Now consider some salient features of TDMA [1]. (1) It shares several users on one frequency. (2) 
The data transmission of TDMA is not continuous, but occurs in a burst mode. The result of this is that 
battery drain of the subscriber unit (user) is smaller since it only needs to be transmitting or receiving during 
its own time slot. (3) The handoff process is much simpler for TDMA than FDMA since the subscriber unit 
can listen for other base stations during the slot idle (off) times. (4) The mobile assisted handoff (MAHO) 
can be carried out by a subscriber listening on an idle slot in the TDMA frame. (5) TDMA uses different time 
slots for transmission and reception so duplexers are not required. And if FDD is used, a switch rather than a 
duplexer inside the subscriber unit is sufficient to switch between transmitter and receiver. (6) Unlike 
FDMA, adaptive equalization is normally necessary in TDMA systems, since the transmission rates are 
normally very high when compared to FDMA channels rates. (7) A high level of overhead in synchronization 
bits is needed in TDMA. (8) A major advantage of TDMA is the fact that more than one time slot can be 
allocated to users, so that bandwidth can be supplied on demand as long as the system has capacity 
compatible with the need. 
 
 
9.4.1 The Efficiency of TDMA Systems 
 
The frame efficiency of TDMA is the ratio of the information bits time to the total frame time. If coding is 
employed the time associated with the data transmission determines the information time. Alternatively one 
can determine the time in the channel-transmitted bits. Thus if the number of channel bits per frame is given 
by the product 
 
 
cb
f
cb
N
T R
=
 
(9.4-1) 
 
where Tf is the frame duration in seconds and Rcb is the channel bit rate. The number of overhead channel bits 
per frame is given by [4]  
 
 
OH
ref
ref
tr
preamble
tr
g
ref
g
N
N
B
N B
N B
N
B
=
+
+
+
 
(9.4-2) 
 

 614                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
where Nref is the number of reference bursts per frame, Ntr is the number of traffic bursts per frame, Bref is the 
number of overhead channel bits per channel burst, Bpreamble is the number of channel bits per preamble in 
each slot, and Bg is the number of equivalent channel bits per guard time slot. Using (9.4-1) and (9.4-2) yields 
the overall TDMA frame efficiency 
 
 
1
100%
OH
TDMA
f
cb
N
T R
η
⎛
⎞
=
−
×
⎜
⎟
⎜
⎟
⎝
⎠
 
(9.4-3) 
 
 
9.4.2 The Number of Available Channels in a TDMA System 
 
The number of available TDMA channel slots that can be provided in a TDMA system is found from the 
equation [1]  
 
 
(
)
2
total
guard
slots
ch
m BW
BW
N
BW
⎢
⎥
−
⎢
⎥
=
⎢
⎥
⎣
⎦
 
(9.4-4) 
 
where m is the number of TDMA users supported on each radio channel, BWguard is the guard bandwidth 
needed at each end, BWch is the channel bandwidth in Hz, BWtotal is the total bandwidth in Hz and x
⎢⎥
⎣⎦ is the 
greatest integer less than or equal to x.  
 
Example 3 Consider GSM, which is a TDMA/FDD system that employs a 25-MHz forward link. That link is 
composed of radio channels that have a 200-kHz bandwidth. There are eight speech channels on a single 
radio channel, and the guard band is 50 kHz. Determine the number of users that can be utilized on this 
model of GSM. The solution is given by  
 
(
)
6
3
3
8 25 10
2 50 10
996
200 10
slots
N
⎢
⎥
×
−×
×
⎢
⎥
=
=
×
⎢
⎥
⎣
⎦
 
(9.4-5) 
 
 
Example 4 If a GSM system frame has 8 time slots and contains 6 trail bits, 8.25 guard bits, 26 sync bits, and 
two groups of 58 data bits each, determine the frame efficiency [1]. The solution is given by first determining 
the time slot duration of  
 
 
6
8.25
26
2(58)
156.25 channel bits
slot
NB
=
+
+
+
=
 
(9.4-6) 
 
A frame has therefore  
 
 
8(156.25)
1,250 bits
frame
NB
=
=
 
(9.4-7) 
 
Now the number of overhead bits per frame is given by 
 
 
8(6)
8(8.25)
8(26)
322 channel bits
OH
N
=
+
+
=
 
(9.4-8) 
 
It follows from (9.4-3) that the frame efficiency is given by 
 
 
322
1
74.24%
1250
frame
η
⎛
⎞
=
−
=
⎜
⎟
⎝
⎠
 
(9.4-9) 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           615 
 
 
9.5 SPREAD SPECTRUM MULTIPLE ACCESS 
 
Spread spectrum multiple access (SSMA) is a communication method in which the transmission bandwidth 
is much larger than the minimum bandwidth required to transmit the data rate used in the communication 
link. A pseudonoise (PN) sequence that runs at a rate much greater than the bit rate modulates the carrier to a 
wideband signal that appears noise-like to an unsynchronized receiver. SSMA mitigates against multipath 
effects, but is not bandwidth efficient when only one signal is transmitted, and is almost never operated with 
only one signal. However, it is quite efficient when multiple signals are transmitted over the same bandwidth, 
so that they share the bandwidth. This is accomplished by each user having a unique PN code that has low 
correlation to all other codes in the bandwidth. There are two basic types of SSMA; and the first is 
frequency-hopped multiple access (FHMA) and the second is code division multiple access (CDMA). 
 
 
9.5.1 Frequency-Hopped Multiple Access 
 
Frequency-hopped multiple access (FHMA) is a digital multiple access system in which the carrier 
frequencies of the individual users are hopped in a pseudorandom manner across a wideband channel. Figure 
9.5-1 illustrates an example of FHMA. The hopping codes (hopping frequencies) are designed to have zero 
or minimal occurrences of the same frequencies at the same time (near-zero correlation). The rectangles 
represent the signal bandwidth at the frequency at the vertical center of each rectangle. 
 
t
f
t
f
 
 
Figure 9.5-1 FHMA example with four hopped signals occupying the same bandwidth. 
 
 
In the figure the four signals hop to a different frequency at the end of each hop period. For example 
the black rectangle represents the hop frequency versus time (t) for one FHMA user and the first hop is at the 
highest frequency, the second at the lowest frequency, and the hop pattern continues in this manner. Each 
FHMA user has its own unique hopping pattern. They are hopped in such a way that they don’t occupy the 
same frequency very often or at all. 
 
 
9.5.2 Code Division Multiple Access 
 
Code division multiple access (CDMA) is a modulation scheme that mathematically multiplies the data by a 
PN code that operates at a much greater rate than the data. This causes the spectrum to be spread much more 
than the data would actually require by itself. Each user is assigned a particular PN code that is designed to 
provide low cross-correlation over the code bit time between all the other codes in the band. Thus the 
receiver, in order to obtain its desired signal, correlates its code against all the received codes, and by design 

 616                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
only the selected code associated with that user is demodulated; all the other codes appear as background 
noise to the desired code, which is sometimes called CDMA noise. None of the signals are time 
synchronized. A code search by the receiver of the desired code provides synchronization to the received 
signal that has that code. Figure 9.5-2 illustrates conceptually, in the form of a box layers, how the CDMA 
signals relate to each other. 
 
f
t
Code
Code 1
Code 2
Code 3
Code N-1
Code N
M
f
t
Code
Code 1
Code 2
Code 3
Code N-1
Code N
M
 
 
Figure 9.5-2 CDMA SSMA in which each unique code defines a link that coexists with the other codes operating in the same bandwidth 
and at the same time. 
 
 
In Figure 9.5-2 it can be seen that each code lies in the same frequency spectrum and operates over 
the same time, but is identifiable via its own unique CDMA code. 
 
A problem that CDMA users can observe is the near-far problem. Basically the near-far problem is 
the existence of different received powers from the different transmitters. This can be due to (1) the same 
power level at each transmitter located at various ranges from the receiver, so that the received power is not 
the same; or (2) from a lack of balance in received power at the receiver, from each transmitter. For a cellular 
system this can occur when each user within a cell does not control its transmit power well enough so that, at 
the base station, all the received signal powers are not the same. When the received power is not the same for 
each signal, the capacity of the channel is diminished because the higher powered signals cause more 
interference than necessary.  
In general power control is used to prevent the near-far problem from occurring and to improve the 
capacity. When this power control is put into the system, a closer transmitter will not appear to be any 
stronger than a user farther away from the base station. One particular CDMA cell phone manufacturer 
maintains the power to a couple of tenths of a dB, to maximize the capacity. Power control is implemented at 
the base station by rapidly sampling the radio signal strength indicator levels of each mobile unit within a 
cell. Other users outside the cell (adjacent cells) are not controlled and thus cause some interference to the 
adjacent cells.  
The main features [1] of CDMA are as follows. (1) Either TDD or FDD may be used, and many 
users share the same frequency band at the same time. (2) CDMA, unlike TDMA or FDMA, has a soft 
capacity limit (there is no absolute maximum number of users). The CDMA noise rises linearly with the 
number of power controlled CDMA users. (3) Multipath fading may be reduced due to the fact the signal is 
spread over a large bandwidth. If the channel is spread greater than the coherence bandwidth1 the inherent 
diversity will mitigate the effects of small-scale fading. (4) Commonly the chip rates are very high. Therefore 
                                                          
1 The coherence bandwidth and channel delay spread will be discussed in the next chapter. 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           617 
the chip duration is very short and may be less than the channel delay spread (see footnote 1). Since the 
correlation beyond one chip is normally negligible compared to the on-time correlation, multipath 
components delayed by more than one chip will appear as some minor additional noise. A RAKE2 receiver 
can combine delayed versions of the signal due to multipath to improve receiver performance. (5) Since 
CDMA uses cochannel cells, it can utilize spatial diversity to provide soft handoff. Soft handoff is realized 
by the mobile switching center (MSC), which is able to simultaneously monitor a user from one or more base 
stations. The MSC has the ability to choose the highest quality signal at any time. (6) Since typically most 
CDMA links are not truly orthogonal, some CDMA noise is present that adds to the background noise and 
limits performance. (7) As we have noted earlier the near-far problem is an issue in CDMA and the base 
station received signal power levels must be strictly maintained to yield nearly equal received powers at the 
receiver. 
 
 
9.5.3 Hybrid Techniques for Spread Spectrum Signals 
 
In addition to FHMA and CDMA signals, combinations of these can be advantageous in some applications. 
These hybrid combinations will be discussed in the next section. 
 
 
9.5.3.1 Hybrid FDMA/CDMA or FCDMA 
 
Hybrid frequency division multiple access/code division multiple access (FCDMA) is useful in obtaining a 
wider spread spectrum signal than can normally be obtained by CDMA. Basically a different CDMA signal 
is placed on each FDMA band. There is no hopping in this case. Figure 9.5-3 illustrates both the power 
spectral density of CDMA and FCDMA with four signals present. 
 
Wideband CDMA PSD
f
f
FCDMA PSD with multiple narrowband CDMA signals
Wideband CDMA PSD
f
f
FCDMA PSD with multiple narrowband CDMA signals  
 
Figure 9.5-3 Power spectral density (PSD) of both WCDMA and FCDMA with four signals. 
 
 
Each of the smaller FDMA channels (four in the figure) has lower chip rate CDMA signals on them. 
Since the chipping rate is about 1/4 of the wideband CDMA system its processing gain is about 6 dB less on 
each one. One advantage of this system is the fact that the bandwidth need not be contiguous and flexibility 
is offered in that the chip rate and bandwidth can be tailored to the needs of the user. The power spectral 
density shows only the main spectral response for channelization clarity. In reality these sidebands would be 
filtered so that they have a negligible impact on the adjacent channels. 
 
 
 
 
                                                          
2 The RAKE receiver will be discussed in the next chapter. 

 618                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
9.5.3.2 Hybrid Direct Sequence/Frequency-Hopped Multiple Access 
 
This CDMA approach, direct sequence frequency-hopped multiple access, is abbreviated as DS/FHMA. This 
hybrid approach is based on the idea that the direct sequence signal can be frequency-hopped in a pseudo-
random manner. Figure 9.5-4 illustrates an example of DS/FHMA. 
 
f
DS/FHMA bandwidth
Signal transmission
in this hop channel
Other hop channels 
that may be used
at the same time
f
DS/FHMA bandwidth
Signal transmission
in this hop channel
Other hop channels 
that may be used
at the same time
 
 
Figure 9.5-4 PSD of DS/FHMA showing one active channel and many inactive channels. 
 
 
Multiple DS/FHMA signals can operate at the same time over the same bandwidth as long as they 
are coordinated so that they don’t hop to the same frequency, at the same time, very often. Since these hybrid 
systems operate at different hop frequencies at a given time, the near-far problem is not present, unless 
multiple CDMA signals are placed on the same hop pattern.  
 
On the other hand the DS/FHMA systems have a disadvantage of not easily being able to process a 
soft handoff, since it may be challenging to synchronize the frequency-hopped base station receiver to the 
multiply hopped signals.  
 
 
9.5.3.3 Time Division Code Division Multiple Access 
 
Time division code division multiple access (TDCDMA) is also sometimes called TDMA/CDMA. In 
TDCDMA different spreading codes are assigned to different cells. Inside a cell a user is allocated a 
particular time slot. Hence at any particular time only one CDMA user is transmitting in each cell. In case of 
a handoff, the CDMA code of the user is moved to that of the adjacent new cell in which the user appears. 
Like CDMA DS/FHMA, this scheme does not tend to suffer from the near-far problem since only one user 
transmits at any one given time. A synchronous version of TDCDMA is known as TDSCDMA, which 
denotes time division synchronous code division multiple access, and is the basis for China’s nascent 3G 
cellular standard [5]. All the uplink signals to the base station are synchronized at the base station. 
 
 
9.5.3.4 Time Division Frequency-Hopping 
 
Time division frequency-hopping (TDFH), (also known FH/TDMA) is a multiple access scheme in which 
TDMA and frequency-hopping are combined. The subscriber can hop to a new frequency-hop frequency at 
the start of a new TDMA frame, thereby avoiding a severe fade or an erasure event on a particular frequency. 
The hop sets are selected such that hops within the cell are orthogonal and hops in adjacent cells are random 
[1, 6]. This mode of frequency-hopping is called mixed mode frequency-hopping. This scheme (TDFH) is 
very advantageous to GSM in that it can increase the capacity in fading by a factor of several times [7].  
 
 
 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           619 
9.6 SPACE DIVISION MULTIPLE ACCESS 
 
 
Space division multiple access [1] (SDMA) is a multiple access technique that controls the radiated antenna 
energy for each user in the area of communications. The use of spot beams facilitates the realization of 
SDMA. This approach utilizes another multiple access method. For example the different areas covered by 
antenna beam can also be served by the same frequency in CDMA or TDMA or other frequencies when 
using FDMA. We discussed sectorization earlier. Sectorization may be viewed as a simple version of SDMA. 
Figure 9.6-1 illustrates a simple example of SDMA. 
 
Usually the reverse link is the most difficult to design for several reasons. The base station controls 
the power of all the transmitted signals on the forward link. But the path loss from each user to base station 
link, the powers from each mobile unit, must be dynamically controlled in order to prevent one user from 
“generating” too much interference when its signal is stronger than necessary. When the base station can 
utilize spot beams, less mobile power is needed, and the system is more efficient. SDMA is potential future 
multiple access technique that is just now being explored to make the system more efficient.  
 
 
 
Figure 9.6-1 A base station antenna serving different users by the use of spot beams. 
 
 
9.7 THE CAPACITY OF CELLULAR CDMA OF A SINGLE CELL 
Equation Section (Next)  
The capacity of a CDMA system [15, 16] is interference limited by the CDMA noise that comes from the 
collection of other signals occupying the same signal spectrum. One mode of CDMA operation is to operate 
in the discontinuous transmission mode (DTX) in which the transmitter is turned off when there are periods 
of silence in speech. The observed duty cycle (α ) has been estimated at between 35% and 50% [17] for 
voice. The average capacity of a CDMA system can be increased roughly by 1/α . 
 
We consider a single cell system for continuous CDMA in a cell using BPSK modulation. The 
scenario is as follows. The cellular network is composed of a number of mobile stations communicating with 
the base station. It will be assumed that all the signals on the reverse channel are received at the same power 
level at the base station. Assume that there are N users in the cell system. Each base station processes a 
composite received waveform consisting of the desired signal and N–1 interfering signals that also have 
power P.  
Consider the CDMA correlator model illustrated in Figure 9.7-1. Degradation to the C/N0 ratio of 
signal 1 (the signal being received) due to the interference by the other CDMA signals is modeled as 
Gaussian noise, with the same spectral shape as the CDMA signals.  
Figure 9.7-1 illustrates the coherent degradation signal correlation model and the interference and 
thermal noise. The input BPSK signal is modeled as the signal being correlated, which is signal 1, plus 
thermal noise, plus interference of the other CDMA signals. 
 

 620                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
Correlator
0
1
( )
T
dt
T ∫
y(t)
LPF
BPF
(BW=B)
(H(f))
0
1
( )
T
dt
T ∫
y(t)
LPF
0
1
( )
T
dt
T ∫
0
1
( )
T
dt
T ∫
y(t)
LPF
0
1
( )
T
dt
T ∫
0
1
( )
T
dt
T ∫
LPF
x0(T)
( )
ie t
1
1
1
0
0
0
( )
2
( )
( )cos(
)
2
( )cos(
)
2
( )sin(
)
c
s
y t
P d t PN t
t
n t
t
n t
t
ω
ω
ω
=
+
+
1
0
2
( )cos(
)
PN t
t
ω
0
0
0
( )
( )
( )
x T
e T
n T
=
+
Correlator
0
1
( )
T
dt
T ∫
0
1
( )
T
dt
T ∫
y(t)
LPF
BPF
(BW=B)
(H(f))
0
1
( )
T
dt
T ∫
0
1
( )
T
dt
T ∫
y(t)
LPF
0
1
( )
T
dt
T ∫
0
1
( )
T
dt
T ∫
y(t)
LPF
0
1
( )
T
dt
T ∫
0
1
( )
T
dt
T ∫
LPF
x0(T)
( )
ie t
1
1
1
0
0
0
( )
2
( )
( )cos(
)
2
( )cos(
)
2
( )sin(
)
c
s
y t
P d t PN t
t
n t
t
n t
t
ω
ω
ω
=
+
+
1
0
2
( )cos(
)
PN t
t
ω
0
0
0
( )
( )
( )
x T
e T
n T
=
+
 
 
Figure 9.7-1 Model for the evaluation of the capacity of a CDMA link using BPSK. 
 
 
The received BPSK signal plus interference and thermal noise is modeled as 
 
 
(
)
(
)
(
)
1
1
1
0
0
0
( )
2
( )
( )cos
2
( )cos
2
( )sin
c
s
y t
P d t PN t
t
n t
t
n t
t
ω
ω
ω
=
+
+
 
(9.7-1) 
 
and P1 is the power of the received signal being tracked, d1(t) is the baseband data signal, and PN1(t) is the 
spread spectrum code used in signal 1. Also the thermal noise plus the jamming or interference signals are 
modeled with the last two terms in (9.7-1) as a Gaussian random process that can be decomposed as the sum 
of the thermal noise and the interfering signals.  
 
After demodulating the signal with the coherent reference signal, the input to the averaging 
integrator, out of the low-pass filter (removes the double frequency term) is given by 
 
 
1
( )
( )
( )
( )
i
c
e t
Pd t
PN t n t
=
+
s  
(9.7-2) 
 
At the output of the despread and averaged integration (correlator), one obtains the correlated signal plus 
noise 
 
 
2
1
0
1
( )
( )
( )
( )
( )
T
o
BB
PN
c
x T
P
H
f S
f df
n t PN t dt
T
∞
−∞
=
+
∫
∫
 
(9.7-3) 
 
where the correlated signal component [18] depends on the baseband equivalent low-pass filter HBB(f) of the 
bandpass filter at the input of the correlator system, with RF transfer function H(f) and bandwidth B Hz. The 
output can be separated into the signal term and the noise term as suggested by (9.7-3) 
 
 
0
0
0
( )
( )
( )
x T
s T
n T
=
+
 
(9.7-4) 
 
The variance of the noise term is given by 
 
 
1
1
2
0 0
1
(
( ))
( )
( )
( )
( )
T T
o
c
c
Var n T
E
n t n u PN t PN u dtdu
T
⎧
⎫
⎪
⎪
=
⎨
⎬
⎪
⎪
⎩
⎭
∫∫
 
(9.7-5) 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           621 
 
Modeling the unit power PN1(t) code3 as a stationary random process independent of the signal 
process and the thermal noise process (9.7-5) yields 
 
 
1
'
2
0 0
1
Var(
( ))
(
)
(
)
c
T T
o
n
PN
n T
R
t
u R
t
u dtdu
T
=
−
−
∫∫
 
(9.7-6) 
 
where 
1
'
( )
PN
R
τ  is the unit power autocorrelation function of the PN1(t) code process. This can be expressed as 
a single integration [19] with a change of variables to the form 
 
 
1
'
0
2
1
Var(
( ))
( )
( )
c
T
n
PN
T
n T
R
R
T
d
T
τ
τ
τ
τ
−
⎡
⎤
=
−
⎣
⎦
∫
 
(9.7-7) 
 
With the assumption that the two processes are wideband relative to 1/T, (9.7-7) can be well 
approximated by 
 
 
1
'
0
1
Var(
( ))
( )
( )
c
T
n
PN
T
n T
R
R
d
T
τ
τ
τ
−
=
∫
s  
(9.7-8) 
 
Approximating the integral with finite T second limits with an integral with unbounded limits, and 
using Parseval’s theorem for real functions [20], leads to the spectral form4 
 
 
1
'
0
1
Var(
( ))
( )
( )
cn
PN
n T
S
f S
f df
T
∞
−∞
=
∫
 
(9.7-9) 
 
where 
( )
cn
S
f  is the sum of white Gaussian (thermal) noise (WGN) and the interfering or jamming of 
signals, which are modeled as Gaussian random processes, and 
1
'
( )
PN
S
f  is the unit psd5 of the despreading 
signal. Note that due to the front-end filter, the noise process spectral density 
( )
cn
S
f  may have filtering on 
it. Consequently the limits of the integral may be finite for ideal filters.  
Now consider the case that the other signals act as interference to signal 1. We can write the noise 
spectral density as the sum of thermal noise and interfering noise so that 
 
 
( )
( )
( )
cn
n
I
S
f
S
f
S
f
=
+
 
(9.7-10) 
 
where Sn(f) is the two-sided noise spectral density and 
( )
IS
f is the filtered, two-sided interference spectral 
density. Accounting for the band-limiting due to the front-end bandpass filter, one has 
 
    
 
1
1
2
2
'
'
0
0
1
Var(
( ))
( )
( )
( )
( )
( )
2
BB
PN
BB
I
PN
N
n T
H
f
S
f df
H
f
S
f S
f df
T
T
∞
∞
−∞
−∞
=
+
∫
∫
 
(9.7-11) 
 
where SI(f) is the interference spectral density, prior to being filtered by the baseband equivalent bandpass 
filter HBB(f). 
Note that the equivalent noise spectral density is obtained from (9.7-11) as 
                                                          
3 We have used the notation 
1
'
( )
PN
S
f  as the unit power, power spectral density of PN1(t) process. 
4 This finite versus infinite time limit is justified if the correlation function becomes essentially zero in a time small compared to T  
   seconds. 
5 All code spectral densities denoted by the form SPN(f) will be assumed to have unit power in this section. 

 622                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
'
0
0
2
(
( ))
N
TVar n T
=
 
(9.7-12) 
 
This can be written explicitly in terms of the code and interference spectral densities as 
 
 
1
1
2
2
'
'
'
0
0
( )
( )
2
( )
( )
( )
BB
PN
BB
I
PN
N
N
H
f
S
f df
H
f
S
f S
f df
∞
∞
−∞
−∞
=
+
∫
∫
 
(9.7-13) 
 
Noting that the baseband equivalent interference process 
( )
IS
f  contains I/2 watts of interference 
power, (9.7-13) can be written as  
 
 
1
1
2
2
'
'
'
'
0
0
( )
( )
( )
( )
( )
BB
PN
BB
I
PN
N
N
H
f
S
f df
I
H
f
S
f S
f df
∞
∞
−∞
−∞
=
+
∫
∫
 
(9.7-14) 
 
where 
' ( )
IS
f  denotes the unit power, unfiltered, power spectral density (psd) of the interference, and is 
related to the nonunit power spectral density by 
 
 
'
2
( )
( )
I
I
S
f
S
f
I
=
 
(9.7-15) 
 
The effective noise spectral density can be written, from (9.7-14), as  
 
 
1
1
2
2
'
'
'
'
0
0
( )
( )
(
1)
( )
( )
( )
BB
PN
BB
I
PN
N
N
H
f
S
f df
N
P
H
f
S
f S
f df
∞
∞
−∞
−∞
=
+
−
∫
∫
 
(9.7-16) 
 
since there are N–1 interferers and one desired signal, for a total of N signals. This can be simplified to the  
form 
 
 
'
0
0
0
(
1)
N
N
N
PI
ν
=
+
−
 
(9.7-17) 
 
where  
 
 
1
2
'
'
0
( )
( )
( )
BB
I
PN
I
H
f
S
f S
f df
∞
−∞
= ∫
 
(9.7-18) 
 
I0 is known as the spectral separation coefficient (SSC). It is a measure of how much spectral overlap occurs 
in the received and dispreading spectral densities. The greater the value of I0, the fewer signals that can exist 
on the CDMA channel. Now 
 
 
1
2
'
( )
( )
1
BB
PN
H
f
S
f df
ν
∞
−∞
=
≤
∫
 
(9.7-19) 
 
Often times ν  is very close to the value of one; under these conditions (9.7-17) can be well approximated as 
 
 
'
0
0
0
(
1)
N
N
N
PI
=
+
−
 
(9.7-20) 
 
We have not accounted for the activity factor, α . This factor accounts for the fraction of time that the 
interference is on. When it is included into the effective noise we have  

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           623 
 
'
0
0
0
(
1)
N
N
N
PI
ν
α
=
+
−
 
(9.7-21) 
 
 
Now we are in a position to determine the CDMA capacity. Using (9.7-21) to form the effective 
noise, we have, following Raghavan and Holmes [21, 22] 
 
 
'
'
0
0
0
0
.
(
1)
b
b
b
reqd
E
PT
E
N
N
N
PI
N
ν
α
⎛
⎞
=
≥⎜
⎟
+
−
⎝
⎠
 
(9.7-22) 
 
with P the received signal power and the power of the other N–1 CDMA users in the same bandwidth. 
Dividing the second ratio of (9.7-22) by N0, produces the result  
 
 
0
.
'
0
0
.
0
(
1)
b
avail
b
reqd
PT
N
E
PI
N
N
N
α
ν
⎛
⎞
⎜
⎟
⎛
⎞
⎝
⎠
≥⎜
⎟
⎝
⎠
+
−
 
(9.7-23) 
 
Solving for the allowable N produces our main result 
 
 
1
0
.
0
0
'
0
.
1
1
b
avail
b
reqd
PT
N
PI
N
N
PT
N
ν
α
−
⎡
⎤
⎛
⎞
⎢
⎥
⎜
⎟
⎛
⎞
⎝
⎠
⎢
⎥
≤+
−
⎜
⎟
⎢
⎥
⎛
⎞
⎝
⎠
⎢
⎥
⎜
⎟
⎢
⎥
⎝
⎠
⎣
⎦
 
(9.7-24) 
 
It is to be noted that the available SNR must be greater than the required SNR or it is not possible to 
have more than one user total. In general the greater the available SNR is over the required SNR the more 
users one can operate simultaneously. From (9.7-24) it is to clear that if ν  was approximately one and the 
available and required SNRs were equal, then N is bounded by one. In fact the system would achieve one, 
since there would be no interference from the other (zero number) CDMA signals. Another observation is 
that N decreases as the spectral separation coefficient (or interference (I0)) increases.  
It should also be noted that it is assumed that the signals received at the base station are not time 
synchronized, so that they are asynchronous in time, in the correlator. If sectorization is employed with three 
sectors, then the capacity is approximately multiplied by 3. Although we will not address the capacity of 
multicell CDMA here, the effective noise (accounting for the other signal interference) will increase 
compared to the single cell case and the capacity will correspondingly reduce.  
 
Example 5 Assume that a CDMA system has the following parameters: NRZ BPSK PN code CDMA 
signals, a data rate of 500 bps, a required SNR of 9.6 dB, an available SNR of 12.6 dB, a chip rate of 100 
Kcps, and a front-end ideal bandpass filter that has a bandwidth of 400 kHz, centered at the carrier frequency. 
Assume no sectorization is used. Assume that the voice duty factor, α , is 0.4. Determine (1) the spectral 
separation coefficient, (2) the value of ν , and finally (3) the allowable number N of users. First we compute 
the value of ν  and I0. Observe that all the spectral densities are the same for the signal and the CDMA 
interference. We have 
 
 
6
6
2 10
2
2
2 10
sin (
)
0.95
(
)
c
c
c
fT
T
df
fT
π
ν
π
×
−×
=
=
∫
 
and  

 624                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
6
6
2
0.2 10
2
6
0
2
0.2 10
sin(
)
6.664 10
(
)
c
c
c
fT
I
T
df
fT
π
π
×
−
−
×
⎡
⎤
=
=
×
⎢
⎥
⎣
⎦
∫
 
 
Find P/N0 from the relationship 
1.26
0
/
10
(50)
909.8
P N =
=
. Letting SNRA be the available SNR and SNRR 
be the required SNR yields SNRA = 18.2 and SNRR = 9.12 absolute numbers (not dB). Using (9.7-24) 
produces the result 
44.1
N ≤
, so that N = 44 users can operate on this channel with BPSK using CDMA with 
a voice activity factor of 0.4, in theory. In reality other losses will occur and the actual number will be less.  
 
 
9.8 PACKET RADIO ACCESS TECHNIQUES 
Equation Section (Next) 
Packet radio access techniques are based upon many subscribers attempting to access a single channel in a 
partially coordinated or uncoordinated manner. The information is transmitted in bursts. Collisions occur 
when two or more packets overlap in time on the same channel. Either an ACK, acknowledging correct 
reception at the base station, is sent to all users, or a NACK is sent (from the base station) to the desired user 
and all other users alerting them of the fact that the previous packet was not received correctly at the base 
station.  
 
Packet radio is relatively easy to implement but it is not very efficient and there may be significant 
delays in receiving the desired message. The first computer system to employ radio instead of point-to-point 
wires for its communication facility was the ALOHA system at the University of Hawaii in 1971 [23].  
 
Packet radio allows numerous users to utilize the channel with basically no overhead. The user 
transmits his data then the user must wait to listen to see if he received an ACK or a NACK. If the user 
receives a NACK he must send his data again. If he instead receives an ACK then he can assume that the 
message was sent. This procedure is an example of contention. That is, all users are contending for the use of 
the channel.  
 
 
9.8.1 ALOHA Channel 
 
The contention of the usage of the channel can be evaluated by use of the throughput (R) in terms of 
messages per second and the delay (D) in seconds experienced by a typical user.  
 
In order to analyze the throughput performance it is necessary to determine the vulnerable period 
(VP) for the packets [24]. Figure 9.8-1 illustrates an example of a vulnerable period for packets. If any packet 
from another source appears within the time denoted by 2TP, a collision will occur and the two affected 
packets will have to be re-sent.  
 
t
Packets
from user 1:
2Tp
Tp
t
Packets
from user 1:
2Tp
Tp
 
 
Figure 9.8-1 Vulnerable period for packet interference in an ALOHA channel. 
 
 
 
We will assume that all packets that are sent by users have a constant packet length and a fixed 
channel data rate, and all the other users generate new packets at random time intervals. As is standard in this 
type of analysis, it will be assumed that the packets occur with a Poisson distribution, having a mean arrival 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           625 
rate of λ  packets per second. If τ  is the packet duration in seconds, then the throughput S of a packet radio 
network is given by the relationship [1, 24] 
 
 
 Erlangs
S
λτ
=
 
(9.8-1) 
 
The normalized throughput is also known as the traffic intensity. An Erlang is a measure of traffic volume in 
one hour in a telecommunication system.  
 
Example 6 Consider an example of how to compute an Erlang. Assume there are 60 calls in one hour, each 
call lasting 5 minutes. The number of minutes of traffic in one hour is the number of calls × call duration. 
The minutes of traffic in the hour is 60 × 5 = 300. The corresponding equivalent hours of traffic in one hour 
is given by 300/60 = 5. Thus the traffic intensity is 5 Erlangs. 
 
 
The channel traffic G is the sum of the new packets and the retransmitted packets (that were 
involved in collisions in the previous transmission). Thus we have  
 
 
'
G
λτ
=
 
(9.8-2) 
 
where 
 
 
'
.
retrans
λ
λ
λ
=
+
 
(9.8-3) 
 
is the sum of the new packet rate ( ) and the retransmission rate (
.
retrans
λ
). It follows that  
 
 
'λ
λ
≥
 
(9.8-4) 
 
If R is the channel data rate in bits per second, then the normalized throughput, s, is given by 
 
 
s
R
λτ
=
 
(9.8-5) 
 
and the normalized channel traffic, g, is defined by 
 
 
'
g
R
λ τ
=
 
(9.8-6) 
 
If s > 1 the users are generating packets at a rate greater than the channel can handle [24]. Therefore 
it would be expected that 0
1
s
<
<  in normal operations.  
For a Poisson arrival process, for statistically independent users, the probability of having exactly K 
new packets arrive over a time interval of τ  seconds is given by 
 
 
(
)
(
)
!
K e
P K
K
λτ
λτ
−
=
 
(9.8-7) 
 
We noted that the vulnerable period was 2τ  seconds. A packet from a user will be successful if new 
packets are transmitted during the 2τ  seconds from the right side of the packet as seen in Figure 9.8-1. Thus 
we may evaluate (9.8-7) at K = 0 for 2τ  seconds to obtain the probability 
 
 
'
'
0
2
2
( '2 )
(
0)
0!
succ
e
P
P K
e
λτ
λτ
λ
τ
−
−
=
=
=
=
 
(9.8-8) 

 626                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
Note that 
'
λ  was used in the expression and not λ  since all the transmissions (that is, the new and 
the retransmissions) must be included. This result does not fully describe the utilization of the ALOHA 
channel.  
Rosner [24] has shown that this probability is also given by  
 
 
 
'
succ
channel throughput
P
channel traffic
λ
λ
=
=
 
(9.8-9) 
 
 
Now since both measures of probability of success for the same channel must be the same, we can 
equate them to yield 
 
 
2 '
'
e
λ τ
λ
λ
−
=
 
(9.8-10) 
 
or solving for λ  
 
 
2 '
'e
λ τ
λ
λ
−
=
 
(9.8-11) 
 
Now multiplying both sides by τ  produces the result 
 
 
2 '
' e
λ τ
λτ
λ τ
−
=
 
(9.8-12) 
 
Using the definitions of S and G produces 
 
 
2G
S
Ge−
=
 
(9.8-13) 
 
This expression relates the useful delivered throughput of the ALOHA channel, S, to the total traffic flowing 
on the channel, G. Figure 9.8-2 illustrates the relationship. 
 
Example 7 Let us determine what value of G that S is maximized for. Let 
2
( )
G
f G
Ge−
=
. The first derivative 
yields 
2
2
'( )
( 2)
0
G
G
f
G
e
G
e
−
−
=
+
−
=
. The only finite value of G that satisfies this equation is G0 = 1/2. 
 
 
It can be seen from the figure that only about 18.4% throughput (maximum value) can be achieved with the 
ALOHA channel. Another issue that we have not covered here is the ALOHA delay characteristics. When 
the delay is plotted against the throughput, it can be shown that when the throughput reaches the peak value 
of 18.4% the delay becomes unbounded [24]. 
 
 
9.8.2 The Slotted ALOHA Channel 
 
Although ALOHA is a marvel in itself, it is limited to about 18% throughput as was seen in the last section. 
By establishing a slotted channel (slotted ALOHA), which is a channel with discrete time slots in which 
users may transmit their packets, it is possible to greatly reduce the vulnerable period. This transmission 
protocol requires that the user wait until the beginning of the time slot to transmit the packet. Hence with this 
protocol there is either no packet overlap or a complete overlap. Packets in this approach are not destroyed 
just because a few bits have packet overlap; in other words, only complete overlap occurs and never partial 
overlap. Figure 9.8-3 illustrates the case in which all slots have no collisions, except for the time between    
and   . 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           627 
0
0.5
1
1.5
2
2.5
3
3.5
4
0
0.04
0.08
0.12
0.16
0.2
0.24
0.28
0.32
0.36
0.4
G (total traffic)
R (throughput) 
ALOHA
Slotted ALOHA
0
0.5
1
1.5
2
2.5
3
3.5
4
0
0.04
0.08
0.12
0.16
0.2
0.24
0.28
0.32
0.36
0.4
G (total traffic)
R (throughput) 
ALOHA
Slotted ALOHA
 
 
Figure 9.8-2 The relationship of the throughput versus the total traffic for the ALOHA and the slotted ALOHA channels. 
 
 
 
The slotted ALOHA channel protocol has two disadvantages. The first is the timing impact on the 
terminal design, as well as the need to allow for slight time differences from the user to the base station. Each 
terminal must be able to determine range or distance between the user and the base station and to account for 
this by adjusting the user time accordingly. The second disadvantage is the fact that the packet duration   is 
fixed for all packets no matter if they are of less duration or not. Thus short packets will “consume” one full 
packet slot but may be much shorter in duration, thereby wasting time that would not be wasted in the 
original ALOHA channel protocol.  
 
User 1
User 2
User 3
User 4
User 5
0           τ           2τ          3τ          4τ           5τ          6τ 
7τ
t
Collision between 4τ and 5τ
User 1
User 2
User 3
User 4
User 5
0           τ           2τ          3τ          4τ           5τ          6τ 
7τ
t
Collision between 4τ and 5τ
 
 
Figure 9.8-3 Slotted ALOHA channel example with five users showing one collision. 
 
 
 
It will be assumed that every packet has a fixed duration of   seconds. This assumption leads to an 
over bound in the throughput estimate. Assume that  
 
 
probability that user  successfully transmits a packet
probability that user  transmits any packet
       (that is a successful or unsuccessful packet)
i
i
S
i
G
i
=
=
 
(9.8-14) 

 628                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
 
In order that user i transmits a successful packet, he must transmit his packet while no other user 
transmits one. Thus  
 
 
1
1
(1
)
(1
)
1
n
n
i
i
k
i
k
k
k
i
k i
G
S
G
G
G
G
=
=
≠
=
−
=
−
−
∏
∏
 
(9.8-15) 
 
for the case of n users. It will now be assumed that all of the users of the channel are statistically equivalent 
in the sense that they have an equally likely probability of transmitting at any instant of time, then 
 
 
i
i
S
S
n
G
G
n
=
=
 
(9.8-16) 
 
where S is the channel throughput and G is the channel traffic, defined in the same manner as in ALOHA.  
 
The first expression implies that an individual user’s probability of a successful packet, Si, is 1/ n-th 
of the total normalized throughput of the channel. In a similar manner his probability of making a 
transmission is just 1/n-th of the total traffic transmitted on the channel. From (9.8-15) and using (9.8-16) 
produces the relationship 
 
 
1
1
1
1
n
n
k
k i
S
G
G
G
G
n
n
n
n
n
−
=
≠
⎛
⎞
⎛
⎞
=
−
=
−
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
∏
 
(9.8-17) 
 
This can be written, after multiplying both sides by n, as 
 
 
1
1
n
G
S
G
n
−
⎛
⎞
=
−
⎜
⎟
⎝
⎠
 
(9.8-18) 
 
If there are a large number of users, then we may write 
 
 
1
1
n
x
G
x
e
e
n
−
−
−
⎛
⎞
=
−
≅
=
=
⎜
⎟
⎝
⎠
LS
RS
 
(9.8-19) 
 
where LS denotes the left side and RS denotes the right side. Actually this approximation is quite good for 
n
10
≥
, up to x = 10, which can be seen by plotting the left side and right side versus x for n = 10 in Figure 
9.8-4. The dashed line is the LS, and the solid line is the RS. It is seen that the approximation is very good 
for n =10 for x up to 10.  
Using the large n approximation leads to the result 
 
 
G
S
Ge−
≅
 
(9.8-20) 
 
as our final result for the slotted ALOHA channel throughput versus the total traffic and is plotted in Figure 
9.8-2. 
Notice that the slotted ALOHA reaches a peak value of about 37%, which is about twice as large as 
the ALOHA channel. It can be shown [24] that there is a slight additional delay in the time to deliver the 
packet. Overall, slotted ALOHA is an improvement over ALOHA. 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           629 
0
1
2
3
4
5
6
7
8
9
10
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
x
Approximation and the limit
The approximation (LS)
The exponential (RS)
0
1
2
3
4
5
6
7
8
9
10
0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
x
Approximation and the limit
The approximation (LS)
The exponential (RS)
 
 
Figure 9.8-4 The approximation (solid line) and the negative exponential limit (dashed line) of (9.8-19) plotted versus x. 
 
 
9.9 CARRIER SENSE MULTIPLE ACCESS PROTOCOLS 
Equation Section (Next) 
The previously discussed ALOHA protocols did not check the channel before transmitting the packet. By 
first “sensing” the channel prior to a packet transmission, greater efficiencies can be obtained in packet 
throughput. Protocols in which the users listen for a carrier (a signal transmission) and act accordingly are 
carrier sense protocols [23]. This section follows Tobagi’s work [25] on carrier sense multiple access 
(CSMA) protocols. It will be assumed that: (1) all packets are the same length; (2) the only errors are due to 
collisions; (3) the random delay, after a collision, is uniformly distributed and large compared to the packet 
transmission time; (4) packet generation attempts (new and retransmitted) form a Poisson process with mean 
G packets per packet time; (5) a user may not transmit and receive simultaneously; (6) each user can sense 
the transmissions of all other users; (7) the propagation delay is small compared to the packet transmission 
time and identical for all users; and (8) sensing the state of the channel can be done instantaneously. We will 
now discuss some of the CSMA protocols.  
 
 
9.9.1 1-Persistent CSMA 
 
In 1-persistent CSMA when a user has data to send, it first listens to the channel to determine if anyone else 
is transmitting. If the channel is busy, the station waits until the channel becomes idle (not being used). When 
the user detects an idle channel, it transmits a packet. If a collision occurs, the user waits a random amount of 
time and starts all over again. The reason the protocol is called 1-persistent is the fact that the station 
transmits with a probability of 1 whenever it finds the channel idle.  
 
The effect of propagation delay is important in this protocol. There is a small chance that just after a 
user begins sending, another user will be ready to send and sense the channel. If the first packet has not 
reached the second user, the latter will sense that the channel is free and will begin sending its packet, 
resulting in a collision.  
 
Without propagation delay there will be collisions. If two users wait while a third user sends its 
packet, they will both begin transmitting at the same time after the third user’s packet has finished. Even 
accounting for this problem we will see that it is considerably better than ALOHA. Finally it should be noted 
that 1-persistent CDMA should not be used in satellite broadcasting [24].  
For zero propagation delay the throughput has been derived by Tobagi [25] and is given by 
 

 630                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
(1
)
G
G
G
G
S
G
e
−
−
+
=
+
 
(9.9-1) 
 
in terms of the total traffic. This result is plotted in Figure 9.9-1. 
 
 
9.9.2 Nonpersistent CSMA 
 
This protocol has a better approach to transmitting a packet than 1-persistent CDMA. Before transmitting a 
packet the user listens for the idle state. If there is no other packet being transmitted, it then transmits its 
packet. If, on the other hand, the channel is “busy” the user does not wait until the idle state is found, but 
rather waits a random period of time and then repeats the algorithm. It would seem that this algorithm will be 
more efficient than the previous one. In the case of zero propagation delays, both the slotted and the unslotted 
versions produce the same throughput result as a function of the total traffic. The result [25] is given by 
 
 
1
G
R
G
= +
 
(9.9-2) 
 
This result is also plotted in Figure 9.9-1.  
 
 
9.9.3 p-Persistent CSMA 
 
This protocol applies to slotted channels and operates as follows. When a user is ready to transmit a packet, it 
senses the channel. If the channel is idle, it transmits with probability p, or waits with probability q = 1–p for 
the next slot. If that slot is also idle, it either transmits the packet with probability p, or waits for the next slot 
with probability q. This process is repeated until either the packet has been transmitted or another user has 
begun transmitting. In the latter case, the user acts as if there has been a collision (that is, it waits a random 
time and starts again). If the user initially sensed the channel is busy, it waits until the next slot and applies 
the previous algorithm.  
 
This is a very complicated algorithm but has been analyzed by Tobagi [25] with the result that the 
throughput is given by 
 
 
(1
)
G
G
Ge
pGX
R
G
e
−
−
+
=
+
 
(9.9-3) 
 
and where X is defined as 
 
 
(
)
1
0
(
)
1
!
k
k
k
qG
X
q
k
∞
+
=
=
−
∑
 
(9.9-4) 
 
This function is plotted in Figure 9.9-1 where all of the protocols are plotted. It can be seen that 0.01 
persistent has the best throughput in the range of 0
9
G
≤
≤
. 
 
There are other protocols that have been devised but we will not consider them here. One of them is 
a distributed queuing request update multiple access (DQRUMA). It is a time slotted protocol.  
 
 
9.9.4 Conceptual Comparison of the Multiple Access Methods 
 
Now consider a tree relating the different types of multiple access schemes. Figure 9.9-2 is based on the work 
of Mori [26]. Most, but not all, of the schemes were discussed in this chapter. 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           631 
 
Basically there are connection-oriented and packet-oriented multiple access methods. Within the 
connection-oriented methods are TDMA, FDMA, and CDMA. Packet-oriented methods are based on 
demand base assignment of slotted and nonslotted channels. 
 
Nonpersistent CSMA
0.1-persistent CSMA
0.5-persistent CSMA
1-persistent CSMA 
0.01 persistent CSMA
Slotted ALOHA
Pure ALOHA
0
1
2
3
4
5
6
7
8
9
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
G (total traffic)
S (throughput) 
Nonpersistent CSMA
0.1-persistent CSMA
0.5-persistent CSMA
1-persistent CSMA 
0.01 persistent CSMA
Slotted ALOHA
Pure ALOHA
0
1
2
3
4
5
6
7
8
9
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
G (total traffic)
S (throughput) 
 
 
Figure 9.9-1 Comparison of the throughput versus the total traffic for some random access protocols discussed in this chapter. 
 
 
These can be broken into two types: contention-based and contention-free (conflict free). Among the 
contention based channel access are (1) random access and (2) scheduled access. 
 
Packet radio multiple access
Static (fixed) assignment
e.g., TDMA, FDMA, CDMA
Connection oriented
Demand-based assignment
Packet oriented
Contention based
Conflict free, e.g.,
polling, token-passing
Random access e.g.
ALOHA, PRMA, CSMA
Scheduled access e.g.
DQRUMA
(slotted and nonslotted)
Packet radio multiple access
Static (fixed) assignment
e.g., TDMA, FDMA, CDMA
Connection oriented
Demand-based assignment
Packet oriented
Contention based
Conflict free, e.g.,
polling, token-passing
Random access e.g.
ALOHA, PRMA, CSMA
Scheduled access e.g.
DQRUMA
(slotted and nonslotted)
 
 
Figure 9.9-2 A comparison of the various multiple access techniques. 
 
 
9.10 MULTIUSER DETECTION CONCEPTS 
Equation Section (Next) 
Multiuser detection is involved in the demodulation of the mutually interfering digital signals that are found 
in areas such as wireless communications, satellite communications, digital television, high speed data 
transmissions, and magnetic recordings. Multiuser detection has been viewed as a very important recent 
advance in communication technology [27]. We will discuss a few of the detection approaches used in 
multiuser detection (MD). As mentioned earlier, one example of MD occurs when a wireless 

 632                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
communications link is transmitting data on the uplink from the user to the base station. Assume that there 
are K uplinks. The job of the base station is to demodulate and decode the desired signal when being 
interfered with by the K–1 interfering signals. There are two possible scenarios, one in which the received 
signals are synchronous and the more general case in which the received signals are asynchronous. In the 
synchronous case there are no differential delays between the received signals. In the asynchronous case 
differential delays exist. We will concentrate on the synchronous case, since that will illustrate the concepts 
without being bogged down with the details of the much more complex asynchronous case. 
 
 
9.10.1 The Matched Filter for CDMA Signals 
 
It will be assumed that the CDMA channel has K simultaneous users. Each user has a signature waveform. 
The signature waveform is a unique waveform that is much wider in bandwidth than the bandwidth needed to 
convey the data information. For CDMA signals the signature function is a pseudonoise (PN) sequence of L 
code chips. A CDMA signature waveform that has a duration of T seconds can be expressed as 
 
 
1
0
( )
( ) (
) ,     0
L
k
k
c
j
sg t
PN
j p t
jT
t
T
−
=
=
−
≤≤
∑
 
(9.10.1-1) 
 
in which the PNk(j) denotes the pseudonoise code sequence chips which are binary valued ( 1
± ) for j = 0, 1, 
2…L–1, and p(t) is a unit pulse rectangular function of duration Tc seconds. Therefore there are L code chips 
per signature function symbol, so that LTc =T. It is assumed that all signature functions, sgk(t) have unit signal 
energy, so that  
 
 
2
0
(
( ))
1
T
k
sg t
=
∫
 
(9.10.1-2) 
 
Thus for the CDMA case the signature functions are just the unique PN functions, one for each CDMA 
channel. 
 
There are two types of sequence periods that may be used in CDMA; one has a short period 
sequence that occurs when the code period is equal to, or less than, one symbol (in this case usually an 
integer multiple of periods will fit in the symbol duration). The other case occurs when the code period is of 
much larger duration than a symbol and is called the long period sequence case. The clear access (C/A) codes 
in the GPS are an example of the short period sequence in which there are 20 code periods per bit period. An 
example of the long period sequences is again found in GPS where the P(Y) codes have periods many times 
the bit period. In the short period sequence case the cross correlations are unique; however, in the case of the 
long period sequences they are not unique (the partial correlations may be small but vary, depending where 
in the sequence the partial correlations are taken). We will assume in what follows that the codes have short 
periods for analytical convenience. 
 
As mentioned earlier we will only consider the synchronous case for short period sequences. The 
asynchronous case can be found in the literature [27, 28]. Define the cross correlations [28] to be given by 
 
 
0
(0)
( )
( )
    and 
1, 2, 3,...
T
ij
i
j
sg t sg t dt
i
j
K
ρ
=
=
∫
 
(9.10.1-3) 
 
 
It is convenient to assume that binary antipodal signals are utilized to communicate information 
from each user. Now let the information sequence of the k-th user be denoted by {
}
( )
kd
n
 in which each data 
bit takes on the value of 1
± . Assume that the data blocks are N bits long (N bit data block). Then the data 
block from the k-th user is given by the N × 1 column vector 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           633 
 
[
]
(1),
(2)...
(
)
k
k
k
k
t
d
d
d
N
=
b
 
(9.10.1-4) 
 
where the superscript “t” denotes the transpose. The complex envelope (real in this case) of the transmitted 
signal is then given by  
 
 
1
( )
( )
(
)
N
k
k
k
k
j
s t
d
j sg t
jT
=
=
−
∑
E
 
(9.10.1-5) 
 
where 
k
E  is the signal energy per bit of the k-th signal. In the synchronous case the complex envelope of the 
composite signal for the K users can be written as 
 
 
1
1
1
( )
( )
( )
(
)
K
K
N
k
k
k
k
k
k
j
s t
sg t
d
j sg
t
jT
=
=
=
=
=
−
∑
∑
∑
E
 
(9.10.1-6) 
 
with the assumption that all the carrier frequencies are the same.  
If the asynchronous case were considered there would be various delayed versions of the signals and 
possible different carrier frequencies for each user. This is the multiuser model for synchronous signals. The 
asynchronous case will not be considered here, but can be found in many references, such as [27–29], to 
mention a few. 
 
In the environment of white Gaussian noise we have that the received signal is  
 
 
( )
( )
( )
r t
s t
n t
=
+
 
(9.10.1-7) 
 
and n(t) represents white Gaussian noise.  
 
 
9.10.1.1 The Optimum Receiver for Synchronous CDMA Signals 
 
The optimum receiver [28] determines the most probable sequence of bits {
}
( ), 1
, 1
kd
n
n
N
k
K
≤
≤
≤
≤
 
given the signal over the time interval 0
.
t
NT
≤≤
 Assuming the synchronous transmission case, only one 
data symbol (or bit if uncoded) is affected by the other K–1 symbols. In the case of white Gaussian noise it is 
sufficient to consider the first complex envelope of the signal symbol interval; that is, consider 
 
 
1
( )
(1)
( )
( ),   0
K
k
k
k
k
r t
d
sg
t
n t
t
T
=
=
+
≤≤
∑E
 
(9.10.1-8) 
 
where n(t) is white Gaussian noise. 
 
The optimum maximum-likelihood receiver formulates the log-likelihood function 
 
 
2
1
0
(
)
( )
(1)
(
)
T
K
K
k
k
k
k
r t
d
sg
t
jT
dt
=
⎡
⎤
Λ
=
−
−
⎢
⎥
⎣
⎦
∑
∫
d
E
 
(9.10.1-9) 
 
and obtains the symbol information sequence {
}
 
(1), 1
kd
k
K
≤
≤
 that minimizes the likelihood function 
(
)
K
Λ d
, where the column vector dK is defined by 
 
 
(
)
1
1
2
2
(1),
(1),...
(1)
t
K
K
K
d
d
d
=
d
E
E
E
 
(9.10.1-10) 
 

 634                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
and again the superscript “t” denotes the vector transpose. Expanding the square in (9.10.1-9) produces 
 
 
2
1
0
0
1
1
0
(
)
( )
2
(1)
( )
          
(1)
(1)
( )
( )
T
T
K
K
k
k
k
k
T
K
K
k
i
k
i
k
i
k
i
r
t dt
d
r t sg dt
d
d
sg t sg t dt
=
=
=
Λ
=
−
+
∑
∫
∫
∑∑
∫
d
E
E E
 
(9.10.1-11) 
 
The first term does not have any information about the choice of the likelihood function so that it may be 
ignored when looking for the optimum selection. Let the integration in the second term be denoted by rk so 
that 
 
 
0
( )
( )
,      1
T
k
k
r
r t sg t dt
k
K
=
≤
≤
∫
 
(9.10.1-12) 
 
 
Furthermore let the last integral of signature functions be denoted as 
 
 
0
(0)
( )
( )
T
ki
k
i
sg t sg t dt
ρ
= ∫
 
(9.10.1-13) 
 
Let the K×1 column vector rK be defined by  
 
 
(
)
1
2
3
, , ,...
K
K
t
r
r
r
r
=
r
 
(9.10.1-14) 
 
With these definitions, (9.10.1-11) can be written in the form of correlation metrics [28] as 
 
 
1
1
1
(
,
)
2
(1)
(1)
(1)
(0)
K
K
K
K
K
k
k
k
k
i
k
i
ki
k
k
i
Cor
d
r
d
d
ρ
=
=
=
=
−
∑
∑∑
r
d
E
E
E
 
(9.10.1-15) 
 
The optimum detector chooses the largest value6 of Cor(rK,dK) over dK. An alternate method of describing 
this correlation is writing it as an inner product of the form [27]  
 
 
(
)
(
)
(
,
)
2
t
t
K
K
K
K
K
c
K
Cor
-
=
r
d
d
r
d
R d  
(9.10.1-16) 
 
in which Rc is the K by K correlation matrix, having elements 
(0)
ki
ρ
. Figure 9.10-1 illustrates the optimum 
multiuser (MU) receiver for synchronous transmission. 
 
With the knowledge of all the signal energies, there are 2K choices of the bits (or symbols) in the 
sequence of K users. The function of the optimum detector is to compute the correlation metrics of each 
sequence from (9.10.1-16) and choose the sequence that produces the largest correlation metric from the 2K 
possible transmitted information sequences.  
 
We have only discussed the synchronous case here. It is much simpler and applies to very restricted 
links. The asynchronous case is treated elsewhere [27, 28] and will not be considered here. Complexity is a 
major issue in obtaining the solution to the correlation metrics and is O(2K/K) per bit [27]. The time 
complexity per bit of f(K) is written as O(g(K)) if there exists a constant C > 0 such that for large enough K, 
f(K) ≤ Cg(K). Due to this complexity issue of the optimum detector, less complex and suboptimal schemes 
are desirable. 
                                                          
6 Note we desire the minimum of (9.10.1-11) or alternatively the maximum of (9.10.1-15), since the algebraic signs have changed. 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           635 
 
1( )
sg t
0
(.)
T
dt
∫
1r
2( )
sg t
0
(.)
T
dt
∫
2r
2( )
sg t
0
(.)
T
dt
∫
Kr
Generate the 
metrics                 
and find the signal
that has the largest
correlation metric
(
,
)
K
K
Cor r
b
Output bit
sequence
M
M
1( )
sg t
0
(.)
T
dt
∫
1r
2( )
sg t
0
(.)
T
dt
∫
2r
2( )
sg t
0
(.)
T
dt
∫
Kr
2( )
sg t
0
(.)
T
dt
∫
Kr
Generate the 
metrics                 
and find the signal
that has the largest
correlation metric
(
,
)
K
K
Cor r
b
Output bit
sequence
M
M
 
 
Figure 9.10-1 Optimum multiuser receiver for the case of synchronous transmission. 
 
 
9.10.2 Conventional Single User Detector in the Synchronous Case 
Equation Section (Next) 
Now that we have presented the optimum detector we shall consider some suboptimum detectors. 
Conventional receivers have been discussed previously. This is the simplest suboptimum receiver structure 
that one can consider. The receiver correlates (or uses a matched filter) with the signature waveform against 
the received signal. The decision is made based on the highest correlation with the desired local signature 
waveform. Figure 9.10-2 illustrates the receiver model for the k-th user. The user simply correlates his 
signature waveform against the received signals and noise and tracks the carrier that is used to demodulate 
the data. We are assuming in this analysis that the signals are synchronous. 
 
Consider the first bit in time period 0
t
T
≤≤
. The output of the correlator shown in Figure9.10-2 is 
given by 
 
 
0
( )
( )
T
k
k
r
r t sg t dt
= ∫
 
(9.10.2-1) 
 
( )
k
sg t
0
(.)
T
dt
∫
kr
r(t)
Demodulator
( )
k
sg t
0
(.)
T
dt
∫
kr
r(t)
Demodulator
 
 
Figure 9.10-2 Conventional single user detector of the signature waveforms. 
 
 
This can be expanded into a simpler form, using (9.10.1-6) for the first bit duration 
 
 
1
(1)
(1)
(0)
(1)
K
k
k
n
n
nk
k
n
n k
k
d
d
n
r
ρ
=
≠
+
+
=
∑
E
E
 
(9.10.2-2) 
 

 636                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
in which 
k
E  is the energy of the kth signal, dk(1) is the data value of the k-th waveforms first data symbol in 
the N bit block. In this expression the noise is given by 
 
 
0
(1)
( )
( )
T
k
k
n
n t sg t dt
= ∫
 
(9.10.2-3) 
 
Clearly the mean value is zero. The variance is given by 
 
 
{
}
{
}
2
0 0
(1)
( ) ( )
( )
( )
T T
k
k
k
E n
E n t n s sg t sg
s dtds
= ∫∫
 
(9.10.2-4) 
 
This can be evaluated as 
 
 
{
}
2
2
0
0
0
(1)
(
/ 2)
( )
2
T
k
k
N
E n
N
sg
t dt
=
=
∫
 
(9.10.2-5) 
 
We can write the K×1 column vector of nk(1) values as 
 
 
[
]  
1
2
(1),
(1),...
(1)
t
K
K
n
n
n
=
n
 
(9.10.2-6) 
 
So far we have not addressed the middle term in (9.10.1-2) which contains K–1 terms. If the value 
of  nk(0) were zero then only noise would be affecting the decision, and the receiver would be optimum. 
However it is not possible to generate orthogonal codes, and thus the middle term is always present and is 
nonzero in general. In particular if one or more signals that are not the k-th signal are much stronger than the 
others, its interference will be significant. This has been discussed earlier as the near-far problem. We will 
not address the perhaps more important problem of the asynchronous case. However this topic is addressed 
in Verdu [27] and Proakis [28] and other texts. The goal in this chapter is to provide only an introduction to 
the techniques of multiuser detection.  
 
 
9.10.3 Decorrelating Detector  
Equation Section (Next) 
There are numerous suboptimum detectors for the CDMA link we have been studying. The first example was 
the conventional single-user detector discussed in the last section. The conventional detector has problems in 
performance when the near-far problem exists. Another type of detector is called the decorrelating detector. 
Again we will consider the simpler case of synchronous symbol transmission. Let the received signal vector 
rK represent the K matched filter outputs so that the K×1 vector rK is given by 
 
 
K
c
K
K
=
+
r
R d
n  
(9.10.3-1) 
 
where dK is a K×1 vector given by (9.10.1-10), Rc is given by the K × K correlation matrix, having elements 
(0)
ki
ρ
, and nK represents the white Gaussian noise out of the correlators and is given by (9.10.2-6). The 
noise vector has a K×K covariance given by 
 
 
(
)
0
2
t
K
K
c
N
E
=
n n
R  
(9.10.3-2) 
 
since the (j,k)-th term is of the form  

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           637 
 
0
0 0
(1)
(1)
( )
( ) ( )
( )
(0)
2
T T
j
k
j
k
jk
N
E n
n
E
n t sg t n u sg u dtdu
ρ
⎡
⎤=
=
⎣
⎦
∫∫
 
(9.10.3-3) 
 
Thus (9.10.3-3) follows. The thermal noise is modeled a Gaussian random process and rK is described by a K 
dimensional Gaussian probability density function of the form [28]  
 
 
(
)
1
0
0
1
1
(
)
exp
(
)
(
)
det(
)
t
K
K
K
c
K
c
K
c
K
K
c
p
N
N π
−
⎡
⎤
=
−
−
−
⎢
⎥
⎣
⎦
r d
r
R d
R
r
R d
R
 
(9.10.3-4) 
 
The optimum linear estimate of dK is the value of dK that minimizes the likelihood function [28] 
 
 
1
(
)
(
)
(
)
t
K
c
K
c
c
K
−
Λ
=
−
−
d
r
R d
R
r
R d
 
(9.10.3-5) 
 
The value that minimizes the likelihood function is  
 
 
1
opt
K
c
K
−
=
d
R r  
(9.10.3-6) 
 
where R–1 denotes the inverse of the matrix R. The detected symbols, by this process, are obtained by making 
a hard decision on each element of the vector 
opt
K
d
, so that  
 
 
ˆ
(
)
opt
K
K
sgn
d
=
d
 
(9.10.3-7) 
 
Figure 9.10-3 illustrates the receiver of the decorrelating receiver. 
 
sg1(t)
0
(.)
t
du
∫
r1
sg2(t)
0
(.)
t
du
∫
r2
sgK(t)
0
(.)
t
du
∫
rK
M
M
M
Form linear
transformation
and 
choose bits
from 
1
opt
K
c
K
−
=
d
R r
ˆ
(
)
opt
K
K
sgn
d
=
d
r(t)
sg1(t)
0
(.)
t
du
∫
sg1(t)
0
(.)
t
du
∫
0
(.)
t
du
∫
r1
sg2(t)
0
(.)
t
du
∫
r2
sg2(t)
0
(.)
t
du
∫
sg2(t)
0
(.)
t
du
∫
0
(.)
t
du
∫
r2
sgK(t)
0
(.)
t
du
∫
0
(.)
t
du
∫
rK
M
M
M
Form linear
transformation
and 
choose bits
from 
1
opt
K
c
K
−
=
d
R r
ˆ
(
)
opt
K
K
sgn
d
=
d
r(t)
 
 
Figure 9.10-3 Decorrelating receiver structure model. 
 
 
 
It should be observed that the best (maximum likelihood) linear estimate given by (9.10.3-6) is not 
the same as the best nonlinear ML sequence detector that finds the best discrete valued ( 1
± ) sequence that 
maximizes the likelihood function [28]. 

 638                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
It is insightful to consider the case that K=2 [28]. First we will form 
opt
K
d
 (9.10.3-6) and then ˆ
K
d  
(9.10.3-7). Consider the 2×2 autocorrelation matrix  
 
 
1   
 1
c
ρ
ρ
⎡
⎤
= ⎢
⎥
⎣
⎦
R
 
(9.10.3-8) 
 
in which    is defined as 
 
 
1
2
0
( )
( )
T
sg t sg t dt
ρ = ∫
 
(9.10.3-9) 
 
The inverse of 
c
R  is obtained when 
1
ρ < , by obtaining the cofactor 
( , )
c
R i j  divided by the determinant of 
the matrix, and the cofactor is signed according to (–1)i + j for the (i,j)-th element. Thus 
(1,1)
c
R
 is 1 since 
when the first column and first row are crossed out that is the remaining term in this 2×2 matrix. The 
determinate is given by 
c
R  = 1–
2
ρ . Thus the inverse is given by  
 
 
1
2
  1   
1
   1
1
c
ρ
ρ
ρ
−
−
⎡
⎤
=
⎢
⎥
−
−
⎣
⎦
R
 
(9.10.3-10) 
 
 
The receiver of Figure 9.10-3 needs to form the correlations of the received signal with sg1(t) and 
sg2(t). The received complex envelope of the signal (from (9.10.1-8)) can be written, for K =2, as 
 
 
1
1
1
2
2
2
( )
(1)
( )
(1)
( )
( )
r t
d
sg t
d
sg t
n t
=
+
+
E
E
 
(9.10.3-11) 
 
so that the projections onto sg1(t) and sg2(t) (the correlator outputs) are given by 
 
 
1
1
2
2
1
2
1
1
2
2
2
(1)
(1)
(1)
(1)
(1)
(1)
d
d
n
d
d
n
ρ
ρ
⎡
⎤
+
+
⎢
⎥
=
⎢
⎥
+
+
⎣
⎦
r
E
E
E
E
 
(9.10.3-12) 
 
in which n1(1) and n2(1) are the noise components out of the two correlators. Hence the best linear estimator 
is obtained from (9.10.3-6) so that evaluating product of the 2×2 matrix and the 2×1 vector leaves a 2×1 
vector. The values are given by 
 
 
(
)
(
)
2
1
1
1
2
1
2
2
2
2
2
1
(1)
(1)
(1) /(1
)
(1)
(1)
(1) /(1
)
opt
K
c
d
n
n
d
n
n
ρ
ρ
ρ
ρ
−
⎡
⎤
+
−
−
⎢
⎥
=
=
⎢
⎥
+
−
−
⎣
⎦
d
R r
E
E
 
(9.10.3-13) 
 
 
Thus we see the transformation has uncoupled the interference between the two signals and 
therefore it is not necessary to be concerned about the near-far problem and it is also not necessary to control 
the signal level very accurately. Hence the detector is called the decorrelating detector since it decorrelates 
the other signals. 
Clearly if the two signature signals are orthogonal there is no cross signal or cross noise (i.e., when 
  = 0). The final decision is made by forming the sign function to the upper and lower components of the 
vector 
opt
K
d
, as indicated in (9.10.3-7). 
An alternative approach in this problem [28] is to consider the modified signature functions  

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           639 
 
'
1
1
2
'
2
2
1
( )
( )
( )
( )
( )
( )
sg t
sg t
sg t
sg t
sg t
sg t
ρ
ρ
=
−
=
−
 
(9.10.3-14) 
 
with the primed signature functions used in the correlation process as shown in Figure 9.10-4. When this 
receiver structure is used it is not necessary to use the matrix transformation. Then let the vector 
'
2r  be 
defined as the 2×1 vector  
 
sg1(t)-ρsg2(t)
0
(.)
t
du
∫
sg2(t)-ρsg1(t)
0
(.)
t
du
∫
r(t)
'
1r
'
2r
'
2
2
ˆ
sgn( )
=
d
r
Form
sg1(t)-ρsg2(t)
0
(.)
t
du
∫
0
(.)
t
du
∫
sg2(t)-ρsg1(t)
0
(.)
t
du
∫
0
(.)
t
du
∫
r(t)
'
1r
'
2r
'
2
2
ˆ
sgn( )
=
d
r
Form
 
 
Figure 9.10-4 Alternate model for decorrelation detection when K = 2. 
 
 
 
'
1
'
2
'
2
r
r
⎡⎤
= ⎢⎥
⎢⎥
⎣⎦
r
 
(9.10.3-15) 
 
Evaluating 
'
2r  after canceling similar terms produces the result 
 
 
2
1
1
1
2
'
2
2
2
2
2
1
(1)(1
)
(1)
(1)
(1)(1
)
(1)
(1)
d
n
n
d
n
n
ρ
ρ
ρ
ρ
⎡
⎤
−
+
−
⎢
⎥
=
⎢
⎥
−
+
−
⎣
⎦
r
E
E
 
(9.10.3-16) 
 
Thus we see that (9.10.3-16) and (9.10.3-13) are identical except for a scale factor that does not affect the bit 
decisions.  
 
 
9.10.4 Minimum Mean Square Error Estimator  
Equation Section (Next) 
In the decorrelating detector we found the best linear maximum-likelihood estimate bK that minimizes the 
quadratic likelihood function indicated in (9.10.3-5). The result found the solution based on a linear 
transformation given by (9.10.3-13) was the solution. Another approach is to search for the linear 
transformation of the outputs of the correlators so as to minimize the mean squared error (MSE). 
The approach is based on seeking the linear transformation 
opt
K
K
= A
d
r  where A is a K×K matrix 
that is to be determined such that the mean square error (MSE) is minimized, and both dopt and rK are K ×1 
vectors. In a similar manner we can define the noise terms 
 
 
[
]
1
2
(1),
(1),...
(1)
,  
1 matrix
K
K
t
n
n
n
K
=
×
n
 
(9.10.4-1) 
 
Also note that the Gaussian noise vectors are of zero mean and have the autocorrelation function that can be 
written as 

 640                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
0
2
K
K
c
t
N
E ⎡
⎤=
⎣
⎦
n n
R  
(9.10.4-2) 
 
and Rc is a K×K matrix with (j, k)-th elements, given by 
 
 
( , )
( )
( )
c
j
k
R
j k
sg t sg t dt
∞
−∞
= ∫
 
(9.10.4-3) 
 
 
Recall that dK is given by  
 
 
(
)
1
1
2
2
(1),
(1),...
(1)
K
K
K
t
d
d
d
=
d
E
E
E
 
(9.10.4-4) 
 
For the synchronous case the minimum mean squared error is given by 
 
 
(
)
) (
)
opt
opt
K
K
K
K
K
t
MSE
E (⎡
⎤
=
−
−
⎣
⎦
d
d
d
d
d
 
(9.10.4-5) 
 
or using dopt =Ar in (9.10.4-5) produces 
 
 
opt
opt
(
)
) (
)
K
K
K
K
K
t
MSE
E (⎡
⎤
=
−
−
⎣
⎦
A
A
d
d
r
d
r
 
(9.10.4-6) 
 
where the expectation is in respect to dK and nK from (9.10.2-6). The optimum value of A can be obtained 
from requiring the error dK–ArK to be orthogonal to the data vector rK, which is the orthogonality principle 
[30] 
 
(
)
t
K
K
K
E
r
⎡
⎤
−
=
⎣
⎦
A
0
d
r
 
(9.10.4-7) 
 
or equivalently 
 
 
t
t
K K
K K
E
E
⎡
⎤
⎡
⎤
−
=
⎣
⎦
⎣
⎦
A
0
d r
r r
 
(9.10.4-8) 
 
Now consider the two terms separately. From (9.10.3-1) we have 
 
 
(
)
t
t
t
K
c
K
K
=
+
R
r
d
n  
(9.10.4-9) 
 
Let matrix A have dimensions (m×p) and matrix B have dimensions (p×n), then the reversal law of 
transposed products [31] applies; that is,  
 
 
(
)t
t
t
=
AB
B A  
(9.10.4-10) 
 
and this matrix is of dimensions (n×m). First consider the first term of (9.10.4-8). From (9.10.4-9) and 
(9.10.4-8) we have 
 
 
(
)
(
)
t
t
t
K K
K
c
K
K
E
E ⎡
⎤
⎡
⎤=
+
⎣
⎦
⎣
⎦
R
d r
d
d
n
 
(9.10.4-11) 
 
which can be written evaluated as 
 
 
(
)
t
t
t
t
K K
K
c
K
K
K
c
E
E
E
⎡
⎤
⎡
⎤
⎡
⎤
=
=
⎣
⎦
⎣
⎦
⎣
⎦
R
R
d r
d
d
d d
 
(9.10.4-12) 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           641 
Denote the expectation of the K×K matrix as D we have 
 
 
t
K
K
E ⎡
⎤=
⎣
⎦
D
d d
 
(9.10.4-13) 
 
so that (9.10.4-12) can be written as 
 
 
t
t
K K
c
E ⎡
⎤=
⎣
⎦
DR
d r
 
(9.10.4-14) 
 
From (9.10.3-1) the second term in (9.10.4-8) can be written as 
 
 
(
)(
)
t
t
K K
c
K
K
c
K
K
E
E ⎡
⎤
⎡
⎤=
+
+
⎣
⎦
⎣
⎦
R
R
r r
d
n
d
n
 
(9.10.4-15) 
 
Assuming that the data and the noise are statistically independent, we obtain 
 
 
(
)(
)
(
)(
)
t
t
t
K K
c
K
c
K
K
K
E
E
E
⎡
⎤
⎡
⎤
⎡
⎤=
+
⎣
⎦
⎣
⎦
⎣
⎦
R
R
r r
d
d
n
n
 
(9.10.4-16) 
 
or using the reversal law of transposed products, we have 
 
             
(
)(
)
0
2
t
t
t
t
t
K K
c
K
K
c
K
K
c
c
c
N
E
E
E ⎡
⎤
⎡
⎤
⎡
⎤
=
+
=
+
⎣
⎦
⎣
⎦
⎣
⎦
R
R
R DR
R
r r
d d
n
n
 
(9.10.4-17) 
 
From (9.10.4-8), (9.10.4-14), and (9.10.4-17), we can write 
 
 
'
0
2
t
c
c
c
c
N
⎛
⎞
+
⎜
⎟
⎝
⎠
DR = A R DR
R
 
(9.10.4-18) 
 
To solve for the matrix A we note that 
(0)
(0)
ij
ji
ρ
ρ
=
 so that 
t
c
c
=
R
R . Thus post multiplying (9.10.4-18) 
by 
1
c
−
R
 produces 
 
 
0
2
c
N
⎛
⎞
+
⎜
⎟
⎝
⎠
D = A R D
I
 
(9.10.4-19) 
 
where I is the K×K identity matrix. Post multiply both sides of (9.10.4-19) by D–1, which yields  
 
 
1
0
2
c
N
−
⎛
⎞
+
⎜
⎟
⎝
⎠
I = A R
D
 
(9.10.4-20) 
 
Solving for the matrix A produces 
 
 
1
1
0
2
c
N
−
−
⎛
⎞
+
⎜
⎟
⎝
⎠
A = R
D
 
(9.10.4-21) 
 
is the solution. It follows that the minimum mean square estimator is of the form [28] 
 
 
1
1
0
2
opt
K
c
K
N
−
−
⎛
⎞
=
+
⎜
⎟
⎝
⎠
R
D
d
r  
(9.10.4-22) 

 642                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
and the data bit estimator is given by 
 
 
ˆ
sgn(
)
opt
K
K
=
d
d
 
(9.10.4-23) 
 
The MMSE estimate is similar to the decorrelating detector, as can be seen by comparing (9.10.3-6) and 
(9.10.4-22). 
 
 
9.10.5 Additional Types of Multiuser Detector Systems 
Equation Section (Next) 
So far we have discussed the matched filter for CDMA signals, which is the optimum receiver for 
synchronous CDMA signals; the conventional single user detector in the synchronous case; the decorrelating 
detector; and the minimum mean squared error detector in the synchronous case. We have not considered the 
asynchronous case for any of these schemes since the goal of this section was to introduce the subject but not 
to provide an exhaustive introduction.  
Due to the keen interest in commercial CDMA communication systems, the design of multiuser 
detection algorithms is an active area of research activity. A number of algorithms that we have not discussed 
but have been reported in the literature include the situation when the channel is time dispersive and therefore 
has intersymbol interference (ISI). Another case involves the situation in which the signature waveforms of 
the other CDMA users are unknown, so that the user receiver has to deal with both ISI and CDMA 
interference (sometimes called multiple access interference (MAI)). In this environment it is possible to 
develop adaptive algorithms [28].  
 
Suitable adaptive algorithms that are designed to suppress both ISI and MAI in multiuser CDMA 
communications are presented in the works of Abdulrahman et al. [32], Honig [33], Miller [34], and Mitra 
and Poor [35, 36]. Both textbooks [27, 29] are useful in this area also.  
 
In CDMA communication systems the use of transmitting and/or receiving antennas allows each 
user to employ spatial filtering along with temporal filtering in order to reduce the ISI and MAI. Algorithms 
that are designed for blind multiuser detection with multiple antenna systems are described by Wang and 
Poor [36].  
 
In a typical case the CDMA links are encoded, with either a single level of encoding or with 
concatenated encoding. A more optimum strategy to reduce the ISI and MAI is to use soft-decision metrics 
from the decoder rather than operating at the demodulator level. Hence in this approach a turbo type iterative 
demodulating decoding algorithm can be devised for CDMA applications. The papers by Wang and Poor 
[37], Reed et al. [38], Moher [39], and Alexander et al. [40] address these issues. 
 
 
9.10.6 Successive Interference Cancellation 
 
Successive interference cancellation (SIC) (also known as stripping, successive decoding, or onion peeling 
[27]) is another multiuser detection scheme that is based on the idea that if a decision on an interferer’s bit 
has been made, then that interfering signal can be recreated at the receiver and subtracted from the received 
waveform. If that decision is correct the interference for that signal will be removed from the input; however, 
if the decision is incorrect the interference will be doubled. Commonly the interfering signal with the highest 
received power level is chosen to detect first. After the detection of the bit has been made and it is removed 
from the input, the next interferer is detected and processed in the same way, until all the interference is 
removed.  
 
In making a decision on the k-th user, it is assumed that the decisions of users k+1, k+2,…K are 
correct and the remaining interferers (waveforms 1, 2, …k–1) are disregarded. Consequently the decision on 
the k-th user information bit, assuming synchronous transmission, is given by [27, 28] 
 
 
1
ˆ
ˆ
sgn
(0)
K
k
k
j
jk
j
j k
d
r
d
ρ
= +
⎡
⎤
=
−
⎢
⎥
⎣
⎦
∑
E
 
(9.10.6-1) 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           643 
where ˆ
j
d  is the decision value or estimate of dj. Recall that rk is the output to the correlator corresponding to 
the k-th users’ signature sequence.  
 
Another approach that can be used is to base the demodulation on the order of decreasing received 
cross-correlation power at the outputs of the cross correlators. The correlation metrics power is given by 
 
 
2
2
0
0
( ( ( )
(0)
2
T
k
k
j
jk
j k
N
E
g t r t dt
ρ
≠
⎛
⎞
⎡
⎤
⎜
⎟=
+
+
⎢
⎥
⎜
⎟
⎣
⎦
⎝
⎠
∑
∫
E
E
 
(9.10.6-2) 
 
in the time synchronous case. There are some observations that one can make regarding the SIC technique 
[27, 28]: (1) the delay in demodulating the weakest user increases in a linear manner with the user count, (2) 
the computational complexity of the demodulation process is linear in the user count, (3) estimation errors 
result in residual multiuser interference, which causes an increase in the bit error rate (BER), and (4) the 
interference from users whose signal levels are weaker than the detected users signal level is processed as 
additive interference.  
 
 
9.10.7 Multistage Interference Cancellation 
 
Multistage interference cancellation (MIC) is a technique that exploits multiple iterations in the detection 
process for the user bits and cancellation of the interference. The method is readily described by an example 
with two users [27, 28].  
 
Example 8 Let us assume that there are two users. This technique utilizes the SIC detector or any of the 
suboptimum detectors discussed in Section 9.10. Let us use the decorrelating detector in the first stage of the 
algorithm [28]. The first stage for the decorrelating detector produces 
 
 
(
)
(
)
1
1
2
2
2
1
ˆ 
sgn
ˆ
sgn
d
r
r
d
r
r
ρ
ρ
=
−
=
−
 
 
The corresponding second stage becomes 
 
 
(
)
(
)
1
1
2
2
2
2
1
1
ˆˆ
ˆ
sgn
ˆˆ
ˆ
sgn
d
r
d
d
r
d
ρ
ρ
=
−
=
−
E
E
 
 
In a similar manner the third stage becomes 
 
 
(
)
(
)
1
1
2
2
2
2
1
1
ˆˆ
ˆ
sgn
ˆˆ
ˆ
sgn
sd
r
d
d
r
d
ρ
ρ
=
−
=
−
E
E
 
 
and the process continues until there are no changes in the detected bits. This detector is suboptimum and 
does not converge to the optimum detector discussed in Section 9.10.1.1.  
 
 
 
 

 644                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
9.10.8 Bit Error Rate Performance Estimates of the Detectors 
Equation Section (Next) 
Normally the bit error rate (BER) performance is a meaningful metric for channel data quality. As a standard 
to compare against, we use the single user, with no other users on the channel for BPSK modulation. Thus 
the k-th user will have a BER given by 
 
 
(
)
(
)
2
k
k
k
PE
Q
γ
γ
=
 
(9.10.8-1) 
 
in which  k is defined by 
 
 
0
k
k
N
γ = E
 
(9.10.8-2) 
 
and N0 is the one-sided noise spectral density of the additive white Gaussian noise (AWGN) channel and 
k
E  
is the energy per bit in the k-th signal.  
 
 
9.10.8.1 Bit Error Rate Performance of the Optimum Detector 
 
The analysis for the BER of the optimum receiver (Section 9.10.1.1) for the synchronous case is very 
difficult [28] and will not be attempted here. However, (9.10.8-1) serves as a useful lower bound on the BER 
of the optimum receiver and a suboptimum receiver’s performance can be used for an upper bound.  
 
 
9.10.8.2 Bit Error Rate Performance of the Conventional Synchronous Detector 
 
For this case the output of the correlator for the k-th user is given by (9.10.2-2) which is repeated here: 
 
 
1
(1)
(1)
(0)
(1)
K
k
k
n
n
nk
k
n
n k
k
d
d
n
r
ρ
=
≠
+
+
=
∑
E
E
 
(9.10.8-3) 
 
It follows that the BER of the k-th user [28], conditioned on a sequence dk (see 9.10.1-12), is given by 
 
 
(
)
2
0
1
2
(1)
(0)
K
k
k
j
j
jk
j
j k
PE
Q
d
N
ρ
=
≠
⎛
⎞
⎡
⎤
⎜
⎟
⎢
⎥
=
+
⎜
⎟
⎢
⎥
⎜
⎟
⎢
⎥
⎜
⎟
⎣
⎦
⎝
⎠
∑
d
E
E
 
(9.10.8-4) 
 
where Q(x) is defined by 
 
 
2
2
1
( )
2
y
x
Q x
e
dy
π
∞
−
= ∫
 
(9.10.8-5) 
 
Making the assumption that each bit is equally likely, it is clear that the K–1 bits can take on any 
one of the 2K–1 sequences, and the probability of any sequence is 2–K+1. Thus we have that the average BER is 
given by  

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           645 
 
1
1 2
1
1
(
)
2
K
K
k
k
j
j
PE
PE
−
−
=
⎛
⎞
= ⎜
⎟
⎝
⎠
∑
d
 
(9.10.8-6) 
 
The minimum signal-to-noise ratio (SNR) occurs when the second term in the argument of 
(9.10.8-4) is the most negative. This occurs when the algebraic sign is negative for all terms, hence 
 
 
2
min
1
0
1
(0)
K
k
j
jk
j
j k
SNR
N
ρ
=
≠
⎡
⎤
⎢
⎥
=
−
⎢
⎥
⎢
⎥
⎣
⎦
∑
E
E
 
(9.10.8-7) 
 
Since the BER is given by (9.10.8-6) the tightest lower bound occurs by choosing the one largest single term. 
This occurs when the sequence that yields the minimum SNR occurs, which yields the left-hand side of 
(9.10.8-8). The tightest upper bound can be obtained by choosing the one term that has the largest sequence 
BER (i.e., the one with the minimum BER). If all terms are upper-bounded by this term, and the sum 
indicated in (9.10.8-6) is taken, the right-hand side of (9.10.8-8) is obtained. Thus the average BER is 
bounded by 
 
 
(
)
(
)
1
min
min
1
2
2
2
K
k
Q
SNR
PE
Q
SNR
−
⎛
⎞
≤
≤
⎜
⎟
⎝
⎠
 
(9.10.8-8) 
 
 
9.10.8.3 Bit Error Rate Performance of the Decorrelating Detector 
 
Now consider the decorrelating detector discussed in Section 9.10.3. When a decorrelating detector is utilized 
all the other user interference terms are completely eliminated. However the noise will increase, as we will 
see in an extension of an earlier example. The BER can be written as [28] 
 
 
2
k
k
PE
Q
σ
⎛
⎞
=
⎜
⎟
⎜
⎟
⎝
⎠
E
 
(9.10.8-9) 
 
in which 
2
k
σ  is the variance of the k-th element of the estimate 
opt
K
d
, where 
opt
K
d
 is defined in (9.10.3-6). 
 
Example 9 In order to clarify these concepts let us consider an example in the synchronous case for two 
users indicated in (9.10.3-13). Now consider the BER performance of this detector. From (9.10.3-13) the 
signal term for the first signal is given by 
1
E . The noise component of the first signal is given by 
 
 
1
2
2
1
first
n
n
n
ρ
ρ
−
=
−
 
(9.10.8-10) 
 
in which   is the correlation between the sg1(t) and sg2(t). The corresponding variance is defined by 
 
 
(
)
(
)
(
)
2
1
2
2
1
first
E
n
n
Var n
ρ
ρ
⎡
⎤
−
⎣
⎦
=
−
 
(9.10.8-11) 
 
Each noise term in this equation can be written as 

 646                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
0
(1)
( )
( )
T
j
j
n
n t sg t dt
= ∫
 
(9.10.8-12) 
 
And the variance of each noise term can be written as 
 
 
(
)
2
2
0
0
0
(1)
( )
2
2
T
j
j
N
N
E
n
sg
t dt
⎡
⎤=
=
⎢
⎥
⎣
⎦
∫
 
(9.10.8-13) 
 
Therefore the numerator of (9.10.8-11) can be evaluated as 
 
 
(
)
(
)
(
)
(
)
2
0
2
0
1
2
2
2
2
1
2
2 1
1
N
N
E
n
n
ρ
ρ
ρ
ρ
⎛
⎞
−
⎜
⎟
⎝
⎠
⎡
⎤
−
=
=
⎣
⎦
−
−
 
(9.10.8-14) 
 
It follows that the BER from (9.10.8-9) is given by 
 
 
(
)
2
1
0
2
1
first
PE
Q
N
ρ
⎛
⎞
=
−
⎜
⎟
⎜
⎟
⎝
⎠
E
 
(9.10.8-15) 
 
Thus The BER has an effective SNR that is (1– 2) smaller than the single user cases. It is easy to show that 
the second signal has the same variance. In conclusion for the decorrelating detector it can be seen that the 
cost of removing the inference results in a larger noise term with a resulting degradation in BER when 
compared to the single user BER performance. 
 
 
9.10.8.4 Bit Error Rate Performance of the MMSE Detector 
 
The MMSE estimate is similar to the decorrelating detector as can be seen by comparing (9.10.3-6) and 
(9.10.4-22). In fact when the noise is small compared to the interference, the two detectors are basically the 
same. Actually for small multiuser interference levels the MMSE detector has smaller noise increase, but also 
has some residual bias due to the other user’s interference.  
 
 
9.11 AN EXAMPLE OF A CDMA SYSTEM: CDMA2000 
 
Some of the concepts presented in this chapter may well be best understood by reviewing some specific 
examples that are currently used in practice. To that end we will summarize the architecture and some details 
of cdma2000 and WCDMA (wideband CDMA, also known as UMTS (universal mobile telecommunication 
system)). 
This section provides some details [41–45] on the CDMA mobile radio standard cell phone system 
cdma2000 air interface between users in the same area of operations (AOO) and the link layers used in 
cdma2000. By 2003 there were more than 73 million cdma2000 subscribers in 24 countries.  
This section covers the important aspects of the forward link (base station to user) and the reverse 
links (user to base station). cdma2000 is the third generation (3G) wireless standard developed from the 
second generation versions of IS-95A and IS-95B and cdmaOne. cdma2000 was designed to be backward 
compatible with the existing cdmaOne (IS-95) family of standards. References [41, 42] were the primary 
basis for this section. 
cdma2000 uses a CDMA air interface that provides wire-line quality voice and data devices ranging 
from 144 Kbps for mobile stations to 2 Mbps for stationary ones.  

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           647 
 
In order to proceed it is useful to review (or perhaps see for the first time) the International 
Standards Organization (ISO) protocol hierarchy [24]. Figure 9.11-1 illustrates the ISO protocol hierarchy. 
The lowest level of the hierarchy, level 1, is the physical level where the physical interface is 
defined. The meaning of physical interface with the network means the pin connections, electrical voltage 
levels, and signal formatting, such as the data rate.  
 
Level 2 is known as the data link level. It controls the data link between the user and the network. 
This level also defines the data format, error control and recovery procedures, data transparency, and the 
implementation of certain command sequences. For networks that are not switched or the interface of simple 
terminals with computers via point-to-point services, generally only levels 1 and 2 are needed.  
 
The network level forms level 3. It defines most of the protocol-driven functions of the packet 
network interface, or the internal network. The flow-control procedures are employed and its switched 
services are initiated through a data call establishment procedure at this level. 
 
Level 4 is known as the transport level. It assures the end-to-end flow of complete messages. If the 
network requires that messages be broken down into segments or packets at the interface, the transport level 
assures that the message segmentation takes place and that the message is properly delivered.  
 
Level 7
application
Level 6
presentation
Level 5
session
Level 4
transport
Level 3
network
Level 2
data link
Level 1
physical
Level 7
application
Level 6
presentation
Level 5
session
Level 4
transport
Level 3
network
Level 2
data link
Level 1
physical
Peer level applications protocol
Peer level applications protocol
Peer level applications protocol
User-to-user communication protocol
Internal network
protocol
Link control
protocol
Physical
interface
Network
interface
protocol
Link control
protocol
Physical
interface
Network
interface
protocol
Network
access
Network
access
Level 7
application
Level 6
presentation
Level 5
session
Level 4
transport
Level 3
network
Level 2
data link
Level 1
physical
Level 7
application
Level 6
presentation
Level 5
session
Level 4
transport
Level 3
network
Level 2
data link
Level 1
physical
Level 7
application
Level 6
presentation
Level 5
session
Level 4
transport
Level 3
network
Level 2
data link
Level 1
physical
Peer level applications protocol
Peer level applications protocol
Peer level applications protocol
User-to-user communication protocol
Internal network
protocol
Link control
protocol
Physical
interface
Network
interface
protocol
Link control
protocol
Physical
interface
Network
interface
protocol
Network
access
Network
access
 
 
Figure 9.11-1 International Standards Organization (ISO) protocol hierarchy. 
 
 
 
Session control is performed in level 5. It controls the interaction of user software, which is 
exchanging data at each end of the network. Session control includes such activities as log-on, user 
authentication, and the allocation of ADP resources within the user equipment, and manages and terminates 
connections (sessions) between cooperating applications. 
 
Level 6 is the presentation level. It controls the display formats, data code conversion, and 
information going to and from peripheral storage devices. It provides independence to the application 
processes from differences in data presentation (syntax). 
 
Level 7 is the user process or user application level and deals directly with the software application 
programs that interact through the network. 
 
Implementation of software that can operate at the levels of 5, 6, and 7 has been slow. The software 
at all of these levels (often called peer-level software) tends to be both equipment and application dependent. 
However, the layered approach to protocol development achieves a degree of isolation and modularity 
between the various layers. Hence changes in one level can be made without changes in any other level.  

 648                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
With this short outline of the ISO model we can now proceed to the cdma2000 layering structure. 
 
 
9.11.1 cdma2000 Layering Structure Overview 
 
Figure 9.11-2 illustrates the layering structure for cdma2000. Although the layering structure is not part of 
the air interface it will be presented briefly to give an overall picture of the system.  
The upper layers contain the three basic services: (1) voice services including PSTN (public 
switched telephone network) access mobile-to-mobile voice services, and Internet telephony; (2) end-user 
data-bearing services that deliver any form of data on behalf of mobile end users, including packet data (e.g., 
IP service), circuit data services (e.g., B-ISDN emulation services), and short message service (SMS); (3) 
signaling services that control all aspects of operation of the mobile unit. “Mobile,” “mobile unit,” and 
“mobile station” will be used interchangeably in the next two sections. 
 
Upper layers
(OSI 3-7)
IS-95 2G
layer 3
signaling
cdma2000
upper layer
signaling
Other upper
layer
signaling
Packet
data
service
Voices
services
Circuit
data
services
IS-95
signaling
layer 2
cdma2000
signaling
layer 2
Other
signaling
Layer 2
Packet
data
layer 2
Null
layer 2
Circuit
data
layer 2
LAC
sublayer
(OSI 2)
link layer
PLICF for MAC Instance 1
(for example signaling)
PLICF for MAC instance 2
(for example, packet or circuit data service)
PLDCF specific to instance 1
PLDCF specific to instance 2
PLDCF MUX and QoS sublayer
cdma2000 physical layer
Physical
layer (OSI 1)
Notes: PLICF denotes “physical layer independent convergence function,” PLDCF denotes “physical layer 
dependent convergence function,” and QOS denotes “qualilty of service.”
Upper layers
(OSI 3-7)
IS-95 2G
layer 3
signaling
cdma2000
upper layer
signaling
Other upper
layer
signaling
Packet
data
service
Voices
services
Circuit
data
services
IS-95
signaling
layer 2
cdma2000
signaling
layer 2
Other
signaling
Layer 2
Packet
data
layer 2
Null
layer 2
Circuit
data
layer 2
LAC
sublayer
(OSI 2)
link layer
PLICF for MAC Instance 1
(for example signaling)
PLICF for MAC instance 2
(for example, packet or circuit data service)
PLDCF specific to instance 1
PLDCF specific to instance 2
PLDCF MUX and QoS sublayer
cdma2000 physical layer
Physical
layer (OSI 1)
Notes: PLICF denotes “physical layer independent convergence function,” PLDCF denotes “physical layer 
dependent convergence function,” and QOS denotes “qualilty of service.”
 
 
Figure 9.11-2 cdma2000 layering structure. 
 
 
In Figure 9.11-2 MAC denotes the medium access control, LAC denotes the link access control, 
PLICF denotes the physical-layer independent convergence function, and PLDCE denotes the physical layer 
dependent convergence function. 
 
The LAC sublayer manages the point-to-point communications channels between peer upper layer 
entities and provides framework to support a wide range of different end-to-end reliable link layer protocols. 
We will not delve into the layering aspects of the link; however, the interested reader can consult [41] for 
more details. 
 
 
9.11.2 Forward Link and Reverse Link Channels’ Overview  
 
The forward physical channels that are used in cdma2000 and IS-95 are shown in Figure 9.11-3.  
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           649 
Forward link channels
F-PCH/
F-CCCH
Pilot
Sync
Paging
Traffic
RS1 & RS2
Traffic
RS3 to RS6
F-QPCH
F-BCCH
F-FCH
F-SCH
F-FCH
cdma2000 channels
Channels common
to cdma2000 & IS-95
Forward link channels
F-PCH/
F-CCCH
Pilot
Sync
Paging
Traffic
RS1 & RS2
Traffic
RS3 to RS6
F-QPCH
F-BCCH
F-FCH
F-SCH
F-FCH
cdma2000 channels
Channels common
to cdma2000 & IS-95
 
 
Figure 9.11-3 The forward physical channels for cdma2000 and IS-95. 
 
 
The following abbreviations are used in Figure 9.11-3: F-FCH is the forward fundamental channel, 
F-QPCH is the forward quick paging channel, F-PCH is the forward paging channel, F-CCCH is the common 
control channel, F-BCCH is the forward broadcast common channel, and F-SCH is the forward supplemental 
channel. RS denotes the rate set. The shaded blocks are the new cdma2000 channels, and the unshaded 
blocks denote the blocks common to both IS-95 and cdma2000.  
The reverse link structure is illustrated in Figure 9.11-4. Both the forward and reverse links will be 
discussed in more detail in the following. 
In Figure 9.11-4 the following definitions have been used. R-ACH is the reverse access channel,  
R-CCCH is the reverse common control channel, R-FCH is the reverse fundamental channel, and R-SCH is 
the reverse supplemental channel. Again RS denotes the particular rate set. The shaded blocks are common to 
both IS-95 and cdma2000. 
 
Physical reverse channels
Pilot
R-ACH or
R-CCCH
Traffic
RS1 & RS2
Traffic
RS3 to RS6
R-FCH
R-SCH
R-FCH
cdma2000 channels
Channels common
to cdma2000 & IS-95
Physical reverse channels
Pilot
R-ACH or
R-CCCH
Traffic
RS1 & RS2
Traffic
RS3 to RS6
Traffic
RS3 to RS6
R-FCH
R-SCH
R-FCH
cdma2000 channels
Channels common
to cdma2000 & IS-95
 
 
Figure 9.11-4 Reverse physical channels for cdma2000 and IS-95 
 
 
9.11.3 Physical Layer of cdma2000 
 
The physical layer provides coding and modulation services for a set of logical channels used by physical 
layer dependent convergence function (PLDCF) MUX and the quality of service (QoS) sublayer. The 
physical channels are classified as forward/reverse dedicated physical channels (F/R-DPHCH) and 
forward/reverse common physical channels (F/R-CPHCH). F/R-DPHCH is a collection of all physical 
channels that carry information in a dedicated, point-to-point manner between the base station and a single 
mobile unit. F/R-CPHCH is a collection of all physical channels that carry information in a shared access, 
point-to-multipoint manner between the base station and multiple users. Figure 9.11-5 [42] illustrates the 

 650                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
cdma2000 physical channels. The major features of cdma2000 and IS-95 are illustrated in Table 9.11-1. In 
Table 9.11-1 EVRC denotes enhanced variable rate codec. 
 
Table 9.11-1 Major Features in cdma2000 and IS-95 
 
Characteristics
IS-95
cdma2000
Core network
ANSI-41
ANSI-41
Chip rate
1.2288 Mcps
N*1.2288 Mcps
N=1,3,6,9,12
Frame length
20 ms
20 ms
Voice coder
EVRC
EVRC
Modulation
QPSK
QPSK
Data rate
Nominal: 9.6 Kbps
From 9.6 – 921.6
Kbps
Filtered bandwidth
1.23 MHz
N*1.25 MHz
N=1,3,6,9,12
Coding
Convolutional with
Viterbi decoding
Convolutional and
Turbo decoding
Interleaving
20 ms
N*20 ms N=1,2 or 4
Characteristics
IS-95
cdma2000
Core network
ANSI-41
ANSI-41
Chip rate
1.2288 Mcps
N*1.2288 Mcps
N=1,3,6,9,12
N*1.2288 Mcps
N=1,3,6,9,12
Frame length
20 ms
20 ms
Voice coder
EVRC
EVRC
Modulation
QPSK
QPSK
Data rate
Nominal: 9.6 Kbps
From 9.6 – 921.6
Kbps
Filtered bandwidth
1.23 MHz
N*1.25 MHz
N=1,3,6,9,12
Coding
Convolutional with
Viterbi decoding
Convolutional and
Turbo decoding
Interleaving
20 ms
N*20 ms N=1,2 or 4
 
 
 
The primary differences in cdma2000 from IS-95 are the increased chip rate, channel bandwidth, 
interleaver depth, Turbo coding, and the data rates.  
 
Forward link
Reverse link
Base
station
Mobile
station
Mobile
station
Base
station
Pilot (F-PICH)
Paging (F-PCH)
Sync (F-SYNC)
Fundamental (F-FCH)
Supplementary (F-SCH)
Quick paging (F-QPCH)
Pilot (R-PICH)
Access (R-AH) or R-CCCH
Dedicated control (R-DCCH)
Fundamental (R-FCH)
Supplementary (R-SCH)
Forward link
Reverse link
Base
station
Mobile
station
Mobile
station
Base
station
Pilot (F-PICH)
Paging (F-PCH)
Sync (F-SYNC)
Fundamental (F-FCH)
Supplementary (F-SCH)
Quick paging (F-QPCH)
Pilot (R-PICH)
Access (R-AH) or R-CCCH
Dedicated control (R-DCCH)
Fundamental (R-FCH)
Supplementary (R-SCH)
Base
station
Mobile
station
Mobile
station
Base
station
Pilot (F-PICH)
Paging (F-PCH)
Sync (F-SYNC)
Fundamental (F-FCH)
Supplementary (F-SCH)
Quick paging (F-QPCH)
Pilot (R-PICH)
Access (R-AH) or R-CCCH
Dedicated control (R-DCCH)
Fundamental (R-FCH)
Supplementary (R-SCH)
 
 
Figure 9.11-5 cdma2000 physical channels. 
 
 
9.11.4 Forward Link Physical Channels  
 
Forward dedicated channels provide information from the base station to a particular station (mobile). 
Common channels carry information from the base station to a set of mobile units in a point-to-multipoint 
manner. Table 9.11-2 indicates these channels. A brief discussion of the forward link channels will now be 
described. 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           651 
Table 9.11-2 Forward Link Channels 
 
Physical Channel
Channel Name
Forward common
physical channels
(control and
overhead
hannels)
Forward pilot channel
Forward paging channel
Forward sync channel
Forward common control channel
Forward common auxiliary pilot channel
Forward quick paging
Forward broadcast common channel
F-PICH
F-PCH
F-SYNC
F-CCCH
F-CAPICH
F-QPCH
F-BCCH
Forward dedicated
physical channels
Forward dedicated auxiliary pilot channel
Forward dedicated common control channel
Forward traffic channel
-Fundamental
-Supplementary
F-DAPICH
F-DCCH
F-FCH
F-SCH
Forward Channels
Physical Channel
Channel Name
Forward common
physical channels
(control and
overhead
hannels)
Forward pilot channel
Forward paging channel
Forward sync channel
Forward common control channel
Forward common auxiliary pilot channel
Forward quick paging
Forward broadcast common channel
F-PICH
F-PCH
F-SYNC
F-CCCH
F-CAPICH
F-QPCH
F-BCCH
Forward dedicated
physical channels
Forward dedicated auxiliary pilot channel
Forward dedicated common control channel
Forward traffic channel
-Fundamental
-Supplementary
F-DAPICH
F-DCCH
F-FCH
F-SCH
Forward Channels
Physical Channel
Channel Name
Forward common
physical channels
(control and
overhead
hannels)
Forward pilot channel
Forward paging channel
Forward sync channel
Forward common control channel
Forward common auxiliary pilot channel
Forward quick paging
Forward broadcast common channel
F-PICH
F-PCH
F-SYNC
F-CCCH
F-CAPICH
F-QPCH
F-BCCH
Forward dedicated
physical channels
Forward dedicated auxiliary pilot channel
Forward dedicated common control channel
Forward traffic channel
-Fundamental
-Supplementary
F-DAPICH
F-DCCH
F-FCH
F-SCH
Forward Channels
 
 
 
9.11.4.1 The Forward Pilot Channel (F-PICH)  
 
The F-PICH is continuously broadcast throughout the cell to provide phase information and timing. The F-
PICH is used by all traffic channels and is used for estimating phase and gain, detecting multipath rays so 
that the RAKE7 fingers are efficiently assigned to the strongest multipath component and for cell acquisition 
and handoff. The F-PICH channel spreads the all-zeros sequence with Walsh code number 0. The pilot is 
shared between all mobiles in the cell and is used to obtain fast acquisition on new multipath components and 
obtain, by estimation, the multipath phase and signal strength. This common pilot can be transmitted without 
a lot of overhead. The common pilot approach is more efficient than providing a pilot for each user. In voice 
traffic the common pilot can yield better channel estimation with the result of better receiver performance. It 
can be utilized for improved search and handoff performance.  
 
 
9.11.4.2 The Forward Paging Channel (F-PCH)  
 
The F-PCH is used to send control information and paging messages from the base station to users and 
operates at 9.6 or 4.8 Kbps (the same as IS-95). The F-PCH carries overhead messages, pages, and 
acknowledges channel assignments, status request, and shared secret data (SSD) updates from the base 
station to the mobile user. There are two types of paging channels: shared F-PCH and wideband F-PCH. The 
shared F-PCH provides service to both the IS-95B and cdma2000 when using the F-PCH in an IS-95B 
underlay channel. The wideband F-PCH is modulated across the entire band. This mode is applicable to both 
overlay and nonoverlay configurations. 
 
 
                                                          
7 The RAKE receiver will be discussed in Chapter 10. 

 652                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
9.11.4.3 Forward Sync Channel (F-SYNC) 
 
The mobile units, operating within the coverage area of the base station to obtain initial time synchronization, 
utilize the sync channel. There are two types of F-SYNC channels: (1) wideband F-SYNC and shared F-
SYNC. The wideband F-SYNC is modulated over the entire wideband channel bandwidth. It is modulated as 
a separate channel within the forward common physical channel (F-CPHCH). This mode is applicable to 
both the nonoverlay and overlay configurations. The shared F-SYNC channel provides service to both the IS-
95B and cdma2000 when using the F-SYNC in an IS-95B underlay configuration. 
 
 
9.11.4.4 The Forward Common Control Channel (F-CCCH)  
 
The forward common control channel (F-CCCH) is a common channel used for communication of layer 3 
and median access control (MAC) messages from the base station to the mobile user. Frame sizes for the  
F-CCCH are 5, 10, or 20 ms, depending on the current operating environment. The data rates range from 9.6, 
19.2, and 38.4 Kbps. It is identical to F-PCH for a 9.6 Kbps rate (20 ms frame). The F-CCCH provides a 
short burst capability for data communication. 
 
 
9.11.4.5 The Forward Common Auxiliary Pilot Channel (F-CAPICH)  
 
The F-CAPICH is used with antenna beam-forming application to generate spot beams. As mentioned earlier 
in this chapter, spot beams can be used to increase coverage in a particular geographical area or to increase 
capacity in areas that need it. The F-CAPICH can be shared among multiple mobiles in the same spot beam. 
There is no data on the pilot channels. Auxiliary pilots are code multiplexed with other forward link 
channels, and they utilize Walsh codes.8 Auxiliary pilots can be also used for orthogonal diversity 
transmission in the forward spread spectrum link. If directional or spot beams are supported with an antenna 
array, it is necessary to provide a separate forward link pilot for channel estimation. 
 
 
9.11.4.6 The Forward Broadcast Common Channel (F-BCCH)  
 
The F-BCCH is a paging channel dedicated to carrying only overhead messages and possible SMS 
((wireless) short message service) broadcast messages from the paging channel to a separate broadcast 
channel. It removes the overhead messages from the paging channel to a separate broadcast channel. By 
doing this the mobile initialization time and system access performance is improved. The F-BCCH has a 
fixed Walsh code that is communicated to the mobile on the F-SYNC.  
 
 
9.11.4.7 The Forward Quick Paging Channel (F-QPCH)  
 
The F-QPCH is used by the base station and is a new type of paging channel and is used when it needs to 
contact the mobile user, in the slotted mode. Reduced time needed to be awake is obtained when it is used, 
which results in decreased battery drain for the mobile user. The F-QPCH contains the quick page message 
contains a single bit message. The F-QPCH page message directs a slotted-mode mobile user to monitor its 
assigned slot on the paging channel, that will follow immediately. The quick page message is transmitted up 
                                                          
8 Walsh codes are baseband orthogonal codes. An example for the case of four of them is (1,1,1,1), (1,–1,1,–1), (1,1,–1,–1), and  
(1,–1,–1,1). Each code is orthogonal to each other. For n = 2k we have 
1
1
1
1
2
2
2
2
2
  
  
k
k
k
k
k
H
H
H
H
H
−
−
−
−
⎡
⎤
= ⎢
⎥
⎢
⎥
⎣
⎦
 where the bar denotes the same matrix 
with inverted elements and
2
1     1
1  
1
H
⎡
⎤
= ⎢
⎥
−
⎣
⎦
. 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           653 
to 80 ms prior to the page message to alert the user to the paging channel. It uses a different modulation, so 
that will look like a different physical channel. 
 
 
9.11.4.8 The Forward Fundamental Channel (F-FCH)  
 
The F-FCH is transmitted at a variable rate as in the IS-95B standard and therefore requires data rate 
detection in the receiver. Each F-FCH is transmitted on a different orthogonal code channel and uses 5 and 
20 ms frame sizes. The 20 ms frame supports the data rate corresponding to Rate Set 1 (RS1) and Rate Set 2 
(RS2), where the rates are 9.6, 4.8, 2.7, and 1.5 Kbps for RS1 and 14.4, 7.2, 3.6, and 1.8 Kbps for RS2. The 
N =1 F-FCH for RS1 is shown in Figure 9.11-6. In this case a rate ½ convolutional encoder is used. 
 
20 ms frame
5 ms frame
1/2 rate
80 bits
1/8 rate
16 bits
Add 8-bit
encoder
tail
K=9
R =1/2
encoder
Block
interleaver
Add
8 bit
CRC
Add 8-bit
encoder
tail
K=9
R =1/2
encoder
Repeat
2 times
Delete
every 9th
symbol
Add
12-bit
CRC
Block
interleaver
Block
interleaver
Block
interleaver
Block
interleaver
K=9
R =1/2
encoder
K=9
R =1/2
encoder
K=9
R =1/2
encoder
Add 8-bit
encoder
tail
Add 8-bit
encoder
tail
Add 8-bit
encoder
tail
Add
6-bit
CRC
Add
6-bit
CRC
Add
16-bit
CRC
Repeat
4 times
Repeat
8 times
Delete
every 5th
symbol
192
bits
96
bits
54
bits
30
bits
48
bits
384
bits
432
bits
480
bits
384
bits
384
bits
384
bits
384
bits
384
bits
384
bits
96
bits
Full rate
172 bits
1/4 rate
40 bits
24 bits
40
bits
A
A
A
A
A
Note: Point A goes to point A on Figure 9.11-13 for the I-Q mapping, Walsh 
modulation, PN spreading, and frequency modulation, for N =1. 
20 ms frame
5 ms frame
1/2 rate
80 bits
1/8 rate
16 bits
Add 8-bit
encoder
tail
K=9
R =1/2
encoder
Block
interleaver
Add
8 bit
CRC
Add 8-bit
encoder
tail
K=9
R =1/2
encoder
Repeat
2 times
Delete
every 9th
symbol
Add
12-bit
CRC
Block
interleaver
Block
interleaver
Block
interleaver
Block
interleaver
K=9
R =1/2
encoder
K=9
R =1/2
encoder
K=9
R =1/2
encoder
Add 8-bit
encoder
tail
Add 8-bit
encoder
tail
Add 8-bit
encoder
tail
Add
6-bit
CRC
Add
6-bit
CRC
Add
16-bit
CRC
Repeat
4 times
Repeat
8 times
Delete
every 5th
symbol
192
bits
96
bits
54
bits
30
bits
48
bits
384
bits
432
bits
480
bits
384
bits
384
bits
384
bits
384
bits
384
bits
384
bits
96
bits
Full rate
172 bits
1/4 rate
40 bits
24 bits
40
bits
A
A
A
A
A
Note: Point A goes to point A on Figure 9.11-13 for the I-Q mapping, Walsh 
modulation, PN spreading, and frequency modulation, for N =1. 
 
 
Figure 9.11-6 Forward fundamental channel for N =1 for RS1. 
 
 
For the case of N = 1 and RS2, a rate 1/3 convolutional code, followed by puncturing every ninth bit 
effectively provides an effective code rate of 3/8. The case for RS2 and N =1 is illustrated in Figure 9.11-7.  
In the figure the asterisk denotes the fact that the effective rate is 3/8. The two cases (RS1 and RS2) 
are relatively similar, but not identical. The cases for N = 3, 6, 9, and 12 for RS1 and RS2 can be found in 
Garg [42]. 
 
 
9.11.4.9 Forward Supplemental Channel (F-SCH)  
 
The F-SCH can be operated in two different modes. The first mode limits the data rate to 14.4 Kbps and 
detects without scheduling or rate information. The variable rates correspond to the IS-95 RS1 and RS2 rates. 
The variable rate mode structure is identical to the F-FCH for the 20 ms frame case.  
In the second mode the rate information is provided to the base station. The high data rates can have 
either K = 9 convolutional coding or turbo coding with K = 4 component coders. When convolutional coding 
is used there are 8 tail bits. In the case when turbo coders are used, 6 tail bits and 2 reserve bits are used.  

 654                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
The forward supplementary channel supports 20 ms frame periods. When data rates are derived 
from RS1, the F-SCH supports data rates starting at 9.6 up to 307.2 Kbps. Figure 9.11-8 illustrates F-SCH for 
N = 1 with a channel bandwidth of 1.25 MHz and Figure 9.11-9 for the case N = 3.  
 
Full rate
267  bits
24 bits
1/4 rate
55 bits
1/2 rate
125 bits
1/8 rate
21 bits
20 ms frame
5 ms frame
Add 12-bit
CRC
K=9
r =3/8*
encoder
Add 8 bit
encoder
Block
interleaver
Block
interleaver
Block
interleaver
Add 8 bit
encoder
tail
K=9
r =1/2
encoder
Add 6-bit
CRC
Add 16-bit
CRC
K=9
r =3/8
Encoder
Repeat
8 times
36
bits
48
bits
288
bits
96
bits
768
bits
768
bits
96
bits
A
Repeat
4 times
Block
interleaver
Add 8 bit
encoder
tail
Add 8-bit
CRC
Add 1
reserved
bit
K=9
r =3/8
encoder
72
bits
192
bits
768
bits
A
A
A
Add 1 
reserved
bit
Add 8 bit
encoder
tail
Repeat
2 times
Block
interleaver
Add 8 bit
encoder
tail
Add 10-bit
CRC
K=9
r =3/8
encoder
144
bits
384
bits
768
bits
A
Add 1 
Reserved
bit
Add 1 
reserved
bit
Note: Point A goes to point A on Figure 9.11-13 for the I-Q mapping, Walsh 
modulation, PN spreading, and frequency modulation for N =1.
Full rate
267  bits
24 bits
1/4 rate
55 bits
1/2 rate
125 bits
1/8 rate
21 bits
20 ms frame
5 ms frame
Add 12-bit
CRC
K=9
r =3/8*
encoder
Add 8 bit
encoder
Block
interleaver
Block
interleaver
Block
interleaver
Add 8 bit
encoder
tail
K=9
r =1/2
encoder
Add 6-bit
CRC
Add 16-bit
CRC
K=9
r =3/8
Encoder
Repeat
8 times
36
bits
48
bits
288
bits
96
bits
768
bits
768
bits
96
bits
A
Repeat
4 times
Block
interleaver
Add 8 bit
encoder
tail
Add 8-bit
CRC
Add 1
reserved
bit
K=9
r =3/8
encoder
72
bits
192
bits
768
bits
A
A
A
Add 1 
reserved
bit
Add 8 bit
encoder
tail
Repeat
2 times
Block
interleaver
Add 8 bit
encoder
tail
Add 10-bit
CRC
K=9
r =3/8
encoder
144
bits
384
bits
768
bits
A
Add 1 
Reserved
bit
Add 1 
reserved
bit
Note: Point A goes to point A on Figure 9.11-13 for the I-Q mapping, Walsh 
modulation, PN spreading, and frequency modulation for N =1.
 
 
Figure 9.11-7 Forward fundamental channel for N =1 for RS2.  
 
 
Block
interleaver
Add
16-bit
CRC
Encoder tail
& reserve
bits
K=9
R =1/2
encoder
RS1
21 Octets
45 Octets
93 Octets
189 Octets
381 Octets
765 Octets
9.6 Kbps
19.2 Kbps
38.4 Kbps
76.8 Kbps
153.6 Kbps
307.2 Kbps
383 bits
768 bits
1536 bits
3072 bits
6144 bits
12,288 bits
A
Puncture one
of nine
Block
interleaver
Add
16-bit
CRC
Encoder tail
& reserve
bits
K=9
R =1/2
encoder
RS2
33 Octets
69 Octets
141 Octets
286 Octets
573 Octets
768 bits
1536 bits
3072 bits
6144 bits
12,288 bits
14.4 Kbps
28.8 Kbps
57.6 Kbps
115.2 Kbps
230.4 Kbps
A
Note: Point A goes to point A on Figure 9.11-13 for the I-Q mapping, Walsh 
modulation, PN spreading, and frequency modulation for N =1.
Block
interleaver
Add
16-bit
CRC
Encoder tail
& reserve
bits
K=9
R =1/2
encoder
RS1
21 Octets
45 Octets
93 Octets
189 Octets
381 Octets
765 Octets
9.6 Kbps
19.2 Kbps
38.4 Kbps
76.8 Kbps
153.6 Kbps
307.2 Kbps
383 bits
768 bits
1536 bits
3072 bits
6144 bits
12,288 bits
A
Puncture one
of nine
Block
interleaver
Add
16-bit
CRC
Encoder tail
& reserve
bits
K=9
R =1/2
encoder
RS2
33 Octets
69 Octets
141 Octets
286 Octets
573 Octets
768 bits
1536 bits
3072 bits
6144 bits
12,288 bits
14.4 Kbps
28.8 Kbps
57.6 Kbps
115.2 Kbps
230.4 Kbps
A
Block
interleaver
Add
16-bit
CRC
Encoder tail
& reserve
bits
K=9
R =1/2
encoder
RS1
21 Octets
45 Octets
93 Octets
189 Octets
381 Octets
765 Octets
9.6 Kbps
19.2 Kbps
38.4 Kbps
76.8 Kbps
153.6 Kbps
307.2 Kbps
383 bits
768 bits
1536 bits
3072 bits
6144 bits
12,288 bits
A
Block
interleaver
Add
16-bit
CRC
Encoder tail
& reserve
bits
K=9
R =1/2
encoder
RS1
21 Octets
45 Octets
93 Octets
189 Octets
381 Octets
765 Octets
9.6 Kbps
19.2 Kbps
38.4 Kbps
76.8 Kbps
153.6 Kbps
307.2 Kbps
9.6 Kbps
19.2 Kbps
38.4 Kbps
76.8 Kbps
153.6 Kbps
307.2 Kbps
383 bits
768 bits
1536 bits
3072 bits
6144 bits
12,288 bits
383 bits
768 bits
1536 bits
3072 bits
6144 bits
12,288 bits
A
Puncture one
of nine
Block
interleaver
Add
16-bit
CRC
Encoder tail
& reserve
bits
K=9
R =1/2
encoder
RS2
33 Octets
69 Octets
141 Octets
286 Octets
573 Octets
768 bits
1536 bits
3072 bits
6144 bits
12,288 bits
14.4 Kbps
28.8 Kbps
57.6 Kbps
115.2 Kbps
230.4 Kbps
14.4 Kbps
28.8 Kbps
57.6 Kbps
115.2 Kbps
230.4 Kbps
A
Note: Point A goes to point A on Figure 9.11-13 for the I-Q mapping, Walsh 
modulation, PN spreading, and frequency modulation for N =1.
 
 
Figure 9.11-8 F-SCH for N = 1, multicarrier, and a channel bandwidth of 1.25 MHz. 
 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           655 
Block
interleaver
Block
interleaver
Add
16-bit
CRC
Add
16-bit
CRC
Encoder tail
& reserve
bits
Encoder tail
& reserve
bits
K=9
R =1/3
encoder
K=9
R =1/4
encoder
RS1
RS2
21 Octets
45 Octets
93 Octets
189 Octets
381 Octets
765 Octets
1533 Octets
33 Octets
69 Octets
141 Octets
285 Octets
573 Octets
1149 Octets
2301 Octets
9.6 Kbps
19.2 Kbps
38.4 Kbps
76.8 Kbps
153.6 Kbps
307.2 Kbps
614.4 Kbps
576 bits
1152 bits
2304 bits
4608 bits
9216 bits
18,432 bits
36,864 bits
1152 bits
2304 bits
4608 bits
9216 bits
18,432 bits
36,864 bits
36,864 bits
14.4 Kbps
28.8 Kbps
57.6 Kbps
115.2 Kbps
230.4 Kbps
460.8 Kbps
921.6 Kbps (R=1/2)
X
X
Note: For the case of multicarrier spreading, signal point X feeds into Figure 9.11-14 
and for N >1 signal point X feeds into Figure 9.11-16.
Block
interleaver
Block
interleaver
Add
16-bit
CRC
Add
16-bit
CRC
Encoder tail
& reserve
bits
Encoder tail
& reserve
bits
K=9
R =1/3
encoder
K=9
R =1/4
encoder
RS1
RS2
21 Octets
45 Octets
93 Octets
189 Octets
381 Octets
765 Octets
1533 Octets
33 Octets
69 Octets
141 Octets
285 Octets
573 Octets
1149 Octets
2301 Octets
9.6 Kbps
19.2 Kbps
38.4 Kbps
76.8 Kbps
153.6 Kbps
307.2 Kbps
614.4 Kbps
576 bits
1152 bits
2304 bits
4608 bits
9216 bits
18,432 bits
36,864 bits
1152 bits
2304 bits
4608 bits
9216 bits
18,432 bits
36,864 bits
36,864 bits
14.4 Kbps
28.8 Kbps
57.6 Kbps
115.2 Kbps
230.4 Kbps
460.8 Kbps
921.6 Kbps (R=1/2)
X
X
Note: For the case of multicarrier spreading, signal point X feeds into Figure 9.11-14 
and for N >1 signal point X feeds into Figure 9.11-16.
 
 
Figure 9.11-9 F-SCH for N = 3 and a channel bandwidth of 3.75 MHz. 
 
 
9.11.4.10 Forward Dedicated Control Channel (F-DCCH)  
 
The F-DCCH supports both 5 ms and 20 ms frame sizes at the 9.6 Kbps encoder input rate. Sixteen CRC bits 
are added to the information bits, in the case of 5 ms frames, and 12 CRC bits are added to the 20 ms frames. 
For both frames the following items follow: 8 tail bits, convolutional coding, interleaving, and scrambling. 
Figures 9.11-10 and 9.11-11 illustrate the forward dedicated control channel for N = 1 and N≥3. 
 
5 ms
frame
Add
16-bit
CRC
Add 8 bit
encoder tail
K=9
R =1/2
encoder
Block
interleaver
24
bits
40
bits
48
bits
96
bits
A
20 ms
frame
Add
12-bit
CRC
Add 8 bit
encoder tail
K=9
R =1/2
encoder
Block
interleaver
172
bits
184
bits
192
bits
384
bits
A
Note: Point A goes to point A on Figure 9.11-13 for the I-Q mapping, Walsh 
modulation, PN spreading, and frequency modulation for N =1.
5 ms
frame
Add
16-bit
CRC
Add 8 bit
encoder tail
K=9
R =1/2
encoder
Block
interleaver
24
bits
40
bits
48
bits
96
bits
A
20 ms
frame
Add
12-bit
CRC
Add 8 bit
encoder tail
K=9
R =1/2
encoder
Block
interleaver
172
bits
184
bits
192
bits
384
bits
A
Note: Point A goes to point A on Figure 9.11-13 for the I-Q mapping, Walsh 
modulation, PN spreading, and frequency modulation for N =1.
 
 
Figure 9.11-10 Forward dedicated control channel (F-DCCH) for the case N = 1. 
 
 
9.11.4.11 Forward Link Channelization (Physical Layer)  
 
The forward link supports chip rates of 1.228N Mcps for N = 1, 3, 6, 9, and 12. For N = 1, the spreading is 
similar to IS-95B; however QPSK modulation and fast closed-loop power control is also used. There are two 

 656                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
options for N > 1 (1) multicarrier (multiples of 1.25 MHz) and (2) direct spreading as shown in Figure  
9.11-12.  
 
Add
16-bit
CRC
Add 8 bit
encoder tail
K=9
r =1/3
encoder
Block
interleaver
24
Bits
40
bits
48
bits
144
bits
X
5 ms
frame
Add
12-bit
CRC
Add 8 bit
encoder tail
K=9
r =1/3
encoder
Block
interleaver
172
Bits
184
bits
192
bits
576
bits
X
20 ms
frame
Note for the case of multicarrier direct spreading, signal point X feeds into Figure 
9.11-14 and for the case of N >1 direct spreading signal point X feeds into Figure 9.11-13.
Add
16-bit
CRC
Add 8 bit
encoder tail
K=9
r =1/3
encoder
Block
interleaver
24
Bits
40
bits
48
bits
144
bits
X
5 ms
frame
Add
12-bit
CRC
Add 8 bit
encoder tail
K=9
r =1/3
encoder
Block
interleaver
172
Bits
184
bits
192
bits
576
bits
X
20 ms
frame
Note for the case of multicarrier direct spreading, signal point X feeds into Figure 
9.11-14 and for the case of N >1 direct spreading signal point X feeds into Figure 9.11-13.  
 
Figure 9.11-11 Forward dedicated control channel (F-DCCH) for N≥3. 
 
The multicarrier approach demultiplexes modulation symbols onto N separate 1.25-MHz carriers  
(N = 3, 6, 9, 12). Each carrier is spread with a 1.2288-Mcps PN code chip rate. For the case when N > 1 the 
direct spread technique transmits modulation symbols on a single carrier, which is spread with a chip rate of 
1.2288×N Mcps where N = 3, 6, 9, and 12. Figure 9.11-12 illustrates the N =3 case. 
 
 
9.11.4.12 Forward Link Common Pilot (Physical Layer Description)  
 
The cdma2000 system provides a common code multiplexed pilot for all users. The common pilot is an all- 
zero sequence prior to Walsh code spreading with Walsh code number 0. This pilot is shared by all traffic 
channels, and thus it provides for an efficient utilization of resources. The pilot channel is used for the 
following purposes: (1) estimating channel gain and phase, (2) detecting multipath rays such that Rake 
fingers are efficiently assigned to the strongest multipath components, and (3) cell acquisition and handoff.  
 
Multicarrier
N = 3
1
2
3                      4                     5
1.25
1.25
1.25
1.25
1
2
3                      4                     5
fc1
2.50
2.50
fc1
fc2
fc3
Direct spread
N = 3
Chip rates
of  1.2288 Mcps
Chip rate
of  3.6864 Mcps
f (MHz)
f (MHz)
Note: All numbers in MHz
MHz
MHz
Multicarrier
N = 3
1
2
3                      4                     5
1.25
1.25
1.25
1.25
1.25
1.25
1
2
3                      4                     5
fc1
fc1
2.50
2.50
fc1
fc1
fc2
fc2
fc3
Direct spread
N = 3
Chip rates
of  1.2288 Mcps
Chip rate
of  3.6864 Mcps
f (MHz)
f (MHz)
Note: All numbers in MHz
MHz
MHz
 
 
Figure 9.11-12 Multicarrier and direct spread configuration for N = 3. 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           657 
A strong common pilot channel allows for more accurate estimation of the fading channel and faster 
detection of weak multipath rays than a per-user pilot approach. Furthermore, for a common pilot, it is 
possible to send the pilot signal without incurring significant overhead for each user. As a result, a system 
with a common pilot approach can achieve better performance than that in the case of a per-user pilot 
approach. 
 
 
9.11.4.13 Forward Link Auxiliary Pilots  
 
Certain applications such as antenna arrays and antenna transmit diversity require a separate pilot for channel 
estimation and phase tracking. Auxiliary pilots are code multiplexed with other forward link channels and 
use orthogonal Walsh codes. Since a pilot contains no data (i.e., the all-zeros data case), auxiliary pilots may 
use a longer Walsh code to lessen the reduction of orthogonal Walsh codes available for traffic. Auxiliary 
pilots can also be used for orthogonal diversity transmission in the direct spread forward link. Furthermore, if 
the CDMA system uses a separate antenna array to support directional or spot beams, it is necessary to 
provide a separate forward link pilot for channel estimation. 
 
 
9.11.4.14 Forward Link Independent Data Channels  
 
The cdma2000 system provides two types of forward link physical data channels (fundamental and 
supplemental) that can each be adapted to a particular type of service. The use of fundamental and 
supplemental channels enables the system to be optimized for multiple simultaneous services. The two 
separate physical channels are separately coded and interleaved and in general have different transmit power 
levels and frame error rate set points. Each channel carries a different type of service, depending on the 
service scenarios. 
 
 
9.11.4.15 Forward Link Orthogonal Modulation  
 
To reduce or eliminate intracell interference, each forward link physical channel is modulated by a Walsh 
code. To increase the number of usable Walsh codes, QPSK modulation is employed prior to spreading. 
Every two information bits are mapped into a QPSK symbol. As a result, the available number of Walsh 
codes is increased by a factor of two relative to BPSK (prespreading) symbols. Furthermore, the Walsh code 
length varies to achieve different information bit rates. The forward link may be interference limited or 
Walsh code limited depending on the specific deployment and operating environment. When a Walsh code 
limit occurs, additional Walsh-like codes may be created by multiplying Walsh codes by masking functions. 
The codes created in this way are called quasi-orthogonal functions. Other suboptimal codes may also be 
used. 
 
 
9.11.4.16 Forward Link Carrier and Multicarrier Transmit Diversity  
 
Transmit diversity can reduce the required transmit power per channel and thus enhance capacity. Transmit 
diversity can be implemented in two basic different ways: (1) multicarrier transmit diversity and (2) direct 
spread transmit diversity.  
Multicarrier transmit diversity (MCTD) can be implemented with antenna diversity with no impact 
on the subscriber user (terminal), where a subset of carriers is transmitted on each antenna. The main 
characteristics of the multicarrier approach are the following: (1) coded information symbols are 
demultiplexed among multiple 1.25-MHz carriers, (2) frequency diversity is equivalent to spreading the 
signal over the entire bandwidth, (3) both time and frequency diversity are captured by convolutional 
coder/symbol repetition and interleaver, (4) the RAKE receiver9 captures signal energy from all the bands, 
                                                          
9 The RAKE receiver will be discussed in the following chapter. 

 658                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
(5) an identical Walsh code is used on all the carriers on each forward link channel, and (6) fast power 
control is used on the forward links.  
For direct spread transmit diversity, orthogonal transmit diversity (OTD) may be used. A different 
orthogonal code is used per antenna for spreading. This maintains the orthogonality between the two output 
streams, and hence self-interference is virtually eliminated in a flat-fading environment. Note that by splitting 
the coded bits into separate streams, the effective number of spreading codes per user is the same as the case 
without OTD. An auxiliary pilot signal is introduced with the additional antenna. 
 
 
9.11.4.17 Forward Link Rate Matching  
 
The cdma2000 system uses several approaches to match the data rates to the Walsh spreader input rates. 
These approaches include: (1) adjusting the code rate, (2) using symbol repetition with or without symbol 
puncturing, and (3) sequence repetition. Subrates of speech signals are generated by symbol repetition and by 
symbol puncturing, when necessary. A supplementary channel rate that is not the same data rate as the main 
channel data rate is realized by sequence repetition or by symbol repetition with symbol puncturing to match 
the desired channel data rate. These rate-matching approaches provide flexibility in matching data rates to 
channel rates.  
 
9.11.4.18 Fast Forward Power Control 
The cdma2000 system uses fast closed-loop power control on the forward link dedicated channels with 800 
updates per second. The closed-loop power control compensates for medium to fast fading and for 
inaccuracies in open loop power control. In addition fast forward link power control is effective for 
adaptation of dynamically changing interference conditions due to the activation and deactivation of high 
power high data rate users. 
 
 
9.11.4.19 Frame Length 
 
The cdma2000 system supports both 5 ms and 20 ms frames for control information on the fundamental and 
dedicated control channels, and utilizes 20 ms frames for other types of data, including voice. Interleaving 
and sequence repetition are applied over the entire frame interval. This improves the time diversity over 
systems that use shorter frame sizes. 
 
 
9.11.4.20 Forward Error Correction 
 
Forward error correction is composed of two basic types: convolutional coding and Turbo coding. The 
convolutional coding on the forward link uses K = 9 convolutional codes for the fundamental channel (F-
FCH). The supplemental channel (F-SCH) uses K = 9 convolutional codes for rates up to and including 14.4 
Kbps. Convolutional codes for higher data rates are optional on the F-SCH and Turbo codes are preferred. 
The F-SCH uses Turbo codes with K = 4, R = 1/4, 1/3, and 1/2 for data rates greater than 14.4 Kbps. Turbo 
codes are preferred for all data rates greater than 14.4 Kbps. 
 
 
9.11.4.21 Modulation and Spreading for the Forward Link 
 
The case for the N = 1 system can be deployed in a new spectrum environment or as a backward-compatible 
upgrade anywhere an IS-95B forward link is deployed in the same RF channel. The new cdma2000 channels 
have been designed so that they can coexist in an orthogonal manner with the code channels of the existing 
IS-95B system. The case for the N = 1 spreading, which is filtered quadriphase, is shown in Figure 9.11-13. 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           659 
The first processing involves the user data scrambling by the user long code generator, followed by the 
inphase (I) and quadrature (Q) mapping, the setting of the channel gain, the optional power control symbol 
puncturing, and the Walsh function spreading.  
Finally, as shown in Figure 9.11-13, the signal is inphase and quadrature (complex) PN spread, 
followed by baseband filtering and transmission. “X” denotes the input user data that is coded and has a CRC 
added (see Figure 9.11-11, for example). 
 
 
9.11.4.22 Modulation and Spreading for the Multicarrier Forward Link  
 
The multicarrier system can be deployed in a new spectral location or as a backwards-compatible upgrade 
anywhere a IS-95B can be employed in the same N RF channels. 
The overall structure of the multicarrier CDMA channel is shown in Figure 9.11-14. After 
scrambling with the PN code corresponding to user m, the user data is demultiplexed into N carriers, where 
N = 3, 6, 9, or 12. On each carrier, the demultiplexed bits are mapped onto I and Q followed by Walsh 
spreading. When applicable, power control bits (PC bits), for reverse closed-loop power control, may be 
punctured onto the forward link channel at a rate of 800 Hz. The signal on each carrier is orthogonally spread 
by the appropriate Walsh code function (Wnk) in such a manner as to maintain a fixed chip rate of 1.2288 
Mcps per carrier, where the Walsh code may differ on each carrier. The signal on each complex PN spread 
waveform, as shown in Figure 9.11-14, is followed by baseband filtering and frequency modulation. The box 
labeled “Complex PN spreading” is shown in Figure 9.11-15, and outputs the I and Q for Figure 9.11-14. 
 
Long-code
mask for user “m”
Bit
selector
Long-code
generator
A
⊕
Mux and
signal point
mapping
0 to +1
1 to -1
Data
channel
gain
Data
channel
gain
PC
channel
gain
PC bits 16
bits /frame
values
1
±
Puncture PC
Sym. 
(optional)
Puncture PC
Sym. 
(optional)
⊕
⊕
YI
YQ
Walsh
function
1.2288 Mbps
PNI(t)
YI
YQ
⊕
⊕
⊕
⊕
⊕
⊕
PNQ(t)
PNQ(t)
PNQ(t)
+
-
+
+
Baseband
filter
Baseband
filter
⊗
⊗
cos(2
)
cf t
π
sin(2
)
cf t
π
⊕
Transmitted
signal
( ) I channel PN sequence 1.2288 Mcps
( ) Q channel PN sequence 1.2288 Mcps
PC denotes power control
I
Q
PN t
PN
t
Long-code
mask for user “m”
Bit
selector
Long-code
generator
Bit
selector
Long-code
generator
A
⊕
Mux and
signal point
mapping
0 to +1
1 to -1
Data
channel
gain
Data
channel
gain
Data
channel
gain
Data
channel
gain
PC
channel
gain
PC
channel
gain
PC bits 16
bits /frame
values
1
±
PC bits 16
bits /frame
values
1
±
Puncture PC
Sym. 
(optional)
Puncture PC
Sym. 
(optional)
Puncture PC
Sym. 
(optional)
Puncture PC
Sym. 
(optional)
⊕
⊕
YI
YI
YQ
YQ
Walsh
function
1.2288 Mbps
PNI(t)
YI
YI
YQ
YQ
⊕
⊕
⊕
⊕
⊕
⊕
PNQ(t)
PNQ(t)
PNQ(t)
+
-
+
+
Baseband
filter
Baseband
filter
Baseband
filter
Baseband
filter
⊗
⊗
cos(2
)
cf t
π
sin(2
)
cf t
π
⊕
Transmitted
signal
( ) I channel PN sequence 1.2288 Mcps
( ) Q channel PN sequence 1.2288 Mcps
PC denotes power control
I
Q
PN t
PN
t
 
 
Figure 9.11-13 I and Q mapping, Walsh modulation, PN spreading, and baseband spreading for N = 1. 
 
 
For the cases N = 1, 3, 6, 9, and 12 use direct spreading as shown in Figure 9.11-16. The user data is 
first scrambled by the user long PN code followed by I and Q mapping, channel gain, power control 
puncturing, and Walsh spreading. The power control bits may not be punctured onto the forward link channel 
depending on the specific logical-to-physical channel mapping. Next, the signal is complex PN spread, 
followed by baseband filtering and phase modulation. Wn denotes the n-th Walsh function. 
 
 

 660                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Long code
generator
Long code
mask for user m
Bit
selector
⊕
X
Mux and
I-Q map
0 to +1
1 to -1
⊕
⊕
WnA
Complex PN
spreading
Baseband
filter
Baseband
filter
IA
QA
⊗
⊗
cos(2
)
Af t
π
sin(2
)
Af t
π
IA(t)
⊕
Carrier A
QA(t)
Mux and
I-Q map
0 to +1
1 to -1
⊕
⊕
WnB
Complex PN
spreading
Baseband
filter
Baseband
filter
IB
QB
⊗
⊗
cos(2
)
Bf t
π
sin(2
)
Bf t
π
IB(t)
⊕
Carrier B
QB(t)
Mux and
I-Q map
0 to +1
1 to -1
⊕
⊕
WnN
Complex PN
spreading
Baseband
filter
Baseband
filter
IN
QN
⊗
⊗
cos(2
)
Nf t
π
sin(2
)
Nf t
π
IN(t)
⊕
Carrier N
QN(t)
M
M
M
M
Demultiplexer
PC bits
16/20 ms
values
(optional)
1
±
Z
Z
Z
Notes: N carriers at 1.2288 Mcps per carrier
QPSK data, complex PN spreading
Z
Long code
generator
Long code
generator
Long code
mask for user m
Bit
selector
⊕
X
Mux and
I-Q map
0 to +1
1 to -1
⊕
⊕
WnA
Complex PN
spreading
Baseband
filter
Baseband
filter
IA
QA
⊗
⊗
cos(2
)
Af t
π
sin(2
)
Af t
π
IA(t)
⊕
Carrier A
QA(t)
Mux and
I-Q map
0 to +1
1 to -1
Mux and
I-Q map
0 to +1
1 to -1
⊕
⊕
WnA
Complex PN
spreading
Complex PN
spreading
Baseband
filter
Baseband
filter
Baseband
filter
Baseband
filter
IA
QA
⊗
⊗
cos(2
)
Af t
π
sin(2
)
Af t
π
IA(t)
⊕
Carrier A
QA(t)
Mux and
I-Q map
0 to +1
1 to -1
⊕
⊕
WnB
Complex PN
spreading
Baseband
filter
Baseband
filter
IB
QB
⊗
⊗
cos(2
)
Bf t
π
sin(2
)
Bf t
π
IB(t)
⊕
Carrier B
QB(t)
Mux and
I-Q map
0 to +1
1 to -1
Mux and
I-Q map
0 to +1
1 to -1
⊕
⊕
WnB
Complex PN
spreading
Complex PN
spreading
Baseband
filter
Baseband
filter
Baseband
filter
Baseband
filter
IB
QB
⊗
⊗
cos(2
)
Bf t
π
sin(2
)
Bf t
π
IB(t)
⊕
Carrier B
QB(t)
Mux and
I-Q map
0 to +1
1 to -1
⊕
⊕
WnN
Complex PN
spreading
Baseband
filter
Baseband
filter
IN
QN
⊗
⊗
cos(2
)
Nf t
π
sin(2
)
Nf t
π
IN(t)
⊕
Carrier N
QN(t)
Mux and
I-Q map
0 to +1
1 to -1
Mux and
I-Q map
0 to +1
1 to -1
⊕
⊕
WnN
Complex PN
spreading
Complex PN
spreading
Baseband
filter
Baseband
filter
Baseband
filter
Baseband
filter
IN
QN
⊗
⊗
cos(2
)
Nf t
π
sin(2
)
Nf t
π
IN(t)
⊕
Carrier N
QN(t)
M
M
M
M
Demultiplexer
Demultiplexer
Demultiplexer
PC bits
16/20 ms
values
(optional)
1
±
PC bits
16/20 ms
values
(optional)
1
±
Z
Z
Z
Notes: N carriers at 1.2288 Mcps per carrier
QPSK data, complex PN spreading
Z
 
 
Figure 9.11-14 Multicarrier CDMA forward link structure. 
 
⊕
⊕
⊕
⊕
⊕
⊕
XQ
XI
PNI(t)
PNQ(t)
PNI(t)
PNQ(t)
+
+
+
-
I
Q
Note:  Maps the complex input into a complex output.
⊕
⊕
⊕
⊕
⊕
⊕
XQ
XI
PNI(t)
PNQ(t)
PNI(t)
PNQ(t)
+
+
+
-
I
Q
Note:  Maps the complex input into a complex output.  
 
Figure 9.11-15 Complex PN spreading for Figure 9.10-14. 
 
 
⊕
A
Bit
selector
Long code
generator
Long code mask
for user m
Data
channel
gain
Puncture
1 PC sym.
in 1.25 ms
Data
channel
gain
Puncture
1 PC sym.
in 1.25 ms
PC
channel
gain
Signal
point
mapping
0 to +1
1 to -1
⊗
⊗
Wn
Sum with
other
code
spreading
Complex
PN
spreading
BB
filter
BB
filter
⊗
⊗
⊕
RF signal
Mux control
cos(2
)
cf t
π
sin(2
)
cf t
π
⊕
A
Bit
selector
Bit
selector
Long code
generator
Long code
generator
Long code mask
for user m
Data
channel
gain
Data
channel
gain
Puncture
1 PC sym.
in 1.25 ms
Puncture
1 PC sym.
in 1.25 ms
Puncture
1 PC sym.
in 1.25 ms
Data
channel
gain
Data
channel
gain
Puncture
1 PC sym.
in 1.25 ms
Puncture
1 PC sym.
in 1.25 ms
Puncture
1 PC sym.
in 1.25 ms
PC
channel
gain
PC
channel
gain
PC
channel
gain
Signal
point
mapping
0 to +1
1 to -1
⊗
⊗
Wn
Sum with
other
code
spreading
Complex
PN
spreading
Complex
PN
spreading
BB
filter
BB
filter
BB
filter
BB
filter
⊗
⊗
⊕
RF signal
Mux control
cos(2
)
cf t
π
sin(2
)
cf t
π
 
 
Figure 9.11-16 The case of N = 3, 6, 9, and 12 I-Q mapping and Walsh modulation. 
 
 
9.11.4.23 Main Characteristics of the cdma2000 Forward Link 
 
The main characteristics of the forward link are summarized in the following [42]: 
(1) Channels are orthogonal and use variable length Walsh codes. Different length Walsh codes are  
      used to achieve the same chip rate for different information rates. 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           661 
(2) QPSK modulation is used before spreading to increase the number of usable Walsh codes. 
(3) Forward error correction (FEC) is used. 
  Convolutional codes with K = 9 are used for voice and data. 
  Turbo codes with K = 4 are used for higher data rates on SCHs. 
(4) Supports nonorthogonal forward link channelization. 
  
These are used when running out of orthogonal space (not a sufficient number of Walsh 
codes available). 
  
Quasi-orthogonal functions are generated by masking existing Walsh functions. 
(5) It has a synchronous forward link. 
(6) The forward link provides diversity. 
(7) Fast forward power control in a closed loop mode is activated 800 times per second. 
(8) The supplemental channel active set is a subset of the fundamental channel active set. The 
maximum data rate supported for RS3 and RS5 for the supplemental channel is 153.6 Kbps 
(raw data rate). RS4 and RS6 will be supported only for voice calls with the fundamental 
channel rates of up to 14.4 Kbps (raw data rate). 
(9) Frame lengths are either one of those indicated here: 
  
20 ms frames are used for signaling and user information. 
  
5 ms frames are used for control information. 
 
 
9.11.5 cdma2000 Reverse Physical Channels 
 
The reverse physical channels (see Figure 9.11-5) provide a continuous waveform for all data rates, including 
both a continuous data channel and a continuous pilot channel from the mobile user to the base station. The 
continuous channel provides interleaving to be done over an entire frame. This allows the interleaving to 
achieve the full benefit of the frame time diversity. Table 9.11-3 lists the reverse channels. 
 
 
9.11.5.1 cdma2000 Reverse Access Channel (R-ACH) and the Reverse Common Control Channel  
(R-CCCH) 
 
The R-ACH and R-CCCH are common channels used for communication of layer 3 and the MAC (media 
access control) messages from the mobile unit to the base station. The R-CCCH is different from the R-ACH 
in that the R-CCCH provides enhanced capabilities beyond those of the R-ACH. As an example, the R-
CCCH supports the lower latency access procedures required for efficient operation of the packet data in a 
suspended state. 
 
Table 9.11-3 Reverse Physical Channels 
 
Reverse dedicated
physical channel
Reverse common
physical channel
Reverse dedicated
physical channel
Reverse common
physical channel
Physical Channels
Channel Abbreviation
Reverse Channel Type
Reverse access channel
R-ACH
Reverse common control channel
(9.6 Kbps only)
R-CCCH
Reverse pilot channel
R-PICH
Reverse dedicated control
channel
R-DCCH
Reverse traffic control:
-Fundamental
-Supplemental
R-FCH
R-SCH
 
 
 

 662                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
Both R-ACH and R-CCCH are multiple access channels as mobile users transmit without explicit 
authorization by the (ground mobile) base station (GMBS). The R-ACH and R-CCCH use a slotted ALOHA 
type of operation with higher capture probabilities due to the CDMA properties of the channel (simultaneous 
transmission of multiple users). It is to be noted that there can be one or more access channels per frequency 
assignment. The different access channels are distinguished by their different long PN codes. The R-CCCH is 
identical to the R-ACH for the data rate of 9.6 Kbps, with 20 ms frames. The rates of 19.2 Kbps and 38.4 
Kbps and frames of 5 ms and 10 ms will be supported for the R-CCCH. Figure 9.11-17 illustrates the 
structure of R-ACH and R-CCCH. 
 
Enhanced
access
channel
bits
Add 12 bit
frame
quality
indicator
Add 8
encoder
tail bits
Convolutional
encoder
R=1/4, K = 9
(a) Channel structure for the header on the enhanced channel for spreading rate 1
Block
interleaver
(768 symbols)
C
Modulation
symbols
Symbol
repetition
(4 X factor)
Add
frame
quality
indicator
Add 8
encoder
tail bits
Convolutional
encoder
R=1/4, K = 9
Block
interleaver
C
Modulation
symbols
Symbol
repetition
Reverse
Common
control
channel
bits
Bits/frame
Bits               Rate (Kbps)
Factor
Symbol                   Rate (Ksps)
172 (5 ms)
12
38.4
1X
768
153.6
360 (10 ms)
16
38.4
1X     
1536
153.6
172 (10 ms)
12
19.2
2X     
1536
153.6
744 (20 ms)
16
38.4
1X       
3072
153.6
360 (20 ms)
16
19.2
2X                   3072
153.6
172 (20ms)
12
9.6
4X        
3072
153.6
(b) Channel structure for the reverse common control channel for spreading rate 1
32 bits/frame                          9.6 Kbps                 
153.6 Ksps
(5 ms frame)
Note: Signal point C feeds into Figure 9.11-19.
Enhanced
access
channel
bits
Add 12 bit
frame
quality
indicator
Add 12 bit
frame
quality
indicator
Add 8
encoder
tail bits
Add 8
encoder
tail bits
Convolutional
encoder
R=1/4, K = 9
Convolutional
encoder
R=1/4, K = 9
(a) Channel structure for the header on the enhanced channel for spreading rate 1
Block
interleaver
(768 symbols)
Block
interleaver
(768 symbols)
C
Modulation
symbols
Symbol
repetition
(4 X factor)
Symbol
repetition
(4 X factor)
Add
frame
quality
indicator
Add
frame
quality
indicator
Add 8
encoder
tail bits
Add 8
encoder
tail bits
Convolutional
encoder
R=1/4, K = 9
Convolutional
encoder
R=1/4, K = 9
Block
interleaver
C
Modulation
symbols
Symbol
repetition
Symbol
repetition
Reverse
Common
control
channel
bits
Bits/frame
Bits               Rate (Kbps)
Factor
Symbol                   Rate (Ksps)
172 (5 ms)
12
38.4
1X
768
153.6
360 (10 ms)
16
38.4
1X     
1536
153.6
172 (10 ms)
12
19.2
2X     
1536
153.6
744 (20 ms)
16
38.4
1X       
3072
153.6
360 (20 ms)
16
19.2
2X                   3072
153.6
172 (20ms)
12
9.6
4X        
3072
153.6
(b) Channel structure for the reverse common control channel for spreading rate 1
32 bits/frame                          9.6 Kbps                 
153.6 Ksps
(5 ms frame)
Note: Signal point C feeds into Figure 9.11-19.
 
 
Figure 9.11-17 (a, b) Reverse access and reverse common control channel structure. 
 
 
9.11.5.2 cdma2000 Reverse Pilot Channel 
 
The reverse dedicated pilot channels (R-PICH) consist of a fixed reference value and multiplexed forward 
power channel control information, as shown in Figure 9.11-18. This time-multiplexed forward power 
control information is referred to as the power control subchannel. This subchannel provides information on 
the quality of the forward link at the rate of 1 bit per 1.25 ms power control group (PCG) and the forward 
link channels adjust their power via this PCG. The power control symbol repetition means that the 1-bit value 
is constant for that repeated symbol’s duration. The power control bit uses the last portion of each PCG. The 
+1 pilot symbols and multiplexed power-control symbols are all sent at the same power level. The binary 
power control symbols are represented with 1
±  values in Figure 9.11-18. 
The R-PICH signal is used for pilot signal time tracking, initial acquisition, power control 
measurements, and RAKE-receiver coherent reference recovery, as shown in Figure 9.11-18 for the R-PICH 
structure. 
 
 
9.11.5.3 Reverse Dedicated Control Channel 
 
The three channels the reverse dedicated control channel (R-DCCH), the R-FCH, and the R-SCH may or 
may not be used depending on the service scenario. A Walsh code sequence is used to spread each physical 
channel and thus provide orthogonal channelization among these physical channels. Both the spread pilot and 
the R-DCCH are mapped into the inphase (I) data channel. 
Both the spread R-FCH and the R-SCH are mapped into the quadrature (Q) data channel. The I and 
Q data channels are then spread using a complex-type PN spreading approach with filtering, as shown in 
Figure 9.11-19. See Figure 9.11-20 for reverse the dedicated channel structure and for reverse link I and Q 
mapping for 1X and 3X. 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           663 
Mux
A
Symbol
repetition
384  N copies
Pilot
(+1 value)
N=1 for 1.2288 Mcps
N=3 for 3.6864 Mcps
N=6 for 7.3728 Mcps
N=9 for 11.0592 Mcps
N=12 for 14.7456 Mcps
Pilot channel
plus PC bits
PC
Pilot
1 Power control group (PCG)
4 groups of 384  N PN chips
384N PN chips
1 PC bit per PCG
16 PC bits per frame
×
×
PC: Power control
Note: Point A feeds to 
Figure 9.10-19.
Mux
A
Symbol
repetition
384  N copies
Pilot
(+1 value)
N=1 for 1.2288 Mcps
N=3 for 3.6864 Mcps
N=6 for 7.3728 Mcps
N=9 for 11.0592 Mcps
N=12 for 14.7456 Mcps
Pilot channel
plus PC bits
PC
Pilot
1 Power control group (PCG)
4 groups of 384  N PN chips
384N PN chips
1 PC bit per PCG
16 PC bits per frame
×
×
PC: Power control
Mux
A
Symbol
repetition
384  N copies
Pilot
(+1 value)
N=1 for 1.2288 Mcps
N=3 for 3.6864 Mcps
N=6 for 7.3728 Mcps
N=9 for 11.0592 Mcps
N=12 for 14.7456 Mcps
Pilot channel
plus PC bits
PC
Pilot
1 Power control group (PCG)
4 groups of 384  N PN chips
384N PN chips
1 PC bit per PCG
16 PC bits per frame
Mux
A
Symbol
repetition
384  N copies
Pilot
(+1 value)
N=1 for 1.2288 Mcps
N=3 for 3.6864 Mcps
N=6 for 7.3728 Mcps
N=9 for 11.0592 Mcps
N=12 for 14.7456 Mcps
Pilot channel
plus PC bits
PC
Pilot
1 Power control group (PCG)
4 groups of 384  N PN chips
384N PN chips
1 PC bit per PCG
16 PC bits per frame
×
×
PC: Power control
Note: Point A feeds to 
Figure 9.10-19.
 
 
Figure 9.11-18 Reverse pilot channel (R-PICH) structure for reverse dedicated channels 
 
 
 
⊗
⊗
⊕
Baseband
filter
Gain
Gp
Gain
Gp
⊗
⊗
⊕
2 cos(
)
ct
ω
2 sin(
)
ct
ω
s(t)
Gain
⊗
⊗
⊕
Baseband
filter
+
+
-
-
⊗
Walsh
Cover (+/-)
Decimator
By 2
⊗
PNQ(t)
1-chip
delay
Reverse link
Long code
generator
Long code
mask
⊗
PNI(t)
⊕
Relative
gain
GS2
⊗
C
Walsh cover
(+ + - -) or (+ + - - - - + +)
A
Relative
gain
Gc
⊗
B
Walsh cover
(+ + + + + + + + - - - - - - - -)
⊕
Relative
gain
GF
⊗
C
Walsh cover
(+ + + + - - - - + + + + - - - -)
Relative
gain
GS1
⊗
C
(+ -), (+ + - - ), or (+ + - - + + - -
Walsh cover
for supplemental channel
(+ + + + - - - -)
for common control and
enhanced access channel
Supplemental
ch 2
Pilot ch & power
control symbols
Dedicated
control ch
Fundamental
channel
Note: ch denotes channel
Supplemental ch 1,
common control ch,
or enhanced
access ch
⊗
⊗
⊕
Baseband
filter
Baseband
filter
Gain
Gp
Gain
Gp
Gain
Gp
Gain
Gp
⊗
⊗
⊕
2 cos(
)
ct
ω
2 sin(
)
ct
ω
s(t)
Gain
⊗
⊗
⊕
Baseband
filter
Baseband
filter
+
+
-
-
⊗
Walsh
Cover (+/-)
Decimator
By 2
⊗
PNQ(t)
1-chip
delay
Reverse link
Long code
generator
Long code
generator
Long code
mask
⊗
PNI(t)
⊕
Relative
gain
GS2
⊗
C
Walsh cover
(+ + - -) or (+ + - - - - + +)
A
Relative
gain
Gc
⊗
B
Walsh cover
(+ + + + + + + + - - - - - - - -)
⊕
Relative
gain
GS2
⊗
C
Relative
gain
GS2
⊗
C
Walsh cover
(+ + - -) or (+ + - - - - + +)
A
Relative
gain
Gc
⊗
B
Walsh cover
(+ + + + + + + + - - - - - - - -)
⊕
Relative
gain
GF
⊗
C
Relative
gain
GF
⊗
C
Walsh cover
(+ + + + - - - - + + + + - - - -)
Relative
gain
GS1
⊗
C
(+ -), (+ + - - ), or (+ + - - + + - -
Walsh cover
for supplemental channel
(+ + + + - - - -)
for common control and
enhanced access channel
(+ -), (+ + - - ), or (+ + - - + + - -
Walsh cover
(+ -), (+ + - - ), or (+ + - - + + - -
Walsh cover
for supplemental channel
(+ + + + - - - -)
for common control and
enhanced access channel
Supplemental
ch 2
Pilot ch & power
control symbols
Dedicated
control ch
Fundamental
channel
Note: ch denotes channel
Supplemental ch 1,
common control ch,
or enhanced
access ch
 
 
Figure 9.11-19 Reverse link I and Q mapping for 1X and 3X. 
 
 
9.11.5.4 Reverse Fundamental Channel 
 
The reverse fundamental channel (R-FCH) supports both 5 and 20 ms frames. The 20 ms frame provides 
rates derived from the IS-95B for RS1 or RS2. Within each 20 ms frame interval, either one 20 ms R-FCH 
structure, up to four 5 ms R-FCH structure(s), or no information can be transmitted. Also, when a 5 ms  
R-FCH structure is used, it can be either on or off in each of the four 5 ms segments of a 20 ms frame 
interval. The R-FCH is transmitted at different rates. The 5 ms frames provide 24 information bits per frame 

 664                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
with a 16 bit cyclic redundant code (CRC). The rates supported for the R-FCH are 1.5, 2.7, 4.8, and 9.6 kbps 
for RS3 and RS5, and 1.8, 3.6, 7.2, and 14.4 Kbps for RS4 and RS6. Figures 9.11-21 and 9.11-22 illustrate 
R-FCH/R-SCH for 1X, radio configuration (RC) 4 and 3X, RC6. 
 
Reverse
dedicated
control
channel bits
Block
interleaver
B
Modulation
symbols
Reverse
dedicated
control
channel bits
Add
frame
quality
indicator
Add 8
encoder
tail bits
Convolutional
encoder
R = ¼, K=9
Symbol
repetition
(2X factor)
Add 8
encoder
tail bits
Convolutional
encoder
R = ¼, K=9
Symbol
repetition
(2X factor)
Add
Reserved
bits
Symbol
puncture
Block
interleaver
B
Modulation
symbols
(a) Reverse dedicated control channel structure for radio configuration (RC) 3 and 5
(b) Reverse dedicated control channel structure for radio configuration (RC) 4 and 6
Bits/frame
Bits
Rate (Kbps)
Symbols
Rate (Ksps)
24 (5 ms)
16
9.6
384
76.8
172 (20 ms)
12
9.6
1536
76.8
Bits/frame     Bits
Bits
Rate (Kbps)
Deletion
Symbols
Rate (Ksps)
24 (5 ms)
0
16
9.6
None
384
76.8
172 (20 ms)
1
12
14.4
8 of 24
1536
76.8
Add
frame
quality
indicator
Note: Signal point B feeds into Figure 9.11-19.
Reverse
dedicated
control
channel bits
Block
interleaver
B
Modulation
symbols
Reverse
dedicated
control
channel bits
Add
frame
quality
indicator
Add 8
encoder
tail bits
Convolutional
encoder
R = ¼, K=9
Symbol
repetition
(2X factor)
Add 8
encoder
tail bits
Convolutional
encoder
R = ¼, K=9
Symbol
repetition
(2X factor)
Add
Reserved
bits
Symbol
puncture
Block
interleaver
B
Modulation
symbols
(a) Reverse dedicated control channel structure for radio configuration (RC) 3 and 5
(b) Reverse dedicated control channel structure for radio configuration (RC) 4 and 6
Bits/frame
Bits
Rate (Kbps)
Symbols
Rate (Ksps)
24 (5 ms)
16
9.6
384
76.8
172 (20 ms)
12
9.6
1536
76.8
Bits/frame     Bits
Bits
Rate (Kbps)
Deletion
Symbols
Rate (Ksps)
24 (5 ms)
0
16
9.6
None
384
76.8
172 (20 ms)
1
12
14.4
8 of 24
1536
76.8
Add
frame
quality
indicator
Note: Signal point B feeds into Figure 9.11-19.
Block
interleaver
B
Modulation
symbols
Block
interleaver
B
Modulation
symbols
Reverse
dedicated
control
channel bits
Add
frame
quality
indicator
Add
frame
quality
indicator
Add 8
encoder
tail bits
Add 8
encoder
tail bits
Convolutional
encoder
R = ¼, K=9
Convolutional
encoder
R = ¼, K=9
Symbol
repetition
(2X factor)
Symbol
repetition
(2X factor)
Add 8
encoder
tail bits
Convolutional
encoder
R = ¼, K=9
Convolutional
encoder
R = ¼, K=9
Symbol
repetition
(2X factor)
Symbol
repetition
(2X factor)
Add
Reserved
bits
Symbol
puncture
Symbol
puncture
Block
interleaver
B
Modulation
symbols
Block
interleaver
B
Modulation
symbols
(a) Reverse dedicated control channel structure for radio configuration (RC) 3 and 5
(b) Reverse dedicated control channel structure for radio configuration (RC) 4 and 6
Bits/frame
Bits
Rate (Kbps)
Symbols
Rate (Ksps)
24 (5 ms)
16
9.6
384
76.8
172 (20 ms)
12
9.6
1536
76.8
Bits/frame     Bits
Bits
Rate (Kbps)
Deletion
Symbols
Rate (Ksps)
24 (5 ms)
0
16
9.6
None
384
76.8
172 (20 ms)
1
12
14.4
8 of 24
1536
76.8
Add
frame
quality
indicator
Note: Signal point B feeds into Figure 9.11-19.
 
 
Figure 9.11-20 (a, b) Reverse dedicated channel structure. 
 
 
Add
frame
quality
indicator
Add 8
reserved
/encoder
tail bits
Convolutional
or Turbo
encoder
Symbol
repetition
Symbol
puncture
Block
interleaver
C
Channel
bits
Bits/frame 
Bits
Rate (Kbps)   Rate                      Factor 
Deletion      Symbols       Rate (Ksps)
24 (5 ms)                                       16              
9.6          ¼
2X                        None      
384                  76.8  
16                                                   6          
1.5          ¼
16X                   1 of 5        
1536                 76.8
40
6
2.7          ¼
8X                    1 of 9            1536
76.8
80
8
4.8          ¼
4X
None
1536
76.8
172
12
9.6           ¼
2X
None
1536N
76.8
360
16
19.2         ¼
1X
None
1536N
76.8
744
16
38.4         ¼
1X
None
3072N
153.6
1512
16
76.8         ¼
1X
None
6144N
614.4
3048
16
153.6       ¼
1X
None
12,288N
614.4
6120
16
307.2       ¼
1X
None
12,288N
614.4
Notes:
1.
The 5 ms frame is used only for the fundamental channels, and only rates of 9.6 Kbps or less are used for the fundamental channels.
2.
Turbo coding may be used for the supplemental channels with rates of 19.2 Kbps or more; otherwise the K=9 convolutional coding is
used.
3.
With convolutional coding, the reserved tail bits provide an encoder tail. With Turbo encoding, the first 2 of these bits are reserved
bits that are encoded and the last 6 bits are replaced by an internally generated tail.
4.
N is the number of consecutive 20 ms frames which the interleaving is done (that is N =1, 2, or 4).
5.      Signal point C feeds into Figure 9.11-19.
Add
frame
quality
indicator
Add 8
reserved
/encoder
tail bits
Convolutional
or Turbo
encoder
Symbol
repetition
Symbol
puncture
Block
interleaver
C
Channel
bits
Bits/frame 
Bits
Rate (Kbps)   Rate                      Factor 
Deletion      Symbols       Rate (Ksps)
24 (5 ms)                                       16              
9.6          ¼
2X                        None      
384                  76.8  
16                                                   6          
1.5          ¼
16X                   1 of 5        
1536                 76.8
40
6
2.7          ¼
8X                    1 of 9            1536
76.8
80
8
4.8          ¼
4X
None
1536
76.8
172
12
9.6           ¼
2X
None
1536N
76.8
360
16
19.2         ¼
1X
None
1536N
76.8
744
16
38.4         ¼
1X
None
3072N
153.6
1512
16
76.8         ¼
1X
None
6144N
614.4
3048
16
153.6       ¼
1X
None
12,288N
614.4
6120
16
307.2       ¼
1X
None
12,288N
614.4
Notes:
1.
The 5 ms frame is used only for the fundamental channels, and only rates of 9.6 Kbps or less are used for the fundamental channels.
2.
Turbo coding may be used for the supplemental channels with rates of 19.2 Kbps or more; otherwise the K=9 convolutional coding is
used.
3.
With convolutional coding, the reserved tail bits provide an encoder tail. With Turbo encoding, the first 2 of these bits are reserved
bits that are encoded and the last 6 bits are replaced by an internally generated tail.
4.
N is the number of consecutive 20 ms frames which the interleaving is done (that is N =1, 2, or 4).
5.      Signal point C feeds into Figure 9.11-19.
 
 
Figure 9.11-21 R-FCH/R-SCH for 1X, RC3 and 3X, RC5. 
 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           665 
Bits/frame 
Bits
Bits
Rate (Kbps)   Rate                      Factor 
Deletion      Symbols       Rate (Ksps)
24 (5 ms)               0                       16              
9.6          ¼
2X                        None      
384                  76.8  
21
1                         6                 
1.8          ¼
16X                   8 of 24       
1536                 76.8
Add
reserved
bits
Add 8
reserved
/encoder
tail bits
Add 8
encoder
tail bits
Convolutional
or Turbo
encoder
Symbol
repetition
Symbol
puncture
Block
interleaver
C
Channel
bits
55
1
8
3.6          ¼
8X                    8 of 24           1536
76.8
125
1
10
7.2          ¼
4X
8 of 24
1536
76.8
267
1
12
14.4         ¼
2X
8 of 24
1536N
76.8
552
0
16
28.8         ¼
2X
8 of 24
3072N
153.6
1128
0
16
57.6         ¼
2X
8 of 24
5144N
307.2
2280
0
16
115.2       ¼
2X
8 of 24
12,288N
614.4
4584
0
16
230.4       ¼
1X
8 of 24
12,288N
614.4
Notes:
1.
The 5 ms frame is used only for the fundamental channels, and only rates of 14.4 Kbps or less are used for the fundamental channels.
2.
Turbo coding may be used for the supplemental channels with rates of 28.8 Kbps or more; otherwise the K=9 convolutional coding is
used.
3.
With convolutional coding, the reserved tail bits provide an encoder tail. With Turbo encoding, the first 2 of these bits are reserved
bits that are encoded and the last 6 bits are replaced by an internally generated tail.
4.
N is the number of consecutive 20 ms frames which the interleaving is done (that is N =1, 2, or 4).
5.
Signal point C feeds into Figure 9.11-19.
Bits/frame 
Bits
Bits
Rate (Kbps)   Rate                      Factor 
Deletion      Symbols       Rate (Ksps)
24 (5 ms)               0                       16              
9.6          ¼
2X                        None      
384                  76.8  
21
1                         6                 
1.8          ¼
16X                   8 of 24       
1536                 76.8
Add
reserved
bits
Add 8
reserved
/encoder
tail bits
Add 8
encoder
tail bits
Convolutional
or Turbo
encoder
Symbol
repetition
Symbol
puncture
Block
interleaver
C
Channel
bits
55
1
8
3.6          ¼
8X                    8 of 24           1536
76.8
125
1
10
7.2          ¼
4X
8 of 24
1536
76.8
267
1
12
14.4         ¼
2X
8 of 24
1536N
76.8
552
0
16
28.8         ¼
2X
8 of 24
3072N
153.6
1128
0
16
57.6         ¼
2X
8 of 24
5144N
307.2
2280
0
16
115.2       ¼
2X
8 of 24
12,288N
614.4
4584
0
16
230.4       ¼
1X
8 of 24
12,288N
614.4
Notes:
1.
The 5 ms frame is used only for the fundamental channels, and only rates of 14.4 Kbps or less are used for the fundamental channels.
2.
Turbo coding may be used for the supplemental channels with rates of 28.8 Kbps or more; otherwise the K=9 convolutional coding is
used.
3.
With convolutional coding, the reserved tail bits provide an encoder tail. With Turbo encoding, the first 2 of these bits are reserved
bits that are encoded and the last 6 bits are replaced by an internally generated tail.
4.
N is the number of consecutive 20 ms frames which the interleaving is done (that is N =1, 2, or 4).
5.
Signal point C feeds into Figure 9.11-19.
Add
reserved
bits
Add 8
reserved
/encoder
tail bits
Add 8
encoder
tail bits
Convolutional
or Turbo
encoder
Symbol
repetition
Symbol
puncture
Block
interleaver
C
Channel
bits
Add
reserved
bits
Add 8
reserved
/encoder
tail bits
Add 8
encoder
tail bits
Convolutional
or Turbo
encoder
Symbol
repetition
Symbol
puncture
Block
interleaver
C
Channel
bits
55
1
8
3.6          ¼
8X                    8 of 24           1536
76.8
125
1
10
7.2          ¼
4X
8 of 24
1536
76.8
267
1
12
14.4         ¼
2X
8 of 24
1536N
76.8
552
0
16
28.8         ¼
2X
8 of 24
3072N
153.6
1128
0
16
57.6         ¼
2X
8 of 24
5144N
307.2
2280
0
16
115.2       ¼
2X
8 of 24
12,288N
614.4
4584
0
16
230.4       ¼
1X
8 of 24
12,288N
614.4
Notes:
1.
The 5 ms frame is used only for the fundamental channels, and only rates of 14.4 Kbps or less are used for the fundamental channels.
2.
Turbo coding may be used for the supplemental channels with rates of 28.8 Kbps or more; otherwise the K=9 convolutional coding is
used.
3.
With convolutional coding, the reserved tail bits provide an encoder tail. With Turbo encoding, the first 2 of these bits are reserved
bits that are encoded and the last 6 bits are replaced by an internally generated tail.
4.
N is the number of consecutive 20 ms frames which the interleaving is done (that is N =1, 2, or 4).
5.
Signal point C feeds into Figure 9.11-19.
 
 
Figure 9.11-22 R-FCH/R-SCH for 1X, RC4 and 3X, RC6. 
 
 
9.11.5.5 Reverse Supplementary Channel 
 
There are two distinct modes for the reverse supplementary channel (R-SCH). In the first mode the data rates 
do not exceed 14.4 Kbps, and it uses blind rate detection (i.e., no scheduling or rate information). For the 
second mode, the base station explicitly knows the rate information. The R-SCH is used for data calls and 
can operate at different prenegotiated rates. Only RS3 and RS5 are supported for the R-SCH. Since only RS3 
is supported on the R-FCH for high-speed packet data calls, the rates supported for the R-SCH are 9.6, 19.2, 
38.4, 76.8, and 153.6 Kbps as indicated for R-FCH/R-SCH for 1X, RC4 and 1X, RC6 in Figure 9.11-22. It 
can be seen that Figures 9.11-21 and 9.11-22 are very similar.  
 
 
9.11.5.6 Reverse Power Control 
 
The power of the reverse link channels for a specific user is adjusted at a rate of 800 bits per second. The 
reverse power control bits are punctured onto a dedicated transmitter power. Figure 9.11-4 provides a 
comparison between the reverse physical channels used in IS-95A/B and cdma2000. This figure is located 
earlier in the cdma2000 section. 
 
 
9.11.5.7 Reverse Link Forward Error Correction Coding 
 
For R-FCH the reverse link utilizes a K = 9, R = 1/4 (code rate of 1/4) convolutional code. The distance 
properties of this code provide performance gains versus higher rate codes in fading and additive white 
Gaussian noise (AWGN) channel conditions. The constraint length K = 9, R = 1/4 convolutional codes 
provides a gain of about 0.5 dB over a K = 9, R = 1/2 in AWGN. The R-SCH uses convolutional codes for 
data rates of up to 14.4 Kbps.  
Convolutional codes for higher data rates on the R-SCH are optional, and the use of Turbo codes is 
preferred, since they can offer even better bit error rate performance. A common constituent code is used for 
the reverse link. For all R-SCH links Turbo codes of constraint length 4, rate 1/4, 1/3, and 1/2 are used. 
 
 

 666                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
9.11.5.8 Main Reverse Link Physical Layer Characteristics for cdma2000 
 
The main reverse link physical layer characteristics are listed next. 
(1) A continuous waveform. cdma2000 utilizes a continuous pilot and a continuous data-channel 
waveform, for all data rates. This continuous waveform minimizes interference to external 
biomedical devices such as pacemakers and hearing aids, and permits a range increase at lower 
transmission rates. Interleaving can be performed over the entire frame, rather than just the 
portions that are not gated off, since it is a continuous waveform. The continuous waveform 
enables the interleaving processing to achieve the benefits of frame time diversity. The pilot 
signal is used by the base station for multipath searches, tracking, and as a reference for coherent 
demodulation, as well as to measure the quality of the link for power control purposes. 
cdma2000 utilizes separate orthogonal channels for the pilot and each of the data channels. 
Therefore, the relative power levels of the pilot and physical data channels can easily be 
adjusted, without changing the frame structure or power levels of some symbols of a frame in 
cdma2000. 
(2) Orthogonal channels using different length Walsh sequences. cdma2000 uses orthogonal 
channels for the pilot and the other physical channels, as mentioned earlier. These orthogonal 
channels are provided with different length Walsh sequences. The higher-rate channels are used 
with shorter Walsh sequences. The use of shorter Walsh sequence allows high encoder output 
rates to be accommodated.  
(3) Low spectral side lobes. The cdma2000 system achieves low spectral side lobes with nonideal 
mobile (nonlinear) power amplifiers by splitting the physical channels into an I and Q channel 
and using a complex-multiply-type PN spreading approach, along with filtering. 
(4) Rate matching. cdma2000 utilizes several approaches to match the data rates to the Walsh 
function spreader input rates. These include adjusting the code rate using puncturing, symbol 
repetition, and sequence repetition. The design approach is to first try to use a low rate code, but 
not to reduce the code rate below R = ¼, since additional coding gains for lower rates would be 
small, and the decoder implementation complexity would increase very significantly.  
(5) Independent data channels. cdma2000 provides two types of physical data channels (R-FCH 
and R-SCH) that are used on the reverse link and that can be adapted to a particular type of 
service. The system can be optimized for multiple simultaneous services by the use of both  
R-FCH and R-SCH. These channels are separately coded and interleaved, and may have 
different transmit power level and frame error rate (FER) set points. 
(6) Reverse signal power control. cdma2000 utilizes three components for reverse power control 
from the mobile to the base station: (a) open loop, (b) closed loop, and (c) outer loop. Open-loop 
power control adjusts the mobile transmitter power, based upon the power that is received at the 
user (mobile) terminal for the path loss (for a low path loss rate variation) from the mobile to the 
base station, and handles very slow fading rates. Closed-loop power control consists of an 800 
bps feedback loop from the base station to the mobile unit to set the transmit power of the mobile 
unit. The closed-loop power control compensates for medium to fast fading and inaccuracies in 
the open-loop power control. The outer loop power control is dependent on the particular 
implementation, but normally adjusts the closed-loop power control threshold in the ground 
mobile base station to maintain a desired forward error rate. 
(7) Frame length. The cdma2000 system uses both 5 and 20 ms frames for control information on 
fundamental and dedicated control channels. It also uses a 20 ms frame for the other types of 
data, including voice. Interleaving and sequence repetition are accomplished over the entire 
frame interval. This provides improved time diversity over systems that utilize shorter frame 
sizes. The 20 ms frames are used for voice. A shorter frame would reduce the one component of 
the total voice delay, but it would negatively affect the bit error rate demodulation performance, 
because of the shorter interleaving span. 
(8) Separate dedicated control channel. The cdma2000 system reverse link consists of a separate 
low-rate, continuous, orthogonal, dedicated control channel. This channel provides for a flexible 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           667 
and dedicated control channel structure, which does not impact the other pilot and physical 
channel frame structures. 
 
 
9.11.5.9 Primary cdma2000 Reverse Link Modulation and Coding 
 
Direct sequence spreading is used in the reverse link with an IS-95B chip rate of 1.2288 Mcps (denoted as a 
1X chip rate) or chip rates that are 3, 6, 9, or 12 times the IS-95B chip rate. The higher chip rate systems are 
denoted by 3X, 6X, 9X, and 12X and they are have corresponding chip rates of 3.6863 Mcps, 7.3728 Mcps, 
11.0592 Mcps, and 14.7456 Mcps. 
The 1X system can be utilized whenever an IS-95B reverse link can be used. An IS-95B reverse link 
carrier frequency can be also be shared with users transmitting the IS-95B waveform and those transmitting 
the 1X cdma2000 waveform. In applications where larger bandwidth allocations are available the higher chip 
rate reverse links can be used. 
Users that support a higher chip rate would typically also support the 1X chip rate. This will allow 
these mobiles to access ground mobile base stations that support only the 1X chip rate and allow operators 
with larger bandwidths the flexibility of using a mixture of 1X and higher chip rate systems. 
The 1X cdma2000 reverse links, within an operator’s allocated band, would typically occupy the 
same bandwidth as the IS-95B reverse link system (i.e., a 1.25-MHz bandwidth), and higher chip rate 
cdma2000 links would typically occupy a bandwidth that is equal to 1.25 MHz times the chip rate factor. 
Typically a guard band of 625 kHz (1.25/2 MHz) would be used on both sides of the operator’s allocated 
band, to minimize cross channel interference. 
The reverse CDMA channel is composed of reverse common channels and reverse dedicated 
channels. 
 
The reverse common channel is used by the mobile station to initiate communications with the base 
station and to respond to forward link paging channel messages. The reverse common channel uses a random 
access protocol. reverse common channels are uniquely identified by their long code.  
 
The reverse dedicated channel may be used for the transmission of user traffic and signaling 
information to the base station. 
 
 
9.11.5.10 Key Characteristics of the Reverse Link 
 
The key characteristics of cdma2000 reverse link are the following: 
(1)  The channels are primarily code multiplexed. 
(2)  Different QoS and physical layer characteristics use separate channels. 
(3) Signal transmission is provided in a continuous format to avoid electromagnetic interference (EMI). 
(4) The employment of Walsh functions renders the channels orthogonal. They are also I/Q split so that 
performance is equivalent to BPSK (the higher data rate channels imply shorter Walsh sequences). 
(5) The links are a hybrid combination of QPSK and BPSK modulation. 
(6) There is a coherent reverse link that has a continuous pilot signal. 
(7) Forward power control information is time multiplexed with the pilot signal. 
(8) Power peaking is reduced by restricting alternate phase changes of the complex scrambling, and also 
the side lobes are narrowed by this process, yielding a requirement for less channel bandwidth. 
(9) Independent fundamental and supplemental channels have different transmit power levels and frame 
error rate (FER) target levels. 
(10) Forward error correction coding schemes: Convolutional codes with K = 9 are used for voice and 
data. Parallel turbo codes with K = 4 are used for high data rates on the supplemental channels. 
(11) Reverse power control is accomplished with (a) open loop, (b) closed loop, and (c) outer loop 
approaches. Fast-reverse power control is used at a rate of 800 times per second. 
(12) Frame lengths are as follows: (a) 5 ms are used for control information and (b) 20 ms frames are 
used for signaling and user information. 
 

 668                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
9.11.6 Data Services in cdma2000 
 
cdma2000 supports simultaneous voice data operations without impacting the voice quality of high-speed 
data performance. There are two types of data services in cdma2000: (1) packet data services and (2) high-
speed circuit data services.  
 
Packet data services support a large number of mobile stations. Dedicated channels for packet 
services users are allocated based “on demand” and released immediately after the end of the activity period. 
Short data bursts can be transmitted over a common traffic channel. It uses Internet protocol (IP) to support 
wireless packet data networking capability.  
 
High speed circuit data services utilize dedicated traffic and control channels that are typically 
assigned to the mobile unit for extended periods of time during the circuit service sessions. In addition some 
delay sensitive services, such as video applications, require a dedicated channel for the duration of the call.  
 
Now we turn our attention to another example of a modern mobile wireless system. 
 
 
9.12 WCDMA  
 
Wideband code division multiple access (WCDMA) is one of the main technologies for implementation for 
the third generation (3G) cellular radio systems, as is cdma2000. In a report by the GSM Association, it 
indicated WCDMA is going to be the main standard used for 3G services. It also said Europe and Asia would 
have 85% of the 3G market using the WCDMA standard. WCDMA is the 3G standard promoted by most 
European operators and is used by NTT DoCoMo (Japan) in its FOMA services. The other 3G standard is 
cdma2000, which was discussed earlier; this is being promoted by an American CDMA manufacturer. 
cdma2000 is beginning to be adopted by telecom operators around the world. Some countries, such as South 
Korea and the United States, are using both standards, but most prospective 3G operators are opting for the 
WCDMA standard.  
Various aspects of WCDMA will now be presented. 
 
 
9.12.1 WCDMA Radio Frequency Protocol Architecture 
 
The radio interface protocol stack is shown in Figure 9.12-1. The lowest block is the WCDMA physical 
layer. The second layer is made up of the medium access layer (MAC), the radio link control (RLC-C for the  
 
Physical layer
Medium access control (MAC)
codec
RLC-C
RRC
MM
CM
RLC-U
LAC
Control
plane
signaling
User
Plane
data 
User
plane
speech
Physical layer
Medium access control (MAC)
codec
RLC-C
RRC
MM
CM
RLC-U
LAC
Physical layer
Medium access control (MAC)
codec
RLC-C
RRC
MM
CM
RLC-U
LAC
Control
plane
signaling
User
Plane
data 
User
plane
speech
 
 
Figure 9.12-1 WCDMA radio interface protocol architecture. 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           669 
 
control plane and RLC-U for the user plane) protocols, as well as the link access control (LAC) protocol  
[46, 47]. MAC and RLC belong to the access stratum. The network layer of the control plane is divided into 
the radio resource control (RRC) sublayer and the mobility management (MM) and connection management 
(CM) sublayers. Both CM and MM belong to the access management stratum. The codec layer shown in 
Figure 9.12-1 can be part of the access or the nonaccess stratums. 
 
 
9.12.2 WCDMA Channels 
 
We will briefly outline the channels of WCDMA, which include the logical channels, the transport channels, 
and the physical channels [48]. The logical channels are mapped to the transport channels which are once 
again mapped to the physical channels. The logical to transport channel conversion occurs in the medium 
access control (MAC) layer, which is a lower sublayer in the data link layer, which is layer 2. WCDMA has 
both an uplink (reverse link) and a downlink (forward link).  
 
The logical channels include (1) broadcast channel (BCCH) for downlink broadcast control, (2) 
paging control channel (PCCH) for downlink paging information, (3) dedicated control channel (DCCH), 
which is dedicated between the mobile and the network, (4) common control channel (CCCH), which is 
common between the mobile and the network, (5) dedicated traffic channel (DTCH) for the uplink and the 
downlink for one mobile, and (6) common traffic channel (CTCH), which is unidirectional one to one and 
one to many. 
 
The transport channels include: (1) dedicated transport channel (DCH) for the uplink and the 
downlink, which is mapped to the DCCH and the DTCH, (2) broadcast channel (BCH) for the downlink 
mapped to the BCCH, (3) forward access channel (FACH) for the downlink, which is mapped to the BCCH, 
the CCCH, the CTCH, the DCCH, and the DTCH, (4) paging channel (PCH) for the downlink, which is 
mapped to the PCCH, (5) random access channel (RACH) for the uplink, which is mapped to the CCCH, the 
DCCH, and the DTCH, (6) uplink common packet channel (CPCH) for the uplink, which is mapped to the 
DCCH and the DTCH, and (7) downlink shared channel (DSCH) for the downlink, which is mapped to the 
DCCH and the DTCH. 
 
The physical channels include: (1) primary common physical channel (PCCPCH), which is mapped 
to the BCH, (2) secondary common control physical channel (SCCPCH), which is mapped to the FACH and 
the PCH, (3) physical random access channel (PRACH), which is mapped to the RACH, (4) dedicated 
physical data channel (DPDCH), which is mapped to the DCH, (5) dedicated physical control channel 
(DPCCH), which is mapped to the DCH, (6) physical downlink shared channel, which is mapped to the 
DSCH, (7) physical common packet channel (PCPCH), which is mapped to the CPCH, (8) synchronization 
channel (SCH), (9) common pilot channel (CPICH), (10) acquisition indicator channel (AICH), (11) paging 
indication channel (PICH), (12) CPCH status indication channel (CSICH), and (13) collision 
detection/channel assignment indication channel (CD/CA-ICH). 
 
 
9.12.3 WCDMA Physical Layer 
 
WCDMA has both an uplink (reverse link) that transmits from the mobile to the base station and a downlink 
(forward link) that transmits from the base station to the mobile. WCDMA is a wideband CDMA direct 
sequence spread spectrum system that has a basic chip rate of 4.096 Mcps. However, the chip rate can be 
increased to 8.192 or 16.384 Mcps in order to accommodate user bit rates of 2 Mbps. WCDMA utilizes 
frequency division multiplexing (FDD) and has a carrier frequency spacing of 4.4–5.0 MHz with a carrier 
raster of 200 kHz. The reason for the 200 kHz carrier raster is to provide satisfactory coexistence and 
interoperability with GSM (2G). This section utilizes material from [46]. 
 
 
 
 

 670                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
9.12.3.1 WCDMA Uplink DPDCH and DPCCH 
 
For the uplink (reverse link) the DPDCH signal and the DPCCH signal are code and I Q multiplexed within 
each radio frame. The uplink DPDCH carries layer 2 data, while the DPCCH carries pilot bits, transmit-
power-control (TPC) commands, and an optional transport-format indicator (TFI). The uplink (reverse link) 
for DPCCH and DPCCH are shown in Figure 9.12-2. Each frame is composed of 10 ms and is divided into 
16 slots of length 0.625 ms, each corresponding to one power control period. Therefore the power control 
frequency is 1,600 Hz. Within each slot, the DPCCH and the DPCCH are transmitted in parallel on the I and 
Q phases of the QPSK signal, using different codes.  
 
One frame (10 ms)
Slot 1
Slot 2
Slot 3
Slot 4
Slot 13 Slot 14 Slot 15 Slot 16
Slot i
Data
Pilot
TPC
TFI (optional)
DPDCH
DPCCH
0.625 ms
One frame (10 ms)
Slot 1
Slot 2
Slot 3
Slot 4
Slot 1
Slot 2
Slot 3
Slot 4
Slot 13 Slot 14 Slot 15 Slot 16
Slot 13 Slot 14 Slot 15 Slot 16
Slot i
Data
Pilot
TPC
TFI (optional)
DPDCH
DPCCH
0.625 ms
 
 
Figure 9.12-2 Uplink frame structure showing DPCCH/DPDCH. 
 
 
The DPDCH signal and the DPCCH signals are modulated as shown in Figure 9.12-2. 
 
DPDCH
DPCCH
Channelization code Cd
Channelization code Cc
IQ
Mux
I+jQ
Scrambling code Cscram
To QPSK
modulator
DPDCH
DPCCH
Channelization code Cd
Channelization code Cc
IQ
Mux
I+jQ
Scrambling code Cscram
To QPSK
modulator
 
 
Figure 9.12-3 WCDMA channelization and scrambling for the uplink (reverse link) dedicated physical channels. 
 
 
 
The spreading process and the modulation are shown in Figure 9.12-3. The DPDCH and the 
DPCCH signals are mapped to the I and Q branches, respectively, and spread by two different channelization 
codes on I and Q. The resulting complex signal is scrambled by the scrambling code and then the result is 
QPSK modulated with square root cosine pulse shaping with a roll-off factor of 0.22. Square root raised  
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           671 
 
cosine pulse shaping is very commonly used in mobile communications and satisfies the Nyquist criterion to 
avoid intersymbol interference. The filter is characterized by a flat response out to f = (1– )1/(2T) where T is 
the symbol duration, and goes to zero frequency response at a frequency that depends on the roll-off factor 
( ). When the roll-off factor is zero then the filter has an abrupt drop off at f = 1/(2T). In actuality the square 
root filter is used on the transmitter side and a similar square root filter is used on the receiver side so that the 
resulting signal pulses out of the receiver filter appear to have been filtered by a raised cosine filter and don’t 
have intersymbol interference (ideally).  
 
The channelization codes are used to spread the data to the chip rate, while preserving orthogonality 
between physical channels with different rates and spreading factors. A method called orthogonal variable 
spreading factor (OVSF) codes are used for the channelization. The OVSF codes can be defined in a tree-
like manner as shown in Figure 9.12-4. 
 
(c)
(c,c)
(c,-c)
C1,1=(1)
C2,1= (1,1)
C2,2= (1,-1)
C4,1= (1,1,1,1)
C4,2= (1,1,-1,-1)
C4,3= (1,-1,1,-1)
C4,4= (1,-1,-1,1)
Construction 
algorithm
OVSF codes
(c)
(c,c)
(c,-c)
(c)
(c,c)
(c,-c)
C1,1=(1)
C2,1= (1,1)
C2,2= (1,-1)
C4,1= (1,1,1,1)
C4,2= (1,1,-1,-1)
C4,3= (1,-1,1,-1)
C4,4= (1,-1,-1,1)
Construction 
algorithm
OVSF codes
 
 
Figure 9.12-4 OVSF code tree showing the code construction. 
 
 
 
Each level in the code tree corresponds to a certain spreading factor. A physical channel spread by 
the code Ca is orthogonal to another physical channel spread by code Cb if and only if code Cb is not on the 
path to the root of the tree Ca or in the subtree below Ca [46].  
 
Uplink scrambling can be based on a short or long code. The short code is a complex code based on 
two 256 chips long Gold codes of length 256. The long scrambling code is a 40,960 chip segment of a Gold 
code that has length 241 – 1.  
 
The I-Q multiplexing of control and data is used to ensure that electromagnetic compatibility (EMC) 
problems are diminished in the user equipment. During silent periods in speech transmission no data is 
transmitted to maximize capacity and minimize interference. However pilot bits and power-control 
commands are needed to keep the link time synchronized and power controlled.  
 
 
9.12.3.2 WCDMA Downlink DPDCH and DPCCH 
 
In the downlink (forward link (base station to mobile)) the DPDCH and the DPCCH are time multiplexed 
within each radio frame. Similar to the uplink, the downlink DPDCH contains layer 2 data, and the DPCCH 

 672                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
signal carries pilot bits, TPC commands, and an optional TPI as shown in Figure 9.12-5. In a parallel manner 
 
One frame (10 ms)
Slot 1
Slot 2
Slot 3
Slot 4
Slot 13 Slot 14 Slot 15 Slot 16
Slot i
DPCCH /
DPDCH
0.625 ms
Pilot
Data
TPC
TFI (opt.)
One frame (10 ms)
Slot 1
Slot 2
Slot 3
Slot 4
Slot 1
Slot 2
Slot 3
Slot 4
Slot 13 Slot 14 Slot 15 Slot 16
Slot 13 Slot 14 Slot 15 Slot 16
Slot i
DPCCH /
DPDCH
0.625 ms
Pilot
Data
TPC
TFI (opt.)
 
 
Figure 9.12-5 Downlink frame structure showing DPCCH/DPDCH. 
 
 
to the uplink, each frame is 10 ms and is divided into 16 slots of length 0.625 ms each. The DPCCH and 
DPDCH signals are multiplexed and transmitted with the same code on both the I and Q phases. The 
spreading factor for the DPDCH and the DPCCH signals can vary between 4 and 256. The spreading factor, 
denoted SF, can be described by SF = 256×2–k  where k = 0, 1, …, 6. Hence there are a total of 20×2k bits per 
slot.  
 
The spreading and modulation of the downlink dedicated physical channels is shown in Figure 
9.12-6.  
 
Serial to
parallel
DPCCH/
DPDCH
To QPSK
modulator
I
Q
Channelization
code
Scrambling
code
Serial to
parallel
DPCCH/
DPDCH
To QPSK
modulator
I
Q
Channelization
code
Scrambling
code
 
 
Figure 9.12-6 Channelization and scrambling for the downlink dedicated physical channel. 
 
 
 
In reference to Figure 9.12-6 the DPCCH/DPDCH bits are mapped into pairs to the I and Q 
branches, and spreading to the chip rate is done with the same channelization code on both I and Q branches. 
The scrambling is done before modulation onto the complex signal onto the carrier. Root raised cosine pulse 
shaping is also done on the downlink, similar to the uplink.  
 
Channelization is done in the same manner as the uplink, that is, with OVSF codes. The downlink 
scrambling code is a 40,960 chip segment of a Gold code of length 218–1. There are a total of 512 different 
segments available for downlink scrambling. These codes are divided into 16 groups of 32 codes, each in 
order to simplify the cell search procedure. Each individual cell is assigned a specific downlink scrambling 
code at the initial deployment.  
 
Unlike the uplink, time multiplexing of the control and data does not lead to EMC problems on the 
downlink.  
 
Using pilot bits on the WCDMA dedicated physical channels ensures that adaptive antennas can be 
introduced on the downlink.  
 
9.12.4 WCDMA Channel Coding 
 
 
Various coding and interleaving schemes can be utilized for a transport channel (TrCH) depending on the 
particular needs in terms of the bit error rates, time delay, and so on. The codes include rate 1/2 and 1/3 rate 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           673 
convolutional coding for lower data rate applications, a concatenated rate 1/3 convolutional code 
concatenated with a Reed-Solomon code, a rate 1/3 Turbo code for use at higher data rates, and a 8-state 
parallel concatenated convolutional code (PCCC). Channel coding is used in conjunction with transport 
channel multiplexing as shown in Figure 9.12-7. 
 
Coding plus
interleaving
Static rate
matching
Interframe
interleaving
Coding plus
interleaving
Static rate
matching
Interframe
interleaving
MUX
CC-TrCH
Dynamic
rate matching
Interframe
interleaving
Tr-CH 1
Tr-CH N
Coding plus
interleaving
Static rate
matching
Interframe
interleaving
Coding plus
interleaving
Static rate
matching
Interframe
interleaving
MUX
CC-TrCH
Dynamic
rate matching
Interframe
interleaving
Coding plus
interleaving
Static rate
matching
Interframe
interleaving
Coding plus
interleaving
Static rate
matching
Interframe
interleaving
MUX
CC-TrCH
Dynamic
rate matching
Interframe
interleaving
Tr-CH 1
Tr-CH N
 
 
Figure 9.12-7 Block diagram illustrating the channel coding and the transport-channel multiplexing. 
 
 
 
Figure 9.12-7 illustrates the method of channel coding and transport-channel multiplexing in 
WCDMA. N parallel channels are assumed at the input (TrCH 1 to TrCH N). Parallel TrCHs are separately 
channel coded and interleaved. These coded channels are then time multiplexed into a coded composite 
TrCH (CC-TrCH) digital bit stream. Final interframe (10 ms duration) interleaving is performed after the 
channel multiplexing. 
 
Rate matching is used in order to match the bit rate of the of the CC-TrCH data streams to one of the 
limited sets of bit rates of the uplink or the downlink physical channels. There are two types of rate matching: 
static rate matching and dynamic rate matching. In static rate matching puncturing is used to match the data 
rates and is done on a very slow basis. Dynamic rate matching is carried out every 10 ms, which is on a very 
fast basis, and uses symbol repetition to obtain exact data rate matching. 
 
 
9.12.5 WCDMA Power Control 
 
Power control is utilized on both the uplink and the downlink. The function of power control is to remove the 
near-far effect, mitigate against fading, compensate for changes in the propagation conditions, and at the 
system level decrease the CDMA noise level and thereby increase the capacity of the system.  
 
WCDMA employs fast closed-loop power control in both the uplink and the downlink signals. The 
basic control rate is 1600 Hz, and the power control step can be varied according to the user equipment speed 
and operating environment. Signal-to-interference ratio (SIR) is used to compare the estimate received SIR 
with a target value. The transmitter is commanded to increase or decrease according to the need to achieve 
the correct SIR. 
The target values of the SIR are controlled by the outer power control loop. The outer loop measures 
the link quality by estimating the frame and bit error rates and adjusts the SIR targets accordingly. Open-loop 

 674                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
power control is used by the random access procedure, in which the uplink path loss is estimated from the 
downlink path loss. In addition common packet transmissions depend on open-loop power control. 
 
 
9.12.6 WCDMA Random Access 
 
The random access scheme for WCDMA is based on the slotted ALOHA system. The random access 
procedures are described in detail in [49] and [50].  
 
 
9.12.7 WCDMA Initial Cell Search 
 
WCDMA base stations are asynchronous in that there is no universal time reference known to all of the base 
stations. In order to distinguish different cells, different downlink scrambling codes are used. During the 
initial cell search, the user equipment (UE) first searches for the strongest base station cell signal. The UE 
then determines the scrambling code and the frame synchronization of that cell. The cell search consists of 
three steps: in step (1) the UE acquires the slot synchronization to the strongest base station signal based on 
searching for the largest output for the system specific code, in step (2) the UE correlates the received slot 
synchronized signal with the 16 codes used on the secondary synchronization channel (SCH) signal, and in 
step (3) the UE conducts an exhaustive search of all the scrambling codes in the code group identified in the 
second step. When the scrambling code can be identified, the cell and system specific broadcast information 
on the primary CCPCH can be read. 
 
 
9.12.8 WCDMA Handover 
 
There are three types of handovers in WCDMA for FDD operation. The normal handover in WCDMA is soft 
intrafrequency handover, in which the UE (mobile) is connected to two or more cells simultaneously on the 
same frequency. The UE continuously searches for new cells, using the cell search technique discussed here; 
however the search is limited to a list of neighboring cells broadcast from the network. The neighborhood list 
informs the UE in which order to search for the scrambling codes, and in addition it can also limit the search 
to a subset of all of the available codes. In a soft handover, the uplink signals are combined in the network, 
and the downlink combining of the signals is done in the UE’s RAKE receiver. 
 
A second handover scheme is the softer handover in which the UE is connected to two cells 
belonging to one base station. In lieu of processing the uplink combining in the network, as is done for soft 
handover, softer handover combining can be done at the base station. This allows more efficient uplink 
combining (e.g., maximum ratio combining). 
 
The third handover scheme in WCDMA is interfrequency handover. Interfrequency handover in the 
system is essential in order to support the following scenarios: (1) hot-spot scenarios in which a cell user has 
more carriers than the surrounding cells, (2) hierarchical cell structures, in which macro, micro, and pico 
layers are on different frequencies, (3) handovers between different operators, and (4) handovers to other 
systems, such as GSM. 
 
 
9.12.9 WCDMA Packet Data Services 
 
This section deals with packet transmission in the uplink. However the downlink is done in a very similar 
manner. In WCDMA there are three ways that packet data can be transmitted. First, if a layer 3 packet is 
generated, the UE may elect to transmit it on the RACH. In this case the data is appended to the access burst 
as shown in Figure 9.12-8. This option is chosen only when the UE has a small amount of data to transmit. In 
this option no reservation scheme is utilized, so that the overhead necessary to transmit a packet is kept to  
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           675 
Access
burst
Data
Access
burst
Data
Arbitrary time
offset
RACH
t
Access
burst
Data
Access
burst
Data
Arbitrary time
offset
RACH
t  
 
Figure 9.12-8 Uplink packet transmission on the RACH. 
 
 
t
RACH
Arbitrary time
offset
Access
burst
Access
burst
Data
Data
DCH
t
t
RACH
Arbitrary time
offset
Access
burst
Access
burst
Data
Data
DCH
t  
 
Figure 9.12-9 Uplink packet transmission on a dedicated channel. 
 
 
a minimum. In this case the UE does not need to get a channel assigned to it, hence the access delay is kept 
small. The other method for packet transmission is based on a dedicated channel and is shown in Figure  
9.12-9. In this option the UE first sends a resource request (Res_Req) message. In this resource request 
message is an idea of what sort of traffic is to be transmitted. The network checks to see if the UE can be 
assigned the necessary resources. If the resources are adequate it transmits a resource allocation (Res_All) 
message on the FACH. A Res_All message is composed of a set of transport formats (TFs). Out of this set 
the UE will use a TF to transmit its data on the DCH. The particular TF the UE may use and at what time the 
UE may initiate its transmission is transmitted together with the Res_All message or is indicated in a separate 
capacity allocation (Cap_All) message at a later time. The first option (on the RACH) would normally be 
used when the traffic load is low, while the second option would be utilized in cases in which the traffic load 
is high. A tabular comparison of both cdma2000 and WCDMA is made in Table 9.12-1 [51, 52]. 
 
Table 9.12-1 Parameter Comparison of WCDMA and cdma2000 
 
Soft handover, interfrequency handover
Soft handover, interfrequency handover
Handover
Var. length OVSF for Ch. separate, 
M sequence UE separation
Var. length OVSF for Ch. separ. Gold codes 
for cell and UE separation
Spreading uplink
Var. length Walsh seq. for Ch. separ.
M-seq. time shifted for diff. Cells diff. seq. 
in I & Q Ch.
Var. length OVSF for Ch. separation
Gold codes for cell & user separation
Spreading downlink
Open loop and fast CL (800 Hz)
Open and fast closed loop (1.6 kHz)
Power control
4–256 (3.6864 Mcps)
4–256 (4.096 Mcps)
Spreading factors 
Variable spreading and multicode
Variable spreading and multicode
Multirate capability
Control, pilot, fund. & Supl code mplx. 
I&Q Mplx. for data and control Ch.
Control & pilot Ch. time mplx. I&Q mplx. 
for data and control channel
Ch mplx in UL
Pilot time Mplx. with PC & EIB (UL) Com 
Cont. pilot Ch. and aux pilot (DL)
User ded. time Mplx. pilot (DL & UL)
Coherent detection
QPSK (DL) BPSK (UL)
QPSK (DL) BPSK (UL)
Data modulation
QPSK (DL) Dual Ch. QPSK (UL)
QPSK (DL) Dual Ch. QPSK (UL)
Spreading modulation
20 ms for data & control/5 ms for Ctrl. Info. 
on Fund. & Ded. Ctrl. Ch.
10/20 (optional)
Frame length (ms)
1.228/3.6864/7.3728/11.0593/
14.7456 for direct spread
4.096/8.192/16.384
Chip rate (Mcps)
Direct spread or multicarrier
Direct spread
Downlink RF channel structure
1.25, 5, 10, 15, and 20
5, 10, and 20
Channel bandwidth (MHz)
cdma2000
WCDMA
Soft handover, interfrequency handover
Soft handover, interfrequency handover
Handover
Var. length OVSF for Ch. separate, 
M sequence UE separation
Var. length OVSF for Ch. separ. Gold codes 
for cell and UE separation
Spreading uplink
Var. length Walsh seq. for Ch. separ.
M-seq. time shifted for diff. Cells diff. seq. 
in I & Q Ch.
Var. length OVSF for Ch. separation
Gold codes for cell & user separation
Spreading downlink
Open loop and fast CL (800 Hz)
Open and fast closed loop (1.6 kHz)
Power control
4–256 (3.6864 Mcps)
4–256 (4.096 Mcps)
Spreading factors 
Variable spreading and multicode
Variable spreading and multicode
Multirate capability
Control, pilot, fund. & Supl code mplx. 
I&Q Mplx. for data and control Ch.
Control & pilot Ch. time mplx. I&Q mplx. 
for data and control channel
Ch mplx in UL
Pilot time Mplx. with PC & EIB (UL) Com 
Cont. pilot Ch. and aux pilot (DL)
User ded. time Mplx. pilot (DL & UL)
Coherent detection
QPSK (DL) BPSK (UL)
QPSK (DL) BPSK (UL)
Data modulation
QPSK (DL) Dual Ch. QPSK (UL)
QPSK (DL) Dual Ch. QPSK (UL)
Spreading modulation
20 ms for data & control/5 ms for Ctrl. Info. 
on Fund. & Ded. Ctrl. Ch.
10/20 (optional)
Frame length (ms)
1.228/3.6864/7.3728/11.0593/
14.7456 for direct spread
4.096/8.192/16.384
Chip rate (Mcps)
Direct spread or multicarrier
Direct spread
Downlink RF channel structure
1.25, 5, 10, 15, and 20
5, 10, and 20
Channel bandwidth (MHz)
cdma2000
WCDMA
 
 
 

 676                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
9.13 SUMMARY 
 
In this chapter multiple access methods for digital wireless communications were presented. The chapter 
started with a brief history of cellular systems. This was followed by a discussion of cellular communications 
including clusters, frequency reuse, and cell splitting handoff. Next multiple access techniques for wireless 
communications was discussed. FDMA, TDMA, and various forms of spread spectrum multiple access 
including FHMA/CDMA, SDMA, and hybrid techniques were also discussed. Then the capacity formulation 
of cellular CDMA of a single cell was developed, using BPSK modulation. Packet radio access techniques 
were then discussed. This included the ALOHA channel and the slotted ALOHA channel. Carrier sense 
multiple access was then presented. This included 1-persistent, nonpersistent, and p-persistent schemes.  
 
The next topic that was presented was multiuser detection concepts. Numerous techniques were 
discussed: the optimum receiver, the convention single channel receiver, the decorrelating detector, the 
minimum mean square error detector, successive interference cancellation, multistage interference 
cancellation, and the BER performance was developed for some of the detectors that were presented.  
Finally the chapter concluded with two brief outlines of examples of mobile, spread spectrum, 
multiple access cellular systems, and cdma2000 and WCDMA—both of which are 3G. The intent of 
presenting the material on cdma2000 and WCDMA was to provide some familiarity of current systems and 
provide some of the details of very complex systems. The topic of this chapter has a table that compares 
some of the salient features of cdma2000 and WCDMA. 
 
 
References 
 
[1] 
T. S. Rappaport, Wireless Communications Principles and Practice, 2nd ed., Upper Saddle River, NJ: Prentice-Hall, 2002. 
 
[2] 
R. Peterson, R. Ziemer, and D. Borth, Introduction to Spread Spectrum Communications, Upper Saddle River, NJ: Prentice-
Hall, 1995. 
 
[3] 
M. D. Yacoub, Foundation of Mobile Radio Engineering, Boca Raton, FL: CRC Press, 1993. 
 
[4] 
R. E. Ziemer and R. L. Peterson, Digital Communications, Englewood Cliffs, NJ: Prentice-Hall, 1992. 
 
[5] 
TD-SCDMA forum Web site: http://tdscdma-forum.org/EN/resources. 
 
[6] 
A. Hassan, S. Chennakeshu, and J. Anderson, “Performance of Coded Slow-Frequency-hopped TDMA Cellular Systems,” 
IEEE 43rd Vehicular Technology Conference, May 18–20, 1993, pp. 289–292. 
 
[7] 
B. Gudmundson, J. Skold, and J. K. Ugland, “A Comparison of CDMA and TDMA Systems,” Proc. of 42nd IEEE Vehicular 
Technology Conference, Vol. 2, 1992, pp. 732–735. 
 
[8] 
“Cellular Communications,” Web ProForum Tutorials, http://www.iec.org, The International Engineering Consortium. 
 
[9] 
J. D. Gibson, (ed.), The Mobile Communications Handbook, Boca Raton, FL: CRC Press and IEEE Press, 1996. 
 
[10] V. H. MacDonald, “The Cellular Concept,” The Bell Systems Technical Journal, Vol. 58, No. 1, January 1979, pp. 15–43. 
 
[11] J. Oeting, “Cellular Mobile Radio-An Emerging Technology,” IEEE Communications Magazine, November 1983, pp.  
10–15.  
 
[12] S. Tekinay and B. Jabbari, “Handover and Channel Assignment in Mobile Cellular Networks,” IEEE Communications  
Magazine, November 1981, pp. 42– 46. 
 
[13] C. W. Sung, and W. S. Wong, “User Speed Estimation and Dynamic Channel Allocation in Hierarchical Cellular System,” 
Proceedings of IEEE 1994 Vehicular Conference, Stockholm, Sweden, 1994, pp. 91–95. 
 
[14] S. S. Rapport, “Blocking, Hand-off and Traffic Performance for Cellular Communication Systems with Mixed Platforms,” 
IEE Proceedings, Vol. 140, No. 5, October 1993, pp. 389–401. 
 
[15] Raymond Steele, (ed.), Mobile Radio Communications, New York: IEEE Press and Pentech Press, 1992. 
 

                                       Multiple Access Methods for Digital Wireless Cellular Communications 
 
           677 
[16] 
K. S. Gilhouson et al., “On the Capacity of a Cellular CDMA System,” IEEE Trans. on Vehicular Technology, Vol. 40,  
    No.  2, 1991. 
 
[17] 
P. T. Brady, “A Statistical Analysis of On-Off Patterns in 16 Conversations,” Bell Systems Tech. Journal, Vol. 47, January  
    1968, pp. 73–91. 
 
[18] 
J. K. Holmes, Coherent Spread Spectrum Systems, Malabar, FL: Kreiger Press, Chapter 8, 1990. 
 
[19] 
A. Papoulis, Probability, Random Variables, and Stochastic Processes, 2nd ed., New York: McGraw-Hill, 1984. 
 
[20] 
L. Couch II, Digital and Analog Communication Systems, Upper Saddle, River NJ: Prentice-Hall, 2001. 
 
[21] 
S. Raghavan and J. K. Holmes, “Frequency Band Sharing Between NRZ and Split Spectrum Signals–Analysis and  
     Simulation Results,” 20th AIAA Inter. Comm. Sat. Systems Conf. and Exhibit, Montreal, Canada, May 12–15, 2002. 
 
[22] 
S. Raghavan and J. K. Holmes, “Mixed Modulation Signals For CDMA Capacity Improvement,” IEEE Aerospace Conf.,  
    2004, Big Sky, MT, March 6–13, 2004. 
 
[23] 
A. S. Tanenbaum, Computer Networks, Englewood Cliffs, NJ: Prentice-Hall, 1981.  
 
[24] 
R. Rosner, “Packet Switching Tomorrow’s Communication Today,” Lifetime Learning Publications, Belmont, CA, 
    1982. 
 
[25] 
F. A. Tobagi, “Random Access Techniques for Data Transmission over Packet Radio,” Ph.D. Thesis, Computer  
    Science Dept., UCLA, 1974. 
 
[26] 
 Prof. Mori’s Web site, University of Tokyo: http://www.mlab.t.u-tokyo.ac.jp/~mori/courses/WirelessMobileComm2000/ 
     CDMA.pdf.   
 
[27] 
 S. Verdu, Multiuser Detection, Cambridge U.K.: Cambridge University Press, 1998. 
 
[28] 
J. G. Proakis, Digital Communications, 4th ed., New York: McGraw-Hill, 2001. 
 
[29] 
P. Castoldi, Multiuser Detection in CDMA Mobile Terminals, Norwood MA: Artech House, 2002. 
 
[30] 
A. Papoulis, Probability, Random Variables, and Stochastic Processes, 2nd ed., New York: McGraw-Hill, 1984. 
 
[31] 
L. A. Pipes, Matrix Methods for Engineering, Englewood Cliffs, NJ: Prentice-Hall, 1963. 
 
[32] 
A. Abdulrahman, D. D. Falconer, and A. Sheikh, “Decision Feedback Equalization for CDMA in Indoor Wireless  
     Communications,” IEEE J. Select Areas of Comm., Vol. 12, May 1994, pp. 678–706. 
 
[33] 
M. L. Honig, “Adaptive Linear Interference Suppression for Packet DS-CDMA,” European Trans. Telecom. (ETT), Vol.  
    41, July 1998, pp. 944–960. 
 
[34] 
S. L. Miller, “An Adaptive Direct-Sequence Code-Division Multiple Access Receiver for Multiuser Interference  
    Rejection,” IEEE Trans. on Communications, Vol. 43, February-March-April 1995, pp. 1746–1755. 
 
[35] 
U. Mitra and H. V. Poor, “Adaptive Receiver Algorithms for Near-Far Resistant CDMA,” IEEE Trans. on 
    Communications, Vol. 43, April 1995, pp. 1713–1724. 
 
[36] 
X. Wang and H. V. Poor, “Blind Equalization and Multiuser Detection for CDMA Communications in Dispersive  
    Channels,” IEEE Trans. on Communications, Vol. 46, January 1998, pp. 91–103. 
 
[37] 
X. Wang and H. V. Poor, “Iterative (Turbo) Soft Interference Cancellation and Decoding for Coded CDMA,” IEEE Trans. 
    on Communications, Vol. 47, July 1999, pp. 1046–1061. 
 
[38] 
M. C. Reed, C. B. Schlegel, P. D. Alexander, and J. A. Asenstorfer, “Iterative Multiuser Detection for CDMA with FEC:  
     Near Single User Performance,” IEEE Trans. on Communications, Vol. 46, December 1998, pp. 1693–1699. 
 
[39] 
M. Moher, “An Iterative Multiuser Decoder for Near-Capacity Communications,” IEEE Trans. on Communications, Vol.  
    46, July 1998, pp. 870–880. 
 
[40] 
P. D. Alexandra, M. C. Reed, J. A. Asenstorfer, and C. B. Schlegel, Iterative Multiuser Interference Reduction: Turbo  
     CDMA,” IEEE Trans. on Communications, Vol. 47, July 1999, pp. 1008–1014. 
 
[41] 
The cdma2000 ITU-R RTT Candidate Submission (.18), Steve Dennett Chair, TR45.5.4, 1998.  

 678                                       Spread Spectrum Systems for GNSS and Wireless Communications 
 
            
 
[42] 
V. K. Garg, IS-95 CDMA and cdma2000, Upper Saddle River, NJ: Prentice-Hall, 2000. 
 
[43] 
Y. S. Rao and A. Kripalani, “cdma2000 Mobile Radio Access for IMT-2000,” Proc. IEEE International Conference on  
     Personal Wireless Comm., 1999, pp. 6–15. 
 
[44] 
A. Sharma, “WCDMA and cdma2000 Compared,” Proc. IEEE WCNC2002, Vol. 1, 2002, pp. 23–24. 
 
[45] 
Mobile Computing and Broadband Networking Laboratory CIS, NCTU, “CDMA2000 Overview,” undated, from the  
     Internet. 
 
[46] 
E. Dahlman, P. Beming, F. Ovesjo, M. Persson, and C. Roobol, “WCDMA—The Radio Interface for Future Mobile  
     Multimedia Communications,” IEEE Trans. on Vehicular, Technology., Vol. 47, November 1998. 
 
[47] 
Helsinki University of Technology postgraduate course in radio communications, 36 pages, January 26, 2006. 
 
[48] 
 http://umtsworld.com/technology/UMTSChannel.htm. 
 
[49] 
R. Esmailzadeh and M. Gustafsson, “A New Slotted ALOHA Based Random Access Method for CDMA Systems,” Proc.  
    IEEE Int. Conf. on Universal Personal Comm., ICUPC 97, San Diego, CA, October 1997, pp. 43–47. 
 
[50] 
“UMTS Terrestrial Radio Access: Concept Evaluation (UMTS 30.06),” ETSI Tech. report 101 146, version 3.0.0, 
December  
     1997. 
 
[51] 
R. Prasad and T. Ojanpera, “A Survey on CDMA: Evolution Towards Wideband CDMA,” Proc of the IEEE, 5th  
    International Symposium on Spread Spectrum Technology, 1998. 
 
 
Problems 
 
1. Determine the next two numbers of cell size clusters after 25. Also determine what values of i and j 
yield these numbers. 
 
2. Using the same assumptions as Example 5, assume that the available SNR is 15.6 dB. Show that the 
allowable number of users in this case is 43. 
 
3. Following Example 4, show that for the slotted ALOHA protocol that the maximum throughput 
occurs for G = 1. 
 
4. Assume that there are 50 calls in 1 hour, half of them lasting for 5 minutes and the other half for 10 
minutes. Determine the traffic intensity in Erlangs for this case. 
 

 
                                   679 
CHAPTER 10 
An Introduction to Fading Channels 
 
 
10.0 INTRODUCTION 
Equation Chapter 10 Section 1 
Previous chapters have assumed, for the most part, that channels were disturbed by additive white Gaussian 
noise (AWGN), which caused the received signal to sometimes be detected in error. In this chapter we will 
present an introduction to the phenomena of fading channels, which affects spread spectrum signal 
performance, as well as nonspread spectrum signals. Fading, in general, causes a deleterious effect on the 
link performance. Understanding its cause and effect will be the goal of this chapter. 
Early work in the area of propagation modeling occurred in the period of the 1950s and the 1960s. 
The methodology developed was applicable to over-the-horizon communications applicable to a large range 
of frequencies. The high-frequency (HF) band of 3–30 MHz, the very-high-frequency (VHF) band of 30–300 
MHz, the ultra-high-frequency (UHF) band of 300 MHz–3 GHz, and the super-high-frequency (SHF) band 
of 3 GHz–30 GHz are examples of frequency bands in which the channels suffer fading. Even though the 
early work on ionospheric and tropospheric scatter are somewhat different than what is encountered in 
mobile radio channels, the early work is useful in predicting the effects of mobile radio channels.  
We will discuss various channel models of fading and also discuss some forms of mitigation against 
fading, such as the RAKE receiver, the equalizer, and diversity methods. 
 
 
10.1 AN INTRODUCTION TO RADIO PROPAGATION 
 
The physical phenomenon that produces wave propagation is quite diverse and includes reflection, scattering, 
and diffraction. As an example, most cellular radio systems operate in an urban environment in which direct 
line-of-sight propagation between the transmitter and the receiver does not normally occur. When line-of-
sight is not possible, multiple signals with different amplitudes and phase arrive, at the receiver which results 
in multipath fading at the location of the receiver. Also, as the distance between the transmitter and receiver 
increases, the composite signal amplitude decreases.  
 
There are two primary categories of propagation models: large-scale models also known as path 
loss and small-scale models, which is also known as multipath fading models. Large-scale effects specify a 
power level averaged over an area of tens or hundreds of meters and is sometimes called the area mean 
power. Large-scale effects are characterized by the slow variation of the signal level with distance between 
the transmitter and the receiver. It is the natural expansion of the wave, with distance, from the transmitter. 
 
Small-scale or multipath fading leads to a fast variation of the amplitude and phase of the resulting 
signal if the receiver moves over a distance of the order of one carrier wavelength or more. 
 
There are three basic propagation mechanisms: reflection, diffraction, and scattering. These 
mechanisms apply to both large-scale and small-scale propagation.  
 
Refection occurs when a radio wave impacts one medium coming from another medium having 
different electrical properties. The wave is partially reflected from and partially transmitted through the new 
medium. If the second medium is a perfect conductor then all the energy is reflected from the conductor. It is 
required that the medium is very large relative to the radio wave wavelength ( ).  

 680                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
Diffraction occurs when the radio wave is obstructed by a dense body having dimensions that are 
large compared to  , causing secondary radio waves to be formed behind the obstruction. This phenomenon 
also occurs in beyond-the-horizon effects and propagation over the curved surface of the Earth.  
 
Scattering occurs when a radio wave impinges on a rough surface that has dimensions on the order 
of   or less. Common sources of diffraction in an urban environment include lamp posts, street signs, foliage, 
and trees.  
 
 
10.2 OUTDOOR MODELS FOR LARGE-SCALE EFFECTS  
Equation Section (Next) 
In this section we will present some large-scale effects propagation models. We will start with the free space 
model and progress from there. Figure 10.2-1 illustrates [1] a sketch of some examples of path loss for large-
scale effects.  
 
A
B
C
D
E
A
B
C
D
E
 
 
Figure 10.2-1 Figure showing various large-scale effects. 
 
 
 
In location A we see an example of free space propagation between the transmitter and the receiver, 
in which there are no blockages or reflections to combine with the signal. In location B we see that the direct 
path and a reflected path occur at the receiver. The plane Earth model might be an appropriate model. In 
location C the path loss will be compounded by the fact that there will probably be significant diffraction 
losses due to the trees diffracting the signal path. When we consider location D we may accurately use a 
simple model of diffraction. However in location E the loss to that point would be quite difficult to predict, 
since multiple diffractions have occurred. 
 
 
10.2.1 Free Space Path Loss Model 
 
Radio propagation is such a complex subject that only a few cases can be determined by a deterministic 
analysis. Free space propagation is one such example. Consider Figure 10.2-2, which illustrates the free 
space model.  
 
Transmit
antenna
Receive antenna
aperture
d
Transmit
antenna
Receive antenna
aperture
d
 
 
Figure 10.2-2 Free space propagation model. 

 
                                                  An Introduction to Fading Channels 
 
 
           681 
 
 
It is assumed that the antenna is located in free space so that there are no obstructions near the signal 
path. If the transmitting antenna has gain GT in the direction of the receiving antenna, the power density, 
expressed in watts per unit area, at a distance d, is given by  
 
 
2
4
T
T
P G
W
d
π
=
 
(10.2.1-1) 
 
since the spherical area at distance d is 4 d2. If the receiving antenna has an effective area Ae, then the 
received power at the receiver is given by 
 
 
2
2
2
4
4
4
T
T
e
T
T
R
R
P G A
P G
G
P
d
d
λ
π
π
π
=
=
 
(10.2.1-2) 
 
with GR denoting the received gain in the direction of the transmitter. Note that the effective area of an 
antenna is defined as [2] 
2
4
e
R
A
G
λ
π
=
.  
 
Now (10.2.1-2) can be written as  
 
 
2
4
R
T
T
R
P
P G G
d
λ
π
⎛
⎞
=
⎜
⎟
⎝
⎠
 
(10.2.1-3) 
 
This is known as the free space or Friis equation [3]. Since c
f λ
=
, (10.2.1-3) can be written as 
 
 
2
4
R
T
T
R
c
P
P G G
fd
π
⎛
⎞
=
⎜
⎟
⎝
⎠
 
(10.2.1-4) 
 
Rendering the received power equation in dB and using the base 10 logarithm, yields 
 
   
(
)
8
3 10
dB
10log
10log(
) 10log(
)
20log( )
20log( )
20log
 (dB)
4
R
T
R
T
P
P
G
G
d
f
π
⎛
⎞
×
=
+
+
−
−
+
⎜
⎟
⎝
⎠
 
(10.2.1-5) 
 
Upon evaluating the last term, one finally obtains 
 
         
(
)
dB
10log
10log(
) 10log(
)
20log( )
20log( ) 147.56 (dB)
R
T
R
T
P
P
G
G
d
f
=
+
+
−
−
+
 
(10.2.1-6) 
 
 
This expression is often put into the following form 
 
        
(
)
dB
32.45
log
10log(
) 10log(
)
20log(
)
20log(
) (dB)
R
T
R
T
km
MHz
P
P
G
G
d
f
= −
+
+
+
−
−
 
(10.2.1-7) 
 
where PT and PR are the transmitted power and received power in watts and GR and GT are, respectively, the 
receive antenna gain and the transmit antenna gain in dB. Also the distance is in kilometers and the frequency 
is expressed in MHz. When statute miles and MHz are used the received power takes the form 
 
 
(
)
dB
36.58
log
dB
dB
20log(
)
20log(
) (dB)
R
T
R
T
sm
MHz
P
P
G
G
d
f
= −
+
+
+
−
−
 
(10.2.1-8) 
 
and when expressed in nautical miles and MHz, it becomes 
 

 682                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
(
)
dB
37.8
log
dB
dB
20log(
)
20log(
) (dB)
R
T
R
T
nm
MHz
P
P
G
G
d
f
= −
+
+
+
−
−
 
(10.2.1-9) 
 
 
The free space path loss can be obtained from the received signal power and typically is the most 
common loss parameter cited in the references. From (10.2.1-7) we have 
 
 
32.45
20log(
)
20log(
) (dB)
path
km
MHz
L
d
f
=
+
+
 
(10.2.1-10) 
 
when the separation between the transmitter and the receiver is expressed in km and the frequency is 
expressed in MHz. The free space model only applies for values of d, which are in the far field of the 
transmitting antenna. The far field is also called the Fraunhofer region at the transmitting antenna. If the 
antenna source’s largest dimension is D, then the Fraunhofer region satisfies the three conditions 
 
 
2
fr
2
(1) 
(2) 
(3) 
fr
fr
D
d
d
D
d
λ
λ
=
>>
>>
 
(10.2.1-11) 
 
Example 1 Assume that the transmitted power is 120 watts, at a frequency of 1.575 GHz, at a range of 
10,988 nm and a 12-dB transmitter gain with and an omni receiver antenna gain (0 dB). Since the distance is 
expressed in nautical miles it is convenient to utilize (10.2.1-9). Thus converting the frequency to MHz and 
the power transmitted to dBW one has for the path loss  
 
 
182.56 dB
path
L
=
 
 
and therefore the received power is given by 
 
 
dBW
dB
dB
149.77 dBW
R
T
R
T
path
P
P
G
G
L
=
+
+
−
= −
 
 
 
10.2.2 Received Signal Power and the Electric Field Strength  
Equation Section (Next) 
Sometimes it is necessary to relate the received power in watts to the electric field strength in free space [4]. 
Let Pden denote the power flux density, expressed in W/m2. The received power in watts for the free-space 
model is given by 
 
 
2
2
2
2
2
120
377
(4 )
T
T
R
R
den
e
e
e
E
E
P G G
P
P A
A
A
d
λ
π
π
=
=
=
=
 
(10.2.2-1) 
 
with the units of the electric field being volt/m. 
 
Now consider the relationship between the received signal power and the voltage applied to receiver 
antenna terminals. Consider the equivalent circuit shown in Figure 10.2-3 for the voltage seen at the receiver 
for a given received signal power. 
 
Here the antenna voltage is fed through the equivalent antenna resistance, Rant, and fed to the load 
Rout, and the power delivered to the load (receiver input resistance) is given by 
 
 
2
2
(
/ 2)
1
4
R
ant
ant
V
V
P
R
R
=
=
 
(10.2.2-2) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           683 
since half the antenna voltage is input to the receiver input resistance.  
 
ant
V
in
V
ant
R
out
R
(
)
in
ant
R
R
=
ant
V
in
V
ant
R
out
R
(
)
in
ant
R
R
=
 
 
Figure 10.2-3 Equivalent circuit for the voltage applied to the receiver input. 
 
 
Example 2 Using Example 1, determine (a) the electric field strength and (b) the voltage at the receiver 
input. Assume that the antenna resistance is 50 ohms. The solution is obtained by utilizing (10.2.2-1) for the 
electric field and (10.2.2-2) for the voltage. Thus using (10.2.2-1) and the fact that Ae =GR( )2/(4 ) produces 
the result 
 
 
2
9
3
2
5
1(.19) /(1.575*10 )
2.89*10  m
377
1.173*10  V/m
e
e
A
P
E
A
−
−
=
=
=
=
 
 
and from (10.2.2-2) the voltage at the receiver input is given by 
 
 
7
4
4.59*10  V
ant
V
PR
−
=
=
 
 
 
10.2.3 Plane Earth Propagation Path Loss Model 
Equation Section (Next) 
The plane Earth model [2] is based on a two-ray model of a flat reflecting surface. Figure 10.2-4 illustrates 
the two-path model geometry. 
 
hT
hR
R1
R2A
R2B
R2=R2A+R2B
d
hT
hT
hR
R1
R2A
R2B
R2=R2A+R2B
d
 
 
Figure 10.2-4 The two-path model for a flat reflecting surface. 
 
 
Parsons has shown that the difference in the two path lengths, 
2
1
R
R
R
Δ
=
−
 is well approximated 
by 
 
 
2 T
R
h h
R
d
Δ
=
 
(10.2.3-1) 
 

 684                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
He has also shown that the electric field strength at the receiving antenna due to both the direct wave 
(distance R1) and the reflected path (R1+R2) is given by 
 
 
[
]
1
exp(
)
d
E
E
j
ρ
φ
=
+
−Δ
 
(10.2.3-2) 
 
where   is the reflection coefficient, φ
Δ
 is the phase difference between the two paths, and Ed is the signal 
field strength of the direct path at the receiver antenna. For very small angles of incidence 
(
 
 
T
R
d
h and d
h
>>
>>
) it is known that
1
ρ = −. Thus (10.2.3-2) can be rewritten as  
 
 
[
]
1 exp(
)
d
E
E
j φ
=
−
−Δ
 
(10.2.3-3) 
 
The phase difference for the two signals is given by 
 
 
4
2
T
R
h h
R
d
π
π
φ
λ
λ
Δ
=
Δ
=
 
(10.2.3-4) 
 
Taking the magnitude of the electric field strength, one has 
 
 
1/2
2
2
1 cos(
)
sin(
)
1 cos (
)
2cos(
)
sin (
)
d
d
E
E
j
E
φ
φ
φ
φ
φ
⎡
⎤
=
−
Δ
+
Δ
=
+
Δ
−
Δ
+
Δ
⎣
⎦
 
(10.2.3-5) 
 
which can be simplified to  
 
2
2
sin
2
sin
2
T
R
d
d
h h
E
E
E
d
π
φ
λ
Δ
⎛
⎞
⎛
⎞
=
=
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(10.2.3-6) 
 
after using (10.2.3-4). The received power is proportional to 
2
E (let K by the proportionality factor) so that  
 
 
2
2
2
2
2
2
4
sin
4
sin
4
T
R
T
R
R
d
T
T
R
h h
h h
P
K E
P
G G
d
d
d
π
π
λ
λ
π
λ
⎛
⎞
⎛
⎞
⎛
⎞
=
=
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎝
⎠
 
(10.2.3-7) 
 
When d >> hT and d >> hR, then (10.2.3-7) can be rewritten as 
 
 
2
2
2
4
4
T
R
R
T
T
R
h h
P
P
G G
d
d
λ
π
⎛
⎞
⎛
⎞
=
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(10.2.3-8) 
 
Equation (10.2.3-8) is known as the plane Earth propagation equation. It is important to note that it is 
frequency independent. Also it has a fourth power with distance fall with range. Thus, doubling the distance 
results in a 12-dB loss! This equation only applies when d >>hT and d >>hR. When this inequality 
relationship is not met, there are variations with distance that are predicted by the right side of (10.2.3-7). 
They are oscillatory in nature. Equation (10.2.3-8) can be rewritten in decibel form as 
 
 
dB
dB
20log(
)
20log(
)
40log( )
R
T
R
T
R
P
G
G
h
h
d
=
+
+
+
−
 
(10.2.3-9) 
 
 
10.2.4 Egli’s Path Loss Model 
Equation Section (Next) 
Experiments have confirmed that in macrocell links over smooth plane terrain, the received signal power 
decreases as 40log(d) and the path loss depends on frequency, unlike the plane Earth propagation model 
developed earlier. Egli proposed the following semi-empirical equation for mean path loss 

 
                                                  An Introduction to Fading Channels 
 
 
           685 
 
2
2
4
40 MHz
(
)
10log
   dB
T
R
path
h h
L
f
d
⎛
⎞
⎛
⎞
⎜
⎟
=
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(10.2.4-1) 
 
From (10.2.4-1) is follows that the received power, with antenna gains of GT and GR, respectively, of the 
transmit and receive antennas, and with a transmitted power of PT , one has  
 
 
2
2
4
40 MHz
(
)
10log
dB
T
R
R
T
R
T
h h
P
G +G  + P  + 
  
f
d
⎛
⎞
⎛
⎞
⎜
⎟
=
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(10.2.4-2) 
 
 
10.2.5 Okumura-Hata Path Loss Model 
Equation Section (Next) 
The path loss model developed by Hata [5] based on empirical curve fitting to data developed by Okumura 
[6] is quite well known. The urban Hata model mean path loss is given by 
 
 
(
)
69.55
26.16log( ) 13.82log(
)
(
)
          
44.9
6.55log(
) log( ) dB
urban
T
R
T
L
f
h
a h
h
d
=
+
−
−
+
−
 
(10.2.5-1) 
 
in which f is in MHz, hT and hR are the elevation in meters, a(hR) is a correction factor that depends on the 
city size, and d is the separation of the transmitter and receiver in km. The mobile antenna correction factor 
for small and medium-sized cities is given by 
 
 
(
)
(
)
(
)
1.1log( )
0.7
1.56log( )
0.8
R
R
a h
f
h
f
=
−
−
−
 
(10.2.5-2) 
 
In the case of large cities the parameter takes the form 
 
 
(
)
(
)
2
2
(
)
8.29 log(1.54
)
1.1 dB for 
300 MHz
(
)
3.2 log(11.75
)
4.97 dB for 
300 MHz
R
R
R
R
a h
h
f
a h
h
f
=
−
≤
=
−
>
 
(10.2.5-3) 
 
 
The suburban Hata model is obtained by applying a correction term to the urban model and is of the 
form 
 
(
)
2
2 log(
/ 28)
5.4 dB
suburban
urban
L
L
f
=
−
−
 
(10.2.5-4) 
 
 
Finally, the rural Hata model modifies the urban model differently and is given by 
 
 
(
)
2
4.78 log( )
18.33log( )
40.94 dB
rural
urban
L
L
f
f
=
−
+
−
 
(10.2.5-5) 
 
The following ranges are given by Hata: 150 MHz <f < 2000 MHz, 30m < hT < 200m, 1m < hR < 10m, and 1 
km < d < 20 km. 
 
The Hata models are applicable to large cellular area systems (sometimes called macrocells), but are 
not very useful for small cell sizes on the order of 2-km diameter (1-km radius).  
 
 
10.2.6 COST-231 Hata Path Loss Model 
Equation Section (Next) 
A model that is widely used for predicting path loss in mobile wireless systems is known as the COST-231 
Hata model [7]. It was developed as an extension of the Hata-Okumura model [5, 6] to extend the upper 

 686                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
frequency range to 2000 MHz. It also provides for corrections for urban, suburban, and rural (flat) 
environments. Its simplicity and the availability of correction factors have seen it widely used for path loss 
prediction in this frequency band. The path loss equation is given by 
 
 
(
)
46.3
33.9log( ) 13.82log(
)
44.9
6.55log(
) log( )
T
m
T
m
L
f
h
ah
h
d
c
=
+
−
−
+
−
+
 
(10.2.6-1) 
 
where d is the distance between transmitter and receiver in km, f is the frequency in MHz, and hT and hR are 
the transmit and receiver antenna heights in meters. The parameter cm is defined to be 0 dB for suburban or 
open environments and 3 dB for urban environments. The parameter ahm is defined for urban environments 
as  
 
 
(
)
2
3.20 log(11.75
)
4.97 dB,   for 
400 MHz
m
R
ah
h
f
=
−
>
 
(10.2.6-2) 
 
and for suburban or rural (flat) environments it is defined as 
 
 
(
)
(
)
1.1 log( )
0.7
1.56log( )
0.8   dB
m
R
ah
f
h
f
=
×
−
−
−
 
(10.2.6-3) 
 
Again the allowable range of parameters is: 1,500 MHz < f < 2,000 MHz, 30m < hT < 200m, 1m < hR < 10m, 
and 1 km < d < 20 km. 
 
 
10.2.7 ECC-33 Path Loss Model 
Equation Section (Next) 
The original Okumura data was obtained in the suburbs of Tokyo, Japan. The authors divided the urban areas 
into “large city” and “medium city” categories. In addition they gave corrections for “suburban” and “open 
areas.” Due to the fact that the propagation characteristics of highly built-up areas in Tokyo are rather 
different from those found in European cities, the “medium city” model is recommended for European cities 
[2]. Due to the fact that the Hata model is quite accurate at UHF bands, but is known to be less accurate at the 
higher frequencies, the COST-231 Hata model was developed. The COST model extends the frequency 
range to 2000 MHz, but was proposed for mobile systems having omnidirectional customer premises 
equipment (CPE) antennas located less than 3m above ground. Another approach was taken in the ECC-33 
path loss model. The results of Okumura’s results were modified to more closely represent fixed wireless 
systems (FWS). The model ECC-33 is based on [1]. The path loss in dB is given by 
 
 
path
freespace
bm
T
R
L
L
L
L
L dB
=
+
−Δ
−Δ
 
(10.2.7-1) 
 
where Lfreespace is the free space path loss, Lbm is the medium path loss,  LT is the transmit (base station) gain 
adjustment in dB, and  LR is the gain adjustment in dB for the receiver (CPE). Each term is defined as 
 
 
92.4Log( )
20Log( ) 
freespace
L
f
d dB
=
+
 
(10.2.7-2) 
 
with f in GHz and d in km. Lbm is defined by 
 
 
[
]
2
20.41 9.83Log( )
7.894Log( )
9.56 Log( )
bm
L
d
f
f
=
+
+
+
 
(10.2.7-3) 
 
The transmitter correction term is given by 
 
 
(
)
2
Log(
/ 200) 13.958
5.8 Log( )
T
T
L
h
d
⎡
⎤
Δ
=
+
⎣
⎦ 
(10.2.7-4) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           687 
 
and for medium city environments by 
 
 
[
][
]
42.57 13.7Log( ) Log(
)
0.585
R
R
L
f
h
Δ
=
+
−
 
(10.2.7-5) 
 
Here hR and hT are the antenna heights in meters. The medium city model is more appropriate for European 
cities.  
 
 
10.2.8 Microcell Propagation Models 
Equation Section (Next) 
A microcell [8] is defined to be a relatively small outdoor area in the location of, say, a street, having the 
transmitter antenna located below the rooftop of the surrounding buildings. The cell’s size is smaller than the 
macrocells mentioned in the previous sections. By installing a microcell structure, an efficient use of the 
limited frequency spectrum is realized and it produces a lower priced infrastructure. The primary assumption 
in a microcell is the use of short radio paths on the order of 200m to 1,000m, low height base stations on the 
order of 3m to 10m, and low transmitter power on the order of 10 mW to 1W. Microcells are commonly used 
in IS-95, DCS, PCS, DECT, GSM, and other systems.  
 
 
10.2.8.1 The Kaji and Aleyama Model for Microcells  
 
Many models exist for microcells, and we will review two models here. Kaji and Aleyama [9] have 
suggested the following empirical model [2] when the base transmitter antenna height is 5–20m, and the 
range is between 200m and 2 km:  
 
 
20
(1
/ )
a
b
S
Log d
d g
c
⎡
⎤
= −
+
+
⎣
⎦
 
(10.2.8-1) 
 
where S is the signal level in dB V (dB relative to a microvolt), d is the distance between transmitter and 
receiver in meters, a is the basic attenuation exponent for short distances, b is the additional attenuation for 
distances beyond the turning point (the signal drops of faster after the turning point), g is the distance 
corresponding to the turning point, and c is the offset factor. It is assumed that both transmit and receive 
antennas are monopoles (nominally omnidirectional) 
 
The model has two limiting cases: (1) for distances less than g the attenuation produces a signal 
level of  
 
20log(
)
a
S
d
c
= −
+
 
(10.2.8-2) 
 
and (2) for distances greater than g the propagation yields  
 
 
20log(
)
a b
S
d
c
C
+
= −
+ +
 
(10.2.8-3) 
 
where C is a constant. The previously cited authors have fitted (10.2.8-1) to empirical data measured at 900 
MHz. Table 10.2-1 illustrates the parameters needed to evaluate the received signal strength equation as a 
function of the transmitter antenna height. 
 
Example 3 Determine the received signal voltage in dB V for a 9-m microcell omnidirectional transmitter 
that has f = 900 MHz, with d being 500m, and assume that the receiver antenna is omnidirectional. 
Evaluating (10.2.8-1) and using Table 10.2-1, one obtains 36.4 dB V. 
 
 
 

 688                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
 
Table 10.2-1 Empirical Curve-Fit Parameters to (10.2.8-1) for f = 900 MHz 
 
37.3
158.3
2.36
– 0.48
19
55.5
143.9
1.05
0.20
15
79.8
151.8
0.27
0.74
9
94.5
148.6
– 0.14
1.15
5
c
g
b
a
Antenna 
height (m)
37.3
158.3
2.36
– 0.48
19
55.5
143.9
1.05
0.20
15
79.8
151.8
0.27
0.74
9
94.5
148.6
– 0.14
1.15
5
c
g
b
a
Antenna 
height (m)
 
 
 
10.2.8.2 The Lee Microcell Model 
 
The Lee model [10] for predicting the electric field strength in microcells is based on the assumption that 
there is a high correlation between the signal attenuation and the total path length through the buildings in the 
path of the radio signal. The model presented here follows [8]. This hypothesis is not quite accurate since the 
signal at the mobile receiver is the sum of the direct path and all multipath components. The model assumes 
that if more buildings are propagated through then the attenuation is greater. It is possible to utilize an 
airplane to take aerial photographs so that the total length through buildings can be estimated. The line-of-
sight, PLOS, is obtained from the measurement data along the streets in an open line-of-sight environment. It 
is necessary to add an additional signal attenuation loss,  B, to account for the building blockage over the 
direct path. It can be obtained in the following way: 
(1) Calculate the total building blockage length by adding the individual building path distances. 
(2) Measure the signal strength PLOS for the line-of-sight condition. 
(3) Measure the signal strength PNLOS for the nonline-of-sight condition. 
(4) If the signal strength at a particular location is PNLOS, the distance from the base station to the mobile 
user is d, and B is the blockage length between the transmitter and the receiver, then the value of  B 
for a blockage length B can be found from 
 
 
( )
( )
B
LOS
NLOS
B
P
d
P
α
=
+
 
(10.2.8-4) 
 
Table 10.2-2 lists the value of  B(B) as a function of the respective distance. This table was obtained from the 
curves in Lee [10], which were obtained experimentally. 
 
Numerous measurements have provided data that allowed him to conclude that the antenna height 
gain for various antennas is in the range of 20 to 30 dB/decade. Therefore the microcell prediction model has 
two curves (PLOS and  B) to predict the signal strength. The received power at the receiver is then given by 
 
 
 (
)
R
LOS
B
P
P
dB
α
=
+
 
(10.2.8-5) 
 
It is known that the original Lee Microcell Model has some deficiencies in two cases yielding large 
errors in path loss estimate [8]: (1) when the prediction point is in the main street, but there is no direct path 
in the street, and (2) when the prediction point is in a side street close to an intersection, large building 
blockage exists between the point of prediction and the transmitter, and the side street and the transmitter are 
on the same side of the street. The accuracy of this model can be considerably improved by some 
modifications discussed in Neskovic [11] and Neskovic, Neskovic, and Paunovic [12]. 
 

 
                                                  An Introduction to Fading Channels 
 
 
           689 
 
Table 10.2-2 Lee’s Microcell Prediction Parameters for PLOS and  B 
 
– 91.5
– 18
5000
– 88.5
– 18
4500
– 87
– 18
4000
– 84
– 18
3500
– 82
– 18
3000
– 77
– 18
2500
– 75
– 18
2000
– 70
– 18
1500
– 63.5
– 18
1000
– 60
– 18
750
– 58
– 17.5
500
– 55
– 14
250
– 42
–5
50
PLOS(dB)
αB(dB)
d and B (Distance in Feet)
– 91.5
– 18
5000
– 88.5
– 18
4500
– 87
– 18
4000
– 84
– 18
3500
– 82
– 18
3000
– 77
– 18
2500
– 75
– 18
2000
– 70
– 18
1500
– 63.5
– 18
1000
– 60
– 18
750
– 58
– 17.5
500
– 55
– 14
250
– 42
–5
50
PLOS(dB)
αB(dB)
d and B (Distance in Feet)
 
 
 
10.3 LARGE-SCALE EFFECTS FOR INDOOR MODELS 
Equation Section (Next) 
Following the introduction of the personal communication systems (PCS) there developed considerable 
interest in characterizing the propagation characteristics within a building on the same floor and between 
floors. It will be seen that the typical distances between the transmitter and the receiver are much less, and 
range of path loss is greater over small distances. In addition the actual path loss depends on the type of 
building, the layout of the building, and the construction materials used in the building. 
 
Again the same elements of propagation are evident in indoor propagation: reflection, diffraction, 
and scattering. Moreover, things such as the location of the transmitting antenna and having the doors open 
or closed affect the signal level received. 
 
It might seem that predicting the signal strength in an indoor environment might be easier than the 
outdoor environment; however some field measurements [13 –15] have shown a variation of over 80 dB. It is 
known that the indoor model has more fluctuation than the outdoor model. This is presumed to be due to the 
fact that the indoor model has many more indirect components than in the outdoor environment, and thus it 
has more fluctuation in signal strength.  
 
 
10.3.1 Log-Normal Path Loss Model for Indoors 
 
Many researchers have determined that indoor mean path loss obeys the distance power law given by 
 
 
0
0
(
) 10 log
  (dB)
path
path
d
L
L
d
n
d
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
(10.3.1-1) 
 
where 
path
L
 is the mean path loss in dB at a known distance d (d0 is usually 1m) and n is the exponent of the 
distance dependence. Cox [16], Rappaport [17], and Sklar [18] have shown that the path loss is log-normally 
distributed about the mean denoted in (10.3.1-1). Thus 
 
 
0
0
(
) 10 log
  (dB)
path
path
d
L
L
d
X
d
σ
⎛
⎞
=
+
×
+
⎜
⎟
⎝
⎠
 
(10.3.1-2) 

 690                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
where X  is a zero mean, log-normally distributed random variable in dB, that has a standard deviation of   
dB and represents the uncertainty in the model. Table 10.3-1 illustrates typical values of n and   in dB for 
many different types of buildings [4, 15] and the effect of passing through floors. 
The averages of all locations are indicated in the first row, and for the same floor on the second row.  
 
Table 10.3-1 Path Loss Exponent and Standard Deviation for Numerous Types of Buildings 
 
4.4
3.18
West wing 4th floor
6.7
5.22
Through three floors
5.2
1.81
Grocery store
8.7
2.18
Retail floor
5.2
3.25
Same floor
13.3
4.33
Entire building
Office building 2:
4.3
4.01
Central wing 5th floor
8.1
2.68
West wing 5th floor
11.2
3.27
Same floor
12.8
3.54
Entire building
Office building 1:
6.5
5.04
Through two floors
5.1
4.19
Through one floor
12.9
2.76
Same floor
16.3
3.14
All locations
σ (dB)
n
Building Type and Number of 
Floors
4.4
3.18
West wing 4th floor
6.7
5.22
Through three floors
5.2
1.81
Grocery store
8.7
2.18
Retail floor
5.2
3.25
Same floor
13.3
4.33
Entire building
Office building 2:
4.3
4.01
Central wing 5th floor
8.1
2.68
West wing 5th floor
11.2
3.27
Same floor
12.8
3.54
Entire building
Office building 1:
6.5
5.04
Through two floors
5.1
4.19
Through one floor
12.9
2.76
Same floor
16.3
3.14
All locations
σ (dB)
n
Building Type and Number of 
Floors
 
 
 
10.3.2 Floor Attenuation Factor Path Loss Model  
Equation Section (Next) 
We have seen that the path loss in multifloored structures was predicted with a model that gave the mean 
path loss exponent. Another approach is to add a constant floor attenuation factor (FAF) in dB, which 
depends on the number of floors and the building type and is added to the mean path loss for the same floor 
path loss exponent model. Seidel and Rappaport [15] have suggested a model of the form 
 
 
0
0
(
) 10 log
 (dB)
path
path
d
L
L
d
n
FAF
d
⎛
⎞
=
+
+
⎜
⎟
⎝
⎠
 
(10.3.2-1) 
 
where, as before, d0 is the reference distance (usually 1m), and n is the exponent of the separation from 
transmitter to receiver distance (d). The additional term FAF is the floor attenuation factor. Hence if the first 
two terms accurately represent the path loss in one floor, adding the FAF term would make it applicable to 
different floors. Table 10.3-2 [15] lists some FAFs and  s. Again the term FAF accounts for the difference 
between the path loss observed at multifloor locations and the mean path loss predicted by the simple path 
loss model in (10.3.1-1). In Table 10.3-2 the losses were different for the two different buildings. Office 
building 1 was built within 10 years of the study whereas building 2 was built 20 to 30 years before the 
study. All the floors in the two office buildings were made of reinforced concrete. 

 
                                                  An Introduction to Fading Channels 
 
 
           691 
 
Table 10.3-2 Average Floor Attenuation Factor (FAF), in dB, for One to Four Floors in Two Office Buildings [14] 
 
21
31.6
Through three floors
21
27.5
Through two floors
21
16.2
Through one floor
Office building 2:
9
27
Through four floors
9
24.4
Through three floors
9
18.7
Through two floors
52
12.9
Through one floor
Office building 1:
σ (dB)
FAF (dB)
Building
21
31.6
Through three floors
21
27.5
Through two floors
21
16.2
Through one floor
Office building 2:
9
27
Through four floors
9
24.4
Through three floors
9
18.7
Through two floors
52
12.9
Through one floor
Office building 1:
σ (dB)
FAF (dB)
Building
 
 
 
Example 4 Using Tables 10.3-1 and 10.3-2, determine the mean path loss through the third floor of office 
building 2, assuming that the separation between the transmitter and receiver is 30m, and the frequency is 
914 MHz. Assume that 
(1)
31.7 dB.
path
L
=
 From Table 10.3-1 the same floor loss exponent is n = 3.25. From 
Table 10.3-2 the FAF value is 31.6 dB. The total mean path loss is estimated from (10.3.2-1), so that 
111.3 dB
path
L
=
. Clearly the mean path loss inside a building is quite significant. Again it is to be noted that 
this is the mean path loss. Considerable variation is to be expected around the mean value.  
 
 
10.4 SMALL-SCALE EFFECTS MULTIPATH FADING 
Equation Section (Next) 
At this point in our study of multipath fading it is beneficial to look at the overall picture of path loss and 
fading. Figure 10.4-1, based on [19], illustrates the large-scale path loss, the variation around the large-scale 
path loss, and the small-scale fading effects.  
 
Base station
Mobile station
}
Mean path loss
Receiver to transmitter separation
Log-normal 
slow fading pdf
Area    1–2%
(margin)
≅
Rayleigh fast
fading pdf
Large-scale
fading margin
Fast fading
margin 
Decreasing
amplitude
Base station
Mobile station
}
Mean path loss
Receiver to transmitter separation
Log-normal 
slow fading pdf
Area    1–2%
(margin)
≅
Area    1–2%
(margin)
≅
Rayleigh fast
fading pdf
Large-scale
fading margin
Fast fading
margin 
Decreasing
amplitude
 
 
Figure 10.4-1 Link budget components for a fading channel. 
 

 692                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
We will denote the envelope of the modulation as R(t). We shall use the complex envelope 
characterization1 of the received signal. Let s(t) be the received signal, let v(t) be the complex envelope, and 
let fc be the carrier frequency expressed in Hz, then 
 
 
2
( )
Re
( )
c
j
f t
s t
v t e
π
⎡
⎤
=
⎣
⎦ 
(10.4-1) 
 
with Re[.] denoting the real part of operator. The term is the baseband modulation term that contains the 
information portion of the signal and is complex in general. The complex envelope can be expressed as 
 
 
( )
( )
( )
( )
( )
j
t
j
t
v t
v t e
R t e
φ
φ
=
=
 
(10.4-2) 
 
and R(t) is the complex envelope magnitude.  
 
In a fading environment v(t) is modified by the multiplicative factor 
( )
( )
t
t e θ
α
−
 so that 
( )
( ) ( )
j
t
v t
t e
θ
α
−
 is the fading induced complex envelope; that is, 
 
 
( )
( )
( )
[ ( )
( )]
( ) ( )
( ) ( )
( ) ( )
j
t
j
t
t
j
t
t
v t
t e
t v t e
e
R t
t e
θ
φ
θ
φ
θ
α
α
α
−
−
−
=
=
 
(10.4-3) 
 
Thus the magnitude of the signal is 
( ) ( )
t R t
α
.  
We will denote L(t) as the large-scale path loss effects of the signal. Let r0(t) denote the small scale 
fading component. Oftentimes L(t) is referred to as the local mean or the log normal fading component. 
Furthermore, r0(t) is sometimes referred to as the multipath or Rayleigh fading term. Then [18, 20] the 
amplitude can be written as 
 
 
0
( ) ( )
( ) ( ) ( )
t R t
L t r t R t
α
=
 
(10.4-4) 
 
Figure 10.3-1 illustrates the mean path loss due to large-scale (L(t)) and Rayleigh or small-scale 
(r0(t)) fading, which are multiplicative components of the amplitude of the received signal. When 
constructing a link budget in this environment it is necessary to account for the variation around the mean 
path loss and the variation due to small-scale fading. The shaded areas in Figure 10.4-1 represent an attempt 
to indicate that the links must provide a high probability that the signals will not drop below some set value, 
presumably a value that makes the link budget work acceptably well.  
 
Now consider why it is feasible to model the amplitude of the channel effect by (10.4-4). The 
received signal is modeled as the sum of discrete time delayed and amplitude modified replicas of the 
transmitted signal, so that 
 
 
(
)
( )
( )
( )
n
n
n
r t
t s t
t
α
τ
=
−
∑
 
(10.4-5) 
 
where 
( )
n t
α
is the attenuation factor for the n-th multipath component, and 
( )
n t
τ
 is the associated delay for 
the n-th received multipath component. Using (10.4-1), we have 
 
 
(
)
2  
( )
2
( )
( )
( )
Re
( )
(
( ))
n
c
j
t
j
f t
n
n
n
n
n
n
r t
t s t
t
t e
v t
t
e
π
π
α
α
−
τ
⎡
⎤
⎧
⎫
=
−τ
=
−τ
⎨
⎬
⎢
⎥
⎩
⎭
⎣
⎦
∑
∑
 
(10.4-6) 
 
This can be rewritten as  
 
                                                          
1 Chapter 1 discussed the complex envelope characterization of a signal.  

 
                                                  An Introduction to Fading Channels 
 
 
           693 
 
(
)
( )
2
( )
( )
( )
Re
( )
(
( ))
n
c
j
t
j
f t
n
n
n
n
n
n
r t
t s t
t
t e
v t
t
e
θ
π
α
α
−
⎡
⎤
⎧
⎫
=
−τ
=
−τ
⎨
⎬
⎢
⎥
⎩
⎭
⎣
⎦
∑
∑
 
(10.4-7) 
 
From (10.4-1) it is clear that the equivalent low-pass channel is given by 
 
 
(
)
( )
( )
( )
( )
n
j
t
eff
n
n
n
v
t
t v t
t
e
θ
α
τ
−
=
−
∑
 
(10.4-8) 
 
which can be described more succinctly as a multiplicative factor of the envelope in the form 
 
 
( )
( )
( )
j
t
eff
v
t
t e
θ
α
−
=
 
(10.4-9) 
 
in which  (t) is the resultant amplitude and  (t) is the resultant phase due to the multipath channel signal 
combining.  
 
 
10.4.1 Rayleigh and Rician Fading Models 
Equation Section (Next) 
Now consider Rayleigh fading and Rician fading2 models. We will assume that only two components are 
present at the receiver initially, the direct path and the reflected path. Figure 10.4-2 illustrates the case of two 
components, the direct path and the reflected path.  
 
Direct 
component
Reflected
multipath
component
Resultant
received 
signal component
Direct 
component
Reflected
multipath
component
Resultant
received 
signal component
 
 
Figure 10.4-2 Resultant signal formed from the direct path and the reflected path. 
 
 
 
When the direct path and the reflected path combine, the resultant signal is commonly of a different 
amplitude and phase, as is shown in Figure 10.4-2. In the general case when many multipath signals are 
received at the receiver, the resultant signal can be described in rectangular or polar coordinates as 
 
 
( )
( )
( )
( )
j
t
x t
jy t
t e
θ
α
−
+
=
 
(10.4.1-1) 
 
Under the assumption that there are many multipath components the two components x(t) and y(t) 
can be assumed to have statistically independent Gaussian probability density functions (pdf).  
 
The small-scale amplitude is given by  
 
 
2
2
0( )
( )
( )
r t
x t
y t
=
+
 
(10.4.1-2) 
 
                                                          
2 Often Rician is spelled as Ricean in the literature. 

 694                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
The resulting pdf of the amplitude r0(t) is given by 
 
 
2
2
0
0
0
0
0
0
2
2
2
(
)
( )
exp
  ,  
0,
0
2
r
r
A
Ar
p r
I
r
A
σ
σ
σ
⎡
⎤
+
⎛
⎞
=
−
≥
≥
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
 
(10.4.1-3) 
 
and is zero elsewhere. I0(x) denotes the modified Bessel function of the first kind and order zero, at x. The 
parameter  2 is the value of the mean prediction power of the multipath components and A2/2 is the power of 
the direct component (nonfading). In (10.4.1-3) we have left of the time dependence of r0(t), as is common in 
the literature. Also in (10.4.1-3) I0(x) is the modified Bessel function of the first kind and zero-th order. The 
Rician pdf is often described by the parameter K, which is the ratio of the power in the direct path to the 
power in the multipath, so that 
 
 
2
2
2
A
K
σ
=
 
(10.4.1-4) 
 
When the direct path power goes to zero, the Rician fading model pdf is realized. Hence the Rayleigh pdf for 
fading channels is given by 
 
 
2
0
0
0
0
2
2
( )
exp
  ,  
0
2
r
r
p r
r
σ
σ
⎡
⎤
=
−
≥
⎢
⎥
⎣
⎦
 
(10.4.1-5) 
 
The mean and variance of the Rician pdf are 
(
/ 2)
R
μ
π
σ
=
 and 
(
)
(
)
2
2
/ 2
R
Var
π
σ
=
−
. 
The Rayleigh fading model is sometimes called the random, scatter, or diffuse component-fading 
model. It results when there is no direct path to the receiver. As such, this represents a worst-case model for 
fading. Figure 10.4-3 illustrates a Rayleigh pdf along with three Rician pdfs for the case that K = 1, 5, and 10, 
respectively, and   = 1 in the plots. 
 
0
1
2
3
4
5
6
7
8
9
10
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
Rayleigh K=1
K=5
K=10
r0
p(r0)
0
1
2
3
4
5
6
7
8
9
10
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
Rayleigh K=1
K=5
K=10
r0
p(r0)
 
 
Figure 10.4-3 The Rayleigh and Rician pdfs for three values of K for the Rician pdf. 
 
 
 
Figure 10.4-4 illustrates a typical Rayleigh fading (flat fading) of the signal amplitude when the user 
receiver is moving at a high speed. It is seen that the amplitude can vary significantly (about 45 dB) over 
time and the amplitude can vary significantly in one half of wavelength. 
 
 

 
                                                  An Introduction to Fading Channels 
 
 
           695 
10.4.2 Small-Scale Fading Types 
 
The effect on the signal due to multipath fading depends on the relative bandwidth of the channel and the 
signal as well as symbol period of the signal compared to the delay spread of the channel. Multipath delay 
spread leads to time dispersion and frequency selective fading. In addition Doppler spread leads to frequency 
dispersion and time selective fading [21]. Figure 10.4-5 [21] illustrates the relationship between multipath 
delay spread and Doppler spread effects. The delay spread and Doppler spread are independent phenomena.  
 
0
50
100
150
-40
-35
-30
-25
-20
-15
-10
-5
0
+5
+10
Elapsed 
time (ms)
Signal level (dB relative to rms level)
λ/2
-45
0
50
100
150
-40
-35
-30
-25
-20
-15
-10
-5
0
+5
+10
Elapsed 
time (ms)
Signal level (dB relative to rms level)
λ/2
-45
 
 
Figure 10.4-4 A representative signal amplitude when the receiver is moving at a high rate of speed. 
 
Small-scale fading
due to multipath time delay spread
Flat Fading
BW of signal < BW of channel
delay spread < symbol period
Frequency selective fading
BW of signal > BW of channel
delay spread > symbol period
Small-scale fading
due to Doppler spread 
Fast fading
large Doppler spread
symbol period > coherence time
channel variations > baseband 
signal variations
Slow fading
small Doppler spread
symbol period < coherence time
channel variations < baseband
signal variations
Small-scale fading
due to multipath time delay spread
Flat Fading
BW of signal < BW of channel
delay spread < symbol period
Frequency selective fading
BW of signal > BW of channel
delay spread > symbol period
Small-scale fading
due to Doppler spread 
Fast fading
large Doppler spread
symbol period > coherence time
channel variations > baseband 
signal variations
Slow fading
small Doppler spread
symbol period < coherence time
channel variations < baseband
signal variations
 
 
Figure 10.4-5 Multipath delay spread and Doppler spread cases for small-scale fading.  
 
 
10.4.3 Multipath Time Delay Spread Fading  
Equation Section (Next) 
As is seen from Figure 10.4-5, time delay spread produces either flat fading or frequency selective fading. 
Delay spread is the phenomena caused by the aggregate of reflected and scattered propagation paths in the 
radio channel. The coherence bandwidth, BWcoh, is a parameter obtained from the root mean square (rms) 

 696                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
delay spread function(
).
τ
σ
 The coherence bandwidth is a statistical measure of the bandwidth in which the 
channel can be assumed to have equal gain and linear phase (i.e., “flat” fading occurs). Two parameters of 
delay spread are the mean excess delay (
kτ ) and the rms delay spread (
k
σ ). Let P(
kτ ) denote the received 
power at delay 
kτ  then the mean excess delay is given by 
 
 
(
)
(
)
k
k
k
k
k
P
P
τ
τ
τ
τ
= ∑
∑
 
(10.4.3-1) 
 
and the rms delay spread is given by 
 
 
2
2
( )
τ
σ
τ
τ
=
−
 
(10.4.3-2) 
 
where the second moment is given by 
 
 
2
2
(
)
(
)
k
k
k
k
k
P
P
τ
τ
τ
τ
= ∑
∑
 
(10.4.3-3) 
It is to be noted that the delay is measured relative to the first detectable signal component, hence the term 
mean excess delay. In cases where the delay cannot be determined as a discrete process (10.4.3-1)–(10.4.3-3) 
can be generalized to the continuous case. Rappaport [21] has shown that the coherence bandwidth is related 
to the rms delay spread by 
 
1
5
coh
BW
τ
σ
≈
 
(10.4.3-4) 
 
Example 5 Using the power versus delay specified in the plot indicated next determineτ , 
τ
σ , and BWcoh. 
First the power levels are converted to non-dB (arithmetic) values, then (10.4.3-1)–(10.4.3-4) are applied. 
 
0
-10
-20
-30
-40
dB
0    1      2      3      4      5
Excess
delay (μs)
( )
P τ
0
-10
-20
-30
-40
dB
0    1      2      3      4      5
Excess
delay (μs)
( )
P τ
 
 
Figure for Example 5 showing the power versus delay relationship. 
 
 
The results are 
1.027
τ =
 s, 
0.256
τ
σ =
 s, and BWcoh=782 MHz. 
 
 

 
                                                  An Introduction to Fading Channels 
 
 
           697 
10.4.3.1 Flat Fading Due to Multipath Time Spread 
 
Flat fading occurs when the channel has approximately constant gain and linear phase over a bandwidth that 
is larger than the signal bandwidth. Even though the signal is not distorted spectrally in flat fading, the 
received amplitude may fluctuate considerably at the receiver with time. The characteristics of flat fading are 
illustrated in Figure 10.4-6, based on [21].  
 
s(t)
r(t)
( , )
h t τ
0 τ
( , )
h t τ
t
0
t
( )
s t
Ts
( )
r t
0
Ts +τ
f
f
f
S(f)
H(f)
R(f)
sT
τ <<
fc
fc
fc
s(t)
r(t)
( , )
h t τ
s(t)
r(t)
( , )
h t τ
0 τ
( , )
h t τ
t
0 τ
( , )
h t τ
t
0
t
( )
s t
Ts
0
t
( )
s t
Ts
( )
r t
0
Ts +τ
( )
r t
0
Ts +τ
f
f
f
S(f)
H(f)
R(f)
sT
τ <<
fc
fc
fc
 
 
Figure 10.4-6 An example of a flat fading channel characteristic. 
 
 
 
In the first row of signals of Figure 10.4-6 the input signal is shown as a baseband pulse modulation 
and the impulse response of the channel is assumed to be wideband so that h(t, ) is approximately an impulse 
function, having a duration of   seconds. The resulting output pulse is almost a replica of the input pulse, 
except for the fact that it has finite rise and fall times. The output pulse has been widened by about   seconds 
from its original Ts seconds. In this case 
sT
τ <<
 is satisfied, resulting in a “flat” fading channel. The lower 
set of signals shows the corresponding the signal spectrum, the channel frequency response, and the output 
signal spectrum. The center frequency is fc. In summary the following conditions need to apply for flat 
fading: 
 
and  
s
ch
s
BW
BW
T
τ
σ
<<
>>
 
(10.4.3-5) 
 
where BWs is the signal bandwidth, BWch is the channel bandwidth, Ts is the symbol duration, and    is the 
standard deviation of the delay spread of the channel. 
 
 
10.4.3.2 Frequency Selective Fading Due to Multipath Time Delay Spread 
 
When a channel provides a linear phase and fixed gain over a bandwidth that is smaller than the bandwidth of 
the signal, the resulting conditions are called a frequency selective fading channel. In this case the impulse 
response has a delay spread that is greater than the inverse signal bandwidth. In effect some parts of the 
signal spectrum have different gains than other parts, and distortion occurs. When this type of signal 
distortion occurs, intersymbol interference (ISI) results.  
 
Clearly channels that are frequency selective are more difficult to model than flat fading channels. 
Figure 10.4-7 illustrates small-scale frequency selective fading channel characteristics. The equivalent linear 
filter is shown in Figure 10.4-7 [21] for a frequency selective fading channel. In this case the pulse rate is 

 698                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
such that the bandwidth of the signal is greater than the bandwidth of the channel. The result is the output 
pulse is considerably distorted and elongated when compared to the flat fading case. 
 
s(t)
r(t)
( , )
h t τ
0
τ
( , )
h t τ
t
0
t
( )
s t
Ts
( )
r t
0
Ts +τ
f
f
f
S(f)
H(f)
R(f)
sT
τ <<
fc
fc
fc
s(t)
r(t)
( , )
h t τ
0
τ
( , )
h t τ
t
0
t
( )
s t
Ts
0
t
( )
s t
Ts
( )
r t
0
Ts +τ
f
f
f
S(f)
f
S(f)
H(f)
R(f)
sT
τ <<
fcfc
fcfc
fcfc
 
 
Figure 10.4-7 An example of a frequency selective fading channel characteristic. 
 
 
 
Frequency selective channels are also known as wideband channels, because the bandwidth of the 
signal is wider than the bandwidth of the channel. The channel gain and phase vary with time in a wideband 
channel, producing distortion in the received signal. To summarize [21], frequency selective fading occurs 
when  
 
and  
s
ch
s
BW
BW
T
τ
σ
>
<
 
(10.4.3-6) 
 
 
10.4.4 Fading Effects of Multipath Doppler Spread 
Equation Section (Next) 
Now we consider the effects of fading when Doppler spreading occurs on the received signal. There are two 
classes of Doppler spread: (1) fast fading and (2) slow fading. The measure of the Doppler spread, denoted 
by BWDop, is a measure of the spectral broadening of the channel due to the time rate of change of the 
channel. It denotes the bandwidth over which the Doppler spectrum is not zero. The amount of spectral 
broadening depends on the velocity of the user and the angle between the user and the arriving scattered 
waves. 
 
The coherence time (Tcoh) is the time domain dual of Doppler spread and is used to characterize the 
time varying nature of the frequency spreading of the channel when viewed in the time domain. The 
coherence time and the Doppler spread are inversely related; that is,  
 
 
1
coh
max
T
f
=
 
(10.4.4-1) 
 
where fmax is the maximum Doppler shift and is given by 
 
 
max
v
f
λ
=
 
(10.4.4-2) 
 
with v being the velocity in m/sec and   being the wavelength in meters. A more accurate definition of Tcoh is 
given by [21] 

 
                                                  An Introduction to Fading Channels 
 
 
           699 
 
0.423
coh
max
T
f
=
 
(10.4.4-3) 
 
 
10.4.4.1 Fast Fading Due to Doppler Spread 
 
In fast fading the impulse response changes quickly compared to a symbol time. In other words the channel 
transmission characteristics changes during the symbol time. The result of this channel effect is frequency 
dispersion, which is also called time selective fading; the resulting effect on the signal is signal distortion. 
Alternatively when viewed in the frequency domain, fast fading causes signal distortion with increasing 
Doppler spread in relation to the transmitted signal bandwidth. A signal suffers from fast fading [21] when  
 
 
  
s
coh
s
Dop
T
T
BW
BW
>
<
 
(10.4.4-4) 
 
where Ts is the symbol duration in seconds, Tcoh is the coherent time of the channel in seconds, BWs is the 
bandwidth of the signal in Hz, and BWDop is the Doppler spread bandwidth in Hz. 
 
 
10.4.4.2 Slow Fading Due to Doppler Spread 
 
In the case of slow fading Doppler spread fading case the fading channel impulse response changes at a rate 
that is much slower compared to the baseband equivalent of the signal. The fading channel may be 
considered to be roughly constant over a few inverse signal bandwidths. From the viewpoint of the frequency 
domain the Doppler spread spans only a small portion of the baseband signal bandwidth. Therefore we may 
state [21] the conditions for slow fading due to Doppler spread to be 
 
 
   
s
coh
s
Dop
T
T
BW
BW
<<
>>
 
(10.4.4-5) 
 
These conditions are all relative relations. A low baseband data rate might not be considered to be slow 
fading whereas a high baseband data rate might be considered to have slow fading. Figure 10.4-8 attempts to 
capture the relationship of the four cases discussed earlier. 
 
Flat fading
Frequency selective
fading
Flat fading
Frequency selective
fading
Slow fading
Fast fading
Slow fading
Fast fading
BWs
Ts
BWs
Ts
Delay spread
Doppler spread
BWch
στ
Tcoh
BWDop
 
 
Figure 10.4-8 Summary of conditions for the four fading cases studied so far. 

 700                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
10.5 CHARACTERIZATION OF WIDEBAND CHANNELS 
 
There are two possible characterizations for wideband channels: (1) time varying linear deterministic 
channels and (2) randomly time-variant linear channels. The theory of time varying linear systems was 
developed by Zadeh [22] and extended by Bello [23]. This theory applies directly to slowly varying time-
variant systems. However, if the channel is rapidly varying, problems occur with these models [24, 25].  
Equation Section (Next) 
 
 
10.5.1 Deterministic Models 
 
The deterministic models can be described in both the time domain and the frequency domain. This leads to 
four possible transmission functions that can be used to describe the channel.  
 
 
10.5.1.1 The Time Domain Function 
 
In what follows it will be convenient to represent the real bandpass signals in complex form as we have done 
earlier in this chapter. Thus we write 
 
 
{
}
2
( )
Re
( )
c
j
f t
x t
v t e
π
=
 
(10.5.1-1) 
 
where Re{x} denotes the real part of x, and as before v(t) is the complex envelope of x(t) and fc is the center 
frequency of the bandpass signal.  
 
In the time domain characterization of wideband channels is with time varying impulse response 
functions. Let the complex envelope of the time varying impulse response of the channel equivalent filter be 
denoted by ( , )
h t τ , which we have already called the input delay-spread function [23], where   is a delay 
variable. Then the output complex envelope, y(t), is given by 
 
 
( )
(
) ( , )
y t
v t
h t
d
τ
τ
τ
∞
−∞
=
−
∫
 
(10.5.1-2) 
 
 
One interpretation of (10.5.1-2) is a physical representation of the channel as a continuum of fixed 
(not moving), scintillating scatters, with each elementary scatterer possessing a gain fluctuation of h(t, )d  
and providing delays in the range (t,t+ ). Another interpretation of h(t, ) is the channel response at time t to 
an impulse response input   seconds earlier. Since h(t, ) represents a physical channel and cannot have an 
output before the input, therefore it must be true that h(t, ) = for   < 0. 
 
It is possible to render (10.5.1-2) in discrete time form in order to obtain a tapped delay line model 
[2]. Writing (10.5.1-2) as a discrete summation produces  
 
 
1
( )
(
) ( ,
)
N
n
y t
v t
n
h t n
τ
τ
τ
=
≅Δ
−Δ
Δ
∑
 
(10.5.1-3) 
 
With the assumption that T = N   is the range of time that h(t, ) is essentially nonzero. This equation implies 
a physical representation shown in Figure 10.5-1. The input is the input complex envelope, and the output is 
complex envelope. The upper row can  
 

 
                                                  An Introduction to Fading Channels 
 
 
           701 
τ
Δ
τ
Δ
τ
Δ
v(t)
Summing bus
h(t,Δτ)
h(t,2Δτ)
h(t,3Δτ)
h(t,NΔτ)
L
L
y(t)
Note:      denotes multiplication
Δτ
×
×
×
×
×
×
τ
Δτ
Δ
τ
Δτ
Δ
τ
Δτ
Δ
v(t)
Summing bus
h(t,Δτ)
h(t,2Δτ)
h(t,3Δτ)
h(t,3Δτ)
h(t,NΔτ)
L
L
y(t)
Note:      denotes multiplication
Δτ
×
×
×
×
×
×
 
 
Figure 10.5-1 Time domain representation of a tapped delay line model. 
 
 
be envisioned as a tapped delay line that is densely spaced. Each boxed 
 denotes a delay of     seconds; 
the weighting factors h(t,n  ) are the baseband equivalent impulse response for the envelope evaluated at t 
and n   . Finally the output is multiplied by the value     to agree with (10.5.1-3). 
 
 
10.5.1.2 The Frequency Domain Function 
 
What one can describe in the time domain, one can also describe in the frequency domain through the dual of 
the time-variant impulse function. This dual channel function H(f, ) is called the output Doppler spread 
function, and relates the channel output spectrum to the channel input spectrum in a manner analogous to the 
way in which h(t, ) is related to the input envelope and the output envelope. This characterization relates the 
output spectrum Y(f) as a superposition of elemental Doppler shifted and filtered replicas of the input 
spectrum V(f). Bello has referred to the transfer function H(f,  ) as the output Doppler-spread function. The 
output spectrum is then given by [2]  
 
( )
(
)
(
, )
Y f
V f
H f
d
υ
υ υ
υ
∞
−∞
=
−
−
∫
 
(10.5.1-4) 
 
where V(f) is the Fourier transform of v(t) (it should be noted that v and υ  are not the same quantity).  
 
It is possible to write (10.5.1-4) in a summation form [2], as was done to (10.5.1-3), to yield 
 
 
1
( )
(
)
(
,
)
M
m
Y f
V f
m
H f
m
m
υ
υ
υ
υ
=
= Δ
−
Δ
−
Δ
Δ
∑
 
(10.5.1-5) 
 
 
This assumes that the frequency range, in which the functions are essentially nonzero, are over the 
frequency range of M   Hz.  
 
 
10.5.1.3 The Time-Variant Transfer Function 
 
So far we have discussed in Section 10.5.1 the characterization of linear time-variant channels in terms of the 
input delay spread function h(t, ), which relates output envelope function to the input envelope function. 
However the output Doppler spread function H(f, ) relates the output envelope spectrum to the input 
envelope spectrum. It turns out that another characterization of the channel is possible. This characterization 
is based on relating the output time envelope function expressed in terms of the input envelope spectrum 
function to the channel equivalent filter [23]. This function is known as the time invariant transfer function 
T(f,t) and was introduced by Zadeh [22]. The input-output relationship is given by 
 

 702                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
(
)
( )
( ) ( , )exp
2
y t
V f T f t
j
ft df
π
∞
−∞
= ∫
 
(10.5.1-6) 
 
in which V(f) is the input envelope spectrum and T(f,t) is the time-variant transfer function. The two variable 
functions, sometimes called kernels [23], are related. For example the time-variant transfer function is the 
Fourier transform of the input delay-spread function with respect to the delay variable, so that 
 
 
(
)
( , )
( , )exp
2
T f t
h t
j
f
d
τ
π τ
τ
∞
−∞
=
−
∫
 
(10.5.1-7) 
 
In addition, the inverse Fourier transform of the output Doppler spread function with respect to the Doppler 
variable is the time-variant transfer function, so that  
 
 
(
)
( , )
( , )exp
2
T f t
H f
j
t d
υ
πυ
υ
∞
−∞
= ∫
 
(10.5.1-8) 
 
 
The function T(f,t) can be viewed as the frequency transmission characteristic of the channel. There 
is one more characterization that will be discussed in the next section. 
 
 
10.5.1.4 The Delay Doppler Spread Function 
 
A linear time invariant filter (LTV) can be represented by the input delay spread function or the output 
Doppler spread function as we have already seen. It is advantageous from an engineer’s perspective to have a 
system function that simultaneously provides a description of both the Doppler shift domain and the time 
delay domain. A characterization that has the time delay operation at the input and the Doppler shift 
operation at the output can be described as a delay-Doppler domain characterization [2].  
 
The approach to representing the delay-Doppler domain function as the input delay spread function 
h(t, ) is by the inverse Fourier transform of its spectrum S( , ) so that  
 
(
)
( , )
( , )exp
2
h t
S
j
t d
τ
τ υ
πυ
υ
∞
−∞
= ∫
 
(10.5.1-9) 
 
Now substitute (10.5.1-9) into (10.5.1-2) produces the relationship 
 
 
(
)
( )
(
) ( , )exp
2
y t
v t
S
j
t d d
τ
τ υ
πυ
υ τ
∞
∞
−∞−∞
=
−
∫∫
 
(10.5.1-10) 
 
 
Now (10.5.1-10) indicates that the output envelope function is described by the integral of the 
delayed and Doppler shifted signals. The signals which have delays in the range of   to   +d  and Doppler 
shifts in the range of   to  +d  have a differential scattering amplitude given by ( , )
S
d d
τ υ
τ υ  [2]. Therefore 
the delay-Doppler spread function describes the dispersive nature of the channel based on both time delays 
and Doppler shifts. A nondispersive fading channel displays no spreading in frequency or time.  
 
 
10.5.1.5 The Relationship Between the Four System Functions 
 
It is of interest to describe the relationship between the four system functions described in the previous 
sections. The relationship is depicted in Figure 10.5-2 [2]. 
 

 
                                                  An Introduction to Fading Channels 
 
 
           703 
 
( , )
h t τ
( , )
T f t
( , )
H f υ
( , )
S τ υ
F
F
F
F
F - 1
F - 1
F- 1
F- 1
Input delay-spread function
Output Doppler transfer function 
Time-variant transfer function
Delay/Doppler-spread function
( , )
h t τ
( , )
T f t
( , )
H f υ
( , )
S τ υ
F
F
F
F
F - 1
F - 1
F- 1
F- 1
( , )
h t τ
( , )
T f t
( , )
H f υ
( , )
S τ υ
F
F
F
F
F - 1
F - 1
F- 1
F- 1
Input delay-spread function
Output Doppler transfer function 
Time-variant transfer function
Delay/Doppler-spread function
 
 
Figure 10.5-2 The relationship between the system functions for fading channels. 
 
 
 
The directional arrows indicate that a Fourier transform (F) or an inverse Fourier transform (F-1) is 
needed to move between the two connected blocks. For example, to describe the channel in terms of h(t, ) 
from S( , ) one uses the inverse transform as noted in (10.5.1-9). The inverse transform uses the positive 
exponential, whereas the Fourier transform uses the negative exponential. All system functions have two 
variables, and any pair of system functions that are adjacent to each other (connected by the arrows) have one 
common variable. In the Fourier and inverse Fourier transforms the common variable should be considered 
fixed, when employing the transforms. It is to be noted that a negative exponent (Fourier transform) is used 
when transforming from a time variable (t, ) to a frequency variable (f, ). In addition when transforming 
from a frequency variable to a time variable, the positive exponent is used (inverse Fourier transform).  
 
The only connection we have not shown is from H(f, ) to S( , ). This will be addressed in the 
following example. 
 
Example 6 Based on Figure 10.5-2, we see that  
 
 
(
)
( , )
( , )exp  2
S
H f
j
f
df
τ υ
υ
π τ
∞
−∞
= ∫
 
(10.5.1-11) 
 
since  is held constant, f is the variable of integration, and  is the new time variable. 
 
 
10.5.2 Stochastic Time-Variant Linear Channels 
 
We have formed a basis of the various channel model described earlier so that we are in a position to extend 
those models to real radio channels, which are randomly time variant.  
 
In order to have a complete statistical model of the channel a representation of the joint probability 
function of all the system functions is necessary. However the likelihood of having this information is very 
low, so a more realistic approach is to obtain a statistical characterization via the correlation functions of the 
various system functions [2, 23]. If the output of the channel is a Gaussian random process, then the mean 
and autocorrelation describe the channel completely, in a statistical sense. It will be assumed in what follows 
that all system functions have zero ensemble average. 
 
 

 704                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
10.5.2.1 The Various Channel Correlation Functions 
Equation Section (Next) 
It is convenient to utilize the signal in complex representation as indicated in (10.5.1-1). Thus the signal is 
represented by 
 
 
{
}
2
( )
Re
( )
c
j
f t
x t
v t e
π
=
 
(10.5.2-1) 
 
Obtaining the autocorrelation function from (10.5.2-1) produces 
 
 
[
]
[
]
{
}
[
]
[
]
{
}
*
( ) ( )
(1/ 2)Re
( )
( ) exp
2
(
)
                   
(1/ 2)Re
( ) ( ) exp
2
(
)
c
c
E z t x s
E z t z s
j
f s
t
E z t z s
j
f s
t
π
π
⎡
⎤
=
−
⎣
⎦
+
+
 
(10.5.2-2) 
 
in which E{z} is the ensemble average of z. We see from (10.5.2-2) that it is necessary to specify two 
autocorrelation functions when a bandpass process is represented in complex envelope form; that is,  
 
 
[
]
*
( , )
( )
( )
( , )
( ) ( )
z
z
R t s
E z t z s
R t s
E z t z s
⎡
⎤
=
⎣
⎦
=
%
 
(10.5.2-3) 
 
Bello [23] has stated that most bandpass processes possess the property that  
 
 
[
]
( ) ( )
0
E z t z s
=
 
(10.5.2-4) 
 
If the channel is wide-sense stationary (WSS), then this relationship must be true. This follows since the 
statistics of a WSS process must depend only on the time difference and not on time directly. When this is 
true it follows that 
 
 
[
] (
)
{
}
*
( ) ( )
1/ 2 Re
( )
( ) exp( 2
(
)
c
E z t z s
E z t z s
j
f s
t
π
⎡
⎤
=
−
⎣
⎦
 
(10.5.2-5) 
 
 
The autocorrelation functions that are used for the system functions discussed in Section 10.5.1.2, 
under the assumption that they are WSS system functions, are given by 
 
 
*
*
*
*
     
( , )
( , )
( , ; , )
( , )
( , )
( ,
; , )
   
( , )
( , )
( ,
; , )
  
( , )
( , )
( , ; , )
h
H
T
T
E h t
h s
R t s
E H f
H
m
R
f m
E T f t T
m s
R
f m t s
E S
S
R
τ
η
τ η
υ
μ
υ μ
τ υ
η μ
τ μ υ μ
⎡
⎤=
⎣
⎦
⎡
⎤=
⎣
⎦
⎡
⎤=
⎣
⎦
⎡
⎤=
⎣
⎦
 
(10.5.2-6) 
 
where τ  and η  are the time delay variables and υ  and μ  are the frequency shift variables.  
 
It is possible to obtain the relationships between the autocorrelation function of the output complex 
envelope and the autocorrelation functions of the system functions through the use of the channel 
input/output relationships described in (10.5.1-8).  
 
As an example [2], we may use (10.5.1-2), which is reproduced here  
 
 
( )
(
) ( , )
y t
v t
h t
d
τ
τ
τ
∞
−∞
=
−
∫
 
(10.5.2-7) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           705 
to obtain the autocorrelation function of y(t). We have, since y(t) is complex, 
 
 
[
]
( , )
( ) *( )
y
R t s
E y t y
s
=
 
(10.5.2-8) 
 
Using (10.5.2-7) in (10.5.2-8) produces the equation 
 
 
*
( , )
(
) *(
) ( , )
( , )
y
R t s
E
v t
v
s
h t
h s
d d
τ
η
τ
η
τ η
∞
∞
−∞−∞
⎡
⎤
=
−
−
⎢
⎥
⎣
⎦
∫∫
 
(10.5.2-9) 
 
Since the delay-spread functions are the only stochastic portions of the integral, we may write 
 
 
*
( , )
(
) *(
)
( , )
( , )
y
R t s
v t
v
s
E h t
h s
d d
τ
η
τ
η
τ η
∞
∞
−∞−∞
⎡
⎤
=
−
−
⎣
⎦
∫∫
 
(10.5.2-10) 
 
Recall that the input delay-spread function is defined in (10.5.2-6) and it therefore follows that (10.5.2-10) 
can be written as  
 
 
( , )
(
) *(
)
( , ; , )
y
h
R t s
v t
v
s
R t s
d d
τ
η
υ η
τ η
∞
∞
−∞−∞
=
−
−
∫∫
 
(10.5.2-11) 
 
 
Thus we see that the autocorrelation of the output envelope can be described in terms of the 
autocorrelation function of the input delay-spread function. Actual channels can be measured to obtain the 
approximate value of Rh(t,s; , ) using impulse response sounding methods [2].  
 
 
10.5.2.2 The Relationships Between the Four Channel Correlation Functions 
 
Previously we have shown that the four system functions are connected via a Fourier transform or inverse 
Fourier transforms seen in Figure 10.5-2. It is possible in a similar way to relate the four system functions 
[2]. From Parsons [2], we have Figure 10.5-3. 
 
D F
D F
D F
D F
D F- 1
D F- 1
D F- 1
D F - 1
Input delay-spread autocorrelation function
Output Doppler spread function autocorrelation function 
Time-variant transfer autocorrelation function
Delay/Doppler-spread autocorrelation function
( , ; , )
h
R t s τ η
( ,
; , )
H
R
f m υ μ
( ,
; , )
T
R
f m t s
( , ; , )
S
R τ η υ μ
Note: D F double Fourier transform, D F-1 double inverse Fourier transform.
D F
D F
D F
D F
D F- 1
D F- 1
D F- 1
D F - 1
Input delay-spread autocorrelation function
Output Doppler spread function autocorrelation function 
Time-variant transfer autocorrelation function
Delay/Doppler-spread autocorrelation function
( , ; , )
h
R t s τ η
( ,
; , )
H
R
f m υ μ
( ,
; , )
T
R
f m t s
( , ; , )
S
R τ η υ μ
Note: D F double Fourier transform, D F-1 double inverse Fourier transform.
 
 
Figure 10.5-3 The relationship between the channel autocorrelation functions. 
 

 706                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
 
In Figure 10.5-3 it is seen that the notation DF that denotes the double Fourier transform is used on 
the connections between autocorrelation functions. In addition DF-1 denotes the double inverse Fourier 
transform. In that there are four variables in the functions it is seen that any two functions must be connected 
by two common variables, which are to be considered constant with regard to the double Fourier transforms. 
The convention that is used is the following: when transforming from a pair of time variables to a pair of 
frequency variables, a positive exponential connects the first variable in each pair and a negative connects the 
second variable in each pair [23]. In addition when transforming from a pair of frequency variables to a pair 
of time variables, a negative exponential connects the first variable in each pair and a positive exponential 
connects the second variable in each pair [23]. It is to be noted that f, m, υ , and μ  are the frequency 
variables and s, t, τ , and η  are the time variables in Figure 10.5-3. For example, the Rh(.) has all time 
variables, the RT(.) function has two frequency variables and two time variables. In addition, RH(.) has four 
frequency variables, and RS(.) has two time variables and two frequency variables. 
As an example consider the relationship between the autocorrelation functions of RH(t,s, , ) and 
RT(f,m,t,s). 
 
Example 7 Determine the relationship between RH(t,s, , ) and RT(f,m,t,s) in terms of double integrals. From 
(10.5.1-8) we can write  
 
 
(
)
( , )
( , )exp
2
T f t
H f
j
t d
υ
πυ
υ
∞
−∞
= ∫
 
 
we can form the product 
 
 
(
)
(
)
*
( , ) ( , )*
( , )
( , )exp
2
T m s T f t
H m
H
f
j
s
t d d
μ
υ
π
μ
υ
υ μ
∞
∞
−∞−∞
=
−
∫∫
 
 
Now taking the expected value of both sides produces the result 
 
 
[
]
(
)
(
)
*
( , ) ( , )*
( , )
( , ) exp
2
E T m s T f t
E H m
H
f
j
s
t d d
μ
υ
π
μ
υ
υ μ
∞
∞
−∞−∞
⎡
⎤
=
−
⎣
⎦
∫∫
 
or 
 
 
(
)
(
)
( ,
; , )
( ,
; , )exp
2
T
H
R
f m t s
R
f m
j
s
t d d
υ μ
π
μ
υ
υ μ
∞
∞
−∞−∞
=
−
∫∫
 
 
Thus we see that RH(t,s, , ) and RT(f,m,t,s) are connected by a double Fourier transform. 
 
It is to be noted that there are other functions developed by Bello [23], including the output delay-
Doppler function, the frequency dependent modulation function, the input Doppler-spread function, and the 
Doppler-delay spread function. These functions are directly relatable to the functions indicated in Figure 
10.5-3 [23]. These functions will not be discussed any further here.  
 
 
10.5.3 The Wide-Sense Stationary Channels 
Equation Section (Next) 
At this point in the development of fading channels we move toward practical channel models [2].  
A set of physical channel fading statistics can be modeled as stationary over short time periods or 
over small distances. It is therefore convenient to define channels for analytical purposes. A channel that is 
wide-sense stationary (WSS) has its first two moments independent of time; that is, the second moment only 

 
                                                  An Introduction to Fading Channels 
 
 
           707 
depends on the time difference (
s
t
ξ =
−) and not absolute time. As an example the input delay-spread 
autocorrelation function for a WSS channel is of the form 
 
 
( , ; , )
(
; , )
h
h
WSS
R t s
R t
s
τ μ
τ μ
=
−
 
(10.5.3-1) 
 
The output of this channel may not be WSS, since the output depends on the input process, which may be 
WSS or not, as can be seen from (10.5.2-11). In similar manner the time-variant transfer function can be 
written, when it is WSS, as 
 
 
( ,
; , )
( ,
;
)
T
T
WSS
R
f m t s
R
f m t
s
=
−
 
(10.5.3-2) 
 
 
The Doppler shift domain contains the same basic information as the time domain. Therefore wide-
sense stationary in the time variable t must also be realized in the Doppler domain. Consider the correlation 
function of the delay-Doppler spread function RS(t,s; , ), described in terms of the input delay-spread 
correlation function. From Figure 10.5-3 we have, using the guidance of the paragraph following the figure, 
 
 
(
)
( , ; , )
( , ; , )exp
2 (
)
S
h
R
R t s
j
t
s
dtds
τ η υ μ
τ η
π υ
μ
∞
∞
−∞−∞
=
−
∫∫
 
(10.5.3-3) 
 
 
Now imposing the fact that for WSS processes, the dependence on t and s is through the difference, 
say 
s
t
ξ =
−, so that with this assumption (10.5.3-3) can be rewritten as  
 
 
(
)
( , ; , )
( ; , )exp
2 (
)
S
h
R
R
j
t
t
dtd
τ η υ μ
ξ τ η
π υ
μ
μξ
ξ
∞
∞
−∞−∞
=
−
−
∫∫
 
(10.5.3-4) 
 
since ds
dξ
=
. Rearranging the t integration and the ξ  integration produces 
 
 
(
)
(
)
( , ; , )
exp
2 (
)
( ; , )exp
2
S
h
R
j
t dt
R
j
d
τ η υ μ
π υ
μ
ξ τ η
πμξ
ξ
∞
∞
−∞
−∞
=
−
−
∫
∫
 
(10.5.3-5) 
 
The first integral is just the delta function; that is, 
 
 
(
)
(
)
exp
2 (
)
j
t dt
δ υ
μ
π υ
μ
∞
−∞
−
=
−
∫
 
(10.5.3-6) 
 
at υ
μ
=
. Further, the second integral of (10.5.3-5) is the delay-Doppler cross-power spectral density 
PS( , ; )
τ η υ , since it is the Fourier transform of 
( ; , )
SP ξ τ η  with respect to the variableξ . Thus, the second 
integral can be represented as 
 
 
(
)
( , ; )
( ; , )exp
2
S
h
P
R
j
d
τ η υ
ξ τ η
πυξ
ξ
∞
−∞
=
−
∫
 
(10.5.3-7) 
 
It therefore follows that (10.5.3-5) can be rewritten as 
 
 
(
)
( , ; , )
(
)
, ;
S
S
R
P
τ η υ μ
δ υ
μ
τ η υ
=
−
 
(10.5.3-8) 
 

 708                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
Thus it is seen that for a WSS channel, signals arriving with different Doppler shift values are 
uncorrelated. Similarly it can be shown, for the output Doppler spread function, that 
 
 
(
)
(
)
,
; ,
(
)
,
;
H
H
R
f m
P
f m
υ μ
δ υ
μ
υ
=
−
 
(10.5.3-9) 
 
where 
(
)
,
;
H
P
f m υ  is the Fourier transform of RT(f,m ξ ) with respect to the delay variable ξ . That is to say 
that 
 
 
(
)
(
)
(
)
,
;
,
;
exp
2
H
T
P
f m
R
f m
j
d
υ
ξ
πυξ
ξ
∞
−∞
=
−
∫
 
(10.5.3-10) 
 
 
10.5.4 The Uncorrelated Scattering Channel 
Equation Section (Next) 
An uncorrelated scattering channel (US) is defined as a channel in which the contributions from elemental 
scatters with different path delays are uncorrelated [2]. The uncorrelated scattering channel is the dual of the 
WSS channel [23]. From the duality of the channel models one might expect that, analogous to (10.5.3-7), 
autocorrelation functions of these channels can be expressed as product of delta functions in the time delay 
variable. In fact we have [2] 
 
 
  
( , ; , )
(
)
( , ; )
( , ; , )
(
)
( ; , )
h
h
S
S
R t s
P t s
R
P
τ μ
δ η
τ
τ
τ η υ η
δ η
τ
τ υ μ
=
−
=
−
 
(10.5.4-1) 
 
in which 
 
 
(
)
(
)
(
)
(
)
  
( , ; )
; ,
exp
2
( ; ,
)
; ,
exp
2
h
T
S
H
P t s
R
t s
j
d
P
R
j
d
τ
π
τ
τ υ μ
υ μ
π
τ
∞
−∞
∞
−∞
=
Ω
Ω
Ω
=
Ω
Ω
Ω
∫
∫
 
(10.5.4-2) 
 
where   
( , ; )
hP t s τ  is the delay spectral density and 
( ; , )
SP τ υ μ  is the delay-Doppler cross-power spectral 
density.  
 
Since the US and the WSS channels are time frequency duals, the US channel can be viewed as 
having WSS statistics in the frequency variable. Hence the autocorrelation functions depend only on the 
frequency difference variable Ω  (
)
m
f
Ω =
−
. The autocorrelation functions of the output Doppler spread 
function 
( , )
H f υ  and the time-variant transfer function ( , )
T f t  can be written as [2] 
 
 
(
)
(
)
(
)
(
)
,
; ,
; ,
   
,
; ,
; ,
H
H
T
T
R
f f
R
R
f f
t s
R
t s
υ μ
υ μ
+ Ω
=
Ω
+ Ω
=
Ω
 
(10.5.4-3) 
 
 
Example 8 Let us establish the first of (10.5.4-1). From Figure 10.5-3 we see that we need a double inverse 
Fourier transform from RT(.) to Rh(.). We see that the first transformed variable   has a negative sign and the 
second variable   has a positive sign in the exponential; thus we can write  
 

 
                                                  An Introduction to Fading Channels 
 
 
           709 
 
(
)
(
)
(
)
, ; ,
,
; ,
exp
2 (
)
h
T
R
t s
R
f m t s
j
f
m
dfdm
τ η
π
τ
η
∞
∞
−∞−∞
=
−
−
∫∫
 
(10.5.4-4) 
Recalling for a US channel that the correlation function depends on the frequency variables only through the 
difference, 
.
m
f
Ω =
−
 Hence from the second equation in (10.5.4-3) and using the fact that 
m
f
Ω =
−
 
allows us to rewrite the previous equation as  
 
 
(
)
(
)
(
)
, ; ,
; ,
exp
2 (
)
h
T
R
t s
R
t s
j
f
f
dfd
τ η
π
τ
η
η
∞
∞
−∞−∞
=
Ω
−
−
−Ω
Ω
∫∫
 
(10.5.4-5) 
 
Collecting similar terms produces 
 
 
(
)
(
)
(
)
(
)
, ; ,
exp
2
(
)
; ,
exp
2
)
h
T
R
t s
j
f
df
R
t s
j
d
τ η
π
η
τ
πη
∞
∞
−∞
−∞
=
−
Ω
Ω
Ω
∫
∫
 
(10.5.4-6) 
 
The first integral is the delta function (
)
δ η
τ
−
, and the second integral is delay cross power spectral density 
(
)
, ;
hP t s τ . Hence  
 
 
(
)
(
)
(
)
(
)
(
)
exp
2
(
)
, ;
; ,
exp
2
)
h
T
j
f
df
P t s
R
t s
j
d
δ η
τ
π
η
τ
τ
πη
∞
−∞
∞
−∞
−
=
−
=
Ω
Ω
Ω
∫
∫
 
(10.5.4-7) 
 
The second equation in (10.5.4-1) can be verified in the same manner.  
 
 
10.5.5 The Wide-Sense Stationary Uncorrelated Scattering Channel 
Equation Section (Next) 
Perhaps the most useful channel to mobile radio engineering is the wide sense stationary uncorrelated 
scattering channel (WSSUS), which is a hybrid of the US and WSS channels. It has the property that its first 
and second order statistics are invariant under time or frequency translation. The result of this stationary is 
the fact that the WSSUS needs to be determined only once, since it applies for all time and frequency.  
 
Under the assumption that the channel is a WSSUS, it has been shown that the autocorrelation 
functions of the channel system functions is given by [2, 19] 
 
 
(
)
(
)
(
)
(
)
(
)
      
,
; ,
(
)
( ; )
   
,
; ,
(
)
( ; )
         
,
; ,
;
, ; ,
(
) (
)
( ; )
h
h
H
H
T
T
S
S
R
t t
P
R
f f
P
R
f f
t t
R
R
P
ξ τ η
δ η
τ
ξ τ
υ μ
δ υ
μ
υ
ξ
ξ
τ η υ μ
δ η
τ δ υ
μ
τ υ
+
=
−
+ Ω
=
−
Ω
+ Ω
+
=
Ω
=
−
−
 
(10.5.5-1) 
 
where the power spectral density terms are defined in (10.5.3-10) and (10.5.4-2).  
 
We can conclude this section by observing the following [2]: The autocorrelation function of the 
input delay-spread function, 
(
)
 
,
; ,
h
R
t t
ξ τ η
+
, exhibits uncorrelated scattering in the time delay variable and 
wide-sense stationarity in the time variable. 
The autocorrelation function of the Doppler-spread function, 
(
)
,
; ,
H
R
f f
υ μ
+ Ω
, exhibits wide-
sense stationarity in the frequency variable and uncorrelated scattering in the Doppler shift variable.  

 710                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
The autocorrelation function of the time-variant transfer function, 
(
)
,
; ,
T
R
f f
t t
ξ
+ Ω
+
, exhibits 
wide-sense stationarity in both frequency and time variables. This function is related to the correlation 
between the signal amplitudes between two signal frequencies that are separated by   hertz [26–28].  
Finally, the autocorrelation function of Doppler-spread function, 
(
)
, ; ,
S
R
τ η υ μ , possesses 
uncorrelated scattering in both the Doppler-shift variable and the time-delay variable. In the case of WSSUS 
channels, the delay-Doppler cross-power spectral density 
(
)
;
SP τ υ  is the same as the radar target scattering 
function 
(
)
;
σ τ υ  [2]. However the radar target scattering function was developed for radar targets modeling 
[29]. The relationship between the channel correlation functions, or factors of them, is illustrated in Figure 
10.5-4. 
 
(
)
;
hP ξ τ
(
)
;
SP τ υ
(
)
;
H
P
υ
Ω
(
)
;
T
R
ξ
Ω
F-1
F
F-1
F
F
F-1
F-1
F
Note:
F: Fourier transform
F-1: inverse Fourier transform
(
)
;
hP ξ τ
(
)
;
SP τ υ
(
)
;
H
P
υ
Ω
(
)
;
T
R
ξ
Ω
F-1
F
F-1
F
F
F-1
F-1
F
Note:
F: Fourier transform
F-1: inverse Fourier transform  
 
Figure 10.5-4 Fourier transform relationships between correlation functions in WSSUS channels. 
 
 
 
Now will briefly summarize the hierarchy of the channel models studied so far. Figure 10.5-5 
illustrates the hierarchy of the fading channel models [30] that we have studied.  
 

 
                                                  An Introduction to Fading Channels 
 
 
           711 
WSS fading
channel
model
US fading
channel
model
WSSUS
fading channel
model
Time-selective
fading channel
model
General
time-varying
fading channel
model
Freq.-selective
fading channel
model
Nondispersive
fading channel
model
WSS fading
channel
model
WSS fading
channel
model
US fading
channel
model
US fading
channel
model
WSSUS
fading channel
model
Time-selective
fading channel
model
General
time-varying
fading channel
model
General
time-varying
fading channel
model
Freq.-selective
fading channel
model
Nondispersive
fading channel
model
Nondispersive
fading channel
model
 
 
Figure 10.5-5 Hierarchical relationship between the fading random channel models studied so far. 
 
 
We have started with a randomly time varying channel fading model following the pioneering work 
of Bello. We found that they could be characterized by correlation functions. Modeled after the deterministic 
fading channels, we presented the input delay-spread autocorrelation function, the delay/Doppler-spread 
autocorrelation function, the time-variant transfer autocorrelation function, and output Doppler-spread 
function autocorrelation function.  
Then we moved to a more practical channel model where we introduced the WSS channel, where 
the input delay-spread autocorrelation function and the time-variant transfer function autocorrelation 
functions only depend on t and s through their time difference 
s
t
ξ =
−. In addition, for the WSS channels, 
we showed that delay/Doppler-spread autocorrelation function can be written as a product of (
)
δ υ
μ
−
, in the 
frequency variables υ  and μ , and delay-Doppler cross-power spectral density 
(
)
, ;
SP τ η υ . We also showed 
that the output Doppler-spread function autocorrelation function could be written as the product of (
)
δ υ
μ
−
 
and 
(
)
,
;
H
P
f m υ . 
 
Next we considered the uncorrelated scattering (US) model. This channel has the property that the 
contributions of the elemental scatters with different path delays are uncorrelated. For this model the input 
delay-spread function autocorrelation function can be written as the product of the delta function in the time 
variables, (
)
δ η
τ
−
, and the delay cross power spectral density, 
( , ; )
hP t s τ . In the same manner we found 
that the Delay/Doppler-spread autocorrelation function can be written as the product of 
(
)
δ η
τ
−
 and the 
delay-Doppler cross-power spectral density, 
( , ; )
SP τ υ μ . Furthermore, we found that the autocorrelation 
functions of the output Doppler-spread function and the time-variant transfer function can be written in terms 
of the frequency difference Ω , 
(
)
; ,
H
R
υ μ
Ω
 and 
(
)
; ,
T
R
t s
Ω
, respectively. 
 
 
Finally we reviewed the WSSUS channel. These channels exhibit wide-sense stationarity in the time 
variable and uncorrelated scattering in the time delay variable. This channel model is nontrivial and displays 
uncorrelated dispersiveness in both the time-delay and Doppler-shift functions [23]. The singular behavior in 
both the time-delay and Doppler-shift variables exist as indicated in (10.5.5-1). In Figure 10.5-5 we see that 

 712                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
both time selective fading channels and frequency selective fading channels are a simplification of the 
WSSUS fading channel model. Finally when the fading channel model exhibits no dispersiveness, it results 
in a nondispersive fading channel model. A nondispersive channel model is also known as a flat-flat channel 
model [31] or a Rayleigh fading channel model, which we have studied earlier in this chapter. 
 
 
10.6 THE EFFECTS OF A RAYLEIGH FADING CHANNEL ON THE BIT ERROR RATE 
 
In this section we will briefly determine the impact of Rayleigh fading on the bit error rates of some common 
modulation schemes. 
 
 
10.6.1 The Effects of a Rayleigh Fading Channel on the BPSK Bit Error Rate 
Equation Section (Next) 
In Section 10.4.1 we presented the Rayleigh channel fading pdf of the received signal amplitude; hence for 
2
1
σ
=  we have 
 
 
2
( )
exp
  ,  
0
2
p
α
α
α
α
⎡
⎤
=
−
≥
⎢
⎥
⎣
⎦
 
(10.6.1-1) 
 
From Chapter 3 we showed that the bit error rate (BER) for BPSK with multiplicative relative signal 
amplitude  , is given by  
 
 
2
0
2
b
b
E
PE
Q
N
α
⎛
⎞
=
⎜
⎟
⎜
⎟
⎝
⎠
 
(10.6.1-2) 
 
where Eb is the bit energy, N0 is the one-sided noise power spectral density, and Q(x) is defined by  
 
 
2
1
( )
exp
2
2
x
y
Q x
dy
π
∞
⎛
⎞
=
−
⎜
⎟
⎝
⎠
∫
 
(10.6.1-3) 
 
In Problem 6 it is shown that the pdf of 
2
0
/
b
E
N
γ
α
=
 is given by 
 
 
1
( )
exp
      ,
0
p
γ
γ
γ
γ
γ
⎛
⎞
=
−
≥
⎜
⎟
⎝
⎠
 
(10.6.1-4) 
 
where γ  is the average value of γ . Therefore the average bit error probability is given by  
 
 
(
)
0
1
2
exp
b
PE
Q
d
γ
γ
γ
γ
γ
∞
⎛
⎞
=
−
⎜
⎟
⎝
⎠
∫
 
(10.6.1-5) 
 
which can be evaluated to (see Problem 7) 
 
 
1 1
2
1
b
PE
γ
γ
⎡
⎤
=
−
⎢
⎥
+
⎣
⎦
 
(10.6.1-6) 

 
                                                  An Introduction to Fading Channels 
 
 
           713 
Figure 10.6-1 plots the probability of bit error for BPSK modulation for the case of a Rayleigh fading 
channel with additive white Gaussian noise and for the case of the additive white Gaussian noise (AWGN) 
channel as a function of 
0
/
b
E
N
γ
=
, for the case of fading and against 
0
/
b
E
N  for the AWGN case. 
 
0
5
10
15
20
25
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Eb/No (dB)
Probability of bit error
Rayleigh fading channel
AWGN channel
Average
Average Eb/No (dB)
0
5
10
15
20
25
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Eb/No (dB)
Probability of bit error
Rayleigh fading channel
AWGN channel
0
5
10
15
20
25
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Eb/No (dB)
Probability of bit error
Rayleigh fading channel
Rayleigh fading channel
AWGN channel
AWGN channel
Average
Average Eb/No (dB)
 
 
Figure 10.6-1 Bit error probability for BPSK modulation for the AWGN and the Rayleigh fading channel. 
 
 
 
As can be seen in Figure 10.6-1 the impact of a Rayleigh fading channel is very considerable, as the 
power required to achieve, say, a bit error probability of 10–3 is about 17.18 dB more for the Rayleigh fading 
case than compared to the AWGN channel case.  
 
 
10.6.2 The Effects of a Rayleigh Fading Channel on the DPSK Bit Error Rate 
Equation Section (Next) 
The performance of differential phase shift keying bit error rate is well known. In Chapter 3 we found that 
the bit error rate for DPSK is given by 
 
 
(
)
0
1
1
exp
exp
2
2
b
b
E
PE
N
γ
⎛
⎞
=
−
=
−
⎜
⎟
⎝
⎠
 
(10.6.2-1) 
 
To determine the effect of Rayleigh fading on DPSK it is necessary to evaluate the average bit error rate 
using (10.6.1-4) so that 
 
 
(
)
0
0
1
1
( ) ( )
exp
exp
2
b
b
PE
PE
p
d
d
γ
γ
γ
γ
γ
γ
γ
γ
∞
∞
⎡
⎤
⎛
⎞
=
=
−
−
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
∫
∫
 
(10.6.2-2) 
 
This can be evaluated as readily with integration tables to arrive at 
 
 
(
)
1
2 1
b
PE
γ
=
+
 
(10.6.2-3) 
 
Again we see the dependence on   or γ  is very different for the AWGN case (10.6.2-1) and the Rayleigh 
fading case (10.6.2-3). The two results are shown in Figure 10.6-2. 

 714                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
0
5
10
15
20
25
30
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Eb/No (dB)
Probability of bit error
Rayleigh fading channel
AWGN channel
Average
Average Eb/No (dB)
0
5
10
15
20
25
30
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Eb/No (dB)
Probability of bit error
Rayleigh fading channel
AWGN channel
Average
0
5
10
15
20
25
30
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Eb/No (dB)
Probability of bit error
Rayleigh fading channel
AWGN channel
Average
0
5
10
15
20
25
30
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Eb/No (dB)
Probability of bit error
Rayleigh fading channel
Rayleigh fading channel
AWGN channel
AWGN channel
Average
Average Eb/No (dB)
 
 
Figure 10.6-2 Bit error probability for DPSK modulation for the AWGN and the Rayleigh fading channel. 
 
 
 
The difference in performance for the AWGN channel and the Rayleigh channel, at a bit error rate 
of 10–3, is 19.05 dB. Again we see that the fading channel is much more deleterious to the bit error rate 
performance than the white Gaussian noise channel. This is usually the case when Rayleigh fading occurs. 
 
 
10.6.3 The Effects of a Rayleigh Fading Channel on Noncoherent Orthogonal BFSK Bit Error Rate 
Equation Section (Next) 
The bit error rate of orthogonal noncoherent binary frequency shift keying (BFSK) has been determined [32] 
to be given by 
 
 
(
)
1 exp
/ 2
2
b
PE
γ
=
−
 
(10.6.3-1) 
 
Averaging over the Rayleigh channel pdf via the left side of (10.6.2-2) produces 
 
 
1
2
b
PE
γ
=
+
 
(10.6.3-2) 
 
which is obtained from the results of Problem 7.  
 
We have seen from these three cases that the bit error rate decreases only asymptotically with the 
average Eb/N0 value. The amount of power needed to overcome the fading environment is very large and 
often times cannot be achieved economically. We will see in Section 10.7 that there are ways of overcoming 
the fading losses to some extent. 
 
 
10.6.4 Nakagami Fading Channel Model 
Equation Section (Next) 
In (10.6.1-2) we saw that the signal to noise ratio (SNR) Eb/N0 value is modified by  2, the fading squared 
amplitude. So if   described as a Nakagami-m pdf, then the random variable 
2
0
/
b
E
N
γ
α
=
 has the pdf 

 
                                                  An Introduction to Fading Channels 
 
 
           715 
 
(
)
1
( )
exp
/
( )
m
m
m
m
p
m
m
γ
γ
γ γ
γ
−
=
−
Γ
 
(10.6.4-1) 
 
where  (m) is the Gamma function evaluated at m and 
(
)
2
0
/
b
E
E
N
γ
α
=
. Note that when m =1 the pdf 
degenerates to the Rayleigh fading model for  , (see (10.6.1-4)). It can be shown [32] that the bit error rate 
(BER) performance improves with increasing value of m. Also when m is unbound in value (in a positive 
direction) the BER approaches the AWGN channel with no fading [32]. Now consider the case of binary 
PSK modulation with AWGN and a Nakagami-m fading channel model. The average BER is given by 
 
 
(
)
(
)
1
0
0
( ) ( )
2
exp
/
( )
m
m
b
b
m
m
PE
PE
p
d
Q
m
d
m
γ
γ
γ
γ
γ
γ γ
γ
γ
∞
∞
−
=
=
−
Γ
∫
∫
 
(10.6.4-2) 
 
This result for the average bit error probability with Nakagami fading is shown in Figure 10.6-3, based on 
numerical integration. 
 
As can be seen from the BER curves the fading effect diminishes as m increases, until at very large 
m it approaches the unfaded AWGN channel. The case for m = 50 yields a BER = 10–5 that occurs at abut 
10.2 dB. The AWGN BPSK yields a value of 9.6-dB SNR to achieve a BER = 10–5. Thus, at m =50 the 
performance is quite close to a channel without fading and with AWGN. Lee [10] and Parsons [2] have 
obtained the average BER for the Rician channel for binary and other cases. 
 
 
 
 
 
 
0
5
10
15
20
25
30
35
40
1  10 10
1  10 9
1  10 8
1  10 7
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
m =0.5
m =1
m =2
m =3
m =4
m =5
m =50
Average bit error probability
Average SNR     (dB)
γ
0
5
10
15
20
25
30
35
40
1  10 10
1  10 9
1  10 8
1  10 7
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
m =0.5
m =1
m =2
m =3
m =4
m =5
m =50
0
5
10
15
20
25
30
35
40
1  10 10
1  10 9
1  10 8
1  10 7
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
m =0.5
m =1
m =2
m =3
m =4
m =5
m =50
Average bit error probability
Average SNR     (dB)
γ
 
 
Figure 10.6-3 The average bit error probability of BPSK with a Nakagami-m fading channel model. 

 716                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
 
10.7 MITIGATION METHODS FOR MULTIPATH EFFECTS 
Equation Section (Next) 
There are three basic methods that can be used independently or together to improve signal quality, which 
can be measured by the bit error rate (BER), for example. They are diversity, equalization, and channel 
coding.  
 
We have seen in the last section that channel fading caused severe degradation in BER performance 
if no mitigation was employed. One method to improve BER performance is the use of redundancy. For 
example, when one signal fades it is possible that one or more other independently fading channels might not 
be in a fade, and therefore could be utilized to improve the bit error probability performance. A means of 
achieving redundancy is through the use of diversity techniques.  
 
Another approach to mitigate multipath is equalization. The role of equalization is to compensate 
for intersymbol interference (ISI), which is created by multipath within time dispersive channels. When the 
modulation bandwidth exceeds the coherence bandwidth of the channel, ISI occurs and the modulation 
symbols are elongated in time. Equalizers compensate for the expected channel delay and amplitude 
characteristics. Since most channels are unknown to the receiver at the start of operation, the equalizers are 
adaptive and require some learning time. 
 
The third approach is channel coding, which introduces redundancy in the transmitted signal. 
Commonly interleaving is introduced when channel coding is utilized. The combination provides lower BER 
for the same transmitted power levels. 
 
 
 
 
 
10.7.1 Diversity for Multipath Improvement 
 
Redundancy can be achieved in various ways. With frequency diversity the same data is carried on the L 
carriers in which the separation in frequency between successive carriers is equal to or greater than the 
coherence bandwidth of the channel.  
 
Time diversity is another method of achieving independently fading channels. If the diversity is L 
then L time slots are to transmit the same signal. In this approach successive time slots must be spaced by the 
coherence time of the channel.  
 
Another diversity method is antenna diversity. This approach utilizes multiple receiver antennas and 
one transmit antenna. The antennas must be located sufficiently far apart so that the path delays are 
sufficiently different so as to provide near statistical independence. Commonly a few wavelengths are needed 
for the antenna separation distance.  
 
Other diversity techniques include angle of arrival diversity and polarization diversity. Angle of 
arrival diversity has found applications in troposcatter systems in which large reflector-type of antennas 
equipped with multiple feeds that produce numerous narrow beamwidth beams pointing in a slightly different 
direction. It has been observed that the scattered signals related to these directions are uncorrelated [26]. 
Polarization diversity, for the two orthogonal polarizations, when used for mobile radio communications, 
exhibit uncorrelated fading statistics. There is an attendant loss of 3 dB on each polarization, however, since 
the power is split between the two polarizations. 
 
 
10.7.2 Combining Methods for Fading Mitigation 
 
Four combining (or diversity) approaches have been used to mitigate the effects of fading when separate 
receiver antennas are used for reception. These methods are known as space diversity. Space diversity 
methods are: (1) selection combining, (2) maximal ratio combining, (3) scanning combining, and (4) equal 
gain combining.  
 

 
                                                  An Introduction to Fading Channels 
 
 
           717 
 
10.7.2.1 Selection Combining 
Equation Section (Next) 
Selection combining, also called selection diversity, is quite simple in principle. Figure 10.7-1 illustrates the 
selection combining approach. The signal plus noise-to-noise ratio is estimated in the receiver to select the 
largest ratio, which yields the strongest signal. Assume that each diversity branch in Figure 10.7-1 is 
uncorrelated and has a Rayleigh distribution function, with mean power P0.  
 
L
L
R1
R2
RL
Selection logic
Transmitter
Largest of L
output
L
L
R1
R2
RL
Selection logic
Transmitter
Largest of L
output
 
 
Figure 10.7-1 A block diagram model of selection combining. 
 
 
 
 
The pdf of each diversity branch signal envelope is given by [26] 
 
 
2
0
0
( )
exp
    
0
2
i
i
i
i
r
r
p r
r
P
P
⎛
⎞
=
−
≥
⎜
⎟
⎝
⎠
 
(10.7.2-1) 
 
in which ri is the signal envelope of the i-th branch and P0 is the mean power. It is convenient to convert the 
variable to signal-to-noise ratio (SNR). If ri is the signal envelope, then the average power is 
2 / 2
ir
 over one 
RF cycle. Denote the mean noise power in each branch as 
2
in
N
=
; then the i-th channel SNR is 
 
 
2
2
i
i
r
N
γ =
 
(10.7.2-2) 
 
The average value, over one cycle, is therefore 
 
 
2
0
2
i
i
r
P
N
N
γ
=
=
= Γ 
(10.7.2-3) 
 
 
The transformation from ri to  i is obtained from [33] 
 
 
( )
(
)
( )
i
i
i
i
i
dr
p
p r
d
γ
γ
γ
=
 
(10.7.2-4) 
 
In Problem 8 it is shown that 

 718                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
 
1
( )
exp
i
i
p
γ
γ
⎛
⎞
=
−
⎜
⎟
Γ
Γ
⎝
⎠
 
(10.7.2-5) 
 
From (10.7.2-5) it follows that the probability of the SNR not exceeding some value threshold value 
Th
γ
 is 
given by 
 
 
(
)
0
( )
1 exp
Th
Th
i
Th
i
i
P
p
d
γ
γ
γ
γ
γ
γ
⎛
⎞
≤
=
= −
−
⎜
⎟
Γ
⎝
⎠
∫
 
(10.7.2-6) 
 
In order to obtain the distribution of the largest, it is convenient to utilize what is called the distribution 
theory of order statistics [33]. In that theory it is well known that the distribution of the maximum is given by 
[33] 
 
 
(
)
(
)
 
 
 
1 exp
L
Th
TH
L
Th
P all of the observations
P
γ
γ
γ
⎡
⎤
⎛
⎞
≤
=
=
−
−
⎜
⎟
⎢
⎥
Γ
⎝
⎠
⎣
⎦
 
(10.7.2-7) 
 
The pdf of the maximum can be obtained by taking the derivative with respect to 
.
Th
γ
 Thus the pdf of the 
maximum SNR branch satisfies 
 
 
(
)
(
)
1
(
)
1 exp
exp
L
Th
Th
L
Th
L
Th
Th
d
L
p
P
d
γ
γ
γ
γ
γ
−
⎛
⎞
⎛
⎞
⎛
⎞
=
=
−
−
−
⎜
⎟
⎜
⎟
⎜
⎟
Γ
Γ
Γ
⎝
⎠
⎝
⎠
⎝
⎠
 
(10.7.2-8) 
 
Now the mean value of the largest is given by 
 
 
(
)
0
Th
Th
L
Th
Th
p
d
γ
γ
γ
γ
∞
= ∫
 
(10.7.2-9) 
 
This can be written as 
 
 
1
0
1 exp
exp
L
Th
Th
Th
Th
Th
L
d
γ
γ
γ
γ
γ
−
∞
⎛
⎞
⎛
⎞
⎛
⎞
=
−
−
−
⎜
⎟
⎜
⎟
⎜
⎟
Γ
Γ
Γ
⎝
⎠
⎝
⎠
⎝
⎠
∫
 
(10.7.2-10) 
 
Now let 
/
th
x
γ
=
Γ  so that 
 
(
)
(
)
(
)
1
0
1 exp
exp
L
Th
L
x
x
x dx
γ
∞
−
=
Γ
−
−
−
∫
 
(10.7.2-11) 
 
Expanding the term raised to the L–1 power in a binomial series yields  
 
 
(
)
1
0
0
1 ( 1) exp(
)exp
L
r
Th
r
L
L
x
rx
x dx
r
γ
∞
−
=
−
⎛
⎞
=
Γ
−
−
−
⎜
⎟
⎝
⎠
∑
∫
 
(10.7.2-12) 
 
which can be evaluated, after some algebra, as 
 

 
                                                  An Introduction to Fading Channels 
 
 
           719 
 
1
2
0
!
1
( 1)
(
1
)! !
(
1)
L
r
Th
r
L
L
r
r
r
γ
−
=
= Γ
−
−−
+
∑
 
(10.7.2-13) 
 
This can be shown to be equal to the following simpler series3 
 
 
1
1
L
Th
i
i
γ
=
= Γ∑ 
(10.7.2-14) 
 
Therefore it is possible to relate the mean maximum SNR to the individual channel SNR by the relationship 
 
 
1
1
L
Th
i
i
γ
=
=
Γ
∑ 
(10.7.2-15) 
 
 
10.7.2.2 Maximal Ratio Combining 
 
This method of combining the received signals, known as maximal ratio combining, yields the optimal SNR. 
Kahn [34] first devised this approach. Each of the L signals are weighted proportionately to their signal 
voltage to noise power ratios, phase aligned, and then summed.  
 
It is necessary to first phase-align the signals so that they are coherent prior to their being combined. 
Figure 10.7-2 illustrates the transmitter and receiver block diagram structure.  
 
L
Xmtr
L
SNR
estimate
α1
SNR
estimate
α2
SNR
estimate
αL
Phase aligning and summing
Detector
Output
L
Xmtr
L
SNR
estimate
α1
SNR
estimate
α1
SNR
estimate
α2
SNR
estimate
αL
SNR
estimate
αL
Phase aligning and summing
Detector
Output
Phase aligning and summing
Detector
Output
 
 
Figure 10.7-2 A block diagram model of maximal ratio combining. 
 
 
 
After phase alignment the envelope of the output is given by  
 
 
1
L
k k
k
r
r
α
=
= ∑
 
(10.7.2-16) 
 
where  k are the weights of the k-th channel. Letting the mean noise power of each channel be denoted as N, 
the weighted sum of the noise is given by 
                                                          
3 Note that the two series can be shown to be numerically equal for all values of L. 

 720                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
 
2
1
L
L
k
k
N
N
α
=
= ∑
 
(10.7.2-17) 
 
The resulting SNR after the combining is then given by  
 
2
1
2
1
2
2
L
k k
k
L
L
L
k
k
r
r
N
N
α
γ
α
=
=
=
= ∑
∑
 
(10.7.2-18) 
 
The resulting SNR can be maximized with the choice 
/
k
kr
N
α =
, based on the Schwarz Inequality [35, 36]. 
With that choice of  k, we have  
 
 
2
2
2
1
2
1
1
1
/
2
2
(
/
)
L
k
L
L
k
k
Lopt
k
L
k
k
k
k
r
N
r
N
N
r
N
γ
γ
=
=
=
=
⎛
⎞
⎜
⎟
⎝
⎠
=
=
=
∑
∑
∑
∑
 
(10.7.2-19) 
 
Therefore the combined SNR, with the optimum weights, is just the sum of the channel SNRs. The received 
fading signal envelope for a fading mobile channel can be written as the sum of the squares of two 
statistically independent Gaussian random variables with zero mean and variance P0. Thus 
2
k
γ   can be written 
as 
 
 
(
)
2
2
2
2
1
2
2
k
k
k
k
r
x
y
N
N
γ
=
=
+
 
(10.7.2-20) 
 
It therefore follows that the distribution of  Lopt is a chi-squared random variable with 2L degrees of freedom 
and has a variance of 
0 / 2
/ 2
P
N = Γ
. Note that   was already defined by (10.7.2-3). The probability density 
function for the optimized maximal ratio combining of  Lopt is therefore given by (we have dropped the “opt” 
for convenience) 
 
 
(
)
(
)
(
)
(
)
1 exp
/
  
 
0
1 !
0                            
 
0
L
L
L
L
L
L
L
L
P
for
L
P
for
γ
γ
γ
γ
γ
γ
−
−
Γ
=
≥
Γ
−
=
<
 
(10.7.2-21) 
 
The probability distribution function of the maximal ratio combiner is given by the integral 
 
 
(
)
1
0
1
(
)
exp
/
(
1)!
L
L
MR
L
L
P
u
u
du
L
γ
γ
−
=
−
Γ
Γ
−
∫
 
(10.7.2-22) 
 
Evaluating (10.7.2-22) for the maximal ratio (MR) for the SNR produces 
 
 
(
)
1
1
/
(
)
1 exp(
/ )
(
1)!
k
L
L
MR
L
L
k
P
k
γ
γ
γ
−
=
Γ
= −
−
Γ
−
∑
 
(10.7.2-23) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           721 
This form of combining is superior to selection combining as will be shortly demonstrated. The mean SNR of 
the optimally combined signal can be obtained from (10.7.2-19) 
 
 
1
1
( )
L
L
MR
k
k
k
L
L
γ
γ
=
=
=
=
Γ = Γ
∑
∑
 
(10.7.2-24) 
where the explicit dependence on L has been indicated. It is seen that 
( )
MR L
γ
 varies linearly with the number 
of combined channels. 
 
It is of interest to mention two approaches to phase alignment for use in maximal ratio combining. 
Figure 10.7-3 shows two possible methods [26].  
 
The first circuit utilizes a heterodyne process to translate the two signals to baseband. At baseband 
they are compared in carrier phase and the signal on the upper arm is phase shifted to agree with the phase of 
the lower signal. The second circuit utilizes a voltage-controlled oscillator (VCO) to adjust the phase of the 
upper branch signal to match the phase of the lower branch signal. It is assumed that a carrier component is 
available to track in these implementations. 
 
 
10.7.2.3 Equal Weight Combining 
 
It is not always easy to obtain the SNR estimates needed for maximal ratio combining. It is much simpler to 
utilize equal weight combining. Let the gains be set to “1.” Figure 10.7-3 still applies, but there no need to 
estimate the gain, since they are all assumed to be unity. The envelope of the combined (and phase aligned) 
signal is given by (10.7.2-16) with the  k = 1. 
 
 
Variable
phase
shifter
Osc.
Phase
detector
+
(a) Phase alignment circuit utilizing a variable phase shift 
(b) Phase alignment circuit utilizing a VCO
Phase
detector
+
VCO
(f0)
Combined signal
Combined signal
Osc.
(f0)
Variable
phase
shifter
Variable
phase
shifter
Osc.
Phase
detector
+
(a) Phase alignment circuit utilizing a variable phase shift 
(b) Phase alignment circuit utilizing a VCO
Phase
detector
Phase
detector
+
VCO
(f0)
Combined signal
Combined signal
Osc.
(f0)
Osc.
(f0)
 
 
Figure 10.7-3 (a, b) Two possible circuits for aligning the phase of one signal with another. 
 
 
Thus we have 
 

 722                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
1
L
k
k
r
r
=
= ∑
 
(10.7.2-25) 
 
Therefore the SNR of the equal weight combiner is given by 
 
 
2
2
2
1
2
2
1
E
L
k
r
r
NL
N
γ
=
=
=
∑
 
(10.7.2-26) 
 
The distribution function is not available for L≥3. However, the mean value of 
E
γ
 can be obtained. Let the 
overbar denote the ensemble average; then 
 
 
2
1
1
1
2
2
L
L
L
k
j
k
k
j
k
E
r r
r
NL
NL
γ
=
=
=
⎛
⎞
⎜
⎟
⎝
⎠
=
=
∑∑
∑
 
(10.7.2-27) 
 
The double sum can be broken down into the diagonal terms ( k
j
=
) and the off-diagonal terms ( k
j
≠
) so 
that 
 
 
2
1
1
1
1
1
L
L
L
L
L
k
j
k
k
j
k
j
k
j
k
j k
r r
r
r r
=
=
=
=
=
≠
=
+
∑∑
∑
∑∑
 
(10.7.2-28) 
 
Now 
2
0
2
kr
P
=
; considering the value of 
0 / 2
kr
P
π
=
, we have 
 
 
2
0
0
0
0
0
( )
exp
2
2
i
i
i
i
i
i
i
i
r
r
P
r
r p r dr
r
dr
P
P
π
∞
∞
⎡
⎤
⎛
⎞
=
=
−
=
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
∫
∫
 
(10.7.2-29) 
 
from a suitable tables of integration. Using these values in (10.7.2-28) gives 
 
 
0
0
1
1
2
(
1) 2
L
L
k
j
k
j
P
r r
LP
L L
π
=
=
=
+
−
∑∑
 
(10.7.2-30) 
 
So  
 
0
0
2
(
1) 2
( )
1 (
1)
2
4
E
P
LP
L L
L
L
NL
π
π
γ
+
−
⎛
⎞
=
= Γ
+
−
⎜
⎟
⎝
⎠
 
(10.7.2-31) 
 
where we have shown the explicit dependence on L. Figure 10.7-4 illustrates the plot of 
( )/
E L
γ
Γ  in dB. It is 
easy to show that  
 
 
 
4
( )
( )
Lim L
E
MR
L
L
π
γ
γ
→∞
=
⎛
⎞
⎜
⎟
⎝
⎠
 
(10.7.2-32) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           723 
so that we may conclude that equal weight combining is only 1.05 dB worse than optimal weight combining 
in the limit as L becomes very large. Figure 10.7-4 compares maximal ratio, equal weight, and selection 
diversity combining methods. As can be seen maximal ratio offers the best performance. 
 
Number of branches, L
10log(γTh/Γ), dB
0
1
2
3
4
5
6
7
8
9
10 11 12 13 14 15 16 17 18 19 20
0
1
2
3
4
5
6
7
8
9
10
Maximal
ratio
Equal
weight
Selection
diversity
Number of branches, L
10log(γTh/Γ), dB
10log(γTh/Γ), dB
0
1
2
3
4
5
6
7
8
9
10 11 12 13 14 15 16 17 18 19 20
0
1
2
3
4
5
6
7
8
9
10
Maximal
ratio
Equal
weight
Selection
diversity
 
Figure 10.7-4 The improvement of SNR from three diversity combiners: maximal ratio, equal gain combining, and maximum selection. 
 
10.7.2.4 Scanning Diversity 
 
Another very simple type of elementary diversity is known as scanning diversity. It is similar to selection 
diversity; however it differs in the sense that instead of always using the best one of the L signals, it scans the 
signal sequentially until one is found that is above the threshold. This signal is then used continuously until it 
falls below the threshold and the search starts anew. The performance is not as good as even selection 
diversity; however, it is easy to implement and offers reasonable performance. Figure 10.7-5 illustrates the 
technique.  
 
One advantage of this scheme is the fact that only one receiver is needed to implement it.  
 
 
Receiver
Short-term
signal level
average
Threshold
comparison
Threshold
Control search
L
Receiver
Short-term
signal level
average
Threshold
comparison
Threshold
comparison
Threshold
Control search
L
 
 
Figure 10.7-5 Model of the scanning diversity approach. 
 

 724                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
10.8 EQUALIZATION FOR MULTIPATH IMPROVEMENT 
Equation Section (Next) 
As we mentioned earlier in this section there are three basic methods that can be used independently or 
together to improve the signal quality such as the bit error rate (BER). They are diversity, equalization, and 
channel coding. We now address equalization.  
 
The function of equalization is to compensate for intersymbol interference (ISI) that was caused by 
multipath within time dispersive channels. Recall when the channel bandwidth is greater than the coherence 
bandwidth of the channel, ISI occurs, and the baseband equivalent symbols are spread in time. The role of the 
equalizer is to compensate for the expected range of the channel amplitude and phase characteristics. 
Furthermore equalizers need to be adaptive in order to compensate for the time varying channel and to 
determine the unknown channel model parameters. 
 
Conceptually equalization is a terminology that can be used to describe a type of signal processing 
that minimizes the ISI of the processed received signal. Due to the time varying nature of the fading channel 
the equalizer must track the changes; consequently, they are called adaptive equalizers. Before we discuss 
adaptive equalizers, let us briefly discuss the transversal symbol rate equalizer model. 
 
 
10.8.1 Baseband Transversal Symbol Rate Equalizer 
 
Consider a baseband communication system that is represented by samples that are running at the symbol 
rate of Rs = 1/T, which is assumed to be the Nyquist rate. Let the channel be represented by a transversal 
filter having taps that are the sampled values of the channel filter. This filter represents a distortion to the 
transmitted signal. Assume that the symbol rate equalizer is also represented by a transversal filter having 
taps that are the sampled values of the transversal filter.  
The combination is depicted in Figure 10.8-1 for a particular channel distortion and equalizer model 
[37] for the case that the channel has 3 stages (n = 3) and the equalizer has 5 stages (m = 5). 
 
yk
xk
T
T
T
w0
w1
w2
Summer
w-1
T
nk
w-2
+
T
T
h-1
h0
h1
Summer
sk
Symbol rate equalizer
Channel distortion
y
x
T
T
T
0
1
2
Summer
-1-1-1
T
-2
-2
-2
T
T
-1
0
1
s
T
T
-1-1
0
1
s
Symbol rate equalizer
Channel distortion
yk
xk
T
T
T
w0
w1
w2
Summer
w-1
T
nk
w-2
+
T
T
h-1
h0
h1
Summer
sk
Symbol rate equalizer
Channel distortion
y
x
T
T
T
0
1
2
Summer
-1-1-1
T
-2
-2
-2
T
T
-1
0
1
s
T
T
-1-1
0
1
s
Symbol rate equalizer
Channel distortion
 
 
Figure 10.8-1 Channel distortion model followed by a symbol rate equalizer. 
 
 
 
Now let h be written in general as 
 
 
1
1
1
0
1
1
1
1
1
2
2
2
2
,
,...
,
,
,...
,
n
n
n
n
h
h
h
h h
h
h
−
−
−
−
−
−
−
+
−
⎛
⎞
= ⎜
⎟
⎝
⎠
h
 
(10.8.1-1) 
 
And be the vector of the channel distortion model weights. There are n weights in total. Note that in an 
undistorted Nyquist channel h reduces to 
 
 
(
)
0,0,0,...1,0,0...0
=
h
 
(10.8.1-2) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           725 
with only the center component having unit value, and the rest having the value of zero, whereas a distorted 
channel, for example, could have the vector (for the case n = 3) 
 
 
(
)
0.09,1,0.05
= −
h
 
(10.8.1-3) 
 
with the center value normalized to unity. The sampled impulse response vector h with n components  
(n = odd), of the channel, can be represented as a z-transform as 
 
 
1
1
1
1
1
1
1
2
2
2
2
1
1
1
0
1
1
1
 
 
1
 1
2
2
2
2
( )
,...
,...
n
n
n
n
n
n
n
n
h z
h
z
h
z
h z
h
h z
h
z
h
z
−
−
−
−
+
−
−
−
−
−
−
−
−
−
−
−
+
−
=
+
+
+
+
 
(10.8.1-4) 
 
Likewise we can represent the equalizer in the z domain, having m components (m odd) as 
 
 
1
1
1
1
1
1
1
2
2
2
2
1
1
1
0
1
1
1
 
 
1
 1
2
2
2
2
( )
,...
,...
m
m
m
m
m
m
m
m
w z
w
z
w
z
w z
w
w z
w
z
w
z
−
−
−
−
+
−
−
−
−
−
−
−
−
−
−
−
+
−
=
+
+
+
+
 
(10.8.1-5) 
 
Similarly the output y(z) can be written in the z domain also. This output has n+m–1 components. The 
operation of the equalizer on the channel may be expressed in the z domain as  
 
 
( ) ( )
( )
h z w z
y z
=
 
(10.8.1-6) 
 
 
For perfect equalization (no noise) we must have 
 
 
 
 
( ) ( )
K
h z w z
z−
=
 
(10.8.1-7) 
 
which states that the equalized channel response is a delay of K time units. Perfect equalization (without 
noise) would suggest that  
 
 
( )
/ ( )
K
w z
z
h z
−
=
 
(10.8.1-8) 
 
This result would suggest that an infinite impulse response (IIR) filter would be required as the equalizer, 
with an infinite number of taps. However, in practice [37], finite impulse response (FIR) filters are normally 
used. Thus we will consider transversal filter models for equalization. 
 
Let the input to the system of Figure 10.8-1 be a single isolated data symbol. Our filter model 
causing the distortion has n taps and the equalizer has m taps. When the channel filter has n taps and the 
equalizer has m taps then the output will have n+m–1 symbols. This is true since the first symbol will pass 
through with no delay. The last symbol will have a delay of n–1+m–1 symbols. Hence the range is  
[n–1+m–1] –0+1=n+m–1. 
 
This system can be described by a pair of vectors and a channel matrix. Let the output vector w be 
described by the n+m–1 vector 
 
 
1
2
1
0
1,
2
1
 
2
2
...,
,
,
,
,...
n+m
n m
y
y
y
y
y y
y
−
−
−
+ −
−
⎛
⎞
= ⎜
⎟
⎝
⎠
y
 
(10.8.1-9) 
 
Further, let the equalizer be described by the m component vector 

 726                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
1
2
1
0
1,
2
1
 2
2
...,
,
,
,
,...
m
m
w
w
w
w
w w w
w
−
−
−
−
−
⎛
⎞
= ⎜
⎟
⎝
⎠
 
(10.8.1-10) 
 
For notational convenience let the n = 3 and m = 5 for the H matrix description, so that  
 
 
1
0
1
1
0
1
1
0
1
1
0
1
1 0 1
  0    0  0 0
0   
 
   0  0 0
0   0   
 
  0 0
0   0   0   
 
 0
0   0   0   0   
h
h h
h
h h
H
h
h h
h
h h
h h h
−
−
−
−
−
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
 
(10.8.1-11) 
 
In the general case the H matrix is an m×(m+n–1) convolution matrix of the channel. It then follows that  
 
 
H
=
y
w
 
(10.8.1-12) 
 
In order to achieve a useful equalizer it is necessary that the number of taps of the equalizer should exceed 
the number of taps of the channel. An ideal output would produce 
 
 
(0001000)
=
Iy
 
(10.8.1-13) 
 
 
 
for this example of n = 3 and m = 5. In general the unit value would occur at the ((m+n)/2)-th position. In the 
previous example the value is position 4 ((5+3)/2). The difference between the actual output and the ideal 
distortion-free output, when no noise is present, is given by 
 
 
2
2
I
I
MSE
H
=
−
=
−
y
y
w
y
 
(10.8.1-14) 
 
Thus for this example 
 
1
0
1
1
0
1
2
1
0
1
2
1
0
1
1
0
1
1 0 1
  0    0  0 0
0   
 
   0  0 0
(
 
 
 
 
) 0   0   
 
  0 0
0   0   0   
 
 0
0   0   0   0   
h
h h
h
h h
w
w
w w w
h
h h
h
h h
h h h
−
−
−
−
−
−
−
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
y
 
(10.8.1-15) 
 
For our example it should be observed that the vector y–yI is a 1×7 vector; therefore, there will be 7 squared 
terms in the expression for the MSE. In Problem 9 it is shown that for this example that the MSE is given by 
 
 
(
)
2
2
2
2
1
2
0
1
1
2 1
1 0
0
1
2
2
1 1
0
0
1
1
0 1
1 0
2
1
2
2
1 1
2
0
2 1
(
)
(
)
         
(
1)
(
)
         
(
)
(
)
MSE
w h
w h
w h
w h
w h
w h
w h
w h
w h
w h
w h
w h
w h
w h
w h
−
−
−
−
−
−
−
−
−
−
−
=
+
+
+
+
+
+
+
+
−
+
+
+
+
+
+
 
(10.8.1-16) 
 
 
10.8.2 Baseband Adaptive Equalization  
Equation Section (Next) 

 
                                                  An Introduction to Fading Channels 
 
 
           727 
In this section we only consider adaptive equalization at the receiving end of the link; some schemes utilize 
prechannel equalization, which requires feedback. We again consider the tapped delay line filter, which is 
synchronous in the sense that the symbol duration, T, is the same as the tap spacing. Consider the tapped 
delay line model shown in Figure 10.8-2. 
 
T
w-N
T
w-N+1
T
w-N+2
T
w-1
T
w0
T
w1
T
wN-1
K
K
wN
K
K
Summation
(
)
y nT
n N
x −
1
n N
x −
+
2
n N
x −
+
1
nx +
nx
T: denotes a T second delay element
1
nx −
1
n N
x −
+
n N
x −
T
w-N
T
w-N+1
T
w-N+2
T
w-1
T
w0
T
w1
T
wN-1
K
K
wN
K
K
Summation
(
)
y nT
n N
x −
1
n N
x −
+
2
n N
x −
+
1
nx +
nx
T: denotes a T second delay element
1
nx −
1
n N
x −
+
n N
x −
 
 
Figure 10.8-2 Baseband adaptive equalizer filter with 2N+1 components. 
 
 
10.8.2.1 Least Mean Square Algorithm for the Baseband Adaptive Equalization 
 
Consider the adaptive equalizer shown in Figure 10.8-2 in which the coefficients wk are adjustable by 
external control. The input sequence x(nT) is assumed to have passed through an unknown channel that is 
both noisy and dispersive, and is fed to the equalizer. It is assumed that some form of pulse shaping has been 
utilized in the design of the transmission system. The adaptive equalizer has the task of correcting for the 
effects of thermal noise and residual distortion. Let the output of a linear filter, with zero mean additive white 
Gaussian noise (AWGN), be described by 
 
 
1
K
n
i
n i
i
i
x
h a
n
−
=
=
+
∑
 
(10.8.2-1) 
 
where the channel filter model is assumed to be represented by a finite impulse response filter (FIR) with 
values hi, with the {an} sequence being the transmitted symbol sequence, and the ni the zero mean WGN 
samples. 
In addition, let the input of the equalizer and the output of the equalizer be denoted by, respectively, 
 
 
( T)
( T)
n
n
x
x n
y
y n
=
=
 
(10.8.2-2) 
 
The output sample sequence of the tapped delay line equalizer, with 2N+1 taps, to the finite energy input 
sequence xn is given by the discrete convolution  
 
 
N
n
k
n k
k
N
y
w x −
=−
= ∑
 
(10.8.2-3) 
 
The equalizer weight adjustments may be achieved by observing the error between the desired pulse 
shape and the observed pulse shape at the equalizer output. This error is based on the observing the sampling 
instants and then processing the error to determine the direction that the tap weights should be changed to 
obtain the optimum values.  
 
There is more than one criterion to define the “error.” For example, the minimization of the peak 
distortion is one criterion. This approach minimizes the intersymbol interference at the output of the 
equalizer. This approach is only valid if the intersymbol interference is not too severe.  

 728                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
An alternative approach is to minimize the mean square error [36]. This approach has some 
advantages and is more general in its application. Thus we will utilize the mean square error as our error 
measure for the determination of the weights of the equalizer. Let 
na  be the desired response and yn the 
actual response at time t = n. Then the error en, at time n, is defined as 
 
 
n
n
n
e
a
y
=
−
 
(10.8.2-4) 
 
The mean squared error is given by 
 
 
2
n
MSE
E e
⎡
⎤
=
⎣
⎦ 
(10.8.2-5) 
 
with E[ ] denoting the statistical expectation operator. The derivative of the MSE with respect to the weight 
wk is given by 
 
 
2
n
n
k
k
e
MSE
E e
w
w
⎡
⎤
∂
∂
=
⎢
⎥
∂
∂
⎣
⎦
 
(10.8.2-6) 
 
Using (10.8.2-4) in (10.8.2-6) yields the result 
 
 
2
n
n
k
k
y
MSE
E e
w
w
⎡
⎤
∂
∂
= −
⎢
⎥
∂
∂
⎣
⎦
 
(10.8.2-7) 
 
From (10.8.2-3) one has  
 
 
[
]
2
n
n k
k
MSE
E e x
w
−
∂
= −
∂
 
(10.8.2-8) 
 
The expectation (denoted by E[.]) in (10.8.2-8) is the cross correlation between the input signal delayed by n 
samples and the error signal en. That is the partial derivative is given by 
 
 
2
( )
ex
k
MSE
ER
k
w
∂
= −
∂
 
(10.8.2-9) 
 
where 
 
 
[
]
( )
ex
n
n k
R
k
E e x −
=
 
(10.8.2-10) 
 
It therefore follows that the optimality condition for the minimum mean squared error must satisfy 
the conditions 
 
 
0  for  
0, 1, 2,...
k
MSE
k
N
w
∂
=
=
± ±
±
∂
 
(10.8.2-11) 
 
From (10.8.2-11) and (10.8.2-9), it is seen that an equivalent condition is that  
 
 
( )
0  for  
0, 1, 2,...
ex
R
k
k
N
=
=
± ±
±
 
(10.8.2-12) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           729 
Thus we see that a necessary condition for optimality is that the cross correlation of the input sequence and 
the error sequence be 0 for all of the 2N+1 values. This result is known as the principle of orthogonality.  
 
It is not hard to show that the MSE is a second order function in the tap weights wk. Use (10.8.2-3) 
and (10.8.2-4) in (10.8.2-5) to obtain 
 
 
2
2
N
N
N
In
In
k
n k
k
j
n k
n
j
k
N
k
N j
N
MSE
E y
E y
w x
E
w w x
x
−
−
−
=−
=−
=−
⎡
⎤
⎡
⎤
⎡
⎤
=
−
+
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
⎣
⎦
∑
∑∑
 
(10.8.2-13) 
 
and therefore is a second order function in the variable wk. This quadratic form generates a bowl-like smooth 
surface having a unique minimum and no local minima [38, 39]. The goal of the adaptive equalizer algorithm 
is to seek the minimum value (minimum MSE) of this bowl-like shape by successively adjusting the weights. 
This algorithm is akin to a steepest descent algorithm for finding the minimum MSE.  
 
It is convenient to formulate the least mean square (LMS) algorithm with a vector and matrix 
description. Let xn (vectors in bold) denote the tap inputs of the equalizer so that 
 
 
(
)
1
1
1
1
,
,...
,
,
,...
,
T
n
n N
n N
n
n
n
n N
n N
x
x
x
x
x
x
x
+
+
−
−
−
−
+
−
=
x
 
(10.8.2-14) 
 
where the T superscript (in italics and not to be confused with the time delay T in the adaptive equalizer) on 
the vector xn denotes the transpose function, so that xn is actually a vertical vector. Also the tap weights of the 
equalizer can be written as 
 
 
(
)
1
1
0
1
1
( ),
( ),...
( ),
( ),
( ),...
( ),
( )
T
n
N
N
N
N
w
n w
n
w
n w n w n
w
n w
n
−
−
+
−
−
=
w
 
(10.8.2-15) 
 
 
The convolution indicated by (10.8.2-3) can then be written in the compact form 
 
 
T
n
n
n
y = x w  
(10.8.2-16) 
 
as is clear by comparing (10.8.2-16) to (10.8.2-3) . The term 
T
n
n
x w  is termed the inner product of the vectors 
xn and wn. We are now in a position to describe the least mean square (LMS) algorithm. It is described as 
follows 
(1) 
Set the initial value of 
1
w to be 0 (that is, all the 2N +1 tap weights are zeroed out at time n =1 
or T seconds). The bold 0 denotes a vector zero of 2N +1 dimensions.  
(2) 
Compute the first two terms and sequentially determine the third term. 
(3) 
 
 
1
  
   
T
n
n
n
n
n
n
n
n
n
n
y
e
a
y
e
α
+
=
=
−
=
+
x w
w
w
x
 
(10.8.2-17) 
 
in which   is the step size parameter for the weight vector 
n
w .  
(4) 
Continue the recursion until steady state is obtained.  
 
Figure 10.8-3 illustrates the T-second recursion process that generates the new weights from the previous 
ones.  
 

 730                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
Current weight
n
w
+
New weight
1
n+
w
T-second
delay
n
x
-
ny
na
×
α
Correction 
to the 
weighing term
Current weight
n
w
Current weight
n
w
+
New weight
1
n+
w
New weight
1
n+
w
T-second
delay
T-second
delay
T-second
delay
n
x
-
ny
na
×
α
Correction 
to the 
weighing term
 
 
Figure 10.8-3 Vector weight recursion update process of the LMS algorithm. 
 
 
10.8.2.2 Least Mean Square Algorithm for the Bandpass Adaptive Equalization 
 
When a bandpass function is utilized (the most usual case), it is possible to have one LMS algorithm for each 
of the I and Q phases of the heterodyned to baseband components. Therefore the above theory applies to each 
component of the baseband derived signal from the bandpass waveform.  
 
 
10.8.2.3 Basic Operation of the Adaptive Equalizer 
 
The adaptive equalizer has two modes of operation: (1) initially the training mode, followed by (2) the 
decision-directed mode that equalizes the channel. The training mode is based on providing a known 
sequence that is transmitted and a synchronized replica (with the transmission delay accounted for) of that 
signal that is generated in the receiver, as the desired response. This training sequence is applied to the 
receiver (adaptive equalizer) and the tap weights are determined according to the LMS algorithm. The 
training sequence used in practice is commonly a pseudonoise sequence, which can be viewed has having 
random symbol polarity characteristics.  
 
At the conclusion of the training process the adaptive equalizer changes over to its second mode of 
operation, which is the decision-directed mode. In this mode the error is defined by 
 
 
'
ˆ
n
n
n
e
a
y
=
−
 
(10.8.2-18) 
 
where ˆna  is the final (converged, but not necessarily converged to an) estimate of yn and yn is the equalizer at 
time nT. In normal operation the decisions made by the adaptive equalizer (receiver) are, with high 
likelihood, correct, so that the receiver would normally operate properly.  
 
There is a trade-off between a larger value of   and a smaller value of  —the convergence 
parameter. Too large of a value of   may yield too large a value of the mean square error yielding poor 
equalizer performance, or the minimum is overshot and convergence never takes place. However, larger 
values of   allow a faster tracking capability of the equalizer. When   is too small, the equalizer may not be 
able to track small changes in the channel characteristics. In conclusion there is a balance that must be 
maintained between fast channel characteristics and reduced mean squared error, obtained by utilizing the 
proper value of  . 
 
 

 
                                                  An Introduction to Fading Channels 
 
 
           731 
10.8.2.4 Least Mean Square Implementation Options for the Baseband Model 
 
A main advantage of the LMS algorithm is its ease of implementation. There are three general approaches to 
the implementation: (1) analog, (2) nonprogrammable digital, and (3) programmable digital. A brief 
description follows. 
(1) Analog implementation: This approach is useful in regimes where the symbol rate is too high for 
digital implementation. It is based on the use of charge coupled device (CCD) technology. The set 
of adjustable weights are stored in the CCD memory locations, with the multiplications of the 
analog sample values and the digitized tap weights done in an analog manner.  
(2) Hardwired (nonprogrammable) digital implementation: This approach is the most widely used 
method of constructing adaptive equalizers and is commonly implemented using very large-scale 
integrated (VLSI) circuits. In this approach the input to the equalizer is sampled and then quantized 
into a format that is easily stored in shift registers. The set of adjustable weights is stored in shift 
registers also. The multiply and accumulate functions are accomplished with digital arithmetic. The 
circuitry that is used for the equalization process is hard-wired. 
(3) Programmable digital implementation: This approach is based on the use of a microprocessor that 
can perform the equalization function. In addition, the microprocessor can time share other 
processing tasks such as modulation and demodulation when used in a modem (used to transmit 
digital data over phone lines) and filtering. 
 
Most high-speed phone modems use a form of a LMS algorithm since it is superior to algorithms that 
minimize the intersymbol interference peak distortion [40]. 
 
 
10.8.3 Baseband Decision Feedback Equalizers 
Equation Section (Next) 
So far we have been considering linear equalizers. Oftentimes a linear equalizer does not perform well when 
the channel has a spectral null [41]. A decision feedback equalizer (DFE) is a nonlinear equalizer that utilizes 
previous detector decisions to eliminate unwanted ISI on the symbols that are being detected currently.  
 
To gain a little understanding of the process [36], let the sequence {hi} denote the sampled values of 
the impulse response with hi = h(iT). The output of this filter to an input sequence xn, without noise, is given 
by the discrete convolution  
 
 
{
0
0
0
n
i
n i
n
i
n i
i
n i
i
i
i
desired
data
postcursor
precursor
symbol
y
h x
h x
h x
h x
−
−
−
>
<
=
=
+
+
∑
∑
∑
1424
3
1424
3
 
(10.8.3-1) 
 
where the first term on the right-hand side is proportional to the current symbol, the second term is termed 
the postcursors of the channel response, since all the terms occur after the current symbol xn, and the third 
term is the precursor of the channel response, since all of the terms occur before the current symbol xn.  
 
The concept used in decision feedback equalization is to utilize data decisions processed from the 
precursors of the channel impulse response to accommodate the postcursors. It is necessary that the 
decisions, based on the precursor, were correct. Under these conditions the DFE can produce an 
improvement over the performance of the tapped delay line equalizer (linear equalizer). It is to be noted that 
the decision device that makes a decision on the current symbol is nonlinear. Figure 10.8-4 illustrates a 
representative model of a DFE. 
 

 732                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
Tapped delay line
(1)
n
w
n
x
-
Decision 
device
Tapped delay line
(2)
n
w
ˆna
Feed forward section
Feedback section
+
-
Tapped delay line
(1)
n
w
n
x
-
Decision 
device
Tapped delay line
(2)
n
w
ˆna
Feed forward section
Feedback section
+
-
 
 
Figure 10.8-4 A decision feedback equalizer block diagram model. 
 
 
 
The input is a tapped delay line filter with weights 
(1)
n
w
. It forms the feed forward section and has its 
taps separated by the symbol duration. The symbol estimate ˆna  feeds the input of the feedback section, 
which again is a tapped delay line filter with the taps also spaced apart by the symbol duration. The decision 
device takes the sum of the feed forward and feedback components and estimates the current symbol, ˆna . 
The feedback portion attempts to subtract out that portion of the intersymbol interference produced by 
previously detected symbols, from the estimates of the future samples.  
It is possible [36] to utilize a mean square error criterion to obtain the optimum decision feedback 
equalizer. In fact the LMS algorithm can be used to jointly optimize the feed forward and the feedback tap 
weights of the equalizers, utilizing a common error signal. Consider the augmented weight vector wn defined 
by 
 
 
(1)
(2)
n
n
n
⎡
⎤
= ⎢
⎥
⎢
⎥
⎣
⎦
w
w
w
 
(10.8.3-2) 
 
where 
(1)
n
w
 is the tap weights of the feed forward equalizer and 
(2)
n
w
 is the tap weights of the feedback 
equalizer. Let the augmented vector 
nz  be defined by the vector of the input samples, xn, to the feed forward 
section and the vector of symbol values, ˆn
a , input to the feedback section. Thus  
 
 
ˆ
n
n
n
⎡
⎤
= ⎢
⎥
⎣
⎦
x
z
a
 
(10.8.3-3) 
The common error signal is defined by 
 
 
T
n
n
n
n
e
a
=
−w z  
(10.8.3-4) 
 
where, again, the T over the vector denotes the transpose operation. The LMS algorithm for the decision 
feedback equalizer is specified by the update equation pair 
 
 
(1)
(1)
1
1
(2)
(2)
1
2
ˆ
n
n
n
n
n
n
n
n
e
e
α
α
+
+
=
+
=
+
w
w
x
w
w
a
 
(10.8.3-5) 
 
in which  1 and  2 are the step size parameters for the feed forward and feedback segments, respectively.  
 
We have not addressed the rate of convergence in these discussions. Although that topic is not 
addressed in this book, it has been observed that the number of iterations ranges from about 100 to about 
1,000 iterations, depending on a number of parameters. Clearly there is a lot more to this subject than what 

 
                                                  An Introduction to Fading Channels 
 
 
           733 
was presented here. Kurzweil [39] has two chapters devoted to various types of equalizers and can be 
consulted for more details. In the environment of a fading radio channel in which moderate to severe 
intersymbol interference occurs, the DFE yields relatively good performance. 
 
 
10.9 DIVERSITY TECHNIQUES FOR MULTIPATH IMPROVEMENT 
Equation Section (Next) 
Now we will consider the bit error rate performance of a few binary modulation methods when diversity is 
utilized to improve the fading channel performance. The fading is modeled as frequency nonselective, slowly 
fading with Rayleigh distributed envelope statistics. It is further assumed that the fading processes on all L 
channels are mutually statistically independent and the signal is corrupted by additive Gaussian white noise. 
All the noise processes are assumed to be statistically independent. The means of obtaining diversity are 
discussed in Section 10.7.1. 
 
 
10.9.1 Multipath Performance Improvement Via Diversity Techniques for Binary Channels 
 
We will develop a general binary model and then specialize it to a few binary modulation cases. This section 
follows Proakis [32]. 
 
The low-pass equivalent (baseband) signals can be written in the form 
 
 
( )
( )
( )     
1,2,3,...   
1,2
k
j
km
k
km
k
r
t
e
s
t
n t
k
L m
θ
α
−
=
+
=
=
 
(10.9.1-1) 
 
in which (
)
k
j
ke
θ
α
−
 includes the attenuation factor (
)
k
α
 and the phase change (
)
k
j
e
θ
−
 for the k-th channel, 
skm(t) is the k-th channel signal which is either m = 1 or 2, and nk(t) is the complex baseband equivalent white 
Gaussian noise process so that the radiofrequency noise is of the form 
 
 
0
(2
)
0
0
( )
( )cos(
)
( )sin(
)
Re
( )
k
j
f t
rf
k
ck
k
sk
k
k
n
t
n
t
t
jn
t
t
n t e
π
θ
ω
θ
ω
θ
+
⎡
⎤
=
+
−
+
=
⎣
⎦ 
(10.9.1-2) 
 
and nck(t) and nsk(t) are statistically independent. Furthermore, for white Gaussian noise 
 
 
*
0
1
(
)
(
( )
( ))
(
)
2
k
n
k
k
R
t
u
E n t n u
N
t
u
δ
−
=
=
−
 
(10.9.1-3) 
 
 
The optimum demodulator for the received binary signal from the k-th channel has two matched 
filters with the following impulse responses [42] 
 
 
*
1
1
*
2
2
(
)
(
)
k
k
k
k
IR
s
T
t
IR
s
T
t
=
−
=
−
 
(10.9.1-4) 
 
where * denotes the complex conjugate. In the case of binary BPSK, only one matched filter is needed since 
1
2
( )
( )
k
k
s
t
s
t
= −
. The outputs of the matched filters are combined in a combiner and produce the two 
hypothesis variables. The optimum combiner is one in which each matched filter output is multiplied by the 
corresponding complex valued channel gain 
k
j
ke θ
α
. This multiplication by the complex channel gain 
compensates for the delay and weights the channels proportionally to the received signal strength. Finally 
two sums are generated; the first is composed of the real part of weighted outputs from the matched filters 
with the hypothesis of a “0” being transmitted, and the second is composed of the real part of weighted 
outputs from the matched filters with the hypothesis of a “1” being transmitted [42]. This combiner has been 
discussed earlier and is known as a maximal ratio combiner. The combiner is based on the assumption that 

 734                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
the delays and the signal levels are known exactly. When these parameters are not known exactly, additional 
degradation will result. Figure 10.9-1 illustrates the digital communication model.  
 
Channel 1
1
1
j
e
θ
α
−
+
Receiver 1
Combiner
n1(t)
Channel 1
2
2
j
e
θ
α
−
+
Receiver 2
n2(t)
Channel 1
L
j
Le
θ
α
−
+
Receiver L
nL(t)
M
M
Decision
variables
M
11
12
( )
 
( )
s
t
or s
t
21
22
( )
 
( )
s
t
or s
t
1
2
( )
 
( )
L
L
s
t
or s
t
M
Channel 1
1
1
j
e
θ
α
−
+
Receiver 1
Combiner
Combiner
n1(t)
Channel 1
2
2
j
e
θ
α
−
+
Receiver 2
n2(t)
Channel 1
L
j
Le
θ
α
−
+
Receiver L
nL(t)
Channel 1
L
j
Le
θ
α
−
+
Receiver L
nL(t)
M
M
Decision
variables
M
11
12
( )
 
( )
s
t
or s
t
21
22
( )
 
( )
s
t
or s
t
1
2
( )
 
( )
L
L
s
t
or s
t
M
 
 
Figure 10.9-1 Binary digital communication system model with diversity. 
 
 
10.9.1.1 Performance Improvement Via Diversity Techniques for BPSK Channels 
 
Now we are in a position to analyze the performance of binary PSK channels with Rayleigh fading in the 
case of L-th order diversity. With the maximal ratio combiner model a single statistic for the decision 
variable is given by 
 
 
(
)
*
*
1
1
1
1
1
0
0
Re
( )
( )
Re
( )
( )
( )
k
k
k
T
T
L
L
j
j
j
k
km
k
k
k
k
k
k
k
k
U
e
r
t s
t dt
e
e
s
t
n t
s
t dt
θ
θ
θ
α
α
α
−
=
=
⎡
⎤
⎡
⎤
=
=
+
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
∑
∑
∫
∫
 (10.9.1-5) 
 
where it has been assumed that 
*
1( )
ks
t  has been transmitted for convenience. If 
*
2( )
ks
t  was transmitted, the 
opposite value of the signal component would occur. Equation (10.9.1-5) can be simplified to 
 
 
2
1
1
Re
(2 )
L
L
k
k
k
k
k
U
N
α
α
=
=
⎡
⎤
=
+
⎢
⎥
⎣
⎦
∑
∑
E
 
(10.9.1-6) 
 
in which Nk is defined by 
 
 
*
*
1
1
1
0
0
( )
( )
 and 2
s ( )
( )
  
k
T
T
j
k
k
k
k
k
N
e
n t s
t dt
t s
t dt
θ
=
=
∫
∫
E
 
(10.9.1-7) 
 
Finally, from (10.9.1-6), our result can be simplified to  
 
 
[
]
2
1
1
2
Re
L
L
k
k
k
k
k
U
N
α
α
=
=
=
+
∑
∑
E
 
(10.9.1-8) 
 
The method used to determine the bit error rate (BER) is to compute the BER conditioned on the set of 
channel attenuation parameters { }
k
α
, and then average over the distribution function of the set { }
k
α
.  
 
Conditioned on the set { }
k
α
, the decision statistic U is a Gaussian random variable with a mean of 

 
                                                  An Introduction to Fading Channels 
 
 
           735 
 
 
2
1
(
)
2
L
k
k
E U
α
=
=
∑
E
 
(10.9.1-9) 
 
and a variance of  
 
 
2
2
0
1
2
L
U
k
k
N
σ
α
=
=
∑
E
 
(10.9.1-10) 
 
which is established in Problem 10. Given that conditional on the set { }
k
α
, U is a Gaussian random variable, 
so that the probability of error is given by 
 
 
(
)
2
L
PE
Q
γ
=
 
(10.9.1-11) 
 
where now 
L
γ  depends on all L channels via 
 
 
2
1
0
L
L
k
k
N
γ
α
=
=
∑
E
 
(10.9.1-12) 
 
Now E is the energy of one signal and N0 is the one-sided noise spectral density. Notice that when  k is unity 
and L = 1, (10.9.1-11) reverts to the well-known result for the bit error rate for BPSK channels in white 
Gaussian noise. It is convenient to write (10.9.1-12) in the form 
 
 
2
1
0
 ,  and 
L
L
k
k
k
k
N
γ
γ
γ
α
=
=
=
∑
E
 
(10.9.1-13) 
 
The parameter  k is the instantaneous signal-to-noise ratio (SNR) on the k-th channel. In order to proceed it is 
necessary to obtain the probability density function of  L, which we denote as p( L). The easiest way to obtain 
p( L), is to work with the characteristic function (CF). Note that when L = 1,  L =  1. For the Rayleigh fading 
channel, Problem 9 has shown that the probability density function of the channel SNR is given by 
 
 
(
)
/
1
(
)
,     
0
k
k
k
p
e
γ
γ
γ
−
Γ
=
≥
Γ
 
(10.9.1-14) 
 
where  
 
 
(
)
2
0
k
E
N
α
Γ = E
 
(10.9.1-15) 
 
The characteristic function of the channel SNR is given by  
 
 
( )
k
jv
v
E e
γ
⎡
⎤
Φ
=
⎣
⎦ 
(10.9.1-16) 
 
Using (10.9.1-14) in (10.9.1-16) with the assumption that the average SNR is the same for all channels, so 
that 
 

 736                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
1
( )
1
k
jv
v
E e
jv
γ
⎡
⎤
Φ
=
=
⎣
⎦
−
Γ
 
(10.9.1-17) 
 
for all k. For convenience this assumption of the same channel statistics on all channels will be assumed in 
the rest of this section. We desire the CF of the sum as indicated in the first equation in (10.9.1-13), so we 
can write for the sum the L terms 
 
 
(
)
1
(
)
1
L
L
jv
jv
Φ
=
−
Γ
 
(10.9.1-18) 
 
Using the known inverse transform of the CE leads to the probability density of the sum 
 
 
/
1
1
(
)
(
1)!
L
L
L
L
L
p
e
L
γ
γ
γ
−
Γ
−
=
−
Γ
 
(10.9.1-19) 
 
Now it is necessary to average the BER over the density function of  L. Thus we need to evaluate 
 
 
(
)
0
2
(
)
BPSK
L
L
L
PE
Q
p
d
γ
γ
γ
∞
= ∫
 
(10.9.1-20) 
 
Proakis [42] has a provided a closed form solution, that can be written as 
 
 
(
)
(
)
1
0
1
0.5(1
)
0.5(1
)
      
L
L
k
k
L
k
PE
k
λ
λ
−
=
−+
⎛
⎞
=
−
+
⎜
⎟
⎝
⎠
∑
 
(10.9.1-21) 
 
in which   is defined by 
 
 
1
λ
Γ
=
+ Γ
 
(10.9.1-22) 
 
When   is, say, larger than 10, (1– )/2 and (1+ )/2 can be approximated as 
 
 
1
0.5(1
)
1  and 0.5(1
)
4
λ
λ
+
−
Γ
;
;
 
(10.9.1-23) 
 
with the latter relationship coming from the approximation 
 
 
1
1
1
1
1
1
1
1
1
1
2
1
2
(1/ ) 1
2
2
4
⎛
⎞
⎛
⎞
Γ
⎛
⎞
⎛
⎞
−
=
−
−
−
=
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
+ Γ
Γ +
Γ
Γ
⎝
⎠
⎝
⎠
⎝
⎠
⎝
⎠
;
 
(10.9.1-24) 
 
In addition, the sum 
 
 
1
0
1
2
1
     
 
1
L
k
L
k
L
k
L
−
=
−+
−
⎛
⎞
⎛
⎞
=
⎜
⎟
⎜
⎟
−
⎝
⎠
⎝
⎠
∑
 
(10.9.1-25) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           737 
is established in Problem 11. Using the prior two relationships yields4 
 
2
1
1
1
4
L
L
PE
L
−
⎛
⎞
⎛
⎞
⎜
⎟
⎜
⎟
−
Γ
⎝
⎠⎝
⎠
;
 
(10.9.1-26) 
 
Clearly as the diversity order L increases, the PE decreases proportional to 
–L. 
 
In some channels in the case that the fade is at a fast rate, it may not be feasible to utilize BPSK 
modulation and demodulation. In such cases a noncoherent approach such as DPSK or FSK should be 
utilized.  
 
 
10.9.1.2 Performance Improvement via Diversity Techniques for DPSK Channels  
 
For differential phase shift keying (DPSK) to be a viable approach for a Rayleigh fading channel, the channel 
phase variation must be slow enough so that the channel phase does not change significantly over two 
contiguous channel symbols. The analysis to follow assumes that the channels don’t change amplitude or 
phase over two contiguous symbols.  
 
Assuming that binary DPSK is utilized with 0 degrees and   degrees as the two phases, we can 
consider the decision statistic [42] for L-th order diversity 
 
 
*
2
1
1
Re
L
k
k
k
U
V V
=
⎡
⎤
=
⎣
⎦
∑
 
(10.9.1-27) 
 
where the complex signal 
kn
V  is given by 
 
 
(
)
2
k
j
kn
k
kn
V
e
N
θ
α
−
=
+
E
 
(10.9.1-28) 
 
where the complex noise term is given by the first equation in (10.9.1-7). It follows that U, for the case that 
the phase does not change between adjacent symbols, is given by 
 
 
(
)(
)
*
2
1
1
Re
2
2
k
k
L
j
j
k
k
k
k
k
U
e
N
e
N
θ
θ
α
α
−
=
⎡
⎤
=
+
+
⎢
⎥
⎣
⎦
∑
E
E
 
(10.9.1-29) 
 
and the two noise terms are defined in the first equation in (10.9.1-7) and are successive in time. Since 
(10.9.1-29) is based on the condition that a phase change does not occur, if follows that an error occurs when 
0
U <
. Proakis [42] has shown that the BER, conditioned on amplitude parameters { k}, is given by 
 
 
(
)
2
1
1
0
1
(
)
2
L
L
L
k
L
k
L
k
PE
e
c
γ
γ
γ
−
−
−
=
⎛
⎞
= ⎜
⎟
⎝
⎠
∑
 
(10.9.1-30) 
 
In (10.9.1-30) ck is defined as 
 
 
1
0
2
1
1
   
!
L
k
k
m
L
c
m
k
−−
=
−
⎛
⎞
=
⎜
⎟
⎝
⎠
∑
 
(10.9.1-31) 
 
                                                          
4 Note that (
) (
)
2
1
2
1
    
 
1
L
L
L
L
−
−
=
−
, so that this expression may differ with other published results, but they are equivalent. 

 738                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
The BER can be obtained by averaging over the Rayleigh fading amplitude parameters { k} via the 
parameter  L (see (10.9.1-12)) via 
 
 
0
(
) (
)
DPSK
L
L
L
PE
PE
p
d
γ
γ
γ
∞
= ∫
 
(10.9.1-32) 
 
Proakis has evaluated this expression with the result 
 
 
1
2
1
0
1
(
1
)!
2
(
1)!(1
)
1
k
L
DPSK
k
L
L
k
PE
c L
k
L
−
−
=
Γ
⎛
⎞
=
−+
⎜
⎟
−
+ Γ
+ Γ
⎝
⎠
∑
 
(10.9.1-33) 
 
with   defined in (10.9.1-15). Proakis [24] has shown that (10.9.1-33) can be approximated when   >>1 as 
 
 
2
1
1
1
2
L
DPSK
L
PE
L
−
⎛
⎞
⎛
⎞
⎜
⎟
⎜
⎟
−
Γ
⎝
⎠⎝
⎠
;
 
(10.9.1-34) 
 
Again we see that the BER goes as 
–L. 
 
 
10.9.1.3 Performance Improvement Via Diversity Techniques for Orthogonal FSK Channels  
 
In this section we consider noncoherent, orthogonal frequency shift keying (OFSK) performance in the 
maximally combined L channel BER in Rayleigh fading. Again it will be assumed that the channel 
parameters {
k
j
ke
θ
α
−
} are constant over the symbol time. For this case we will assume that the combiner of 
Figure 10.9-1 is square law, since it simplifies some calculations to follow. Under the assumption that signal 
“1” was transmitted, the two output statistics is given by 
 
 
2
1
1
1
2
2
2
1
2
       
k
L
j
k
k
k
L
k
k
U
E
e
N
U
N
θ
α
−
=
=
=
+
=
∑
∑
 
(10.9.1-35) 
 
It follows that an error occurs when U2 > U1. Proakis [42] has shown that orthogonal FSK has the same 
conditional error probability as DPSK, except that 
L
γ  is replaced with 
L
γ /2 in (10.9.1-30); thus 
 
 
(
)
2
1
1
0
1
(
)
/ 2
2
L
L
L
k
L
k
L
k
PE
e
c
γ
γ
γ
−
−
−
=
⎛
⎞
= ⎜
⎟
⎝
⎠
∑
 
(10.9.1-36) 
 
The average BER for orthogonal, noncoherent FSK is given by the DPSK result with    replaced with  /2, so 
that 
 
 
1
2
1
0
1
( / 2 1
)!
2
(
1)!(1
/ 2)
2
k
L
NCOFSK
k
L
L
k
PE
c L
k
L
−
−
=
Γ
⎛
⎞
=
−+
⎜
⎟
−
+ Γ
+ Γ
⎝
⎠
∑
 
(10.9.1-37) 
 
Finally using the high SNR approximation leads to  
 

 
                                                  An Introduction to Fading Channels 
 
 
           739 
 
2
1
1
1
L
NCOFSK
L
PE
L
−
⎛
⎞
⎛
⎞
⎜
⎟
⎜
⎟
−
Γ
⎝
⎠⎝
⎠
;
 
(10.9.1-38) 
 
 
The BER performance of BPSK, BDPSK, and noncoherent, orthogonal, BFSK (NCOFSK) is 
plotted and compared in Figure 10.9-2, using the high SNR approximations, as a function of average 
combined SNR, 
L
L
γ
=
Γ .  
 
15
20
25
30
35
40
45
50
55
1  10 10
1  10 9
1  10 8
1  10 7
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
Legend:
NCOFSK
DPSK
BPSK
L=1
L=2
L=4
SNR per bit,       (dB)
L
γ
Probability of a bit error, PE
15
20
25
30
35
40
45
50
55
1  10 10
1  10 9
1  10 8
1  10 7
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
Legend:
NCOFSK
DPSK
BPSK
Legend:
NCOFSK
DPSK
BPSK
L=1
L=2
L=4
SNR per bit,       (dB)
L
γ
SNR per bit,       (dB)
L
γ
Probability of a bit error, PE
 
 
Figure 10.9-2 The bit error rate of three type of modulations with L-th order diversity. 
 
 
Clearly BPSK is best followed by DPSK with the worst performance obtained by the noncoherent 
orthogonal FSK modulation. We will not address multiphase signals here, but Proakis [42] has results for M-
ary orthogonal signal with square law combining. 
10.10 THE RAKE RECEIVER 
Equation Section (Next) 
The original RAKE receiver was first developed by Price and Green [43] around 1958. The RAKE receiver 
is one method to achieve diversity improvement on a frequency-selective fading channel. The basic idea is 
that a wideband channel may be represented in terms of a tapped delay line model. To introduce this subject 
we first consider the tapped delay-line channel model [42, 43].  
 
 
10.10.1 The Tapped Delay Line Channel Model for a Frequency Selective Slowly Fading Channel 
 
In the case that the channel has a bandwidth (BW) that is greater than the coherent bandwidth (i.e.,  
BW >> BWcoh), the channel can be subdivided into a number of frequency division multiplexed subchannels 
that have a separation of at least BWcoh. 
Consider the bandpass signal s(t), which can be written in the form 
 
 
( )
Re
( )
j t
s t
v t e ω
⎡
⎤
=
⎣
⎦ 
(10.10.1-1) 

 740                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
in which 
( )
v t  is the low-pass equivalent signal. Assume that the low-pass equivalent signal 
( )
v t  is 
bandlimited to the range 
/ 2
f
BW
<
. It is convenient to let BW = W in what follows. It follows that the 
bandpass version of the signal (the actual signal) has a positive frequency bandwidth of W Hz. Since v(t) is 
band-limited, it can be represented via the sampling theorem in the time domain 
 
 
(
)
sin(
(
/
))
( )
(
/
)
k
k
W t
k W
v t
v W
W t
k W
π
π
∞
=−∞
−
⎛
⎞
=
⎜
⎟
−
⎝
⎠
∑
 
(10.10.1-2) 
 
 
The received signal, neglecting noise that has passed through a frequency-selective channel, can be 
represented in the form (see (10.5.1-6)) as 
 
 
2
0( )
( , ) ( )
j
ft
v t
T f t V f e
df
π
∞
−∞
= ∫
 
(10.10.1-3) 
 
where v0(t) is the output low-pass equivalent function representing the output of the channel and T(f,t) is the 
time invariant transfer function. The Fourier transform of v(t) is given by 
 
 
2
/
1
( )
( /
)
j
fk W
k
V f
v k W e
W
π
∞
−
=−∞
=
∑
 
(10.10.1-4) 
 
Using (10.10.1-4) in (10.10.1-3) produces 
 
                        
2
(
/
)
0
1
1
( )
( /
)
( , )
( /
) (
, )
j
f t k W
k
k
v t
v k W
T f t e
df
v k W g t
kW t
W
W
π
∞
∞
∞
−
=−∞
=−
−∞
=
=
−
∑
∑
∫
 
(10.10.1-5) 
 
where 
 
 
2
(
/
)
(
, )
( , )
j
f t k W
g t
kW t
T f t e
df
π
∞
−
−∞
−
= ∫
 
(10.10.1-6) 
 
The right-hand side of (10.10.1-5) can be written in the alternative form 
 
 
0
1
( )
(
/
) ( /
, )
k
v t
v t
k W g k W t
W
∞
=−∞
=
−
∑
 
(10.10.1-7) 
 
Denote the time varying channel weights as  
 
 
1
( )
,
k
k
g t
g
t
W
W
⎛
⎞
=
⎜
⎟
⎝
⎠
 
(10.10.1-8) 
 
It then follows that (10.10.1-7) can be written as 
 
 
(
)
0( )
( )
/
k
k
v t
g
t v t
k W
∞
=−∞
=
−
∑
 
(10.10.1-9) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           741 
If the autocorrelation function of the channel is effectively nonzero over the multipath spread of the channel, 
then this time range is denoted by Tms. (
3
ms
T
τ
σ
≅
). Then (10.10.1-9) leads to the observation that a discrete 
representation of the channel applies and can be truncated to L = 
1
ms
T W +
⎢
⎥
⎣
⎦
 taps, so that we may simplify 
(10.10.1-9) to 
 
 
(
)
0
1
( )
( )
/
L
k
k
v t
g
t v t
k W
=
=
−
∑
 
(10.10.1-10) 
 
where x
⎢⎥
⎣⎦ denotes the greatest integer function and is also called the floor function. It satisfies 3.2
3
=
⎢
⎥
⎣
⎦
 
and 
 
3.2
4
−
= −
⎢
⎥
⎣
⎦
, for example. The tapped delay line model of (10.10.1-10) is depicted in Figure  
10.10-1. Each element has delay of 1/W seconds. 
 
1
W
1
W
1
W
1
W
v(t)
L
+
g1(t)
g2(t)
g3(t)
gL(t)
v0(t)
1
W
1
W
1
W
1
W
1
W
1
W
1
W
1
W
1
W
1
W
v(t)
L
+
g1(t)
g2(t)
g3(t)
gL(t)
v0(t)
 
 
Figure 10.10-1 Tapped delay line model of the complex envelope in a frequency selective channel.  
 
 
The received signal v0(t), then has white Gaussian noise added to it to model the received signal plus noise 
complex envelope, r(t). 
 
 
10.10.2 The RAKE Receiver 
Equation Section (Next) 
Now that we have established the tapped delay line model of a frequency selective channel, we consider the 
task of providing digital signals over this channel, assuming that the weighting functions, gk(t), are 
statistically independent. The received complex envelope is composed of L weighted replicas of the received 
(complex envelope of) signal.  
 
Consider binary modulation transmitted over the previously described channel. Let the two low pass 
equivalent signals be denoted by 
1( )
v t  and 
2( )
v t  and assume that they are either orthogonal or antipodal. It 
is assumed that the symbol rate (1/T) is set so that T >> Tms. Therefore it is reasonable to neglect any 
intersymbol problems due to multipath effects. Based on our channel model, the received signal can be 
represented as 
 
 
1
( )
( )
(
/
)
( )  0
  
1,2
L
k
n
k
r t
g
t v t
k W
n t
t
T n
=
=
−
+
≤≤
=
∑
 
(10.10.2-1) 
 
where n(t) is the complex envelope (baseband equivalent) white Gaussian noise process that has zero mean. 
It follows that the radio frequency (RF) version of the noise is of the form  
 
 
0
2
0
0
( )
( )cos(
)
( )sin(
)
Re
( )
j
f t
rf
k
c
k
s
k
n
t
n t
t
jn t
t
n t e
π
ω
θ
ω
θ
⎡
⎤
=
+
+
+
=
⎣
⎦ 
(10.10.2-2) 
 

 742                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
and n(t) has two-sided noise spectral density N0, and nc(t) and ns(t) are statistically independent Gaussian 
random processes. Furthermore, for white Gaussian noise 
 
 
*
0
( ( )
( ))
2
(
)
E n t n u
N
t
u
δ
=
−
 
(10.10.2-3) 
 
 
The optimum receiver has two filters matched to v1(t) and v2(t). The receiver provides samples at the 
symbol rate from both filters and selects the signal according to the largest output. Thus the two variables are 
computed 
 
 
                            
*
*
*
1
0
0
Re
( )
( )
Re
( )
( )
(
/
)
   
1,2
T
T
L
n
n
k
n
k
U
r t v t dt
r t g t v t
k W dt
n
=
⎡
⎤
⎡
⎤
=
=
−
=
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
∑
∫
∫
 
(10.10.2-4) 
 
Figure 10.10-2 illustrates the receiver structure based on the previous equation. The terms (1/W) denote a 
delay of that amount in seconds. 
 
Summation of integrations
Summation of integrations
r(t)
1
W
1
W
1
W
1
W
L
*
1g ( )t
*
2
g ( )t
*
3
g ( )t
*
L
g ( )t
*
1 ( )
v t
+
1
W
1
W
1
W
1
W
L
+
+
+
*
1g ( )t
*
2
g ( )t
*
3
g ( )t
*
L
g ( )t
*
2( )
v t
1
U
2
U
Summation of integrations
Summation of integrations
r(t)
1
W
1
W
1
W
1
W
1
W
1
W
1
W
1
W
1
W
1
W
L
*
1g ( )t
*
2
g ( )t
*
3
g ( )t
*
L
g ( )t
*
1 ( )
v t
+
1
W
1
W
1
W
1
W
1
W
1
W
1
W
1
W
1
W
1
W
L
+
+
+
*
1g ( )t
*
2
g ( )t
*
3
g ( )t
*
L
g ( )t
*
2( )
v t
1
U
2
U
 
 
Figure 10.10-2 Optimum demodulator for binary signals in a frequency selective channel. 
 
10.10.3 Performance of the RAKE Receiver 
Equation Section (Next) 
We shall obtain an estimate of the BER of the RAKE receiver under the assumption that the gk(t) are known 
exactly. In addition it will be assumed that the set of gk(t) are constant over one signaling interval (T seconds) 
and can be represented as gk. With these assumptions the right-hand side of (10.10.2-4) produces  
 
 
*
*
1
0
Re
( ) (
/
)
   
1,2
T
L
n
k
n
k
U
g
r t v t
k W dt
n
=
⎡
⎤
=
−
=
⎢
⎥
⎣
⎦
∑∫
 
(10.10.3-1) 
 
Let us assume that the transmitted signal is v1(t) so that the received signal plus noise is given by 
 
 
(
)
1
1
1
( )
/
( )
L
m
m
r t
g v t
m W
n t
=
=
−
+
∑
 
(10.10.3-2) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           743 
and n(t) has been described in the last section. Using (10.10.3-2) in (10.10.3-1) produces 
 
 
*
*
1
1
1
0
*
*
1
0
Re
(
/
)
(
/
)
     
Re
( )
(
/
)
    
1,2
T
L
L
n
k
m
n
k
m
T
L
k
n
k
U
g
g
v t
m W v t
k W dt
g
n t v t
k W dt
n
=
=
=
⎡
⎤
=
−
−
⎢
⎥
⎣
⎦
⎡
⎤
+
−
=
⎢
⎥
⎣
⎦
∑∑
∫
∑∫
 
(10.10.3-3) 
 
When dealing with CDMA wideband signals, v1(t) and v2(t) are pseudorandom sequences that are  
quasi-orthogonal. Under this assumption 
 
 
0
(
/
) (
/
)
0,    
,   
1,2 
T
i
i
v t m W v t
k W dt
k
m
i
−
−
≈
≠
=
∫
 
(10.10.3-4) 
 
 
Using this assumption for our binary signals, (10.10.3-3) can be simplified to 
 
 
2
1
1
0
*
1
0
Re
(
/
)
(
/
)
     
Re
( )
(
/
)
,    
1,2
T
L
n
k
n
k
T
L
k
n
k
U
g
v t
k W v t
k W dt
g
n t v t
k W dt
n
=
=
⎡
⎤
=
−
−
⎢
⎥
⎣
⎦
⎡
⎤
+
−
=
⎢
⎥
⎣
⎦
∑
∫
∑∫
 
(10.10.3-5) 
 
In the case that the signals are antipodal a single decision variable is sufficient and (10.10.3-5) then simplifies 
to  
 
 
1
1
1
Re 2
L
L
2
k
k
k
k
k
U
N
α
α
=
=
⎡
⎤
=
+
⎢
⎥
⎣
⎦
∑
∑
E
 
(10.10.3-6) 
 
and 
k
kg
α =
 and in addition 
 
 
*
0
( )
(
/
)
k
T
j
k
N
e
n t v t
k W dt
θ
=
−
∫
 
(10.10.3-7) 
 
which is the same decision variable as given by (10.9.1-6) for the ratio combiner in Rayleigh fading. 
Therefore the RAKE receiver, having perfect estimates of the channel tap weights, is equivalent to a maximal 
ratio combiner in a system with L-th-order diversity. Thus the BER performance result indicated in 
(10.9.1-21) is applicable in the case of the RAKE receiver also. 
 
 
10.11 BINARY CODED CHERNOFF BER BOUNDS FOR FADING CHANNELS 
 
At this point in this chapter we have presented equalizers and diversity techniques and shown that they 
improve performance in a multipath fading environment. The other technique, channel coding, will be briefly 
introduced as a means of improving performance in a fading channel environment. Time and frequency 
diversity can be viewed as a form of a repetition code. However repetition coding is known not to be as 
efficient as more efficient coding procedures. We will show that the amount of diversity created by a code is 
related to the code’s minimum distance properties [42]. We shall also see that soft-decision decoding is 
considerably better than hard-decision decoding. 

 744                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
To extend the concept of diversity providing “independent” copies of the signal to coding, we will 
require that code symbols (coded bits) fade independently of any other coded symbols that are transmitted. 
This can lead to inefficient use of the time frequency signaling space, leaving a large unused portion of the 
time frequency signaling space. To overcome this possible problem a number of code words may be 
interleaved in time or frequency of both, in such way that coded symbols fade independently. For our work in 
what follows we assume that the time frequency signal space is separated into nonoverlapping time 
frequency cells. We will assume that there is negligible intercell interference in what follows.  
 
In addition to the assumption of statistically independent fades we need to add the assumption of the 
WGN components that are statistically independent from each other and identical for each time-frequency 
cell.  
 
When a channel suffers from fading, it is difficult to establish a phase reference, unless the channel 
fades slowly enough to utilize PSK or DPSK modulation. Therefore we restrict our analysis to noncoherent 
detection of binary orthogonal BFSK modulation with coding.  
 
 
10.11.1 Chernoff Bound for Binary Linear Block Codes 
Equation Section (Next) 
We will find the use of bounds advantageous for our work to follow. Sometimes it is easier to obtain the 
bound to PE rather than PE directly. We will discuss the Chernoff bound in what follows.  
First consider the Chernoff bound [42, 43–45] for orthogonal FSK with L-th order diversity. This 
will be useful for the BER bound of binary orthogonal FSK signaling, which is noncoherently detected. 
Recall from (10.9.1-35) that  
 
 
2
1
1
1
2
2
2
1
2
       
k
L
j
k
k
k
L
k
k
U
e
N
U
N
θ
α
−
=
=
=
+
=
∑
∑
E
 
(10.11.1-1) 
 
U1 and U2 are the two decision variables that we used in Section 10.9.1.3. Recall that U1 represent the 
combined signal plus noise terms and U2 represents the square law combined noise terms for L-th order 
diversity. The probability of error for this binary FSK modulation is denoted by PE(L) and is given by 
 
 
2
1
( )
(
0)
PE L
P U
U
=
−
>
 
(10.11.1-2) 
 
If we let Z=U1–U2 then we can rewrite the probability of error expression as 
 
 
0
( )
(
0)
( )
PE L
P Z
p z dz
∞
=
>
= ∫
 
(10.11.1-3) 
 
Since the phase (assumed to be constant) does not affect the performance of the square law detector, we will 
let 
k
θ = 0 in what follows. With that simplification we have 
 
 
(
)
2
2
2
1
1
2
L
k
k
k
k
Z
N
N
α
=
=
−
+
∑
E
 
(10.11.1-4) 
 
Now let U(z) denote the unit step function in the variable z, then PE(L) can be written as 
 
 
[
]
( )
( )
PE L
E U z
=
 
(10.11.1-5) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           745 
 
The Chernoff bound is obtained by using an exponential bounding function that upper bounds the 
unit step function. Thus consider the bound 
 
 
( )
 ,    
0
Z
U Z
eρ
ρ
≤
≥
 
(10.11.1-6) 
 
and   is to be optimized to make the bound as tight as possible. Therefore, we have so far  
 
 
[
]
( )
( )
Z
PE L
E U Z
E eρ
⎡
⎤
=
≤
⎣
⎦ 
(10.11.1-7) 
 
Using the definition of Z, from (10.11.1-4), and noting that the random variables in the summation are 
mutually statistically independent, we have 
 
 
2
2
2
1
2
1
( )
k
k
k
L
N
N
k
PE L
E e
E e
ρ
ρ
α
−
+
=
⎡
⎤
⎡
⎤
≤
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
∏
E
 
(10.11.1-8) 
 
The first and second terms in (10.11.1-8) are the characteristic function of Gaussian random variables. From 
Proakis [42] the characteristic function of the noise only case (first term in the product) is given by 
 
 
(
)
2
2
0
0
1
1
 ,        
1 2
2
4
k
N
E e
N
N
ρ
ρ
ρ
⎡
⎤=
<
⎢
⎥
⎣
⎦
−
E
E
 
(10.11.1-9) 
 
with the bound on   due to the fact that it is only meaningful if the bound is finite. In a similar manner the 
second characteristic function (second expectation) is given by [42] 
 
 
(
)
(
)
(
)
2
1 2
0
0
1
1
 ,   
1
1
2
2
1
k
N
E e
N
N
ρ
α
ρ
γ
ρ
γ
−
+
⎡
⎤=
>
⎢
⎥
⎣
⎦
+
+
+
k
E
4E
E
 
(10.11.1-10) 
 
in which γ  is the average 
s
E /N0 ratio per diversity channel. Notice that both expressions do not depend on 
k. It is assumed that the additive noise terms are statistically independent as well as the fading statistics on 
the diversity channels. Thus the bit error rate (BER) bound for soft decisions is given by 
 
 
(
)(
)
2
2
1
( )
1 2
1
2
L
b
N
S
PE L
ρσ
ρσ
⎡
⎤
⎢
⎥
≤
−
+
⎢
⎥
⎣
⎦
 
(10.11.1-11) 
 
where we have introduced for convenience 
 
 
2
2
   
2
2
(1
)
N
S
σ
σ
γ
=
=
+
0
0
EN
EN
 
(10.11.1-12) 
 
in which the first term is the variance due to the inphase and quadrature terms due to noise only and the 
second term is the inphase and quadrature terms due to signal plus noise being present. In order to obtain a 
tight bound, it is necessary to optimize the value of  . This can be done by differentiating the right-hand side 
of (10.11.1-11), setting to zero and solving for the value of  . From the results of Problem 12, the optimum 
value of  , denoted by  0 is given by 
 

 746                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
2
2
0
2
2
4
S
N
S
N
σ
σ
ρ
σ σ
−
=
 
(10.11.1-13) 
 
 
When this value of  0 is inserted into the right hand side of (10.11.1-11), utilizing the results of 
Problem 12, one has 
 
2
4(1
)
( )
(2
)
L
b
PE L
γ
γ
⎡
⎤
+
≤⎢
⎥
+
⎣
⎦
 
(10.11.1-14) 
If we note that from (10.6.3-2) that the probability of error for binary orthogonal FSK signaling 
(noncoherently detected) is given by  
 
 
1
2
p
γ
=
+
 
(10.11.1-15) 
 
so that (10.11.1-14) can be written as 
 
 
[
]
( )
4 (1
)
L
PE L
p
p
≤
−
 
(10.11.1-16) 
 
 
10.11.2 Coded Orthogonal FSK Signal Model for Fading Channels 
 
At this point we are ready to address FSK modulated coded waveforms. The model of a coded digital 
communication system, in which we desire the BER performance, is shown in Figure 10.11-1. We will 
assume that the encoder is binary. In addition, the encoding type may be block or convolutional coding, or 
even a combination of block and convolutional such as in a concatenated coding arrangement.  
 
Consider first a linear block code with k information bits and n total bits in the block code. It will be 
assumed, without loss of generality, that all n code word bits are transmitted simultaneously over the channel 
on separate frequency cells. Consider the following mapping from the code word to the BFSK modulation. 
Let the code word Ci have bits {cij}, 
{
}
1, 2k
i∈
 and 
{
}
1, 
j
n
∈
, Now if cij = 0, the tone f0j is transmitted, and 
if cij = 1, the tone f1j is transmitted. Thus there are 2n possible tones that can be sent; however only n tones 
can be sent in any given signaling interval. Now the bandwidth expansion is given by the ratio (k/2n).  
 
The FSK demodulator is based on 2n tone detectors, each matched to each a possible tone, and they 
are detected noncoherently. By assumption the Rayleigh fading and the additive white Gaussian noise in the 
2n frequency cells are mutually statistically independent and identically distributed processes. The optimum 
maximum-likelihood detector with soft decisions requires that the filter output be square law detected and 
properly combined to form the 2k decision variables. The largest output is selected to be the transmitted code 
word. When hard decisions are utilized in the decoder, the code word decision is based on choosing the code 
word with the smallest Hamming distance to the received code word, which is based on the optimum 
maximum-likelihood decoder.  
 

 
                                                  An Introduction to Fading Channels 
 
 
           747 
Forward
error 
correction 
encoder
Serial
to 
parallel
converter
BFSK
modulator
Rayleigh
fading
channel
with AWGN
Tone
filter bank
demodulator
Parallel
to serial
converter
Decoder
Data
output
Data
input
Forward
error 
correction 
encoder
Forward
error 
correction 
encoder
Serial
to 
parallel
converter
BFSK
modulator
Rayleigh
fading
channel
with AWGN
Tone
filter bank
demodulator
Parallel
to serial
converter
Decoder
Data
output
Data
input
 
 
Figure 10.11-1 Communication system model employing BFSK orthogonal modulation and demodulation and forward error correction 
coding.  
 
 
10.11.3 BER of Soft-Decision Decoding and FSK Modulation with Linear Binary Block Codes over 
Rayleigh Fading Channels 
Equation Section (Next) 
Now consider the decoding of a linear (n, k) block code that is transmitted over a Rayleigh fading channel 
with additive white Gaussian noise. As described in the previous paragraph the optimum soft-decision 
decoder forms the 2k decision variables of the form 
 
 
(
)
(
)
2
2
2
2
2
0
1
0
1
0
1
1
1
n
n
i
ij
j
ij
j
j
ij
j
j
j
j
U
c
v
c v
v
c
v
v
=
=
⎡
⎤
⎡
⎤
=
−
+
=
+
−
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
∑
∑
 
(10.11.3-1) 
 
in which 
2
ijv
 for over i 
{1,2 }
k
∈
 and j =1, 2, 3,…n, are the squared received signal envelopes at the outputs 
of the 2n filters, one for each possible frequency. The code word chosen is based on the largest value of Ui 
over i 
{1,2 }
k
∈
. To obtain the BER of soft-decision linear block codes we will assume, without the loss of 
generality that the all-zeros code word, C1 was transmitted, so that cij = 0 for all j. The average coded symbol 
SNR (Eb/N0) is given by γ  for each tone (cell). The average code word SNR for all n symbols is given by 
 
 
w
n
γ
γ
=
 
(10.11.3-2) 
 
and the corresponding average SNR for a bit is given by 
 
 
b
n
k
γ
γ
=
 
(10.11.3-3) 
 
since there are k bits in n coded symbols. The code rate is the ratio of bits per word to the coded symbols per 
word, or 
 
 
c
k
R
n
=
 
(10.11.3-4) 
 
Thus, (10.11.3-3), in combination with (10.11.3-4), can be written as 
 
 
/
b
c
R
γ
γ
=
 
(10.11.3-5) 
 
 
We have assumed that C1 was transmitted; therefore, cij = 0 for all j. Consequently the probability of 
a decision is made for the m-th code word, instead of the correct word C1, and is given by 

 748                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
 
(
)
(
)
1
1
( )
0
m
m
PE m
P U
U
P U
U
=
>
=
−
<
 
(10.11.3-6) 
 
Using (10.11.3-1), PE(m) can be written in the form (since the two 
2
0 j
v
 cancel for all j, for both terms) 
 
 
(
)(
)
2
2
1
0
1
1
( )
0
n
j
mj
j
j
j
PE m
P
c
c
v
v
=
⎛
⎞
=
−
−
<
⎜
⎟
⎝
⎠
∑
 
(10.11.3-7) 
 
or, noting that the two codes only differ in wm places from the all-zeros word, leaves 
 
 
(
)
2
2
0
1
' 1
( )
0
m
w
j
j
j
PE m
P
v
v
=
⎛
⎞
=
−
<
⎜
⎟
⎝
⎠
∑
 
(10.11.3-8) 
 
and wm is the weight between the first and the m-th code word. We may use the Chernoff bound to evaluate 
(i.e., bound) this expression. From (10.11.1-16) we have 
 
 
[
]
( )
4 (1
)
m
w
PE m
p
p
≤
−
 
(10.11.3-9) 
 
where wm and L have the same essential meaning of diversity and p is given by 
 
 
1
1
2
2
c
b
p
R
γ
γ
=
=
+
+
 
(10.11.3-10) 
 
Since the sum of the binary error events over the 2k–1 nonzero weight code words gives an upper bound on 
the word error probability, we have for the word error probability bound 
 
 
2
2
( )
k
W
m
PE
PE m
=
≤∑
 
(10.11.3-11) 
 
The union bound is then obtained, noting that dmin satisfies 
 
 
min
,
1
min{
}
m
m m
d
w
≠
=
 
(10.11.3-12) 
 
so that the word error probability for binary orthogonal FSK noncoherently detected is given by 
 
 
[
]
min
(
1) 4 (1
)
d
W
PE
M
p
p
<
−
−
 
(10.11.3-13) 
 
in which M = 2k  and 
1/(2
)
c
b
p
R γ
=
+
, or 
 
 
(
)
min
2
4(1
)
(
1)
2
d
c
b
W
c
b
R
PE
M
R
γ
γ
⎡
⎤
+
<
−
⎢
⎥
+
⎢
⎥
⎣
⎦
 
(10.11.3-14) 
 
To relate the word error rate to the bit error rate we have the approximate relationship [46] 
 
 
min
b
w
d
PE
PE
n
;
 
(10.11.3-15) 

 
                                                  An Introduction to Fading Channels 
 
 
           749 
 
for group block codes, where dmin is the minimum distance and n is the number of coded bits in the code 
word to yield the union bound 
 
(
)
min
min
2
4(1
)
(
1)
2
d
c
b
b
c
b
R
d
PE
M
n
R
γ
γ
⎡
⎤
+
<
−
⎢
⎥
+
⎢
⎥
⎣
⎦
 
(10.11.3-16) 
 
Example 9 Consider a Rayleigh fading channel in which the Golay (23,12) code is utilized with binary FSK 
modulation. Plot the word error bound and compare to uncoded binary FSK with L = 2 diversity. The weight 
of this code is 7, based on Table 5.1 of Peterson and Weldon [53]. The extended Golay code has a dmin of 8 
[53]. The BER for the Golay code is given by (10.11.3-14) and (10.11.3-15).  
 
Consider the bandwidth expansion factors (BEF) for both the coded and uncoded schemes. For the 
coded scheme 2n = 48 frequency cells are required, and k = 12, so that in the coded case the BEF= 4. For the 
binary FSK case with L = 2, the BEF = 4/1 = 4 also.  
 
10 11
12
13
14
15 16
17
18
19
20 21
22
23
24
25
1  10 10
1  10 9
1  10 8
1  10 7
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Average SNR,    (dB)
b
γ
Bit error probability, PEb
BFSK, L=2
Golay (23,12)
soft-decision
10 11
12
13
14
15 16
17
18
19
20 21
22
23
24
25
1  10 10
1  10 9
1  10 8
1  10 7
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Average SNR,    (dB)
b
γ
Average SNR,    (dB)
b
γ
Bit error probability, PEb
BFSK, L=2
Golay (23,12)
soft-decision
 
 
Figure 10.11-2 Union bound BER performance of binary FSK with dual diversity and a Golay (23,12) code using binary FSK 
modulation, both with noncoherent demodulation and soft decisions. 
 
 
 
As can be seen in Figure 10.11-2 the Golay encoded scheme is considerably better than the uncoded 
scheme. 
 
 
10.11.4 BER of Hard-Decision Decoding and FSK Modulation with Linear Binary Block Codes over 
Rayleigh Fading Channels 
Equation Section (Next) 
Proakis [42] has shown that the case of linear binary FSK, noncoherently detected in Rayleigh fading 
channels with a hard-decision decoding error is of the form 
 
 
[
]
/2
( )
4 (1
)
m
w
PE m
p
p
≤
−
 
(10.11.4-1) 
 
The word error probability is given by the union bound 
 
 
[
]
[
]
/2
/2
2
4 (1
)
(
1) 4 (1
)
m
m
M
w
d
W
m
PE
p
p
M
p
p
=
≤
−
≤
−
−
∑
 
(10.11.4-2) 

 750                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
where M = 2k and p, for noncoherent detection of binary FSK modulation is given by 
 
 
1
2
c
b
p
R γ
=
+
 
(10.11.4-3) 
 
so that the probability of a word error is given by 
 
 
(
)
min /2
2
4(1
)
(
1)
2
d
c
b
W
c
b
R
PE
M
R
γ
γ
⎡
⎤
+
<
−
⎢
⎥
+
⎢
⎥
⎣
⎦
 
(10.11.4-4) 
 
Again we use the approximate relationship [44] 
 
 
min
b
w
d
PE
PE
n
;
 
(10.11.4-5) 
 
for group block codes, where dmin is the minimum distance, and n is the number of coded bits in the code 
word. Hence our final union bound for hard decisions on Rayleigh fading channels is given by 
 
 
(
)
min /2
min
4(1
)
(
1)
2
d
c
b
b
c
b
R
d
PE
M
n
R
γ
γ
⎡
⎤
+
<
−
⎢
⎥
+
⎢
⎥
⎣
⎦
 
(10.11.4-6) 
 
 
Let us now compare the Golay (24,12) code performance with soft and hard decisions. From [45] 
the minimum distance for the Golay (24,12) linear block code is dmin = 8. So plotting (10.11.3-16) and 
(10.11.4-6), we have Figure 10.11-3. 
 
Average SNR,    (dB)
b
γ
Bit error probability, PEb
Hard
decisions
Soft
decisions
18
20
22
24
26
28
30
32
34
36
38
1  10 7
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Average SNR,    (dB)
b
γ
Average SNR,    (dB)
b
γ
Bit error probability, PEb
Hard
decisions
Soft
decisions
18
20
22
24
26
28
30
32
34
36
38
1  10 7
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
 
 
Figure 10.11-3 Union bound BER performance of Golay (24,12) hard and soft decisions in Rayleigh fading. 
 
 
 
By comparing the two bounds we see that the performance of soft decisions decoding is greatly 
superior to hard decision decoding for the example of Golay (24,12) codes on a Rayleigh channel. Typically 
the difference between a hard-decision and a soft-decision, in white Gaussian noise, is about 2 dB. This is 
significantly less than the difference seen in Figure 10.11-3 for the Golay (24,12) codes. It should be 

 
                                                  An Introduction to Fading Channels 
 
 
           751 
cautioned that the union bounds used in Figure 10.11-3 are not very tight and a more accurate analysis would 
yield lower BER values for a given SNR and less difference in the two cases. Nonetheless, these bounds 
indicate the trend of the differences. The message is, soft decisions are much better than hard decisions, in 
Rayleigh fading.  
 
 
10.11.5 Chernoff Bounds for the BER of Convolutional Codes over Rayleigh Fading Channels with 
Soft and Hard Decisions and Binary FSK Modulation 
 
We will consider both the soft-decision case and the hard-decision case using Chernoff bounds for the BER 
over Rayleigh fading channels with binary FSK (orthogonal) modulation. 
 
 
10.11.5.1 Soft Decisions 
Equation Section (Next) 
First we consider the soft-decision case. Consider noncoherent detection of orthogonal FSK modulation with 
convolutional codes over Rayleigh fading channels with maximum likelihood decoding which is effectively 
implemented with the Viterbi decoder. Proakis [42] has shown that the bit error probability is bounded by  
 
 
min
1
( )
b
d
d d
PE
PE d
k
β
∞
=
<
∑
 
(10.11.5-1) 
 
where the weighting multipliers ( d) are determined from the coefficients of the expansion of the first 
derivative evaluated at N = 1, convolutional transfer function T(D,N). That is, the coefficients are obtained 
from the coefficients of the expansion 
 
 
1
( ,
)
N
dT D N
dN
=
 
(10.11.5-2) 
 
The parameter k is the number of bits per symbol and is one in the binary case. The derivative determination 
of the coefficients will be made clearer via an example. We will use the Chernoff bound (upper bound) for 
soft decisions with binary (orthogonal) FSK modulation for the evaluation of PE(d). It is given by  
 
 
(
)
2
4(1
)
( )
2
d
c
b
c
b
R
PE d
R
γ
γ
⎡
⎤
+
≤⎢
⎥
+
⎢
⎥
⎣
⎦
 
(10.11.5-3) 
 
To illustrate the method let us determine an upper bound of the convolutional code described by 
(10.11.5-1) and obtain the coefficients from the series expansion of (10.11.5-2) for the K = 3. The 
convolutional code illustrated in Figures 4.3-2 or 4.3-3 (they are alternative representations of the same 
code). In (4.3-7) the transfer function is given by 
 
 
5
( ,
)
1 2
ND
T D N
ND
= −
 
(10.11.5-4) 
 
Using the series expansion for (1–x)–1 produces the series 
 
 
 
5
2
2
3
3
( ,
)
1
2
4
8
...
T D N
ND
ND
N D
N D
⎡
⎤
=
+
+
+
+
⎣
⎦ 
(10.11.5-5) 
 

 752                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
which can be written as 
 
 
5
2
6
3
7
4
8
( ,
)
2
4
8
...
T D N
ND
N D
N D
N D
=
+
+
+
+
 
(10.11.5-6) 
 
Computing the derivative at N =1 yields  
 
 
5
6
7
8
1
( ,
)
4
12
32
...
N
dT D N
D
D
D
D
dN
=
=
+
+
+
+
 
(10.11.5-7) 
 
It follows that 
 
 
5
6
7
8
1, 
4, 
12, 
32,...
β
β
β
β
=
=
=
=
 
(10.11.5-8) 
 
Thus our bit probability of error is given by 
 
       
(
)
(
)
(
)
(
)
5
6
7
8
2
2
2
2
4(1
)
4(1
)
4(1
)
4(1
)
4
12
32
...
2
2
2
2
c
b
c
b
c
b
c
b
b
c
b
c
b
c
b
c
b
R
R
R
R
PE
R
R
R
R
γ
γ
γ
γ
γ
γ
γ
γ
⎡
⎤
⎡
⎤
⎡
⎤
⎡
⎤
+
+
+
+
<
+
+
+
+
⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
+
+
+
+
⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
⎣
⎦
⎣
⎦
 
(10.11.5-9) 
 
which is our bit error rate bound for the convolutional code described in Figure 4.3-2 or 4.3-3, in Rayleigh 
fading, with binary (orthogonal) FSK modulation and noncoherent detection.  
 
 
10.11.5.2 Hard Decisions 
 
Now consider hard-decision detection. Proakis [42] has shown that when hard decisions are employed in 
convolutional codes with Chernoff bounds similar bounds occur with the exception that the effect of the hard 
decision is to reduce the distances (effective diversity) by half, in comparison to the soft-decision. Therefore 
the bound of (10.11.5-1) is replaced with  
 
 
min
1
( / 2)
b
d
d d
PE
PE d
k
β
∞
=
<
∑
 
(10.11.5-10) 
 
 
Following the example for the convolutional code of Figures 4.3-2 or 4.3-3, the Chernoff bound for 
hard decisions is given by (four-term approximation) 
 
                                          
(
)
(
)
(
)
(
)
5/2
6/2
2
2
7/2
8/ 2
2
2
4(1
)
4(1
)
4
2
2
4(1
)
4(1
)
         
12
32
...
2
2
c
b
c
b
b
c
b
c
b
c
b
c
b
c
b
c
b
R
R
PE
R
R
R
R
R
R
γ
γ
γ
γ
γ
γ
γ
γ
⎡
⎤
⎡
⎤
+
+
<
+
⎢
⎥
⎢
⎥
+
+
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
⎡
⎤
⎡
⎤
+
+
+
+
+
⎢
⎥
⎢
⎥
+
+
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
            (10.11.5-11) 
 
Again we see that the soft-decision decoding produces significantly better performance than with 
hard decisions. Figure 10.11-4 is based on bounds to simply illustrate the difference in hard- and soft- 
decision decoding for convolutional codes; however, more accurate estimates can be obtained from 
numerous coding texts and articles available in the literature. 
We have only scratched the surface in the area of coding for Rayleigh fading channels, and a 
number of books and articles delve into much more detail than indicated here. The goal of this section was to 
present an introduction to coding in Rayleigh fading channels and observe the performance difference 
between hard and soft decisions. 

 
                                                  An Introduction to Fading Channels 
 
 
           753 
 
Hard
decisions
Soft
decisions
Average SNR,    (dB)
b
γ
13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
33
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Bit error probability, PEb
Hard
decisions
Soft
decisions
Average SNR,    (dB)
b
γ
Average SNR,    (dB)
b
γ
13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
33
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
Bit error probability, PEb
 
 
Figure 10.11-4 BER performance of a rate 1/2, K = 3, convolutional code with and soft- and hard-decision decoding in Rayleigh fading 
with noncoherent detection of binary orthogonal FSK modulation. 
 
 
10.12 SMART ANTENNA SYSTEMS FOR WIRELESS SYSTEMS 
Equation Section (Next)  
A smart antenna system is a group of antenna elements with a signal processing capability to optimize its 
radiation or reception pattern automatically in response to the signal environment [47–54]. Usually the 
signals received from each antenna element are multiplied by complex weights and then summed up. Smart 
antenna systems are used in wireless applications. New smart (adaptive) antenna systems can enhance the 
performance of any CDMA system, including IS-95, IMT-2000, and wideband CDMA.  
 
The utilization of smart antennas will enhance the coverage through range extension, improve the 
penetration of the buildings, increase system capacity, improve link quality by mitigating multipath, and fill 
holes in coverage that may occur without smart antennas. Smart antennas can be used in some applications to 
spatially separate the signals at the base station. These enhancements can occur due to the smart antenna 
providing greater antenna gain in the directions needed. Smart antennas can be installed at the base station or 
the subscriber receiver; however smart antennas are not normally fitted to mobile subscriber terminals.  
 
 
10.12.1 Smart Antenna Systems 
 
There are basically two types of smart antennas, adaptive arrays or switched beam. We will consider first the 
adaptive array and then discuss the switched beam antenna system. Adaptive arrays produce an infinite 
number of patterns that are adjusted in real time. Switched beam antenna systems produce a finite number of 
predefined antenna patterns.  
 
 
10.12.2 Adaptive Array Smart Antennas 
 
Adaptive array smart antennas are based on an “array” of elemental antennas called elements that are 
controlled by a combining network that controls the amplitude and phase of each of the elements. Consider 
the spherical and the rectangular coordinate systems in Figure 10.12-1 showing some elements. 
In this figure φ  is the azimuth angle, and θ  is the elevation angle to the plane wave direction. Some 
assumptions are used in this analysis [47]. They are: (1) the element array spacing is small enough that the 

 754                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
assumption of no amplitude variation between elements is valid, (2) the elements have no mutual coupling, 
and (3) the signal on the array is narrowband. 
 
Consider a plane wave incident on the array from the direction ( ,
θ φ ). The signal phase difference 
between a reference element n and a reference element at the origin is given by the expression 
 
 
(
)
cos sin
sin
sin
cos
m
m
m
m
m
kd
k x
y
z
ϕ
φ
θ
φ
θ
θ
Δ
= Δ
=
+
+
 
(10.12.2-1) 
 
In (10.12.2-1) k is known as the phase constant [48] and is given by 
 
 
2 /
k
π λ
=
 
(10.12.2-2) 
 
in which   is the signal wavelength and 
/
,
c f
λ =
 where c is the speed of light (3×108 m/s). 
z
x
y
θ
Plane wave 
propagation direction
φ
m
d
δ
n-th element at (xm,ym,zm)
z
x
y
θ
Plane wave 
propagation direction
φ
m
d
δ
n-th element at (xm,ym,zm)
 
 
Figure 10.12-1 Coordinate system used in the array model. 
 
 
Consider now an antenna array model that uses complex weights wm, as shown in Figure 10.12-2. 
 
n1(t)
w1
nm(t)
wm
nM(t)
wM
+
M
M
M
M
M
M
Output
sum
n1(t)
w1
n1(t)
w1
nm(t)
wm
nM(t)
wM
+
M
M
M
M
M
M
Output
sum
 
 
Figure 10.12-2 Array model showing the received noise terms and the weighting factors. 
 
 

 
                                                  An Introduction to Fading Channels 
 
 
           755 
 
Arrays can be of various shapes [47, 49]. For example a linear equally spaced (LES) array is a 
linear array, equally spaced along a line. Arrays can also be constructed in a circle, which is two-dimensional 
or they can be arranged in three dimensions. A simple linear array composed of M elements is shown in two 
dimensions in Figure 10.12-3 with element spacing. The array x
Δ  starts at x = 0 and extends to (M–1) x
Δ . 
The upper left corner illustrates the array in three dimensions, showing the M elements and both spherical 
angles, and the direction of the plane wave phase front.  
 
z
x
y
φ
θ
0
m
M-1
x
v0(t)
v1(t)
vm(t)
vM-1(t)
L
y
w0
w1
wm
wM-1
Element 0
1
m
M-1
0
Phase front of plane wave
incident on element “0”
φ
Phase front of plane wave 
incident on element “m”
φ
+
cos sin
d
x
φ
θ
Δ
= Δ
Receiver
x
Δ
Direction of plane wave
u(t)
K
K
z
x
y
φ
θ
0
m
M-1
x
v0(t)
v1(t)
vm(t)
vM-1(t)
L
y
w0
w1
wm
wM-1
Element 0
1
m
M-1
0
Phase front of plane wave
incident on element “0”
φ
Phase front of plane wave 
incident on element “m”
φ
+
cos sin
d
x
φ
θ
Δ
= Δ
Receiver
x
Δ
Direction of plane wave
u(t)
z
x
y
φ
θ
0
m
M-1
x
v0(t)
v1(t)
vm(t)
vM-1(t)
L
y
w0
w1
wm
wM-1
Element 0
1
m
M-1
0
Phase front of plane wave
incident on element “0”
φ
Phase front of plane wave 
incident on element “m”
φ
+
cos sin
d
x
φ
θ
Δ
= Δ
Receiver
x
Δ
Direction of plane wave
z
x
y
φ
θ
0
m
M-1
x
v0(t)
v1(t)
vm(t)
vM-1(t)
L
y
w0
w0
w1
w1
wm
wm
wM-1
wM-1
Element 0
1
m
M-1
0
Phase front of plane wave
incident on element “0”
φ
Phase front of plane wave 
incident on element “m”
φ
+
cos sin
d
x
φ
θ
Δ
= Δ
Receiver
x
Δ
Direction of plane wave
u(t)
K
K
 
 
Figure 10.12-3 Antenna array showing the plane wave direction of arrival. 
 
 
 
The (baseband) complex envelope of the signals are denoted by vm(t). Each array weights its 
respective signal by a complex value, wm, and sums it with the other weighted elements to form the sum term, 
u(t).  
 
Let the plane wave phase front impact the array at the spherical angle ( , )
θ φ  as seen in the upper 
left-hand corner of the figure. The plane wave’s complex envelope will be denoted by s(t). As noted earlier, 
the x location of the elements is given by xm= m x. Therefore the signal received at element m on the array is 
given by 
 
cos sin
( )
( )
jkm d
jkm x
m
v
As t e
As t e
φ
θ
−
Δ
−
Δ
=
=
 
(10.12.2-3) 
 
in which A is the received amplitude. The resultant signal out of the array is given by 
 
 
1
1
cos sin
0
0
( )
( )
( )
( )
( , )
M
M
jkm x
m
m
m
array
m
m
u t
w v
t
As t
w e
As t F
φ
θ
θ φ
−
−
−
Δ
=
=
=
=
=
∑
∑
 
(10.12.2-4) 
 
where  
 
 
1
cos sin
0
( , )
M
jkm x
array
m
m
F
w e
φ
θ
θ φ
−
−
Δ
=
= ∑
 
(10.12.2-5) 
 

 756                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
( , )
array
F
θ φ  is called the array factor. The array factor determines the ratio of the output complex envelope 
signal u(t) to the input complex envelope signal v(t), as a function of the plane wave’s direction of arrival. 
The set of complex weights {wm} allow the array to be pointed in any direction 
1
1
( ,
)
θ φ . Now consider the 
array output power. It is given by 
 
 
2
2
2
1
1
( )
( )
( , )
2
2
a
array
P
u t
As t
F
θ φ
=
=
 
(10.12.2-6) 
 
Consider the following weight assignment to be [47] 
 
 
1
cos
jkm x
m
w
e
θ
Δ
=
 
(10.12.2-7) 
The array factor becomes  
 
 
1
1
(cos sin
cos
)
0
( , )
M
jkm x
array
m
F
e
φ
θ
θ
θ φ
−
−
Δ
−
=
= ∑
 
(10.12.2-8) 
 
Using the summation form of the geometric progression [50] we obtain 
 
 
1
1
(cos sin
cos
)
(cos sin
cos
)
1
( , )
1
jMk x
array
jk x
e
F
e
φ
θ
θ
φ
θ
θ
θ φ
−
Δ
−
−
Δ
−
−
=
−
 
(10.12.2-9) 
 
Rewriting the array factor as  
 
                
1
1
1
1
1
1
(cos sin
cos
)/ 2
(cos sin
cos
)/ 2
(cos sin
cos
)/ 2
(cos sin
cos
)/ 2
(cos sin
cos
)/ 2
(cos sin
cos
)/ 2
(
)
( , )
(
)
jMk x
jMk x
jMk x
array
jk x
jk x
jk x
e
e
e
F
e
e
e
φ
θ
θ
φ
θ
θ
φ
θ
θ
φ
θ
θ
φ
θ
θ
φ
θ
θ
θ φ
Δ
−
−
Δ
−
−
Δ
−
Δ
−
−
Δ
−
−
Δ
−
−
=
−
 
(10.12.2-10) 
 
This can be written as 
 
                      
1
(
1)
(cos sin
cos
)
2
1
1
sin
(cos sin
cos
)
2
( , )
sin
(cos sin
cos
)
2
M
k x
j
array
Mk x
e
F
k x
φ
θ
θ
φ
θ
θ
θ φ
φ
θ
θ
−
Δ
−
−
Δ
⎛
⎞
−
⎜
⎟
⎝
⎠
=
Δ
⎛
⎞
−
⎜
⎟
⎝
⎠
 
(10.12.2-11) 
 
To obtain a feel for this pattern let θ = 90º, so that the plane wave is incident in the x-y plane, shown in 
Figure 10.12-3 in the upper figure. This is the approximate angle for many cellular antenna applications. 
Figure 10.12-4 illustrates the magnitude squared amplitude, in dB, of the array factor in the case 
90º
θ =
 as a 
function of  , when  1 = 45º and 75º. As can be seen in the figure the maximum antenna gain is pointed to 
the value of  1 that is input to the array. The dashed line is the 75º case and the solid line corresponds to the 
45º case. Notice that the array response is symmetric about the 0º angle point. The linear array was based on 
seven elements with  /2 spacing.  
In general if an element has an antenna pattern represented by Felement( ,
θ φ ) and the linear array 
consists of identical elements all spaced equally apart on a line, then the resulting pattern is given by 
 
 
( , )
( , )
( , )
array
element
F
F
F
θ φ
θ φ
θ φ
=
×
 
(10.12.2-12) 
 

 
                                                  An Introduction to Fading Channels 
 
 
           757 
φ (deg)
|Farray(π/2,φ)|2  (dB)
Peaks at 45º
Peaks at 75º
φ (deg)
|Farray(π/2,φ)|2  (dB)
φ (deg)
φ (deg)
|Farray(π/2,φ)|2  (dB)
Peaks at 45º
Peaks at 75º
 
Figure 10.12-4 The magnitude squared of a seven element array factor for the cases in which the steered angles are 45º and 75º. 
 
 
This pattern factorization is called the principle of pattern multiplication [51]. This result can be extended to 
rectangular arrays as long as the group of elements, in, say, the y direction, can be viewed as super elements 
when viewed in the x direction [51].  
 
Figure 10.12-5 illustrates an example in which super elements (subarrays) are employed. Here a 
planar (Figure 10.12-5(a)) has element locations that define the rectangular grid. The rows or columns may 
be treated as super elements. The number of elements is N = N1×N2. All elements are assumed to be 
identical. Figure 10.12-5(b) is equivalent [51] to Figure 10.12-5(a). 
 
N1
}
N2
d1
d2
(a)
(b)
x
N1
}
N2
d1
d2
(a)
(b)
x
 
 
Figure 10.12-5 Equivalent arrays: (a) N = N1×N2 isotropic radiators; and (b) N1 nonisotropic radiators. 
 
 
 
It is convenient when working with arrays to utilize a vector representation of the weights and 
signals [47]. Let the weight vector w be defined by 
 
 
(
)
0
1
2
3
1
,
,
,
...
H
M
w w w w
w
−
=
w
 
(10.12.2-13) 
 
where the “H” denotes the Hermitian transpose, which is a transposition followed by a complex conjugation. 
The signals from each antenna element defines the data vector 
 
 
(
)
0
1
2
1
( ),
( ),
( ),...
( )
T
M
(t)
v t v t v t
v
t
−
=
v
 
(10.12.2-14) 

 758                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
where the “T” denotes the transpose of the vector. The array output, from the left side of (10.12.2-4), can be 
written in vector form as 
 
 
( )
( )
H
u t
t
= w v
 
(10.12.2-15) 
 
and it is true that  
 
 
(
)
(
)
0
1
2
3
1
,
,
,
...
H
H
M
w w w w
w
−
=
w
w =
 
(10.12.2-16) 
 
Consequently (10.12.2-15) indicates a component-by-component multiplication and summation as is defined 
in the left side of (10.12.2-4). A steering vector a( ,
θ φ ), has the m-th component (for position xm), in a 
direction ( ,
θ φ ), relative to the element at x = 0, is given by 
 
[
]
cos( )sin( )
sin( )sin( )
cos( )
( , )
m
m
m
jk x
y
z
m
a
e
φ
θ
φ
θ
θ
θ φ
−
+
+
=
 
(10.12.2-17) 
 
The M component steering vector can be written as 
 
 
(
)
1
2
1
( , )
1,
( , ),
( , )...
( , )
M
a
a
a
θ φ
θ φ
θ φ
θ φ
−
=
a
 
(10.12.2-18) 
 
Thus the array factor in direction ( ,
θ φ ) can be written as 
 
 
( , )
( , )
H
F θ φ
θ φ
= w a
 
(10.12.2-19) 
 
The angle pair ( ,
θ φ ) is called the direction -of-arrival (DOA) of the received plane wave.  
 
In addition to linear arrays there are rectangular arrays, circular arrays, and elliptical arrays [49]. We 
have not discussed nonuniformly spaced planar arrays. The main advantage of nonuniformly spaced elements 
in the array is the fact that the side lobe levels can be reduced [52, 53].  
 
 
 
10.12.3 Adaptive Array Spatial Processing 
 
It is possible to implement spatial processing receivers in a number of ways. However, we will present one 
implementation that gives the general idea of the approach. Figure 10.12-6 illustrates the digital complex 
baseband weighting and combining processing approach for receivers.  
 
This processing, for a base station, utilizes for each signal path a bandpass filter (BPF), low noise 
amplifier (LNA), complex mixing (both I and Q components), low-pass filtering (LPF) to 1/M of the 
bandwidth, analog to digital conversion (A/D), along with decimating by the factor M of the original sample 
rate. Digital down conversion is accomplished by the combination of the complex multiplication, low-pass 
filtering, and decimating by the factor M. The complex envelops vi(t) are multiplied by the complex weights 
wi and combined in the complex summer to produce a complex (I and Q) output for the receiver to track and 
demodulate the signal. Adaptive algorithms exist to adjust the weights so as to maximize the signal that is 
available to the demodulator. This subject will not be discussed here, but is discussed in a number of books 
[49].  
 
 
10.12.4 Forming Smart Antennas with Switched Beams 
 
There are two major categories of smart antennas: (1) adaptive arrays and (2) switched beam antennas. 
Switched beam antennas form multiple fixed beams with increased sensitivity in particular directions. These 

 
                                                  An Introduction to Fading Channels 
 
 
           759 
antenna systems sense signal strength, choose from one or several predetermined, fixed beam antennas, and 
switch from one beam to another as the mobile user moves about the sector.  
 
LNA
LPF
A/D
↓M
⇒
⇒
⇒
⇒w1
BPF
LNA
LPF
A/D
↓M
⇒
⇒
⇒
⇒w2
BPF
LNA
LPF
A/D
↓M
⇒
⇒
⇒
⇒wM-1
BPF
⇓
⇓
⇓
:
⇑
⇑
⇑
Complex summer
⇓
⇑
0
j
t
e
ω
Algorithm for 
weight adjustment
M
M
M
⇒
Complex discrete
time baseband
array output
v1(t)
v2(t)
vM-1(t)
LNA
LPF
A/D
↓M
⇒
⇒
⇒
⇒w1
BPF
LNA
LPF
A/D
↓M
⇒
⇒
⇒
⇒w2
BPF
LNA
LPF
A/D
↓M
⇒
⇒
⇒
⇒wM-1
BPF
⇓
⇓
⇓
:
⇑
⇑
⇑
Complex summer
⇓
⇑
0
j
t
e
ω
Algorithm for 
weight adjustment
M
M
M
⇒
Complex discrete
time baseband
array output
LNA
LPF
A/D
↓M
⇒
⇒
⇒
⇒w1
BPF
LNA
LPF
A/D
↓M
⇒
⇒
⇒
⇒w2
BPF
LNA
LPF
A/D
↓M
⇒
⇒
⇒
⇒wM-1
BPF
⇓
⇓
⇓
:
⇑
⇑
⇑
Complex summer
⇓
⇑
0
j
t
e
ω
Algorithm for 
weight adjustment
M
M
M
LNA
LPF
A/D
A/D
↓M
↓M
⇒
⇒
⇒
⇒w1
⇒w1
BPF
LNA
LPF
A/D
A/D
↓M
↓M
⇒
⇒
⇒
⇒w2
⇒w2
BPF
LNA
LPF
A/D
A/D
↓M
↓M
⇒
⇒
⇒
⇒wM-1
BPF
⇓
⇓
⇓
:
⇑
⇑
⇑
Complex summer
Complex summer
⇓
⇑
0
j
t
e
ω
Algorithm for 
weight adjustment
Algorithm for 
weight adjustment
M
M
M
⇒
Complex discrete
time baseband
array output
v1(t)
v2(t)
vM-1(t)
 
 
Figure 10.12-6 The digital complex baseband weighting and combining processing approach for receivers. 
 
 
 
Figure 10.12-7 illustrates a switched beam network utilizing a beamforming network to form M 
beams from M array element to allow the processing of K signals. A separate beam selection is made for each 
of the K receivers.  
 
M×M
beamforming
network, T
M
M
1
2
3
M
User 0
receiver
User K-1
receiver
SW
control
SW
control
M
M×M
beamforming
network, T
M
M
1
2
3
M
User 0
receiver
User 0
receiver
User K-1
receiver
User K-1
receiver
SW
control
SW
control
SW
control
SW
control
M
 
 
Figure 10.12-7 Structure of switched beam network for forming M beams from M array elements for K receivers. 
 
 
 
Depending on what multiple type of access is used, TDMA, FDMA, or CDMA, the mechanism for 
beam selection is different [47].  
 
 
10.12.5 MIMO Systems  
 
Up until now we have been discussing only multiple antennas at the base station (normally). However, when 
multiple antennas are used at both the base station and the user we have a multiple input multiple output 
(MIMO) link. In applicable channels with the proper signal processing, MIMO can increase effective data 
rates an order of magnitude or more. MIMO signaling can improve wireless communication in two ways  
[46, 54]: (1) diversity methods and (2) spatial multiplexing.  

 760                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
Diversity methods improve the robustness of the communication system in terms of BER by 
exploiting the multiple paths between the transmitter and receiver antennas. Diversity at the receiver can 
provide performance enhancement similar to the RAKE receiver.  
 
Spatial multiplexing, another MIMO technique, was derived from the fact that in a rich scattering 
environment it is possible for the receiver to reassemble the transmitted signals simultaneously from the 
multiple antennas. In effect one is transmitting parallel independent data streams and can achieve dramatic 
improvement in system capacity. The general MIMO model is shown in Figure 10.12-8. 
 
Coding, modulation,
weighting/mapping
Digital
data
M
Deweighting/
demapping,
demodulation,
decoding
M
Recovered
data
M transmit antennas
N receive antennas
Coding, modulation,
weighting/mapping
Digital
data
M
Deweighting/
demapping,
demodulation,
decoding
M
Recovered
data
M transmit antennas
N receive antennas
 
 
Figure 10.12-8 Model of a MIMO transmission system. 
 
 
 
In Figure 10.12-8 baseband digital signals are input into the transmission block. The block is 
composed of the following functions: error control coding and (possibly combined with) mapping to complex 
modulation symbols (QPSK, M-QAM and so on). This produces several separate symbol streams that may be 
independent, partially redundant, or fully redundant. Each of these streams is then mapped onto one of the M 
transmit antennas. This mapping may be linear spatial weighting of the antenna elements or linear antenna 
space-time precoding. The signals are transmitted after being filtered, amplified, and frequency translated to 
the proper frequency.  
 
At the receiver the signals are received by the M multiple antennas, and the inverse process is 
performed at the receiver: deweighting and demapping, demodulation, and decoding. The appropriate 
selection of the coding, mapping, weighting, and modulation can offer benefits in performance. 
 
It should be observed that the central idea in MIMO systems is space-time signal processing in 
which the time parameter is augmented with the spatial dimension derived from the use of multiple antennas. 
As such, MIMO can be viewed as an extension of smart antennas. The use of MIMO [54] has been observed 
to greatly enhance channel capacity. Recently, MIMO models have been standardized in IEEE 802.16 
specifications for fixed broadband wireless access and the third generation partnership project (3GPP) for 
applications. Liberti and Rappaport [47] discuss smart antennas in considerable depth. 
 
10.13 SUMMARY 
 
In this chapter we presented an introduction to fading channels. To do this we introduced the free space 
model and other propagation models for various environments as part of the large-scale effects propagation 
models. Following the large-scale effects we introduced small-scale effects multipath fading. This included 
the important Rayleigh and Rician channel models. In addition fast and slow fading was introduced. Then 
wideband channels were explained, which included deterministic models and stochastic time-variant linear 
channel models. The wide-sense stationary channels and the uncorrelated scattering model followed. Finally, 
the wide-sense stationary uncorrelated scattering channel model was introduced. The important area of bit 
error rate degradation due to Rayleigh fading was presented for a few modulation cases. Then the mitigation 
of multipath effects was introduced through signal diversity and signal combining methods. Next the 
important area of equalization for multipath improvement was presented. This led to the RAKE receiver. 
This was followed by the advantage of soft-decision coding over hard-decision coding in a Rayleigh channel 
fading environment shown for both block and convolutional codes. Finally smart antenna systems and 
MIMO systems were briefly introduced.  
 

 
                                                  An Introduction to Fading Channels 
 
 
           761 
References 
 
[1] 
Data obtained from the Harvard Web site of Professor Victor Jones, a Robert Wallace research professor of applied physics 
in the Division of Engineering and Applied Sciences Harvard University. The Web site is the following: 
http://people.deas.harvard.edu/~jones/es151/prop_models/propagation.html.  
 
[2] 
J. D. Parsons, The Mobile Radio Propagation Channel, 2nd ed., Chichester, England: John Wiley & Sons, 2000. 
 
[3] 
E. C. Jordan and K. G. Balmain, Electromagnetic Waves and Radiating Systems, Englewood Cliffs, NJ: Prentice-Hall, 1968. 
 
[4] 
T. S. Rappaport, Wireless Communications Principles and Practice, New York: IEEE Press & Prentice-Hall, 1996. 
 
[5] 
M. Hata, “Empirical Formula for Propagation Loss in Land Mobile Radio Services,” IEEE Trans. on Vehicular Technology, 
Vol. VT-29, No. 3, August 1980, pp. 317–325. 
 
[6] 
Y. Okumura, “Field Strength and Its Variability in VHF and UHF Land-Mobile Radio Services,” Review of the Electrical 
Communications Laboratory, Vol. 16, September–October 1968. 
 
[7] 
COST Action 231, “Digital Mobile Radio Towards Future Generation Systems, Final Report,” Tech. Rep. European 
Communities, EUR 18957, 1999. 
 
[8] 
A. Neskovic, N. Neskovic, and G. Paunovic, “Modern Approaches in Modeling of Mobile Radio Systems Propagation 
Environment,” an IEEE tutorial, 2000, found at http://www.comsoc.org/livepubs/surveys/public/3q00issue/neskovic.html. 
 
[9] 
M. Kaji and A. Akeyama, “UHF-Band Propagation Characteristics for Land Mobile Radio,” AP-S International Symposium 
Digest, Vol. 2, 1985, pp. 835–838. 
 
[10] W. Y. C. Lee, Mobile Communications Design Fundamentals, 2nd ed., New York: Wiley-Interscience, 1993. 
 
[11] N. Neskovic, “The Field Strength Prediction for Urban Microcells (Band 900 MHz),” Master’s Thesis, Faculty of Electrical 
Engineering, Belgrade, 1997. 
 
[12] N. Neskovic, A. Neskovic, and D. Paunovic, “A New Microcell Prediction Model Based on the Arrangement of Their Streets 
and Types,” Proc. 10th IEEE Med. Electrotech. Conf. MELECON, Limassol, Cyprus, May 2000.  
 
[13] A. Neskovic, “Artificial Neural Network Indoor Radio Propagation Model (Band 900 MHz),” Master’s Thesis, Facility of 
Engineering, Belgrade, 1997. 
 
[14] J. B. Andersen, T. S. Rappaport, and S. Yoshida, “Propagation Measurements and Models for Wireless Communication 
Channels,” IEEE Comm. Mag., January 1995, pp. 42–49. 
 
[15] S. Y. Seidel and T. S. Rapport, “914 MHz Path Loss Prediction for Wireless In-Building Personal Communication System 
Design,” IEEE Trans. on Antennas and Propagation, Vol. 40, No. 2, February 1992, pp. 207–217. 
 
[16] D. C. Cox, R. R. Murray, and A. W. Norris, “800 MHz Attenuation Measured in and Around Suburban Houses,” AT&T Bell 
Labs. Tech. Journal, Vol. 63, July/August 1984, pp. 921–954. 
 
[17] T. S. Rappaport, “Characteristics of UHF Multipath Radio Channels in Factory Buildings,” IEEE Trans. on Antennas and 
Propagation, Vol. 37, August 1989, pp. 1058–1069. 
 
[18] B. Sklar, Digital Communications Fundamentals and Application, 2nd ed., Chapter 15, Englewood Cliffs, NJ: Prentice-Hall, 
2001. 
 
[19] R. Steele (ed.), Mobile Radio Communications, Chapter 2, New York: IEEE Press and Pentech Press, 1994. 
 
[20] W. Y. C. Lee, “Elements of Cellular Mobile Radio Systems,” IEEE Trans. on Vechicular Technology, Vol. V-35, No. 2, May 
1986, pp. 48–56. 
 
[21] T. S. Rappaport, Wireless Communications Principles and Practice, Upper Saddle River, NJ: IEEE Press and Prentice Hall, 
1996. 
 
[22] L. A. Zadeh, “Frequency Analysis of Variable Networks,” Proc. IRE, Vol. 38, March 1995, pp. 291–299. 
 
[23] P. Bello, “Characterization of Randomly Time-Variant Linear Channels,” IEEE Trans. on Communication Systems, Vol. CS-
11, December 1963, pp. 360–393. 
 

 762                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
[24] W. Kozek, “On the Transfer Function Calculus For Underspread LTV Channels,” IEEE Trans. on Signal Processing, Vol. 
45, 1997, pp. 215–223. 
 
[25] W. Kozek and A. F. Molisch, “On the Eigenstructure of Underspread WSSUS Channels,” Proc. First Processing Workshop 
Advances in Wireless Communications (SPAWC’97), 1997, pp. 325–328. 
 
[26] W. C. Jakes, (ed.), Microwave Mobile Communications, New York: John Wiley, 1974. 
 
[27] D. C. Cox and R. P. Leck, “Correlation Bandwidth and Delay Spread Multipath Propagation Statistics for 910 MHz Urban 
Mobile Radio Channels,” IEEE Trans. on Communications, Vol. 23, No. 11, 1975, pp. 1271–1280. 
 
[28] M. J. Gans, “A Power-Spectral Theory in the Mobile-Radio Environment,” IEEE Trans. VT, Vol. 21, No. 1, 1972, pp. 27–38. 
 
[29]  R. Price and P. E. Green, “”Signal Processing in Radar Astronomy,” Report 234, MIT Lincoln Lab., Lexington, MA, 1960. 
 
[30] R. Peterson, R. Ziemer, and D. Borth, Introduction to Spread Spectrum Communications, Upper Saddle River, NJ: Prentice-
Hall, 1995. 
 
[31] P. A. Bello and B. D. Nelin, “The Effect of Frequency Selective Fading on the Binary Error Probabilities of Incoherent and 
Differentially Coherent Matched Filter Receivers,” IEEE Trans. on Communications Systems, Vol. CS-10, June 1962, pp. 
160–168. 
 
[32] J. G. Proakis, Digital Communications, 4th ed., New York: McGraw-Hill, 2001. 
 
[33] B. W. Lindgren, Statistical Theory, Chapter 3, New York: Macmillan Co., 1962. 
 
[34] L. R. Kahn, “Ratio Squarer,” Proc. IRE (Correspondence), No. 42, November 1954, p. 1704. 
 
[35] L. Franks, Signal Theory, Englewood Cliffs, NJ: Prentice-Hall, 1969. 
 
[36] S. Haykin, Communication Systems, New York: John Wiley & Sons, 1994. 
 
[37] J. Kurzweil, An Introduction to Digital Communications, Chapter 10, New York: John Wiley & Sons, 2000. 
 
[38] M. Salhav, A. Wiesel, and Y. C. Eldar, “Robust Peak Distortion Equalization,” ICASSP, 2004. 
 
[39] J. Kurzweil, An Introduction to Digital Communications, Chapter 11, New York: John Wiley & Sons, 2000. 
 
[40] S. U. H. Qureshi, “Adaptive Equalization,” Proc. IEEE, Vol. 73, No. 9, September 1985, pp. 1340–1387.  
 
[41] A. Feuer and E. Weinstein, “Convergence Analysis of LMS Filters with Uncorrelated Gaussian Data,” IEEE Trans. on 
Acoustics, Speech, and Signal Processing, Vol. V-33, 1985, pp. 220–230. 
 
[42] J. G. Proakis, Digital Communications, 4th ed., New York: McGraw-Hill, 2001. 
 
[43]  R. Price and P. E. Green, “A Communication Technique for Multipath Channels,” Proc. of the IRE, Vol. 46, 1958, pp. 555–
570. 
 
[44] G. C. Clark Jr. and J. B. Cain, Error Correction Coding for Digital Communications, New York: Plenum Press, 1981. 
 
[45] W. W. . Peterson and E. J. Weldon, Error-Correcting Codes, 2nd ed., Cambridge, MA: MIT Press, 1972. 
 
[46] S. Sanayei and A. Nosratina, “Antenna Selection in MIMO Systems,” IEEE Comm. Magazine, October 2004.  
 
[47] J. C. Liberti, Jr. and T. S. Rappaport, Smart Antennas for Wireless Communications: IS-95 and Third Generation CDMA 
Applications, Upper Saddle River, NJ: Prentice-Hall, 1999. 
 
[48] S. Ramo and J. R. Whinnery, Fields and Waves in Modern Radio, 2nd ed., New York: John Wiley & Sons, 1962. 
 
[49] R. A. Monzingo and T. W. Miller, Introduction to Adaptive Arrays, Raleigh, NC: SciTech Publishing Company, 2004. 
 
[50] L. B. Jolley, Summation of Series, 2nd ed. (rev.), New York: Dover Publications, 1961. 
 
[51] B. D. Steinberg, Principles of Aperture and Array System Design, New York: Wiley-Interscience Publications, 1976. 
 
[52] R. F. Harrington, “Sidelobe Reduction by Nonuniformly Spaced Element Spacing,” IRE Trans. on Antennas and 
Propagation, March 1961, pp. 187–192. 

 
                                                  An Introduction to Fading Channels 
 
 
           763 
 
[53] F. Hodjat and S. A. Hovanessian, “Nonuniformly Spaced Linear and Planar Array Antennas for Sidelobe Reduction,” IEEE 
Trans. on Antennas and Propagation, Vol. AP, No. 2, March 1978, pp. 198–204. 
 
[54] D. Gesbert, M. Shafi, Da-shan Shiu, P. Smith, and A. Naguib, “From Theory to Practice: An Overview of MIMO Space-
Time Coded Wireless Systems,” IEEE Journal on Selected Areas in Communication, Vol. 21, No. 3, April 2003. 
 
 
Problems 
 
1. Use the parameters of Example 1, but assume that the receive gain is 3 dB, the transmitted power is 
200W, and everything else is the same. Determine the path loss and received power in dBm (this 
denotes dB value relative to an mW). 
 
2. Using Hata’s model determine the path loss for a medium-sized suburban city with hT = 30m,  
hR = 10m, f = 1,500 MHz, and d = 10 km. Also determine the path loss assuming that the 
propagation is in free space.  
 
3. Recompute Example 4 when P(0) = 0 dB, P(1) = –10 dB, P(2) = 0 dB, P(3) = –20 dB, P(4) = 0 dB, 
and P(5) = –20 dB. 
 
4. Extrapolate the results of (10.4.3-1)–(10.4.3-3) to the case that the delay spread can be interpreted to 
be continuous so that the three equations can be written as 
 
 
 
2
2
( )
( )
( )
( )
P
d
P
d
P
d
P
d
τ
τ
τ
τ
τ
τ
τ
τ
τ
τ
τ
τ
=
=
∫
∫
∫
∫
 
(P10-1) 
 
              where P( ) is the power density at excess delay  .  
 
5. Show that the Fourier transform relationship going from S( , ) to H(f, ) is given by 
 
 
(
)
(
)
( , )
,
exp
2
H f
S
j
f
d
υ
τ υ
π τ
τ
∞
−∞
=
−
∫
 
(P10-2) 
 
since   is held constant and   is the variable of integration and f is the new “frequency variable.”  
 
6. Show that using (10.6.1-1) with the substitution 
2
0
/
b
E
N
γ
α
=
 yields the pdf of  , which is given by 
1
( )
exp
p
γ
γ
γ
γ
⎛
⎞
=
−
⎜
⎟
⎝
⎠
 where γ  is the average value of γ . Next, using the fact that 
(
)
1
1
(
)exp
1
o
t
pt dt
p
p
∞
Φ
−
=
+
∫
 and the fact that 
1
( )
1
2
2
x
Q x
⎡
⎤
⎛
⎞
=
−Φ
⎢
⎥
⎜
⎟
⎝
⎠
⎣
⎦
 show that the average 
probability of error is given by 
1 1
2
1
b
PE
γ
γ
⎛
⎞
=
−
⎜
⎟
⎜
⎟
+
⎝
⎠
. 
 
 

 764                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
7. Show that for noncoherent, orthogonal BFSK, the average BER is given by 
 
 
 
1
2
b
PE
γ
=
+
 
(P10-3) 
 
8. Starting with the Rayleigh probability density function of (10.7.2-1) and the definition of 
iγ ,  
       (10.7.2-2) and using (10.7.2-3), show that  
 
 
 
1
( )
exp
i
i
p
γ
γ
⎛
⎞
=
−
⎜
⎟
Γ
Γ
⎝
⎠
 
(P10-4) 
 
9.  Establish the expression for the MSE given in (10.8.1-16) using (10.8.1-14) in (10.8.1-16). Observe 
that yI has a one in the fourth position and zeros elsewhere.  
 
10.  Establish the expression for the variance using the following: (a) (10.9.1-3), (10.9.1-7), and the fact  
 that Re[z]=
2
*
.
2
z
z
⎛
⎞
+
⎜
⎟
⎝
⎠
 
 
11.  Establish the summation 
 
 
 
1
      
0
1
2
1
2
1
      
 
1
L
k
L
k
L
L
k
L
L
−
=
−+
−
−
⎛
⎞
⎛
⎞
⎛
⎞
=
=
⎜
⎟
⎜
⎟
⎜
⎟
−
⎝
⎠
⎝
⎠
⎝
⎠
∑
 
(P10-5) 
 
by noting that  
 
 
 
1
2
1
...
   0
     1
     2
  
n
m
n
m
n
m
n
n
m
m
−
−
+
−
+
+
⎛
⎞
⎛
⎞
⎛
⎞
⎛
⎞
⎛
⎞
+
+
+
=
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎝
⎠
⎝
⎠
⎝
⎠
 
(P10-6) 
 
from a result in M. Abramowitz and I. Stegun, Handbook of Mathematical Functions, Delaware, NJ: 
Dover Publishers Inc., 1968, p. 822. 
 
12.  By differentiating the right-hand side of (10.11.1-11) show that the optimum value of   is given by 
 
 
2
2
0
2
2
4
S
N
S
N
σ
σ
ρ
σ σ
−
=
 
(P10-7) 
 
In addition show that when  0 is used in the right-hand side of (10.11.1-11) that the Chernoff bound 
is of the form 
 
 
2
4(1
)
( )
(2
)
L
b
PE L
γ
γ
⎡
⎤
+
≤⎢
⎥
+
⎣
⎦
 
(P10-8) 
 
13. Establish that the summation in (10.12.2-8) can be simplified to 
 
 
 
1
(
1)
(cos sin
cos
)
2
1
1
sin
(cos sin
cos
)
2
( , )
sin
(cos sin
cos
)
2
M
k x
j
array
Mk x
e
F
k x
φ
θ
θ
φ
θ
θ
θ φ
φ
θ
θ
−
Δ
−
−
Δ
⎛
⎞
−
⎜
⎟
⎝
⎠
=
Δ
⎛
⎞
−
⎜
⎟
⎝
⎠
 
(P10-9) 

 
                               765 
CHAPTER 11 
Low Probability of Detection Systems 
 
 
11.0 INTRODUCTION  
Equation Chapter 11 Section 1 
This chapter will provide an introduction to the area of the techniques used by “adversaries” to detect covert 
communication systems. These include the radiometer and its variations: the rate line detectors including the 
chip rate and the carrier line rate detectors, and transform techniques. The three types of LPI/classification 
techniques are shown in Table 11.0-1. 
 
Table 11.0-1 The Three Main Types of LPI Detection Devices 
 
Transform Techniques 
Energy Detectors 
 
Rate Line Detectors 
Spectrum analyzer 
Radiometers 
Chip rate detectors 
Compressive receiver 
Channelized receivers 
Carrier frequency detectors 
Bragg cell 
 
 
FFT  
 
 
 
 
 
The first class of detectors is based on transform techniques. They are based on computing the 
power spectral density of the received signal plus noise. Common implementations of this class of detector 
are the spectrum analyzer, the compressive receiver (such as chirp transformers using surface acoustic 
devices), the fast Fourier transform (FFT), and the Bragg cell, which is an acoustic/optic device used to 
obtain the power spectral density of an incoming signal. 
 
The second class of detector is the energy detector. The radiometer and the channelized radiometer 
are examples of this class of detector. They can be used to detect either direct sequence or frequency-hopped 
signals. Since they only detect energy, they are not capable of signal classification and signal extraction.  
 
The third class of detector is the rate line detectors, which include the delay and multiply detector, 
and the square law detector followed by narrowband filters to extract the line spectra. Other types of rate line 
detectors include carrier frequency extraction from squaring and quadrupling the input signal plus noise. 
These devices extract harmonics of either the carrier frequency or the chip rate, from the signal plus noise.  
 
From the user’s point of view, the signal must be low power; if possible, a very short burst 
transmission; not repeated often, if at all; have a design free of any appreciable spurs (which can be detected 
by a spectrum analyzer); and hopefully operate far enough away from the interceptor as to not be detectable. 
Also, the transmitted signal must not allow line spectra, such as a multiple of the carrier frequency or the chip 
or hop rate, to be generated easily in the interceptors’ receiver. 
 
Emission covertness is almost never absolute in that radiated signals that are above the noise level in 
the unintended receiver can easily be detected. Careful design of the user’s transmitter can minimize the 
probability of the unintended receiver detecting the transmission. The primary measure of transmitter 
covertness is normally taken to be the maximum range at which the interceptors’ receiver can successfully 
accomplish detection. To be meaningful at all, this range depends on the detection and false alarm 
probabilities, as well as the transmission path that the signal must undergo to be detected. Generally speaking 
the air-to-air, or air-to-ground, detection range is much greater than is the ground-to-ground detection range. 

 766                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
If we let r denote the range between the transmitter and the receiver, then the ground to ground path loss 
commonly drops as r –4, and as an air to air path the loss drops as r –2. 
 
This chapter will discuss the various types of detectors and present their performance. 
 
 
11.1 LOW PROBABILITY OF INTERCEPT (LPI) 
 
In this section we consider some terminology used in covert communications, followed by a discussion of the 
LPI scenario, and then we’ll discuss a few propagation models that are useful in LPI link calculations. 
 
 
11.1.1 Covert Communications 
 
In this chapter the following concepts will be used [1]. Covert transmission is a radio signaling technique that 
is designed so that an agent can communicate with other friendly units with a low likelihood of disclosing his 
presence or his mission.  
Two terms are used in the area of covert communication. The first is COMSEC, or communication 
security, which refers to the security of the message. The most common way to protect the message is to 
encrypt it. If one does not have the proper key to decrypt the message, then it cannot normally be read. 
Ideally, the use of COMSEC will not degrade the data bit error performance (in practice it sometimes does), 
but will prohibit the unauthorized listener from deciphering the data. 
 
The other term that is used in covert communications is TRANSEC, or transmission security, which 
refers to use of the transmitted signal for security, including modulation and the use of spread spectrum 
techniques. Ideally the use of spread spectrum techniques for transmission security should not diminish the 
performance of the communication link, but would greatly diminish the ability of the unauthorized 
interceptor to detect the signal transmission and would diminish the effect of any jamming signal to interfere 
with the communication link. 
 
In the military it is desirable to be able to communicate without the enemy being aware of the 
transmission, especially if one is behind enemy lines. Designing signals that have a low probability of being 
detected is a continual challenge. The more noise-like the signal, the wider the bandwidth of the transmitted 
signal, the lower the transmitted power of the signal, and the shorter1 the time it takes to send the 
communication message, the less likely it is to be detected by the undesired listener. Other techniques 
include employing very narrow beam antenna beamwidths with low sidelobes (high antenna gain) and 
communicating in the same band as well-established signals, so that the covert signal is “hidden” among the 
well-established signals (which are hopefully stronger). 
A low probability of detection (LPD) system is one that transmits a signal that is difficult to detect 
(be aware that there is any transmission), without additional information that is known only by the desired 
user (receiver). Detection means that a determination that the receiver decides that something other than 
noise is present. Once detected, it may be intercepted or exploited. 
 
Low probability of interception (LPI) means that the signal will be difficult to recognize as a signal 
of interest (SOI). An LPI signal, although not escaping detection, should be difficult to identify and 
recognize. 
 
A signal that has a low probability of exploitation (LPE) means that the signal, if detected, will be 
difficult to exploit. Exploitation includes reading of plaintext, and identifying the transmitter unit and its 
mission. LPE is generally provided to an overt signal by encrypting the message content (COMSEC), and by 
providing TRANSEC cover of the signal structure. 
 
 
11.1.2 The LPI Scenario 
 
Now consider the relationship between the transmitter, the intended receiver, and the intercept receiver. The 
basic model for LPI transmission is shown in Figure 11.1-1.  
 
                                                          
1 However, there are numerous factors that affect detectability. See Problem 2 for an idealized viewpoint. 

 
                                             Low Probability of Detection Systems 
 
 
           767 
P
LPI
transmitter
LPI
receiver
Intercept
receiver
GT
GIT
R,L
RI,LI
GR
GIR
(T)
(TI)
P
LPI
transmitter
LPI
receiver
Intercept
receiver
GT
GIT
R,L
RI,LI
GR
GIR
(T)
(TI)
 
 
Figure 11.1-1 Communications and the intercept links. 
 
 
The transmitter sends the signal to the receiver with transmitted power P, and with transmit gain GT, 
along a path of range R, which corresponds to a path loss L. The friendly receiver, with antenna gain GR, 
having a noise figure of T, receives the signal with path loss R. In addition to the friendly receiver, there is an 
intercept receiver used by an unauthorized user, whose job it is to detect enemy transmissions. Its noise 
temperature is assumed to be TI , it suffers a path loss of RI, and the transmit gain in the intercept direction is 
GIT along a path loss of LI . The intercept receiver has antenna gain GIR in the direction of the transmitter.  
Sometimes the figure of merit or quality factor (QF), defined as the ratio of the maximum range to 
the communication receiver to the maximum range to the unauthorized user, is used as a measure of LPI 
effectiveness. The factors that affect that range ratio include the type of terrain, the relative antenna gain from 
the transmitter to the receiver, the gain from the transmitter to the interceptor, the relative noise figures of the 
communication receiver and the interceptor receiver, relative atmospheric losses, communication and 
interceptor antenna gains, the communication and spread spectrum modulation type, and the interceptor type. 
 
The friendly receiver receives a signal power of PR watts given by 
 
 
T
R
R
G PG
P
L
=
 
(11.1-1) 
 
where the antenna gains are for the path between the transmitter and the desired receiver, and the range loss 
to the friendly receiver is L. The received power at the intercept receiver is similarly given by 
 
 
IT
IR
I
I
G PG
P
L
=
 
(11.1-2) 
 
It is to be noted that GIT and GT may not be the same, as the transmitter may have higher gain in the direction 
of the intended receiver than to the intercept (unintended) receiver. Furthermore the intercept receiver 
antenna gain may be much higher if it can be pointed, so that GR and GIR may not be the same either. If we 
assume that the path loss is from free space propagation we can write the received power at the intended 
receiver as 
 

 768                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
2
T
R
R
G PG
P
KR
=
 
(11.1-3) 
 
and at the intercept receiver, as 
 
 
2
IT
IR
I
I
G PG
P
KR
=
 
(11.1-4) 
 
and K is a proportionality constant. The one-sided noise spectral density is related to the noise temperature T 
(kT) at the LPI receiver, and TI at the intercept receiver. The ratio of received power to one-sided noise power 
spectral density is, for the friendly receiver, given by P/(kT). In a similar manner the equivalent ratio for the 
intercept receiver is given by PI/(kTI) The ratio of received power to one-sided noise spectral densities is 
given by  
 
 
2
2
2
2
/(
)
/(
)
T
R
I
I
T
R
I
I
I
I
IT
IR
IT
IR
G PG
KR
T
G G R T
P
kT
P
kT
KR
G PG
T
G G R T
⎛
⎞⎛
⎞⎛
⎞
=
=
⎜
⎟⎜
⎟⎜
⎟
⎝
⎠
⎝
⎠⎝
⎠
 
(11.1-5) 
 
Solving for the ratio of the ranges from the left- and right-hand sides of (11.1-5) yields the quality factor for 
free space 
 
 
(
)
(
)
0
0
/
/
I
I
T
R
I
IT
IR
P
N
T G G
R
QF
R
P N
TG G
=
=
 
(11.1-6) 
 
where P/N0 is proportional to P/T for both the desired signal and the intercept signal. Thus we see the quality 
factor improves when the transmit and receive gains increase for the friendly receiver and decrease when the 
transmit gain in the direction of the intercept receiver increases and the intercept gain increases. Also, if the 
desired receiver has a lower P/N0 threshold than the intercept receiver (PI/N0) threshold, the quality factor 
increases also. 
 
 
11.1.3 Brief Signal Propagation Summary 
 
In order to determine the range that an interceptor can detect the communication signal, it is useful to have a 
model of the path loss for air-to-ground and ground-to-ground propagation. A few will be summarized here; 
additional results are presented in Chapter 10. The path loss for free space propagation is given by  
 
 
32.4
20log(
)
20log(
)
p
MHz
km
L
f
d
=
+
+
 
(11.1-7) 
 
where Lp is the path loss in dB, the frequency, fMHz, is in megahertz, and the distance, dkm, is in kilometers.  
For ground-to-ground propagation, when the antenna heights are 10 or more meters, and for 
frequencies above 40 MHz, one has the median path loss equation in dB from Palmer and Egli [2, 3]: 
 
 
50
85.9
20log(
)
40log(
)
20log( )
20log(
) 
MHz
km
t
r
L
f
d
h
h
=
+
+
−
−
 
(11.1-8) 
 
where ht and hr are, respectively, the transmit height in meters and the receive height in meters.  
For ground-to-ground propagation [3], when the antenna heights are less than 10 meters, and above 
40 MHz, one has the median path loss equation in dB 
 
 

 
                                             Low Probability of Detection Systems 
 
 
           769 
 
50
76.3
20log(
)
40log(
)
20log( ) 10log(
) 
MHz
km
t
r
L
f
d
h
h
=
+
+
−
−
 
(11.1-9) 
 
The Hata-Okumura model [4–6] an empirical model for losses between base station and mobile 
user, is based on the work of the two aforementioned authors. For urban areas the mean path loss, denoted by 
L50, is given in dB by 
 
      
50
69.55
26.16 log(
) 13.82log( )
(
)
(44.9
6.55log
) log(
)
MHz
t
r
t
km
L
f
h
a h
h
d
=
+
×
−
−
+
−
×
 
(11.1-10) 
 
where the parameters a(hr) will be defined shortly, and the other parameters must satisfy 150 ≤ fMHz ≤ 1,500 
MHz, 30 ≤ ht ≤ 200m, 1 ≤ hr ≤ 10m, 1≤ dkm ≤ 20 km. The parameter a(hr) is prescribed for the 
following cases: 
(1) For a small or medium-sized city: 
 
 
(
)
(1.1 log(
)
0.7)
(1.56 log(
)
0.8)  dB
r
MHz
r
MHz
a h
f
h
f
=
×
−
−
×
−
 
(11.1-11) 
 
(2) For a large city: 
 
2
(
)
8.29(log(1.54
))
1.1  
,   f
200 MHz
r
r
MHz
a h
h
dB
=
×
−
<
 
(11.1-12) 
             or 
 
2
(
)
3.2 (log(11.75
))
4.97  
,   
400 MHz
r
r
MHz
a h
h
dB
f
=
×
×
−
>
 
(11.1-13) 
 
(3) For suburban areas: 
 
 
2
50
50(
)
2 (log
5.4    dB
28
MHz
f
L
L
urban
⎡
⎤
⎛
⎞
=
−
−
⎢
⎥
⎜
⎟
⎝
⎠
⎢
⎥
⎣
⎦
 
(11.1-14) 
(4) For open areas: 
 
 
2
50
50(
)
4.78 (log(
))
18.33 log(
)
40.94  dB
MHz
MHz
L
L
urban
f
f
=
−
×
+
×
−
 
(11.1-15) 
 
Clearly in all the ground-to-ground path loss equations, the assumption is made that line-of-sight 
transmission is physically possible, that is the path distance is not so great that line of sight is obstructed by 
the Earth’s curvature and is therefore not geometrically possible. It is also clear that transmitting the LPI 
signal close to the ground will minimize the chance of being detected, but it will also increase the path loss of 
the signal received by the intended receiver as well. 
 
It should be noted that there are various other models for ground-to-ground propagation, most of 
which have close to fourth power dependence on range.  
 
Example 1 Consider an example that illustrates the difference between free space path loss and path loss in 
ground-to-ground propagation. Let the distance between the transmitter and the receiver be 20 km in free 
space and the frequency of transmission be 250 MHz. Let the transmitter height be 20m, and the receiver 
height be 10m. (1) Assume that the propagation is free space. Evaluation produces the result that the free 
space loss is 106.4 dB. (2) Assume ground-to-ground propagation. Using (11.1-2), it is determined that the 
path loss is 139.8, about 33 dB larger than the free space case! Other propagation conditions could lead to 
even greater path loss. 
 
 
11.2 AN INTRODUCTION TO RADIOMETRIC DETECTORS 
 
In this section some different types of radiometric detectors will be analyzed to determine their performance. 
This is the second class of LPI devices indicated in Table 11.0-1. A significant portion of the material to 
follow in this chapter is based on the unclassified sections of a report by Betz and Rifkin [7]. 

 770                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
11.2.1 The Radiometer 
Equation Section (Next) 
In this section an idealized radiometer is treated. Consider Figure 11.2-1 as the model of the radiometer that 
is considered here. The signal plus noise is passed through a bandpass filter (BPF), which is square law 
detected and integrated for T seconds and compared to a threshold (derived from the noise process) that is 
designed to operate on background noise primarily.  
 
(.)
2
0
(.)
T
dt 
∫
Compare 
to 
threshold
Th
Ideal
BPF
(W)
Threshold
estimator
Declare
detection
(.)
2
(.)
2
0
(.)
T
dt 
∫
Compare 
to 
threshold
Th
Ideal
BPF
(W)
Threshold
estimator
Declare
detection
 
 
Figure 11.2-1 The classic radiometer. 
 
The radiometer can be shown to be the optimum structure for detecting a signal that is a Gaussian 
random process and is immersed in a white Gaussian noise background, in which the power spectral density 
of the signal is small, compared to the thermal noise [8, 9]. This optimum radiometer has a bandpass filter 
that is matched to the signal bandwidth [8]. The radiometer considered here does not have a matched filter at 
the input, since it is assumed that the signal to be detected is unknown in spectral shape. The effect of the 
threshold estimator is not included in this analysis, but is covered in Section 11.2.2.  
 
The input filter is assumed to be an ideal bandpass filter having positive frequency bandwidth of W 
Hz, which is, by intent, equal to the signal bandwidth. In reality a multipole filter is often used, so the ideal 
filter assumption provides a simplification in the analysis. The output of the filter feeds the square law 
detector that feeds the T second integrator. This is the classic integrate-and-dump radiometer. In the analysis 
it will be assumed that the signal exists for T seconds and that the radiometer is synchronized in time with the 
signal at the receiver. This assumption leads to the best possible performance one can hope for, since in 
reality the timing will not be known in advance (even the bandwidth may not be known in advance). The 
threshold detector compares the integrator output with a threshold and makes a decision on whether the 
signal is present. The received signal plus noise is modeled by  
 
 
0
0
0
0
( )
2
( )cos
2 ( )sin
2
( )cos
2
( )sin
 
c
s
c
s
y t
s t
t
s t
t
n t
t
n t
t
ω
ω
ω
ω
=
−
+
+
 
(11.2-1) 
 
where the first two terms comprise the signal, which is expressed in its quadrature components and is 
assumed to have signal energy E. The third and fourth terms compose the band-limited white Gaussian 
receiver noise process, expressed in its in-phase and quadrature components, and each baseband noise term 
has two-sided spectral density of N0/2. It is assumed that essentially all the power of the signal is passed 
through the ideal bandpass filter. Since this problem has been treated in Section 6.5 in a slightly less general 
form, we will utilize the results for the detection and false alarm probabilities derived there for the specific 
case of a BPSK signal. It can be shown [10, 11] that the result holds for all well-behaved signals that can be 
expressed in the form of the first two terms of (11.2-1) and have finite energy. From Section 6.5.4 the false 
alarm and detection probabilities are given by 
 
 
 1
2
1
2
(
)
z
M
FA
M
P
z
e
dz
M
δ
−
∞
−
=
Γ
∫
 
(11.2-2) 
 
and 
 

 
                                             Low Probability of Detection Systems 
 
 
           771 
 
 1
 
2
2
 1
1
( 2
)
2
2
M
z
R
D
M
z
P
e
e
I
Rz dz
R
δ
−
−
∞
−
−
⎛
⎞
=
⎜
⎟
⎝
⎠
∫
 
(11.2-3) 
 
where M is equal to WT, which denotes the closest integer to the product WT, R = E/N0, and   is the 
normalized threshold,   = (Th/ 2), with  2 the variance of a noise sample of the output of the BPF. The 
integrand of (11.2-2) is called the (central) chi-squared probability density function with 2M degrees of 
freedom. The integrand of the detection probability in (11.2-3) is called the noncentral, chi-squared 
probability density function with 2M degrees of freedom [11].  
In Problem 1 it is shown that PD can be written in terms of the generalized Marcum Q function of 
the form 
 
 
( 2 ,
) 
D
M
P
Q
R
δ
=
 
(11.2-4) 
 
where the generalized Marcum Q function is defined by 
 
 
2
2
 1
 
 
2
2
 1
( , )
(
)
 
M
x
a
M
M
b
x
Q
a b
x
e
e
I
ax dx
a
−
−
−
∞
−
⎛
⎞
=
⎜
⎟
⎝
⎠
∫
 
(11.2-5) 
 
It should be pointed out that the false alarm rate, which is often specified along with the probability of 
detection, is just the false alarm probability divided by the time period (T) between decisions, so that 
 
 
/
 
FA
FAR
P
T
=
 
(11.2-6) 
 
 
Note that both equations can be evaluated with the use of a commercial software package since the 
equations are written in a normalized form.2 Only the parameters M, R,   need be specified in order to 
evaluate the two probabilities. Before we discuss the limitations of these performance equations for the 
radiometer, let us consider a Gaussian approximation for these results. When the parameter M becomes large, 
the output density functions tend to Gaussian random variables. Thus, following Section 6.5.5, one has the 
result 
 
1
2
D
WT SNR
P
Q
SNR
β
⎡
⎤
−
=
⎢
⎥
+
⎣
⎦
 
(11.2-7) 
 
and 
 
 
( )
FA
P
Q β
=
 
(11.2-8) 
 
where  
 
0
0
hT
N WT
N
WT
β
⎛
⎞
−
= ⎜
⎟
⎜
⎟
⎝
⎠
 
(11.2-9) 
 
and where the Q(x) function is defined by 
 
 
2
1
( )
exp
 
 
2
2
x
t
Q x
dt
π
∞
⎛
⎞
=
−
⎜
⎟
⎝
⎠
∫
 
(11.2-10) 
 
                                                          
2 Actually evaluating PD is best done with a series expansion; see Chapter 6, Section 6.5.11, for an example. 

 772                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
and the SNR is the signal power (P) divided by the noise power (N0W); that is,  
 
 
0
SNR
 
P
N W
=
 
(11.2-11) 
 
This result applies as a reasonable approximation to all well-behaved signals having power P, 
including QPSK and MSK. This Gaussian probability calculation, in normalized form, is very simple to use, 
since choosing a false alarm probability implies  , which then allows the evaluation of the detection 
probability, when the SNR is known. Alternatively, if one knows the desired value of the detection 
probability then the argument of the Q function of (11.2-7) is known and the SNR can be solved to achieve 
the desired detection probability. It should be noted that if the signal to be detected and the radiometer have a 
nonnegligible filtering loss due to the bandpass filter having bandwidth W, then the SNR should be modified 
to 
 
 
0
SNR
 
P
N W
α
=
 
(11.2-12) 
 
where   is the filtering loss, due to the effect of the ideal bandpass filter on the signal. If S(f) is the one sided 
signal power spectral density centered at f0, then 
 
 
0
0
/ 2
/ 2
( )
 
f
B
f
B
P
S f df
α
+
−
= ∫
 
(11.2-13) 
 
 
Problem 2 shows that under the constraint the pulse energy and the probability of false alarm are 
fixed, the pulse type that minimizes the probability of detection, from the transmitter’s point of view, is to 
send a very low-power, long duration pulse, rather than a high-power, short pulse. This conclusion is based 
on the assumption that the radiometer has a large WT product and that the radiometer is synchronized with 
the pulsed signal and the pulse energy is held constant.  
 
Example 2 Determine the minimum (synchronous) integration time needed to detect a signal that has power 
level of –160 dBW through an omni antenna (0-dB gain), assuming that the Gaussian approximation is 
adequate. Assume that the noise level is –200 dBW/Hz and the bandwidth of the signal is 10 MHz. Set the 
integration time to achieve a PD = 0.95 and PFA =10–2. By evaluating (11.2-8) and (11.2-7), it can be shown 
that 1.575 seconds are needed to achieve the desired PD and PFA. The corresponding value of   is 2.32. The 
actual threshold (Th) can be found from (11.2-9) and knowing W, T N0, and  .  
 
 
11.2.2 Limitations of the Radiometer Performance Results  
 
There are a number of limitations in this analysis that need to be pointed out. First, for sensitive radiometers 
the background temperature variation and interfering signals limit the performance of the radiometer. The 
reason for this is the fact that the threshold of the radiometer must be derived from the receiver noise process 
without the signal present. It follows that the threshold is a statistical quantity, and therefore has some 
variation to it, and depends upon whether the input is noise only or has other additional interference signals 
in addition to the thermal noise.  
 
If the threshold estimator is heavily filtered then it cannot respond to noise temperature and 
interference signal variations that are faster than the threshold estimator filter response. If on the other hand, 
the threshold estimator filter is not very narrowband (to give it a faster response) it will have a larger output 
variation on it, which will also change the detection and false alarm probabilities quite dramatically. Antenna 
background temperature in the tactical environment depends on a number of factors, including elevation 
angle, azimuth angle, temporal variation, and location of the detector. All these factors can influence the 

 
                                             Low Probability of Detection Systems 
 
 
           773 
threshold setting. It is to be noted that background interference comes from all types of signals including 
television, radio, radio relay links, microwave links, multipath, and so on.  
 
Now let us quantify the sensitivity to the radiometer threshold variation. This formulation follows 
Sonnenschein and Fishman [12].  
 
From (11.2-7) and (11.2-8) one can write the detection probability as 
 
 
(
)
1
0
 
SNR
    , SNR=
 
1+2SNR
FA
D
Q
P
WT
P
P
Q
N W
−
⎡
⎤
−
=
⎢
⎥
⎢
⎥
⎣
⎦
 
(11.2-14) 
 
where P is the signal power and N0 is the one-sided noise spectral density, with B the positive frequency 
noise bandwidth. Solving for the SNR from (11.2-14) produces 
 
 
2
SNR
2
 
B
A
A
A
WT
WT B
WT
WT
⎡
⎤
=
+
−
+
+
⎢
⎥
⎣
⎦
 
(11.2-15) 
 
where the parameters A and B are given by 
 
 
1
1
(
)     and    
(
) 
D
FA
A
Q
P
B= Q
P
−
−
=
 
(11.2-16) 
 
When WT is large, (11.2-15) can be approximated by  
 
 
1
1
(
)
(
)
SNR
 
FA
D
Q
P
Q
P
WT
−
−
−
≅
 
(11.2-17) 
 
Thus one can compute the required SNR needed to obtain the required PD and PFA from either (11.2-15) or 
(11.2-17), depending on whether or not WT is large. 
 
From (11.2-8) and (11.2-9) the ideal interceptor threshold value for PFA0 is 
 
 
1
0
0
0
(
)  
h
FA
T
N
TW
TWQ
P
−
⎡
⎤
=
+
⎣
⎦ 
(11.2-18) 
 
Hence the interceptor’s actual threshold would be given by 
 
 
1
0
0
0
ˆ
ˆ
(
)  
h
FA
T
N
TW
TWQ
P
−
⎡
⎤
=
+
⎣
⎦ 
(11.2-19) 
 
where 
0ˆN  is the estimate of the one-sided noise spectral density. 
 
Now, since the threshold must be determined from the input noise process, it will be proportional to 
N0, at the output of the detector. Since this estimate will not be perfect, it will be modeled by 
0ˆN , and will be 
assumed to satisfy the following constraints 
 
 
(
)
(
)
1
0
0
2
0
ˆ
 1
 
1
 
 
N
N
N
ε
ε
−
≤
≤
+
 
(11.2-20) 
 
where N0 is the actual value and the parameters  1 and  2 satisfy  
 
 
1
2
0
1     and    
0 
ε
ε
≤
<
≥
 
(11.2-21) 
 
Since the threshold is proportional to 
0
N  it follows that 

 774                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
 
1
2
0
ˆ
(1
)
(1
) 
h
h
T
T
ε
ε
−
≤
≤
+
 
(11.2-22) 
 
where ˆ  
hT
 is the estimate of the threshold (
0
hT
) for the ideal case (which occurs when 
0
0
ˆN
N
=
). If the 
threshold estimate satisfies the left-hand side of (11.2-22) with equality, then the observed PFA will be greater 
than the desired value, in the ideal case. Thus, the threshold estimate will have to be increased by the factor 
1/(1- 1) to obtain the correct PFA. If, on the other hand, the noise level satisfies the right-hand side of 
(11.2-20) with equality then the threshold must be increased by the factor (1+ 2) to ensure the achievement 
of the desired PFA. It is concluded that the worst-case threshold must satisfy the relationship 
 
 
(
)
T
U T
h
wc
h  
(11.2-23) 
 
where U is the peak-to-peak uncertainty defined as 
 
 
2
1
1
 
1
 
U
ε
ε
+
=
−
 
(11.2-24) 
 
 
If we define the SNR needed to achieve a PD > PD0 and PFA < PFA0, over the entire range 
uncertainty of U, using (11.2-23) and (11.2-18), and 
 
 
0
0
(1 SNR)
(1
2SNR)
h
D
UT
N WT
P
Q
N
WT
⎡
⎤
−
+
=
⎢
⎥
+
⎢
⎥
⎣
⎦
 
(11.2-25) 
 
leads to the solution for SNR as 
 
 
2
SNR
(
1)
(
)
(2
1)
2
 
B
A
U
U
A
A
U
WT
WT B
WT
WT
⎡
⎤
=
−
+
+
−
+
−
+
⎢
⎥
⎣
⎦
 
(11.2-26) 
 
If the estimate is perfect (U = 1) then (11.2-26) degenerates to (11.2-15). When WT >> 1 (11.2-26) becomes 
 
 
2
1
SNR
(
1)
 
UB
A
U
U
WT
−
−
≅
−
+
 
(11.2-27) 
 
Note that for large WT the minimum value of the SNR satisfies 
 
 
(
)min
SNR
 1 
U
≅
−
 
(11.2-28) 
 
The parameter (SNR)min is the minimum value of SNR that is needed to overcome the threshold 
level uncertainty irrespective of the detector parameters, PD and PFA, and the integration time T. This 
situation is in direct contrast to the ideal case where a longer integration time yields a lower required SNR! 
Equation (11.2-26) is plotted in Figure 11.2-2 with PFA=1–PD = 0.01 and in Figure 11.2-3 with  
PFA= 1–PD =10–6.  
The plot is for the SNR required versus the WT product parameterized by the parameter U, 
expressed in dB. At the larger values of WT the two figures do not differ much. However at smaller values of 
WT the respective curves differ by about 5 dB. Notice that as the peak-to-peak uncertainty increases, the 

 
                                             Low Probability of Detection Systems 
 
 
           775 
minimum SNR increases. From (11.2-28) it is clear that when U is 3 dB, U–1 is equal to 0 dB as the value of 
the minimum value of the SNR, and is shown in both figures. 
 
10
100
1  103
1  104
1  105
1  106
1  107
30
20
10
0
10
WT
SNR Required (dB)
0 dB
0.05 dB
0.25 dB
1 dB
3 dB
U
PFA=1-PD=0.01
PFA=1-PD= 0.01
SNR required (dB)
10
100
1  103
1  104
1  105
1  106
1  107
30
20
10
0
10
WT
SNR Required (dB)
0 dB
0.05 dB
0.25 dB
1 dB
3 dB
U
PFA=1-PD=0.01
PFA=1-PD= 0.01
0 dB
0.05 dB
0.25 dB
1 dB
3 dB
U
PFA=1-PD=0.01
PFA=1-PD= 0.01
SNR required (dB)
 
 
Figure 11.2-2 SNR required for a radiometer for various values of U (dB) versus WT. 
 
 
PFA=1- PD=10-6
0 dB
0.05 dB
0.25 dB
1 dB
3 dB
U
10
100
1  103
1  104
1  105
1  106
1  107
30
20
10
0
10
WT
SNR Required (dB)
SNR required (dB)
PFA=1- PD=10-6
0 dB
0.05 dB
0.25 dB
1 dB
3 dB
U
10
100
1  103
1  104
1  105
1  106
1  107
30
20
10
0
10
WT
SNR Required (dB)
PFA=1- PD=10-6
0 dB
0.05 dB
0.25 dB
1 dB
3 dB
U
10
100
1  103
1  104
1  105
1  106
1  107
30
20
10
0
10
WT
SNR Required (dB)
SNR required (dB)
 
 
Figure 11.2-3 SNR required for a radiometer for various values of U (dB) versus WT. 
 
 
11.2.3 Low-Pass Filter Radiometer  
 
Another type of radiometer [13], which does not require an integrate-and-dump filter, is the low-pass filter 
radiometer (LPFR). Timing of the integrator is not required in this radiometer. This radiometer is similar to 
the standard radiometer, except that the integrator is replaced by a one-pole RC low-pass filter, with time 
constant   = RC. Figure 11.2-4 illustrates the LPFR.  
 

 776                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
(.)
2
Compare 
to 
threshold
Th
Ideal
BPF
(W)
Threshold
estimator
Declare
detection
R
C
Input
(.)
2
(.)
2
(.)
2
Compare 
to 
threshold
Th
Ideal
BPF
(W)
Threshold
estimator
Declare
detection
R
C
Input
 
 
Figure 11.2-4 The low-pass filter radiometer. 
 
 
The signal out of the bandpass filter is modeled as a tone of duration T seconds, plus band-limited 
white Gaussian noise to yield the input process y(t) to the radiometer, where y(t) is given by 
 
 
0
0
0
( )
2
sin(
)
2
( )cos(
)
2
( )sin(
) 
c
s
y t
P
t
n t
t
n t
t
ω
θ
ω
ω
=
+
+
+
 
(11.2-29) 
 
where P is the power of the signal,  0 is the angular frequency, and   is the random phase, assumed to be 
random over 0 to 2 . The two-sided noise power spectral density of the input white noise process is assumed 
to be N0/2. It can be easily be shown that the two-sided noise spectral density of the two quadrature noise 
terms (nc(t) and ns(t)) is N0/2 also. In Problem 3 it is shown that the probability of detection can be 
approximated by 
 
/
2
 SNR 1
1
2SNR
T
D
B
e
P
Q
τ
β
τ
−
⎛
⎞
⎡
⎤
−
−
⎣
⎦
⎜
⎟
=
⎜
⎟
+
⎝
⎠
 
(11.2-30) 
 
when T/   is large and where   is the effective threshold, as indicated next. The parameter SNR is the input 
signal-to-noise ratio and is given by 
 
 
0
SNR
 
P
N W
=
 
(11.2-31) 
 
and the false alarm probability is given by 
 
 
( )
FA
P
Q β
=
 
(11.2-32) 
 
The parameter   is given by 
 
 
0
2
0
1
2
N W
N W
δ
β
τ
−
=
⎛
⎞
⎜
⎟
⎝
⎠
 
(11.2-33) 
 
In order to compare the detection performance with the ordinary (integrate-and-dump) radiometer at 
low SNR, it can be seen that the effective ratio of input SNRs (at low input SNR) satisfies 
 
 
/
int
SNR
2
1
 
SNR
T
RC
L
e
T
τ
τ
−
⎡
⎤
=
=
−
⎣
⎦ 
(11.2-34) 
 

 
                                             Low Probability of Detection Systems 
 
 
           777 
It can be shown by direct evaluation that L is maximum when  /T = 0.795. The value of L at this optimum 
ratio is 0.9. Thus, L is reduced by 10×log(0.9) = 0.5 dB. It is concluded that the LPFR is about 0.5 dB (input 
SNR) worse in performance than the integrate-and-dump detector, but does not require timing information! 
The results presented here also apply to constant envelope modulated signals as long as the spectra are 
constrained by the bandpass filter of bandwidth W. For the optimized case, the probability of detection can be 
written 
 
0.9
SNR
1
2SNR
D
WT
P
Q β
⎡
⎤
−
=
⎢
⎥
+
⎣
⎦
 
(11.2-35) 
 
When modulation is present, SNR should be replaced by  SNR as discussed in the text adjacent to (11.2-13). 
 
 
11.2.4 The Correlation Radiometer 
 
Another type of radiometer device is the correlation radiometer [14] and is shown in Figure 11.2-5. The 
analysis approach in this section differs from that in [14]. The basic idea of the device is based on the fact 
that the signal is highly correlated and the noise of each channel, when due to receiver noise, is uncorrelated. 
Therefore the device should perform better than the radiometer. However common noise such as a “hot spot” 
seen by the antennas would be correlated and appear to be a signal. Another concern with this type of device 
is the fact that if the signal is received from off-bore sight the phase difference of the received signal could 
cause a loss in detection capability, since there would be a phase shift between the signals. If the phase 
difference is 90º and the signal is BPSK, the signal would be totally suppressed. 
 
Threshold
estimator
Declare
detection
Ideal
BPF
(W)
0
(.)
 
T
dt
∫
Compare 
to 
threshold
Th
+
LPF
z(t)
Ideal
BPF
(W)
y1(t)
y2(t)
Threshold
estimator
Declare
detection
Ideal
BPF
(W)
0
(.)
 
T
dt
∫
Compare 
to 
threshold
Th
+
LPF
z(t)
Ideal
BPF
(W)
y1(t)
y2(t)
 
 
Figure 11.2-5 The correlation radiometer. 
 
 
One solution is to place the two antennas as close together as possible and to use relatively high 
gains so that signals detected in the sidelobes would be very weak. Then, only the main beam signals would 
tend to be detected. 
 
Let the two inputs be represented as  
 

 778                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
1
0
1
2
0
2
( )
 2
sin(
)
 
( ) 
( )
 2
sin(
)
 
( )
y t
P
t
n t
y t
P
t
n t
ω
ω
=
+
=
+
 
(11.2-36) 
 
where P is the signal power, T is the integration time, and n1(t) and n2(t) are the two statistically independent 
noise processes, originating from the two receiver front ends. It will be assumed that WT is large so that the 
Gaussian assumption for the output of the integrate-and-dump filter can be assumed. The noise terms can be 
written in their quadrature band-limited form 
 
 
1
1
0
1
0
( )
 2
( )cos(
)
2
( )sin(
) 
c
s
n t
n
t
t
n
t
t
ω
ω
=
+
 
(11.2-37) 
 
 
2
2
0
2
0
( )
 2
( )cos(
)
2
( )sin(
) 
c
s
n t
n
t
t
n
t
t
ω
ω
=
+
 
(11.2-38) 
 
where it is assumed that the two noise processes are statistically independent of each other. The product of 
y1(t) and y2(t), after filtering the 2 0 terms, is given by (call it z(t)) 
 
                
1
2
1
2
1
2
1
2
( )
( )
( )
( )
( )
( )
( )
( )
( ) 
s
s
c
c
s
s
LPF
z t
y t y t
P
Pn
t
Pn
t
n
t n
t
n
t n
t
=
=
+
+
+
+
 
(11.2-39) 
 
The mean output is given by 
 
{
}
1
2
E
( )
( )
 
LPF
y t y t
P
=
 
(11.2-40) 
 
since the two noise terms are uncorrelated. To obtain the variance of the output we determine the 
autocorrelation function of the output process of the filtered product 
 
 
( )
1
2
1
2
1
2
( )
( )
( )
( )
( )
( ) 
s
s
c
c
s
s
z
n
n
n
n
n
n
R
PR
PR
R
R
R
R
τ
τ
τ
τ
τ
τ
τ
=
+
+
+
 
(11.2-41) 
 
Since all the noise terms are statistically independent and of equal power, (11.2-41) simplifies to 
 
 
1
1
2
( )
2
( )
2
( ) 
s
c
z
n
n
R
PR
R
τ
τ
τ
=
+
 
(11.2-42) 
 
It is assumed that the input bandwidth signal duration time (WT) is large, and the spectral density is 
nearly constant over the integrate-and-dump bandwidth, it is sufficient to determine the spectral density at  
f = 0, thus 
 
2
4
0
0
(0)
2
( )
2
( )
 
2
2
LPF
N
N
S
P
d
H
f
df
δ τ
τ
∞
∞
−∞
−∞
⎛
⎞
+
⎜
⎟
⎝
⎠
∫
∫
=
 
(11.2-43) 
 
where HLPF(f) is the low-pass filter equivalent of the ideal bandpass filter (i.e., 
( )
1 ,  
2
LPF
W
H
f
f
=
≤
) and 
zero otherwise). Evaluating the power spectral density at f = 0 produces 
 
 
2
0
0
(0)
 
2
N W
S
PN
=
+
 
(11.2-44) 
 
Using Parseval’s theorem, it follows that the variance of the output variable is given by integral of the 
spectral density and the transfer function of an integrate-and-dump filter; thus 
 

 
                                             Low Probability of Detection Systems 
 
 
           779 
 
2
2
2 sin(
)
(0)
 
z
fT
S
T
df
fT
π
σ
π
∞
−∞
⎡
⎤
=
⎢
⎥
⎣
⎦
∫
 
(11.2-45) 
 
Evaluating this, one obtains 
 
 
2
2
2
2
0
0
0 ,   
2
2
z
N
N WT
N WT
PN T
σ
σ
=
+
=
 
(11.2-46) 
 
Hence, when the signal is not present, P = 0 in (11.2-40), so that the probability of false alarm and detection 
are given by 
 
 
(
)
2
2
2
2
2
2
1
 
2
1
2
N
Z
Z
u
FA
N
u
D
Z
P
e
du
P
e
du
σ
δ
μ
σ
δ
πσ
πσ
−
∞
−
−
∞
=
=
∫
∫
 
(11.2-47) 
 
Evaluating one obtains 
 
 
( )
2
0
  and   =
 
2
FA
P
Q
N WT
δ
β
β
=
 
(11.2-48) 
 
where   is a normalized threshold,   is the unnormalized threshold, and the denominator is the standard 
deviation of the noise when the signal is absent ( N). The detection probability is given by 
 
 
2SNR
1
2SNR
D
WT
P
Q β
⎡
⎤
−
=
⎢
⎥
+
⎣
⎦
 
(11.2-49) 
 
with SNR (SNR = P/(N0W) the input signal-to-noise ratio, and   a constant that determines the false alarm 
probability. Notice that at low input SNRs (where these devices are normally used) the effective input SNR is 
1.5 dB (10 log(
2 ) = 1.5 dB) higher when compared to the classic radiometer (11.2-7). 
 
 
11.2.5 Relationship of the Output SNR and the Deflection 
 
The output SNR, denoted by SNR0, can be defined as 
 
 
(
)
2
2
0
2
SNR
 
S
N
N
N
d
μ
μ
σ
+ −
≅
=
 
(11.2-50) 
 
where  S+N is the mean value of the output, under the hypothesis that the signal plus noise is present, and  N 
is the mean output value under the assumption that only the noise is present. The parameter d is also known 
as the deflection [15], and the square of d is the output SNR at low input SNR values. Consider the two cases: 
(1) when the signal plus noise are present and (2) when only the noise is present. Let the mean signal and 
variance for both cases be denoted by 
 

 780                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
2
2
+
   
 
Case 1: 
mean
    variance
Case 2:
mean =
variance
N
N
S N
S N
μ
σ
μ
σ
+
=
=
=
 
(11.2-51) 
 
If the threshold is  , then the false alarm can be written as (  is the unnormalized threshold) 
 
 
( )
N
FA
N
P
Q
Q
δ
μ
β
σ
⎛
⎞
−
=
=
⎜
⎟
⎝
⎠
 
(11.2-52) 
 
where 
 
2
2
1
( )
 
2
y
x
Q x
e
dy
π
−
∞
= ∫
 
(11.2-53) 
 
Now it is easy to show that the probability of detection is given by 
 
 
S N
D
S N
P
Q δ
μ
σ
+
+
⎛
⎞
−
=
⎜
⎟
⎝
⎠
 
(11.2-54) 
 
 
Now from (11.2-52) it follows that 
 
 
N
N
δ
βσ
μ
=
+
 
(11.2-55) 
 
Using (11.2-55) in (11.2-54) produces the result  
 
 
N
N
S
N
D
S N
P
Q βσ
μ
μ
σ
+
+
⎛
⎞
+
−
=
⎜
⎟
⎝
⎠
 
(11.2-56) 
 
Under the assumption that  S+N ≅  N , it is also true that 
N
S N
μ
μ +
<
 at low input SNR yields the result 
 
 
[
]
D
P
Q
d
β
=
−
 
(11.2-57) 
 
From (11.2-57) it follows that for a fixed   (fixed PFA) the larger the output SNR, the greater the value of PD. 
It also follows that the negative of the second term in the expression for PD is the square root of the output 
SNR at low input SNRs. This result applies to all radiometric type calculations in which the Gaussian 
assumption applies at low input SNRs. Note that for the correlation radiometer the output SNR is 3 dB better 
in output SNR than the classic (integrate-and-dump) radiometer, as is seen by comparing (11.2-49) and 
(11.2-7). It follows that it requires 1.5 dB less input SNR than the classic radiometer. This assumes that the 
phases are aligned perfectly. 
 
 
11.2.6 The Optimum Detector for Frequency-Hopped Waveforms 
 
The maximum-likelihood detection derivation of the optimum detector for frequency-hopped waveforms has 
been determined in [16, 17]. Figure 11.2-6 illustrates the optimum detector for the case that the hopping 

 
                                             Low Probability of Detection Systems 
 
 
           781 
frequency separation is equal to the modulation bandwidth. The parameter M is the number of hops that are 
observed. 
 
WH
( )2
0
 
H
T dt
∫
I0(.)
1/(N0WH)
...
...
Channel N
Channel 2
+
Π
i=1
M
>
< K
WH
( )2
0
 
H
T dt
∫
I0(.)
1/(N0WH)
WH
( )2
0
 
H
T dt
∫
I0(.)
1/(N0WH)
Channel 1
(. )
WH
( )2
0
 
H
T dt
∫
I0(.)
1/(N0WH)
......
......
Channel N
Channel 2
+
Π
i=1
M
>
<
>
< K
WH
( )2
0
 
H
T dt
∫
I0(.)
1/(N0WH)
WH
( )2
0
 
H
T dt
∫
I0(.)
1/(N0WH)
WH
( )2
0
 
H
T dt
∫
I0(.)
1/(N0WH)
Channel 1
(. )
 
 
Figure 11.2-6 Optimum FH radiometer detector. 
 
 
The optimum detector has a hop radiometer for each of the N hops in the hopping pattern. Each 
channel has a front-end radio frequency (RF) bandwidth WH Hz. The bandwidth and time are matched in the 
radiometer. The square root of each radiometer output is taken, weighted and scaled by the modified Bessel 
function of the first kind, and then added to the other N–1 channels for each hop. Then, on a hop-by-hop 
basis, the product is formed over each hop. At the end of the hops, for that detection period the result is 
compared to a threshold, K. The analysis is very difficult to accomplish except in the case when N is a large 
number (at least 100) when Gaussian statistics can be assumed [17].  
 
Woodring [17] has shown that the required P/N0 ratio needed, based on a Gaussian assumption, is 
given by  
 
(
)
2
1
(
/
)
0
0
1
1
2
M
H
reqd
W
P
I
N e
N
ρ
−
⎛
⎞
⎡
⎤
≅
+
−
⎜
⎟
⎣
⎦
⎝
⎠
 
(11.2-58) 
 
where 
1
0 ( )
I
x
−
 is the inverse modified Bessel function of the first kind evaluated at x, and  2 is given by 
 
 
2
1
1
(
)
(
)
FA
D
Q
P
Q
P
ρ
−
−
⎡
⎤
=
−
⎣
⎦ 
(11.2-59) 
 
and depends on the false alarm and detection probabilities desired. The Q function is defined by (11.2-10). A 
plot of I0(x) allows one to obtain the inverse function readily, and one is shown in Figure 11.2-7. 
 
 
11.2.7 The Filter Bank Combiner 
 
The filter bank combiner (FBC) [14, 16–18] is a radiometer that lends itself to detecting frequency-hopped 
signals and is shown in Figure 11.2-8. Again M is the number of hop intervals processed. 
 

 782                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
0
2
4
6
8
10
12
14
16
18
20
22
24
26
1
10
100
1  103
1  104
1  105
1  106
1  107
1  108
1  109
1  1010
1  1011
x
I0(x)
0
2
4
6
8
10
12
14
16
18
20
22
24
26
1
10
100
1  103
1  104
1  105
1  106
1  107
1  108
1  109
1  1010
1  1011
x
I0(x)
I0(x)
x
0
2
4
6
8
10
12
14
16
18
20
22
24
26
1
10
100
1  103
1  104
1  105
1  106
1  107
1  108
1  109
1  1010
1  1011
x
I0(x)
0
2
4
6
8
10
12
14
16
18
20
22
24
26
1
10
100
1  103
1  104
1  105
1  106
1  107
1  108
1  109
1  1010
1  1011
x
I0(x)
I0(x)
x
 
 
Figure 11.2-7 Plot of I0(x) versus x. 
 
 
BPF
WH
...
(.)2
(.)2
(.)2
0 (.) 
H
T
dt
∫
0 (.) 
H
T
dt
∫
0 (.) 
H
T
dt
∫
OR
(.)
i
M
=∑
1
Compare
to K
Detected ?
...
...
...
≥
?
Th
≥
?
Th
≥
?
Th
Channel 1
Channel 2
Channel N
BPF
WH
BPF
WH
BPF
WH
...
.....
(.)2
(.)2
(.)2
(.)2
(.)2
(.)2
0 (.) 
H
T
dt
∫
0 (.) 
H
T
dt
∫
0 (.) 
H
T
dt
∫
OR
(.)
i
M
=∑
1
Compare
to K
...
.....
...
.....
...
.....
≥
?
Th
≥
?
Th
≥
?
Th
BPF
WH
BPF
WH
y(t)
BPF
WH
...
(.)2
(.)2
(.)2
0 (.) 
H
T
dt
∫
0 (.) 
H
T
dt
∫
0 (.) 
H
T
dt
∫
OR
(.)
i
M
=∑
1
Compare
to K
Detected ?
...
...
...
≥
?
Th
≥
?
Th
≥
?
Th
Channel 1
Channel 2
Channel N
BPF
WH
BPF
WH
BPF
WH
...
.....
(.)2
(.)2
(.)2
(.)2
(.)2
(.)2
0 (.) 
H
T
dt
∫
0 (.) 
H
T
dt
∫
0 (.) 
H
T
dt
∫
OR
(.)
i
M
=∑
1
Compare
to K
...
.....
...
.....
...
.....
≥
?
Th
≥
?
Th
≥
?
Th
BPF
WH
BPF
WH
y(t)
 
 
Figure 11.2-8 The filter bank combiner radiometer (FBC). 
 
 
Dillard [19] calls a very similar detection system the binary moving window detector (BMWD). The 
main difference is the fact that the comparison is made after every hop and not at the end of the test period as 
in the FBC. Assume that there are N possible hop frequencies and M hops with the integration time set equal 
to the hop time, which is TH seconds. Thus the total message time is MTH. It is assumed that the bandpass 
filters are centered at each hop frequency and the filters do not overlap in frequency. Each filter is WH Hz 
wide. The total spread bandwidth is W Hz. Hence NWH =W. After the integration of TH seconds, the outputs 
of the integrators are compared to the thresholds, which are set at Th. 

 
                                             Low Probability of Detection Systems 
 
 
           783 
 
At each hop time a decision on each radiometer is made on whether the signal is present and those 
decisions are logically OR’d for each hop; and then the summation of the M hops are made and compared to 
an integer valued threshold which we denote as “K. ” The threshold on successful hops, K, is less than M in 
general. Note that there are two thresholds, the individual radiometer threshold and the threshold on the 
output of the summer of the “OR” function. It is to be noted that if several radiometer subsystem outputs 
cross their individual thresholds simultaneously, only a single “1” would be transferred to the accumulator 
for the final threshold crossing.  
 
The filter bank combiner radiometer is potentially effective against frequency-hopped signals with 
DPSK modulation or MFSK modulation in which the hops are spread apart by WH Hz and the modulation is 
about WH Hz wide. It would be necessary, in order to use this scheme, to know a priori the hop frequencies 
and the hopped bandwidth. It would also be necessary to know the hop times, which is very unlikely. In a 
more practical version either a low pass filter would have to replace the integrator (with some loss of 
performance) or a dual set of integrators offset in time by TH /2 seconds would have to be employed. The 
analysis to follow provides the best performance that this approach can hope to obtain. This FBC may also be 
effective against a narrowband direct sequence signal known to be about WH Hertz wide. 
 
To do the analysis we note that for adjacent ideal bandpass filters that do not overlap, the outputs are 
statistically independent. Now let PDI and PFAI denote the individual radiometer detection probabilities for 
one particular radiometer and for one hop. Then the probability of a false alarm during any one hop time is 
given by 
 
P
P
FAH
FAI
N
(
)  
(11.2-60) 
 
where PFAH is the probability of one or more false alarms, in one hop time, from the N different radiometers. 
This is the same probability as one minus the probability of no false alarms from the N radiometers. Similarly 
the probability of a correct detection is equal to 1 minus the probability of N–1 correct rejections (noise only 
present) times the probability of a missed detection. Thus 
 
 
1
1
(1
)
(1
) 
N
DH
FAI
DI
P
P
P
−
= −
−
−
 
(11.2-61) 
 
where PDI is the probability of a detection in the channel that the hopped signal appears.  
 
Assume that the decisions from hop to hop are statistically independent. The overall probability of 
false alarm for the message, after the M hops, is given by [16] 
 
 
(
) (1
)
 
M
i
N i
FA
FAH
FAH
i K
M
P
P
P
i
−
=
⎛
⎞
=
−
⎜
⎟
⎝
⎠
∑
 
(11.2-62) 
 
and the overall detection probability is given by [14] 
 
 
 
(
) (1
)
 
M
i
M i
D
DH
DH
i
K
M
P
P
P
i
−
=
⎛
⎞
=
−
⎜
⎟
⎝
⎠
∑
 
(11.2-63) 
 
In order to set the threshold on the individual radiometer threshold, note from (11.2-60), one has 
 
 
[
]
1
 1
 
 
N
FAH
FAI
FAI
P
P
NP
= −
−
≅
 
(11.2-64) 
 
for small values of PFAI. Then knowing the radiometer threshold one can evaluate the final false alarm 
probability from (11.2-62), when K is picked. Knowing the radiometer threshold allows the computation of 
PDI and the overall PD from (11.2-63). Reference [17] has compared the radiometer and the FBC and found 
that optimum detector and the filter bank combiner requires less C/N0 than the radiometer to achieve the 
same PD and PFA. 

 784                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
The individual values of PDI and PFAI can be determined from Section 11.2.4. 
 
 
SNR
1
2SNR
DI
WT
P
Q β
⎡
⎤
−
=
⎢
⎥
+
⎣
⎦
 
(11.2-65) 
 
and 
 
( )
FAI
P
Q β
=
 
(11.2-66) 
 
where  
 
0
0
hT
N WT
N
WT
β
⎛
⎞
−
= ⎜
⎟
⎜
⎟
⎝
⎠
 
(11.2-67) 
 
and the SNR is the signal power (P) divided by the noise power (N0W); that is, 
 
 
0
SNR
 
P
N W
=
 
(11.2-68) 
 
In conclusion the greater complexity of the FBC or the optimum detector offers better performance when the 
timing is known, however when timing is not known (as it normally is not) it is not clear there is an 
advantage when compared to the radiometer. Clearly the radiometer is not sensitive to the hop time; and is 
only sensitive to the burst transmission time, which is the advantage of the radiometer. 
 
 
11.3 SPECTRUM ANALYZERS 
Equation Section (Next) 
A spectrum analyzer is probably the simplest (and most readily available or constructed) device that an 
adversary can use to look for unexpected signals. Typically a portion of the received signal is processed by a 
discrete Fourier transform (DFT). Figure 11.3-1 illustrates the model for the spectrum analyzer considered 
here.  
 
Segment
in time
Magnitude
squared
power
estimate
Averaging
and
display
Detection
by
operator
Discrete
Fourier
transform
of each
section
(M sections)
BPF
(B)
90º
Center
Frequency
LPF
LPF
A/D
A/D
eI(t)
eQ(t)
Segment
in time
Magnitude
squared
power
estimate
Averaging
and
display
Detection
by
operator
Discrete
Fourier
transform
of each
section
(M sections)
BPF
(B)
90º
Center
Frequency
LPF
LPF
LPF
LPF
A/D
A/D
A/D
A/D
A/D
A/D
eI(t)
eQ(t)
 
 
Figure 11.3-1 The spectrum analyzer model. 
 
 
It is assumed that the bandpass filter is an ideal bandpass filter of bandwidth B Hz. The I and Q 
baseband components are formed by low-pass filters, which eliminate the 2 0 terms. The A/D converters 
sample the signal streams, which are then segmented in time before the DFTs are performed. From the DFTs, 
the magnitudes are formed for the N frequency bins, which are then averaged and displayed. 

 
                                             Low Probability of Detection Systems 
 
 
           785 
 
This section follows the approach of the work of Betz and Rifkin [7]. A total of NM samples of the 
filtered signal segment 
1
=0
{ ( )}
 
MN
k
x k
− is segmented into M sequences of N samples each. The samples are 
spaced apart by   t seconds, where   t = 1/B so that the noise samples are statistically independent (see the 
appendix in this chapter for more details on the statistical independence). Thus the total time span is NM  t 
seconds. The sequences are considered to consist of contiguous samples, without overlap. The j-th 
subsequence is denoted by 
 
 
-1
( +1)
1
=0
=
{
( )}
{ ( )}
 
N
j
N
j
m
k jN
x m
x k
−
=
 
(11.3-1) 
 
Taking the DFT of the j-th subsequence one obtains  
 
 
1
2
/
0
( )
( )
 
N
i
nk N
j
j
k
X
n
x k e
π
−
−
=
= ∑
 
(11.3-2) 
 
It will be assumed that the spectrum analyzer displays averaged power estimates of the form 
 
 
2
1
0
1
( )  
M
j
j
X
n
M
−
=∑
 
(11.3-3) 
 
for each frequency bin “n.” The frequency resolution of the spectrum analyzer is approximately 1/(N  t) = 
B/N, since the bins are separated by B/N Hz. Thus, if the averaging is done for each frequency bin “n,” then 
the test statistic is given by the set of N frequencies 
 
 
1
2
0
1
( )
M
j
j
X
n
M
−
=∑
 
(11.3-4) 
 
It will be assumed initially that the input signal is an unmodulated tone and additive white Gaussian noise, so 
that 
 
0
1
0
2
0
( )
2 cos[(
) ]
2
( )cos(
)
2
( )sin(
) 
y t
A
t
n t
t
n t
t
ω
ω
ω
θ
ω
θ
=
+ Δ
+
+
+
+
 
(11.3-5) 
 
 
The low-passed versions of the I and Q signals, along with the noise components for the tone, are 
given by 
 
1
2
( )
cos(
)
( )cos
( )sin  
I
LPF
e t
A
t
n t
n t
ω
θ
θ
=
Δ
+
+
 
(11.3-6) 
 
and 
 
1
2
( )
sin(
)
( )sin
( )cos  
Q
LPF
e
t
A
t
n t
n t
ω
θ
θ
= −
Δ
−
+
 
(11.3-7) 
 
Now the sum of the two noise terms in (11.3-6) and (11.3-7) can be shown equal to two 
uncorrelated noise terms with essentially the same statistics as either n1(t) or n2(t). Thus, the low-passed 
versions can be rewritten as  
 
 
( )
cos(
)
( ) 
I
I
LPF
e t
A
t
n t
ω
=
Δ
+
 
(11.3-8) 
 
and 
 
( )
sin(
)
( ) 
Q
Q
LPF
e
t
A
t
n
t
ω
= −
Δ
+
 
(11.3-9) 
 

 786                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
where 
( )
Q
n t  and nI(t) are statistically independent white Gaussian noise processes, each of which have zero 
means and power spectral densities of N0/2, and are independent from sample to sample (the autocorrelation 
function for each noise term in (11.3-5) is given by 2
0
( )cos(
)
cn
R
τ
ω τ . Since the spectrum analyzer is 
modeled with a human operator making detection decisions, there are no thresholds used in the determination 
of detection.  
 
 
11.3.1 Narrowband Signal Spectrum Analyzer Performance 
 
For the case of a unmodulated tone, the I-Q samples written as a complex number are given by 
 
 
(
)
( )
cos(
)
( )
sin(
)
( )  
j
k
I
k
k
Q
k
x k
A
t
n t
i
A
t
n
t
ω
ω
=
Δ
+
+
−
Δ
+
 
(11.3-10) 
 
From (11.3-2) and (11.3-10) the Xj(n) are seen to be complex Gaussian random variables with mean given by 
 
 
1
2
2
/
1
0
( )
 
k
N
i
ft
i
nk N
j
k
E X
n H
Ae
e
π
π
−
−
Δ
−
=
⎡
⎤=
⎣
⎦∑
 
(11.3-11) 
 
when the signal is present and by 
 
 
0
( )
0 
j
E X
n H
⎡
⎤=
⎣
⎦
 
(11.3-12) 
 
when the signal is not present. The condition H0 denotes the fact that the signal is absent and the condition H1 
denotes the fact that the signal is present. The variance of the complex random variable, under hypothesis H0, 
is given by 
 
 
(
)(
)
1
1
2
2
(
) /
0
0
0
( )
( )
( )
( )
( )
 
N
N
i
n k l
N
j
I
k
Q
k
I
l
Q
l
k
l
E
X
n
H
E
n t
in
t
n t
in
t
e
π
−
−
−
−
=
=
⎡
⎤
⎡
⎤=
−
+
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
∑∑
 
(11.3-13) 
 
Since the nI(t) and the nQ(t) are statistically independent, and since each sample of each process is 
statistically independent, one has under H0 
 
 
2
0
0
( )
 
j
E
X
n
H
NN B
⎡
⎤=
⎢
⎥
⎣
⎦
 
(11.3-14) 
 
where B is the bandwidth of the ideal bandpass filter preceding the spectrum analyzer. Thus Xj(n) is a 
Gaussian complex random variable with mean given by either (11.3-11) with signal present or is zero with 
the signal absent; the variance of the signal with the signal absent is given by NN0B. Two cases will be 
considered: (1) the narrowband case and (2) the wideband case.  
 
For signals that are narrowband, there have been limited experimental detection experiments for 
binary spectrograms. Webster [20] has determined that the minimum detectable narrowband signal for visual 
detection of a spectrogram produces an output SNR (the deflection) of approximately 0 dB per DFT when  
M = 100. The output SNR at the n-th frequency bin is defined by the deflection2 
 

 
                                             Low Probability of Detection Systems 
 
 
           787 
 
2
1
1
2
2
1
0
0
0
0
1
2
0
0
1
1
( )
( )
SNR ( )
 
1
( )
M
M
j
j
j
j
M
j
j
E
X
n
H
E
X
n
H
M
M
n
Var
X
n
H
M
−
−
=
=
−
=
⎧
⎫
⎛
⎞
⎛
⎞
⎪
⎪
−
⎨
⎬
⎜
⎟
⎜
⎟
⎪
⎪
⎝
⎠
⎝
⎠
⎩
⎭
=
⎛
⎞
⎜
⎟
⎝
⎠
∑
∑
∑
 
(11.3-15) 
 
Based on [20], the minimal detectable condition is given by the case when M = 100 and SNR0(n) = 0 dB. 
Now the variable  
 
2
( )  
j
y
X
n
=
 
(11.3-16) 
 
has mean NN0B from (11.3-14), when the signal is not present, and the variance, when the signal is not 
present, is given by [13] 
 
 
2
2
2
0
0
4
(
)  
2
y
N NB
NN B
σ
⎛
⎞
=
=
⎜
⎟
⎝
⎠
 
(11.3-17) 
 
In the case that the signal is present, and is in one of the DFT bins, the mean output is given by 
 
 
2
1
0
E y H
NN B
N P
⎡
⎤≅
+
⎣
⎦
 
(11.3-18) 
 
where P is the signal power. If the narrowband signal is between the DFT bins the effective input SNR could 
be reduced as much as about 3.9 dB. Hence the output SNR, or deflection, is given from (11.3-14), (11.3-17), 
and (11.3-18) to be 
 
 
(
)
(
)
2
2
2
2
0
2
2
2
0
SNR
SNR
 
1
i
N P
MN
N N B
M
=
=
 
(11.3-19) 
 
where SNRi is the input SNR (SNRi = P/N0B) in the bandwidth B. Solving for the input SNR needed to 
obtain detection using a spectrum analyzer (with SNR0 = 1) produces (M =100) 
 
 
1
10
i
SNR
N
=
 
(11.3-20) 
 
 
11.3.2 Wideband Signal Spectrum Analyzer Performance 
 
In the wideband spectral analyzer case, it will be assumed that the signal power spectral density is spread 
over a bandwidth that is large compared to the resolution bandwidth and is essentially flat. If the signal 
occupies Q frequency bins in spectral extent then the output power will be distributed over Q frequency bins 
so that each bin will be 1/Q as large as before. Therefore, from the deflection, the output SNR in each bin 
will be approximately given by 
 
 
(
)
2
2
0
2
SNR
SNR
 
i
MN
Q
=
 
(11.3-21) 
 
Thus the input SNR needed to achieve an output SNR of 1 in the wideband case is given by (M =100) 

 788                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
 
(
)
10
i
Q
SNR
N
=
 
(11.3-22) 
 
 
11.4 SECOND-ORDER CYCLOSTATIONARY FEATURE DETECTION 
Equation Section (Next) 
In this section nonlinear transformations applied to the received signal plus noise are considered. These 
transformations will generate spectral lines, one or more of which can be detected. Typically these spectral 
lines are multiples of the chip rate or the carrier frequency in the case of direct sequence signals, or the hop 
rate or modulation rate in the case of frequency-hopped signals. These spectral lines can be used to detect the 
LPI signal just as a radiometer can be used for this purpose. Depending on how much is known a priori about 
the signal, the performance can rival or exceed the performance of a radiometer.  
 
 
11.4.1 Cyclostationary Processes 
 
We will be dealing with wide-sense cyclostationary processes. Therefore, a brief introduction to 
cyclostationary processes will be presented now. A wide-sense cyclostationary process [21] has the property 
that the autocorrelation function and the mean are periodic; that is, 
 
 
1
2
1
2
(
,
)
( ,
) 
 [
(
)]
[
( )]
R t
T t
T
R t t
E X t
T
E X t
+
+
=
+
=
 
(11.4-1) 
 
where T (= 2 / 0) is the period of the periodicity. These processes are cyclic in the period T, and are not 
wide-sense stationary. The fact that they are periodic implies that they possess a Fourier series expansion. 
The tones (harmonics) in the expansion are what typically are detected in cyclostationary detectors. The 
frequencies of these tones are called the cycle frequencies and the set of frequencies is called the cycle 
spectrum [7, 21]. 
 
 
11.4.2 The Baseband and Carrier Cyclostationarity 
 
The narrowband signal will be modeled as  
 
 
{
}
0
( )
Re
( )
 
i
t
i
s t
v t e e
ω
θ
=
 
(11.4-2) 
 
where  0 is the angular center frequency and   is the phase angle of the signal. It is assumed that both 
parameters are constants. The baseband signal v(t) is the complex envelope of the spreading code and is 
complex in general for any signal but BPSK. It will also be assumed that the spreading code random 
variables in v(t) will take on the values 
  with equal likelihood and are statistically independent from one 
chip to any other chip. Let us consider the autocorrelation function for the signal s(t). We have, taking the 
expectation 
 
 
{
}
0
0
(
)
(
(
)
)
( ,
)
Re
( )
Re
(
)
 
i
t
i
t
ss
R
t t
E
v t e
v t
e
ω
θ
ω
τ
θ
τ
τ
+
−
+
⎡
⎤
⎡
⎤
−
=
−
⎣
⎦
⎣
⎦
 
(11.4-3) 
 
which can be written as 
 

 
                                             Low Probability of Detection Systems 
 
 
           789 
           
0
0
0
0
(
)
(
)
(
(
)
)
(
(
)
)
*
*
1
1
1
1
( )
( )
(
)
(
)
 
2
2
2
2
i
t
i
t
i
t
i
t
E
v t e
v t e
v t
e
v t
e
ω
θ
ω
θ
ω
τ
θ
ω
τ
θ
τ
τ
+
−
+
−
+
−
−
+
⎧
⎫
⎡
⎤⎡
⎤
+
−
+
−
⎨
⎬
⎢
⎥⎢
⎥
⎣
⎦⎣
⎦
⎩
⎭
 
(11.4-4) 
 
Equation (11.4-4) can be written as 
 
 
0
0
0
*
(2
2 )
1
1
( ,
)
Re
( ,
)
Re
( ,
)
 
2
2
i
t
i
ss
vv
vv
R
t t
R
t t
e
R
t t
e
ω
ω τ
θ
ω τ
τ
τ
τ
+
−
+
+
⎡
⎤
⎡
⎤
−
=
−
+
−
⎣
⎦
⎣
⎦ 
(11.4-5) 
 
in which the two code spreading autocorrelation functions are given by 
 
 
{
}
 
( ,
)
( ) (
)  
vv
R
t t
E v t v t
τ
τ
−
=
−
 
(11.4-6) 
 
 
{
}
*
*
( ,
)
( )
(
)  
vv
R
t t
E v t v t
τ
τ
−
=
−
 
(11.4-7) 
 
The covariance of (11.4-6) in this book will be called the carrier covariance function and the covariance of 
(11.4-7) will be called the baseband covariance function. The baseband covariance function deals with tones 
that arise at or near baseband, while the carrier covariance function deals with the tones that are near twice 
the carrier frequency. The carrier covariance function has also been called the conjugate covariance, the 
pseudo covariance, the zero-covariance, and the carrier cyclostationary. The baseband covariance has also 
been called the unconjugate covariance, the covariance, and the one-conjugate covariance [7]. 
 
Evaluating the complex envelope (v(t)) in (11.4-5) determines whether the output process has 
periodic spectral components in the output or not. 
 
 
11.4.3 BPSK Through a Filter and Squarer Circuit 
 
Consider now a model for tone detection based on a filter and squarer circuit for BPSK that produces the line 
spectra and followed by a phase locked loop (PLL) with a lock detector, as shown in Figure 11.4-1. If the 
PLL can lock up to a line component from the squaring operation, the lock detector will produce an output 
declaring lock, indicating that a BPSK signal has been found. The low-pass filters (LPF) after both 
multipliers are there to remove the sum frequency terms. It will be assumed that the PLL has sufficient tone 
signal level to remain in lock. This means that Ptone/
'
0
N BL > 10 dB, where Ptone is the power of the generated 
tone, and 
'
0
N  is the one-sided (positive frequency) effective noise spectral density, and BL is the one-sided 
loop noise bandwidth expressed in Hz. 
 
Loop
filter
VCO
90º
0º
0
1
(.)
LD
T
LD
dt
T
∫
?
hT
≥
Yes
Declare
tone
not present
BPF
(W)
(.)2
PLL
Lock detector
LPF
LPF
Loop
VCO
90º
0º
0
1
(.)
LD
T
LD
dt
T
∫
?
hT
≥
Declare
tone 
present
Declare
tone 
present
tone
not present
BPF
(W)
(.)2
(W)
(.)2
(.)2
PLL
Lock detector
LPF
LPF
LPF
LPF
y(t)
No
Loop
filter
VCO
90º
0º
0
1
(.)
LD
T
LD
dt
T
∫
?
hT
≥
Yes
Declare
tone
not present
BPF
(W)
(.)2
PLL
Lock detector
LPF
LPF
Loop
VCO
90º
0º
0
1
(.)
LD
T
LD
dt
T
∫
?
hT
≥
Declare
tone 
present
Declare
tone 
present
Declare
tone 
present
Declare
tone 
present
tone
not present
BPF
(W)
(.)2
(W)
(.)2
(.)2
PLL
Lock detector
LPF
LPF
LPF
LPF
y(t)
No
 
 
Figure 11.4-1 The filter and square tone detector with PLL and lock detector. 
 

 790                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
The complex envelope for the code process is given by 
 
 
( )
2
(
) 
k
T
k
v t
A
a p
t
kT
=
−
∑
%
 
(11.4-8) 
 
where the tilde on the pulse sequence denotes that it is filtered by the input filter of bandwidth W. Chapter 1 
discusses the relationship between the unfiltered pulse and the filtered pulse (
( )
Tp
t
%
) to the input pulse 
( p
t
T ( )) convolved with the low-pass equivalent filter impulse response h
t
L( ). Considering only the signal as 
the input, the output will be just s2(t). The signal portion is defined to be the expected value of the output, so 
that the signal output is given by 
 
 
2( )
( , ) 
ss
E s
t
R
t t
⎡
⎤=
⎣
⎦
 
(11.4-9) 
 
From (11.4-5) it follows that the signal output is given by  
 
 
0
*
(2
2 )
1
1
( , )
Re
( , )
Re
( , )  
2
2
i
t
ss
vv
vv
R
t t
R
t t e
R
t t
ω
θ
+
+
⎡
⎤
⎡
⎤
=
+
⎣
⎦
⎣
⎦ 
(11.4-10) 
 
which can be written as two terms 
 
 
( , )
( , )
( , ) 
ss
car
BB
R
t t
R
t t
R
t t
=
+
 
(11.4-11) 
 
with the first term being the one that produces a double carrier frequency component, and the second term, 
the one that produces the baseband terms. That is, 
 
 
0
(2
2 )
1
( , )
Re
( , )
 
2
i
t
car
vv
R
t t
R
t t e
ω
θ
+
+
⎡
⎤
=
⎣
⎦ 
(11.4-12) 
and 
 
[
]
*
1
( , )
Re
( , )  
2
BB
vv
R
t t
R
t t
=
 
(11.4-13) 
 
Evaluating 
( , )
vv
R
t t and 
*( , )
vv
R
t t  produces 
 
 
2
2
( , )
2
[
(
)]  
vv
T
k
R
t t
A
p
t
kT
∞
=−∞
=
−
∑
%
 
(11.4-14) 
 
 
*
2
*
( , )
2
[
(
)][
(
)] 
vv
T
T
k
R
t t
A
p
t
kT
p
t
kT
∞
=−∞
=
−
−
∑
%
%
 
(11.4-15) 
 
Both of these equations can be shown to be nonzero. In fact since the first one has a dc value, from 
(11.4-10) there will be a term at twice the carrier frequency. In addition since (11.4-15) is periodic there will 
be spectral lines at baseband. To evaluate the “twice the carrier” term, expand (1/2)(Rvv(t,t)) in a complex 
exponential series to produce 
 
 
[
]
2
2
2
/
(
)
 
i
nt T
T
n
k
n
A
p
t
kT
c e
π
∞
∞
=−∞
=−∞
−
=
∑
∑
%
 
(11.4-16) 
 

 
                                             Low Probability of Detection Systems 
 
 
           791 
whereupon letting P = A2, one has 
 
 
[
]
/ 2
2
2
/
/ 2
1
(
)
 
T
i
nt T
n
T
T
k
c
P
p
t
kT
e
dt
T
π
∞
−
−
=−∞
⎡
⎤
=
−
⎢
⎥
⎣
⎦
∑
∫
%
 
(11.4-17) 
 
and the term in the brackets is the Fourier coefficient, for the unit power expansion. Equation (11.4-17) can 
be evaluated as 
 
[
]
2
2
/
( )
 
i
nt T
n
T
P
c
p t
e
dt
T
π
∞
−
−∞
=
∫
%
 
(11.4-18) 
 
Note that 
( )
Tp
t
%
 is defined by the inverse Fourier transform 
 
 
( )
( )
( )exp( 2
)
T
L
T
p t
H
f P
f
i
ft df
π
∞
−∞
= ∫
%
 
(11.4-19) 
 
and furthermore PT(f)HL(f) is the Fourier transform of 
( )
Tp
t
%
 so that  
 
 
( )
( )
( )exp(
2
)
T
L
T
P
f H
f
p t
i
ft dt
π
∞
−∞
=
−
∫%
 
(11.4-20) 
 
In addition, pT(t) is the inverse Fourier transform of PT(f). 
In Problem 5, using (11.4-19) in (11.4-18), it is shown that cn can be written in the frequency 
domain, as 
 
 
( )
( )
( /
)
( /
)
 
n
L
T
L
T
P
c
H
f P
f H
n T
f P n T
f df
T
∞
−∞
=
−
−
∫
 
(11.4-21) 
 
where HL(f) is the low-pass equivalent of the bandpass filter. The spectral line component at 2 0, for 
example, is obtained when n = 0 in (11.4-21) and its value is given by 
 
 
0
( )
( )
(
)
(
)
 
L
T
L
T
P
c
H
f P
f H
f P
f df
T
∞
−∞
=
−
−
∫
 
(11.4-22) 
 
If the low-pass equivalent filter is complex conjugate symmetric (that is, 
*
(
)
( )
L
L
H
f
H
f
−
=
), which implies 
that hL(t) is real, then  
 
 
2
2
0
( )
( )
 
L
T
P
c
H
f
P
f
df
T
∞
−∞
=
∫
 
(11.4-23) 
 
The spectral line terms near twice the carrier frequency are given by (11.4-12) as  
 
 
0
0
(2
2
/
2 )
2 ( , )
Re
 
i
t
n T
f
n
e
n t
c e
ω
π
θ
+
+
+
⎡
⎤
=
⎣
⎦ 
(11.4-24) 
 
Writing cn has a magnitude and a phase, in the form 
 
 
n
c
i
n
n
c
c e
θ
=
 
(11.4-25) 

 792                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
one can express (11.4-24) as 
 
 
0
2
0
( , )
cos(2 (2
/ )
2
) 
n
f
n
c
e
n t
c
f
n T t
π
θ
θ
=
+
+
+
 
(11.4-26) 
 
where 
nc
θ  is the phase associated with cn. The power of this tone near 2f0 is given by 
 
0
2
2
2
n
n
f
T
c
P
+
=
 
(11.4-27) 
 
Clearly there is always a tone present at exactly twice the carrier frequency for any reasonable filter 
(if c0 ≠0). The double carrier frequency can always be detected with a squarer circuit. In general, for BPSK 
out of the squarer, there are spectral lines generated at the following frequencies near 2f0: 
 
 
0
0
terms at  2
2
/
 
f
f
n T
=
±
 
(11.4-28) 
 
where n = 0, 1, 2, 3, 4,… Normally, the larger the value of n, the weaker the strength of the n-th spectra line. 
 
In addition to the cyclostationary production of spectral lines, in any real system the ones and zeros 
will not be perfectly balanced, and the mixers will have leakage, so that both  0 and 2 0 will be present to 
some extent in “real” systems. In a well-designed system, leakages and imbalances would normally be 
minimized to enhance LPI transmission. 
Now consider the baseband terms, which are derived from the second term in (11.4-10). To evaluate 
the baseband terms, expand (1/2)(Rvv*(t,t)) in a complex exponential series to produce 
 
 
2
*
2
/
[
(
)][
(
)]
 
i
nt T
T
T
n
k
k
A
p
t
kT
p
t
kT
d e
π
∞
∞
=−∞
=−∞
−
−
=
∑
∑
%
%
 
(11.4-29) 
 
where (P = A2) the Fourier coefficients of the baseband spectral lines are given by 
 
 
[
]
/ 2
*
2
/
/ 2
(
)
(
)
 
T
i
nt T
n
T
T
T
k
P
d
p
t
kT
p
t
kT
e
dt
T
π
∞
−
−
=−∞
⎡
⎤
=
−
−
⎣
⎦
∑
∫
%
%
 
(11.4-30) 
 
In the same manner that cn was obtained, it can be shown that dn is given by 
 
 
*
*
( )
( )
( /
)
( /
)
 
n
L
T
L
T
P
d
H
f P
f H
n T
f P n T
f df
T
∞
−∞
=
−
−
∫
 
(11.4-31) 
 
Writing dn as 
 
dn
i
n
n
d
d e
θ
=
 
(11.4-32) 
 
from (11.4-29) it follows that the tone at n/T Hz is given by 
 
 
/ ( )
cos(2
/
) 
n T
n
n
d
e
t
d
nt T
π
θ
=
+
 
(11.4-33) 
 
which has power 
 
 

 
                                             Low Probability of Detection Systems 
 
 
           793 
 
2
/
2
n
n T
d
P
=
 
(11.4-34) 
 
It is clear from (11.4-31) that there are spectral lines at all multiples of 1/T; that is, 
 
 
baseband terms
/
   where  
1,2,3,4,... 
n T
n
= ±
=
 
(11.4-35) 
 
which does not include the dc term, since it contains no information about the chip rate. 
 
One of the first things to recognize from (11.4-31) is that if the received pulse spectrum (HL(f)PT(f)) 
is spectrally limited to ± 1/(2T) then there will be no line component at f = 1/T or at multiples of 1/T, since 
from (11.4-31) the product of disjoint spectra produces a zero value of the integral. Thus a signal designer 
could spectrally limit the transmitted signal by filtering to a total baseband (positive frequency) bandwidth of 
1/2T; then an adversary could not detect a rate line at f = 1/T, or multiples, since none would exist.3 
 
Equation (11.4-31) applies to the product of the receiver filtering HL(f) and the transmitted pulse, 
which may also be filtered. Thus dn may be interpreted as an integration dependent on the unfiltered pulse 
P(f), and the composite filter due to both the transmitter and receiver filters via HL(f), as long as the channel 
is linear (a TWTA would have to be backed off to its linear region, for example). With heavy filtering on the 
transmitted signal, the receiver would be forced to detect the second line at f = 2/T, which is normally much 
weaker than a mildly filtered tone at f = 1/T, or use a fourth power detector which has lower output SNR and 
is therefore harder to detect. 
 
Another thing to notice from (11.4-18), (11.4-26), (11.4-30), and (11.4-34) is that the power output 
of these spectral lines are proportional to the square of the input power, P. A fourth power detector output 
power would be proportional to the fourth power of the input power. 
 
Example 3 As an example of the evaluation of (11.4-31) consider unit pulses of duration T seconds and a 
low-pass equivalent filter that is an ideal unit response filter of bandwidth 2 /T. Note that if  
  = 1 then the filter would cover the null-to-null bandwidth and if   = 1/2 the bandwidth would be 1/2 the 
null-to-null bandwidth. It is shown in Problem 6 that the value of d1 is given by 
 
 
1
1
0.5
0.5
(1
)
sin( ) sin(
)
( )
, and 
( )
= 0 
(
)
P
x
x
d
dx
d
x
x
απ
α
α
α π
π
α
α
π
π
≥
≤
−
−
=
−
∫
 
(11.4-36) 
 
Figure 11.4-2 illustrates the signal amplitude for the first spectral line component (d1) at f = 1/T versus the 
parameter   for P = 1.  
Note that when the ideal low-pass filter equivalent is 1/T wide (  = 0.5), the amplitude goes to zero. 
For values of   less than 0.5 the amplitude is zero. The maximum occurs at about   = 1. However, the wider 
the filter bandwidth, the more noise or interference is accepted by the rate line detector. This affects the 
detection and false alarm performance. In general for most reasonable filters and signals, increasing n 
decreases the output signal strength. Hence, normally the first spectral line is the one chosen for detection, 
since it is the strongest.  
 
 
11.4.3.1 BPSK Through a Filter and Squarer Circuit Detection and False Alarm Probabilities 
 
Now let us consider the noise performance of the double carrier frequency term at low input signal-to-noise 
ratios, based on the PLL lock detector. Figure 11.4-1 illustrates the detector for the lines generated by the  
squaring process. It is composed of a phase lock loop (PLL), which tracks the desired line component, and 
                                                          
3 In practice one cannot build a real filter to respond exactly like an ideal filter; however, it is possible to approximate it by a high order 
filter and cause the output level of the “filter and square” circuit to be greatly reduced. 

 794                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
the lock detector, which signifies when the PLL is in lock. Thus the PLL lock detector is the device that 
indicates that the BPSK signal has been detected. It is to be noted that typically the PLL will require that the 
VCO be frequency swept over the expected tone frequency range in order to achieve PLL lock. Thus in the 
search mode the frequency sweeping will occur until the PLL acquires the signal and the lock detector 
indicates a lock that would then turn off the sweep function. If the lock detector indicates lack of lock, the 
sweep process would be initiated again. 
 
0.5
1
1.5
2
2.5
3
3.5
4
0
0.1
0.2
0.3
Bandwidth parameter alpha
Amplitude of the 1/T line component
d1 α
(
)
α
0.5
1
1.5
2
2.5
3
3.5
4
0
0.1
0.2
0.3
Bandwidth parameter alpha
Amplitude of the 1/T line component
d1 α
(
)
α
 
 
Figure 11.4-2 Signal amplitude of the first spectral line at f =1/T. 
 
 
We can model the received signal plus white Gaussian thermal noise with two-sided noise power 
spectral density of N0/2 as  
 
 
0
0
( )
( )
2
( )cos(
)
2
( )sin(
)
c
s
y t
S t
n t
t
n t
t
ω
ω
=
+
+
 
(11.4-37) 
 
Out of the squaring function we have, generically speaking, the three terms 
 
 
S
S
n n
S
n
×
+ × +
×
 
(11.4-38) 
 
The first term (the signal component) out of the squarer has been evaluated in (11.4-22) and has power given 
by  
 
0
2
0
2
c
c
P =
 
(11.4-39) 
 
To simplify the analysis we will assume that the input noise power is much greater than the input 
signal power. This is a reasonable assumption in this type of unauthorized detection work, where the signal 
term is very weak typically and allows us to neglect the S×n term in what follows. The n×n term can be 
easily evaluated by using a result for the n×n spectral density out of the squarer, given in Davenport and 
Root [22]. The n×n spectral density out of the squarer in the region of 2 0 is given by [22] 
 
 
0
2
2
0
0
N
N W
ω =
 
(11.4-40) 
 
 
Under the assumption that WTLD >> 1 and W/BL >> 1, where BL is the one-sided loop noise 
bandwidth of the PLL in Hz, we may assume that the two-sided noise spectral density out of the squarer is 
approximately flat and has value 
 

 
                                             Low Probability of Detection Systems 
 
 
           795 
 
0
2
2
0
0
2
2
N
N W
ω
=
 
(11.4-41) 
 
We will assume that the PLL has sufficient input tone power to noise spectral density to maintain PLL lock.4 
We may model the input line component plus squared thermal noise into the coherent amplitude detector (the 
input to the lock detector multiplier) as  
 
 
0
0
0
0
( )
2
sin(2
)
2
( )sin(2
)
2
( )cos(2
)
i
s
c
e t
c
t
n t
t
n t
t
ω
ϕ
ω
ϕ
ω
ϕ
=
+
+
+
+
+
 
(11.4-42) 
 
Modeling the inphase reference signal (at 0º) as 
 
 
0
2 sin(2
)
t
ω
ϕ
+
 
(11.4-43) 
 
produces the input to the lock detector integrator as 
 
 
0
( )
( )
inLD
s
e
t
c
n t
=
+
 
(11.4-44) 
 
The detected line component out of the integrator is given by 
 
 
0
outLD
e
c
=
 
(11.4-45) 
 
 
Under the assumption that WTLD >> 1 we will assume that the baseband noise term ns(t) is 
approximately white, so that 
 
 
{
}
2
2
2
0
0
0
0
1
1
( )
( )
( )
( )
LD
LD
LD
LD
T
T
T
T
s
s
s
s
LD
LD
E
n u n t dtdu
E n u n t
dtdu
T
T
σ
⎧
⎫
⎪
⎪
=
=
⎨
⎬
⎪
⎪
⎩
⎭
∫∫
∫∫
 
(11.4-46) 
 
Now this can be evaluated by noting that  
 
 
2
2
2
2
0
0
0
2
2
0
0
0
1
(
)
2
2
2
LD
LD
LD
T
T
T
LD
LD
LD
N
N
N W
u
t dtdu
dt
T
T
T
σ
δ
=
−
=
=
∫∫
∫
 
(11.4-47) 
 
Since it is Gaussian, with the mean value given in (11.4-45) and with the variance given by (11.4-47), it can 
be shown in Problem 7 that the detection and false alarm probabilities are given by 
 
 
0
       
2
2
h
h
D
FA
o
o
LD
LD
T
c
T
P
Q
P
Q
W
W
N
N
T
T
⎛
⎞
⎛
⎞
⎜
⎟
⎜
⎟
−
⎜
⎟
⎜
⎟
≅
≅
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(11.4-48) 
 
and the units of 
0c  and Th must be in input power units, as can be seen from (11.4-18). The value of   (the 
denominator in the probability expressions) is also in units of input noise power. The value of c0 was given in 
(11.4-22). It was not necessary to pick the second harmonic as our choice in the line component to detect; 
lines near the baseband could as well have been detected. In general, it is only necessary to analyze a few 
components to determine which are most detectable in noise, in the sense of having the best SNR. 
                                                          
4 Clearly both the PLLs must maintain lock in order for the lock detector to function properly. 

 796                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
11.4.4 Balanced QPSK Through a Filter and Squarer Circuit 
 
Let us now consider balanced (equal power in the inphase and quadrature components) QPSK chip 
modulation through a filter and squarer to investigate the spectral lines at the output. Recall the QPSK chip 
modulated signal has a complex envelope of the form 
 
 
[
]
( )
(
)
(
)  
k
T
k
T
k
v t
A
a p
t
kT
ib p
t
kT
=
−
+
−
∑
%
%
 
(11.4-49) 
 
where the tilde on the pulse sequences again denotes the fact that the pulse process is filtered by the input 
bandpass filter. Considering only the signal as the input, by neglecting the noise, the output will again be just 
s2(t). The signal portion of the output is defined to be the expected value of the output, so that the signal 
output is given by 
 
{
}
2( )
( , ) 
ss
E s
t
R
t t
=
 
(11.4-50) 
 
From (11.4-5) it follows that, as before, the signal output is given by  
 
 
0
*
(2
2 )
1
1
( , )
Re
( , )
Re
( , )  
2
2
i
t
ss
vv
vv
R
t t
R
t t e
R
t t
ω
θ
+
+
⎡
⎤
⎡
⎤
=
+
⎣
⎦
⎣
⎦ 
(11.4-51) 
 
with the first term producing a double carrier frequency component and the second term producing the 
baseband terms. Evaluating the baseband and carrier covariance functions produces 
 
 
2
2
2
2
( , )
[
(
)]
[
(
)]
0  
vv
T
T
k
k
R
t t
A
p
t
kT
A
p
t
kT
∞
∞
=−∞
=−∞
=
−
−
−
=
∑
∑
%
%
 
(11.4-52) 
 
 
*
2
*
( , )
2
[
(
)][
(
)] 
T
T
vv
k
R
t t
A
p
t
kT
p
t
kT
∞
=−∞
=
−
−
∑
%
%
 
(11.4-53) 
 
 
From the first term of (11.4-51) and (11.4-52) it is seen that there will be no double carrier 
frequency term, or any frequencies near 2f0 (i.e., 
( , )
vv
R
t t  is zero). In addition, since (11.4-53) is periodic and 
nonzero, there will be spectral lines at baseband. Since (11.4-53) is the same expression as for BPSK, the 
same spectral line results apply to the QPSK case. Thus, using P = A2, one obtains 
 
 
*
*
( )
( )
(
/
)
(
/
)
 
n
L
T
L
T
P
d
H
f P
f H
f
n T P
f
n T df
T
∞
−∞
=
−
−
∫
 
(11.4-54) 
 
Again writing dn as in (11.4-32) the spectral lines can be written in the form 
 
 
/ ( )
cos(2
/
) 
n T
n
n
e
t
d
nt T
π
ϕ
=
+
 
(11.4-55) 
 
which has power 
 
2
/
2
n
n T
d
P
=
 
(11.4-56) 
 
Therefore, just as in the BPSK case, spectral lines at baseband for QPSK are generated at the following 
frequencies 
 

 
                                             Low Probability of Detection Systems 
 
 
           797 
 
baseband terms
 /
 
n T
= ±
 
(11.4-57) 
 
where n = 1, 2, 3, 4, ... Again the dc term was not included since it does not provide any information about 
the chip rate. It should be noticed that if QPSK were not power balanced, then lines would also appear near 
2f0. 
 
Now consider the detectability of a line spectral component near baseband. Consider one of the line 
components (dn) near zero frequency, but still excluding zero frequency. We again assume the model of 
Figure 11.4-1, which is assumed to be centered at ± n/T Hz. Again the n×n spectral density out of the 
squarer in the region of n/T Hz is given by [22] 
 
 
'
2
0
0
N
N W
=
 
(11.4-58) 
 
if WT >> 1. The corresponding noise power out of the lock detector averaging-filter is given by  
 
 
2
2
0
2 LD
N W
T
σ =
 
(11.4-59) 
 
The mean and variance of the power out of the averaging-filter is given by 
 
 
2
2
2
0
  
2
2
n
LD
d
N W
T
μ
σ
=
=
 
(11.4-60) 
 
When the signal is not present,   becomes zero. The value dn is given by (11.4-54) for all nonzero n. 
Following the approach in Section 11.4.3.1 we find that the approximate (Gaussian approximation) detection 
and false alarm probabilities are given by 
 
 
0
0
      
2
2
h
n
h
D
FA
LD
LD
T
d
T
P
Q
P
Q
W
W
N
N
T
T
⎛
⎞
⎛
⎞
⎜
⎟
⎜
⎟
−
⎜
⎟
⎜
⎟
≅
≅
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(11.4-61) 
 
where dn is given by (11.4-54), and n = ± 1, ± 2, ± 3,… 
 
 
11.4.5 Balanced OQPSK Through a Filter and Squarer Circuit 
 
Let us now consider balanced offset quadriphase shift keying (OQPSK) chip modulation (also known as 
quadrature phase shift keying) through a filter and squarer, for spectral lines at the output. Recall the OQPSK 
chip modulated signal has a complex envelope of the form 
 
 
[
]
( )
(
)
(
/ 2)  
k
T
k
T
k
v t
A
a p
t
kT
ib p
t
kT
T
=
−
+
−
−
∑
%
%
 
(11.4-62) 
 
In Problem 8 it is shown that the spectral lines near 2f0 are of the form 
 
 
0
2
0
( , )
cos(2 (2
/ )
2
) 
n
f
n
c
e
n t
c
f
n T t
π
θ
θ
=
−
+
+
 
(11.4-63) 

 798                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
where P=A2 and 
 
 
1
( )
( )
( /
)
( /
)
 
2
i n
n
L
T
L
T
P
c
e
H
f P
f H
n T
f P n T
f df
T
π
∞
−∞
⎡
⎤
=
−
−
−
⎣
⎦∫
 
(11.4-64) 
 
Notice that when n is even, cn = 0 and therefore the double carrier frequency spectral line is not present. 
However frequency terms near 2f0 are 
 
 
0
0
near by 2
 terms
2
(2
1)/
 
f
f
n
T
=
±
−
 
(11.4-65) 
 
when n = 1, 2, 3, 4,… That is to say, the spectral lines for OQPSK occur at odd multiples of twice the chip 
rate, near twice the carrier frequency. The results of Problem 8 show that the spectral lines near baseband are 
of the form 
 
/ ( )
cos(2
/
) 
n T
n
n
e
t
d
nt T
π
ϕ
=
+
 
(11.4-66) 
 
and their Fourier coefficients are given by 
 
 
(
)
*
*
1
( )
( )
(
/
)
(
/
)
  
2
i n
n
L
T
L
P
d
e
H
f P
f H
f
n T P
f
n T df
T
π
∞
−
−∞
=
+
−
−
∫
 
(11.4-67) 
 
From these Fourier coefficients it is seen that only even values of n produce nonzero values of dn. 
Thus the baseband frequencies that exist for OQPSK are 
 
 
baseband terms
2 /
  with  
1,2,3,4... 
n T
n
= ±
=
 
(11.4-68) 
 
which is due to the fact that the RF phase of an OQPSK signal can change every one-half chip time, rather 
than every chip time as in QPSK. Thus it is seen that OQPSK and QPSK are very different in their spectral 
line characteristics, as far as detectability. 
 
It is not difficult, assuming that baseband spectral lines are to be detected, to have with a Gaussian 
approximation the following approximate detection and false alarm probabilities 
 
 
0
0
              
2
2
h
n
h
D
FA
LD
LD
T
d
T
P
Q
P
Q
W
W
N
N
T
T
⎛
⎞
⎛
⎞
⎜
⎟
⎜
⎟
−
⎜
⎟
⎜
⎟
≅
≅
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(11.4-69) 
 
and n takes on the values ± 2, 4, 6,… Also dn is given by (11.4-67). 
 
 
11.4.6 MSK Through a Filter and Squarer Circuit 
 
Let us now consider MSK chip modulation through a filter and squarer for spectral lines, at the output. Recall 
from Chapter 1 that the MSK chip modulated signal has a complex envelope of the form 
 
 
[
]
( )
2
(
)
(
/ 2)  
k
T
k
T
k
v t
A
a p t
kT
ib p t
kT
T
=
−
+
−
−
∑
%
%
 
(11.4-70) 
 
In a manner similar to the solution of Problem 8 it is shown that the spectral lines near 2f0 are of the form 

 
                                             Low Probability of Detection Systems 
 
 
           799 
 
 
0
2
0
( , )
cos(2 (2
/ )
2
) 
n
f
n
c
e
n t
c
f
n T t
π
θ
θ
=
−
+
+
 
(11.4-71) 
 
where  
 
1
( )
( )
( /
)
( /
)
 
i n
n
L
T
L
T
P
c
e
H
f P
f H
n T
f P n T
f df
T
π
∞
−∞
⎡
⎤
=
−
−
−
⎣
⎦∫
 
(11.4-72) 
 
and P = A2. Notice that when n is even, cn = 0 and therefore the double carrier frequency term is not present. 
However frequency terms at  
 
 
0
0
2
 
2
(2
1)/
 
f terms
f
n
T
=
±
−
 
(11.4-73) 
 
do occur, that is to say the spectral lines for MSK occur at odd multiples of twice the chip rate near twice the 
carrier frequency, just as in OQPSK. In a manner analogous to the solution of Problem 8 it may be shown 
that the spectral lines near baseband are of the form 
 
 
/ ( )
cos(2
/
) 
n T
n
n
e
t
d
nt T
π
ϕ
=
+
 
(11.4-74) 
 
and their Fourier coefficients are given by 
 
 
(
)
*
*
1
( )
( )
(
/
)
(
/
)
  
i n
n
L
T
L
P
d
e
H
f P
f H
f
n T P
f
n T df
T
π
∞
−
−∞
=
+
−
−
∫
 
(11.4-75) 
 
From these Fourier coefficients it is seen that only even values of n produce nonzero values of dn. Thus the 
baseband frequencies that exist for MSK are 
 
 
baseband terms
2 /
  with  
1,2,3,4... 
n T
n
=
=
 
(11.4-76) 
 
Again it is not difficult to show that the approximate detection and false alarm probabilities are given by 
 
 
0
0
      
2
2
h
n
h
D
FA
LD
LD
T
d
T
P
Q
P
Q
W
W
N
N
T
T
⎛
⎞
⎛
⎞
⎜
⎟
⎜
⎟
−
⎜
⎟
⎜
⎟
≅
≅
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(11.4-77) 
 
and dn is given by (11.4-75) and n takes on the values ± 2, 4, 6,… 
In Table 11.4-1 the cycle spectrum are summarized for these four spreading modulation types. 
 
Table 11.4-1 Direct Sequence Cycle Spectrum for the Filter and Square Circuit 
 
Spreading Modulation 
Baseband Cycle Spectrum 
Carrier Cycle Spectrum 
BPSK 
± n/T   (n = 1, 2, 3,...) 
2f0 
n/T, (n = 0,1, 2, 3,...) 
Balanced QPSK 
± n/T   (n = 1, 2, 3,...) 
None exists 
Balanced OQPSK 
± 2n/T   (n = 1, 2, 3,...) 
2f0 
(2n–1)/T, (n = 1, 2, 3,...) 
MSK 
± 2n/T   (n = 1, 2, 3,...) 
2f0 
(2n–1)/T, (n = 1, 2, 3,...) 
 
 
 

 800                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
11.4.7 Frequency-Hopped Signals with MFSK Through a Filter and Squarer Circuit 
 
Typically frequency-hopped signals use either a form of MFSK or DPSK data modulation. First we consider 
a frequency-hopped signal with MFSK data modulation. Initially we consider slow hopping in which there 
are one or more data code bits per hop. 
 
 
11.4.7.1 Slow Frequency Hopped Signals with MFSK Data Modulation Through a Filter and Squarer  
Circuit 
 
The complex envelope of a slow frequency-hopped signal with MFSK data modulation is given by 
 
 
(2
)
(2
)
( )
2
(
)
(
)  
j
j
k
k
h
d
i
F t
i
f t
T
h
T
d
k
j
v t
A
e
p
t
kT
e
p
t
jT
π
ϑ
π
θ
+
+
=
−
−
∑
∑
 
(11.4-78) 
 
where Td is the duration of the data frequency modulation (MFSK) with frequencies Fj, assumed to be Md 
equally spaced frequencies. Also NTd = Th is the duration of the hop frequencies (the duration of N data 
modulation frequencies equals the duration of one hop). It is assumed that the occurrence of the Md 
frequencies, Fj, is randomly chosen. It is also assumed that the Mh equally spaced hopping frequencies fk are 
also randomly chosen, and the two processes are independent. The random variables  k and  j are 
statistically independent, and are uniformly distributed over 2   radians as well as from hop to hop and from 
modulation frequency to modulation frequency. Again, the signal component of the output is defined as  
 
 
{
}
2( )
( , ) 
ss
E s
t
R
t t
=
 
(11.4-79) 
 
Evaluating Rvv(t,t) produces 
 
 
[
]
( , )
( ) ( )
0  
vv
R
t t
E v t v t
=
=
 
(11.4-80) 
 
since the random variables 
 and 
k
j
θ
ϕ  are assumed to be statistically independent, uniformly distributed, and 
each one has zero mean value; that is, 
 
 
0 
j
k
i
i
E e
E e
ϑ
θ
⎡
⎤
⎡
⎤=
=
⎣
⎦
⎣
⎦
 
(11.4-81) 
 
It is therefore concluded that there are no frequencies present near the carrier double frequency. Consider  
Rvv*(t,t) now, in order to investigate the baseband cycle frequencies. Evaluating Rvv*(t,t) produces 
 
 
*
*
*( , )
2
(
)
(
)
(
)
(
) 
d
h
d
h
T
d
T
h
T
d
T
h
k
j
vv
R
t t
P
p
t
kT
p
t
jT
p
t
kT
p
t
jT
=
−
−
−
−
∑∑
 
(11.4-82) 
 
In this model it is assumed that the pulse functions are not filtered since the analysis would be 
difficult because the filtering would depend on where the hop was located. Expanding in a Fourier series 
produces 
 
2
/
*
1
( , )
 
2
i
nt T
vv
n
n
R
t t
d e
π
∞
=−∞
= ∑
 
(11.4-83) 
 

 
                                             Low Probability of Detection Systems 
 
 
           801 
Before evaluating 1/2Rvv*(t,t) note that Rvv*(t,t) is dominated by the short pulse duration of the 
modulation so that  
 
 
*
*
1
( , )
(
)
(
) 
2
d
d
vv
T
d
T
d
k
R
t t
P
p
t
kT
p
t
kT
≅
−
−
∑
 
(11.4-84) 
 
and therefore the dn are given by 
 
 
*
( )
(
/
)
 
d
d
T
T
d
d
n
P
d
P
f P
f
n T df
T
∞
−∞
≅
−
∫
 
(11.4-85) 
 
where 
( )
d
TP
f  is the Fourier transform of the time pulses 
( )
d
Tp
t . For rectangular pulse shapes (which is the 
case in frequency hopping), 
( )
d
TP
f  would have a sin(x)/x shape, which means that dn would decrease 
monitonically as n increases, as seen via (11.4-85). The tones at f = n/Td (at multiples of the FSK data rate) 
are given by 
 
 
/ ( )
cos(2
/
) 
n
n T
n
d
d
e
t
d
nt T
π
θ
=
+
 
(11.4-86) 
 
with the associated average power  
 
 
2
/
2
n
n T
d
P
=
 
(11.4-87) 
 
where as noted earlier Td is the MFSK data modulation time duration. Thus tones can be detected at 
 
 
baseband tones
 where  = 1, 2, 3... 
d
=
n/T
 n
±
 
(11.4-88) 
 
Using the model of Figure 11.4-1 it is not difficult, assuming that baseband spectral lines are to be 
detected, to show that, using a Gaussian approximation, the following detection and false alarm probabilities 
result  
 
 
0
0
       
2
2
h
n
h
D
FA
LD
LD
T
d
T
P
Q
P
Q
W
W
N
N
T
T
⎛
⎞
⎛
⎞
⎜
⎟
⎜
⎟
−
⎜
⎟
⎜
⎟
≅
≅
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(11.4-89) 
 
For the values of n = ± 1, ± 2, ± 3,…and dn is given by (11.4-85). 
 
 
11.4.7.2 Fast Frequency-Hopped Signals with MFSK Data Modulation Through a Filter and Squarer  
Circuit  
 
The complex envelope of a fast frequency-hopped signal (the hop rate is greater than the data rate) with 
MFSK is given by 
 
 
(2
)
(2
)
( )
2
(
)
(
) 
j
j
k
k
h
i
F t
i
f t
T
h
T d
d
k
j
v t
A
e
p
t
kT
e
p
t
jT
π
ϑ
π
θ
+
+
=
−
−
∑
∑
 
(11.4-90) 

 802                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
where Td is the duration of the data frequency modulation (MFSK) with frequencies Fj, (assumed to be Md 
equally spaced frequencies) and Th is the duration of the frequency hops (N frequency hops time periods 
equals one data modulation frequency period). It is assumed that the Md frequencies, Fj, are randomly 
chosen. The random variables  k and  j are statistically independent random variables, uniformly distributed 
over 0 to 2 , which are independent from each other and from hop to hop and from modulation frequency to 
modulation frequency. Again the signal component of the output is defined as 
 
 
{
}
2( )
( , ) 
ss
E s
t
R
t t
=
 
(11.4-91) 
 
Evaluating Rvv(t,t) produces the same result as in the slow frequency hopping case 
 
 
[
]
( , )
( ) ( )
0 
vv
R
t t
E v t v t
=
=
 
(11.4-92) 
 
since the expected value of each phase term is zero, that is 
 
 
0 
j
k
i
i
E e
E e
ϑ
θ
⎡
⎤
⎡
⎤=
=
⎣
⎦
⎣
⎦
 
(11.4-93) 
 
It is thus concluded that there are no spectral lines at twice the carrier (hop) frequency. 
 
Note that Rvv*(t,t) is dominated by the short pulse duration of the hopping waveform so that in a 
manner to the slow hopping case one obtains for the Fourier coefficients the result 
 
 
*
( )
(
/
)
 
h
h
n
T
T
h
h
P
d
P
f P
f
n T df
T
∞
−∞
≅
−
∫
 
(11.4-94) 
 
for the frequencies at f = n/Th, where Th is the frequency hop time duration and 1/Th is the hop rate. Thus the 
hop rate lines can be detected at 
 
 
baseband tones
 for
=1,2,3... 
h
= n/T
 n 
±
 
(11.4-95) 
 
In a similar manner to the slow frequency-hopping case the baseband tones have a lock detector probability 
of false alarm and detection given by 
 
 
0
0
    
2
2
h
n
h
D
FA
LD
LD
T
d
T
P
Q
P
Q
W
W
N
N
T
T
⎛
⎞
⎛
⎞
⎜
⎟
⎜
⎟
−
⎜
⎟
⎜
⎟
≅
≅
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(11.4-96) 
 
For the values of n = ± 1, ± 2, ± 3,…and dn is given by (11.4-94). 
 
 
11.4.8 Slow Frequency-Hopped Signals with DPSK Data Modulation Through a Filter and Squarer  
Circuit 
 
The other common data modulation used with frequency-hopped signals is differential phase shift keying 
(DPSK). The complex envelope of the frequency hopped signal with DPSK data modulation is given by 
 

 
                                             Low Probability of Detection Systems 
 
 
           803 
 
(2
)
( )
2
(
)
(
) 
k
k
h
d
i
f t
T
h
j
T
d
k
j
v t
A
e
p
t
kT
d p
t
jT
π
θ
+
=
−
−
∑
∑
 
(11.4-97) 
 
where fk are the hop frequencies, Td is the DPSK data symbol duration, and Th is the frequency hop duration. 
The  k are assumed to be uniform random variables, independent from sample to sample. In addition the dj 
are assumed to equally likely random variables taking on the value of +1 or –1 with equal likelihood. It is 
also assumed that the data, phase, and frequencies are statistically independent. It will also be assumed that 
the data rate is much larger than the hop rate. Again the signal component of the output is defined as 
 
 
{
}
2( )
( , ) 
ss
E s
t
R
t t
=
 
(11.4-98) 
 
Since the frequency-hopping phase is independent and uniformly distributed over 0 to 2   we 
conclude that 
 
 
( , )
0 
vv
R
t t =
 
(11.4-99) 
 
since the phases are random and equally likely. Again we see that there is no double the carrier hop 
frequencies generated in this system. Consider the baseband covariance function 
 
       
{
} {
}
2
*
*
2 (
)
(
)
*( , )
2
(
)
(
)
(
)
(
)  
                  
d
h
d
h
l
m
l
m
k
T
d
T
h
j
T
d
T
h
k
l
j
m
i
f
f
i
vv
R
t t
A E
d p
t
kT
p
t
lT
d p
t
jT
p
t
mT
E e
E e
π
θ
θ
−
−
⎧
⎫
=
−
−
−
−
⎨
⎬
⎩
⎭
×
∑
∑
∑
∑
 
(11.4-100) 
 
where E{.} is the mathematical expectation operator. Now because of the statistical independence of the data 
sequence and the phase sequence, the summation over the four indices reduces to a summation over two 
indices yielding  
 
 
2
*
*
*( , )
2
(
)
(
)
(
)
(
) 
d
d
h
h
vv
T
d
T
d
T
h
T
h
k
m
R
t t
A
p
t
kT
p
t
kT
p
t
mT p
t
mT
=
−
−
−
−
∑
∑
 
(11.4-101) 
 
If now one neglects the transitions at every hop time (assuming that the data rate is much larger than the hop 
rate), then (11.4-101) is well approximated by  
 
 
2
*
*( , )
2
(
)
(
) 
d
d
vv
T
d
T
d
k
R
t t
A
p
t
kT
p
t
kT
≅
−
−
∑
 
(11.4-102) 
 
Expanding (½)Rvv*(t,t) in a complex Fourier series and solving for the Fourier coefficients yields (using  
A2 = P) 
 
 
/ 2
*
2
/
/ 2
(
)
(
)
 
T
i
kt T
n
T
T
T
k
P
d
p
t
kT p
t
kT e
T
π
∞
−
−
=−∞
=
−
−
∑
∫
 
(11.4-103) 
 
This result can again be simplified, as before, to  
 
 
*
( )
(
/
)
 
d
d
n
T
T
d
d
P
d
P
f P
f
n T
df
T
∞
−∞
=
−
∫
 
(11.4-104) 
 

 804                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
Thus, spectral lines occur at multiples of 1/Td, with the case n = 1 being the strongest, under 
reasonable conditions. Again recall that Td is the data time duration. It follows that the lines appear at the 
following frequencies out of a filter and squarer 
 
 
 
baseband frequencies = 
  =1, 2, 3...
d
n/T n
±
 
(11.4-105) 
 
 
In a similar manner to the previous frequency-hopping cases, the baseband tones have a lock 
detector probability of false alarm and detection given by 
 
 
0
0
     
2
2
h
n
h
D
FA
LD
LD
T
d
T
P
Q
P
Q
W
W
N
N
T
T
⎛
⎞
⎛
⎞
⎜
⎟
⎜
⎟
−
⎜
⎟
⎜
⎟
≅
≅
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(11.4-106) 
 
where the line spectra at baseband occur as shown in (11.4-105) and dn is given by (11.4-104). 
 
Table 11.4-2 summarizes the spectral lines that are present in frequency-hopped waveforms. 
 
Table 11.4-2 The Cycle Spectrum in a Frequency-Hopping System Through a Filter and Squarer Circuit 
 
Frequency-Hop Type 
Baseband Cycle Spectrum 
Carrier Cycle Spectrum 
Slow freq. hop/FSK 
n/Td (n = 1, 2, 3, 4,...) 
None exist 
Fast freq. hop/FSK 
n/Th(n = 1, 2, 3, 4,...) 
None exist 
Freq. hop/DPSK 
n/Td (n = 1, 2, 3, 4,...) 
None exist 
Table note: Td is the FSK and DPSK symbol time and Th is the frequency-hop time. 
 
 
11.4.9 Delay and Multiply Chip Rate Detectors with Balanced QPSK 
 
As another technique to generate line spectra from a QPSK signal, consider the delay and multiply chip rate 
detector indicated in Figure 11.4-3 for QPSK chipping (direct sequence) signals. 
 
Delay of τ sec.
Input signal plus noise
Spectral lines
generated here
Delay of τ sec.
Input signal plus noise
Spectral lines
generated here
 
 
Figure 11.4-3 The delay and multiply chip rate detector. 
 
 
It will be seen in the development to follow that there is a problem with the delay and multiply 
circuit in terms of its sensitivity to frequency errors. It will be assumed that the signal is not filtered 
significantly in this section. From Figure 11.4-3 it is seen that the output due to the signal times the signal 
term is given by  
 
 
( )
( ) (
) 
ss
e
t
s t s t
τ
=
−
 
(11.4-107) 
 
Define the output signal component as the following mean value 

 
                                             Low Probability of Detection Systems 
 
 
           805 
 
 
{
}
( ) (
)
( ,
) 
ss
E s t s t
R
t t
τ
τ
−
=
−
 
(11.4-108) 
 
From (11.4-5) it follows that  
 
 
0
0
0
*
(2
2 )
1
1
( ,
)
Re
( ,
)
Re
( ,
)
 
2
2
i
t
i
ss
vv
vv
R
t t
R
t t
e
R
t t
e
ω
ω τ
θ
ω τ
τ
τ
τ
+
−
+
+
⎡
⎤
⎡
⎤
−
=
−
+
−
⎣
⎦
⎣
⎦ 
(11.4-109) 
 
From Chapter 1 the QPSK complex envelope signal is given by 
 
 
[
]
( )
(
)
(
)  
k
k
T
k
v t
A
a
ib
p
t
kT
=
+
−
∑
 
(11.4-110) 
 
 
Based on (11.4-109) it is necessary to evaluate the carrier and the baseband autocovariance 
functions for this modulation. Just as in the filter and square detector it is easy to show that  
 
 
( ,
)
0 
vv
R
t t
τ
−
=
 
(11.4-111) 
 
So that the carrier cycle spectrum does not exist. Now consider one half the baseband autocorrelation 
function 
 
 
*
*
(1/ 2)
( ,
)
(
)
(
)  
vv
T
T
k
R
t t
P
p
t
kT p
t
kT
τ
τ
⎡
⎤
−
=
−
−
−
⎢
⎥
⎣
⎦
∑
 
(11.4-112) 
 
since A2 = P. It follows, using (11.4-5), that the signal autocorrelation function is given by 
 
 
(
)
*
0
( ,
)
(
)
(
)cos
 
ss
T
T
k
R
t t
P
p
t
kT p
t
kT
τ
τ
ω τ
−
=
−
−
−
∑
 
(11.4-113) 
 
Note that pT(t) is, in fact, real in this case, when the pulse is unfiltered. Again, since this 
autocorrelation function is cyclostationary, it can be expanded in a complex Fourier series of the form 
 
 
(
)
*
2
/
0
(
)
(
)cos
 
i
nt T
T
T
n
k
n
P
p
t
kT p
t
kT
d e
π
τ
ω τ
∞
=−∞
−
−
−
=
∑
∑
 
(11.4-114) 
 
In Problem 9 it is shown that the coefficients of the Fourier series are given by 
 
 
2
/
*
2
0
cos(
)
( )
(
/
)
 
i
n
T
i
f
n
P
d
e
P f P
f
n T e
df
T
π τ
π τ
ω τ
∞
−
−∞
=
−
∫
 
(11.4-115) 
 
Thus it is seen that the same spectral lines (frequencies) appear at the frequencies ± n/T for n = 1, 2, 
3… This is the same set of spectral lines that occurred for the filter and squarer circuit. However the intensity 
of the spectral lines is not the same. The intensities are the same as the filter and squarer circuit, only in the 
case when   is zero. 
 
There is one important point that should be emphasized: the angular carrier frequency time delay 
product must be equal to 2 n, with n an integer, or the amplitude of the spectral line could be considerably 
reduced in intensity. Since the frequency is not normally known in advance exactly, and the product is very 
sensitive to variations in frequency or delay, with the delay and multiply circuit it is not very feasible for line 
rate detection, because it is impossible to guarantee that the spectral line will not be suppressed. When this 

 806                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
circuit is used,   is usually set to be 0.5T, since it maximizes the 1/T rate line spectral intensity component 
[23].  
 
Again it is possible to obtain Gaussian approximations to the false alarm probability and the 
detection probability for the lines appearing at baseband. They are given by 
 
 
0
0
     
2
2
h
n
h
D
FA
LD
LD
T
d
T
P
Q
P
Q
W
W
N
N
T
T
⎛
⎞
⎛
⎞
⎜
⎟
⎜
⎟
−
⎜
⎟
⎜
⎟
≅
≅
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(11.4-116) 
 
where the parameters have been already defined, dn is given by (11.4-115), and n can take on values of  
n = ± 1, ± 2, ± 3,… 
 
 
11.5 PERFORMANCE OF A CHIP RATE DETECTOR FOR BPSK 
Equation Section (Next) 
In this section the approximate detection performance of a BPSK signal, in additive noise, will be considered. 
Figure 11.5-1 illustrates the model that will be considered here for the performance analysis.  
 
Input
IBPF
(BW=B)
( )2
NBPF
BW=BN
( )2
LPF
Compare
to δ
Estimate
δ
y’(t)
y’ (t)2
z(t)
v(t)
X(T)
0
(.)
T
dt
∫
Input
IBPF
(BW=B)
( )2
( )2
NBPF
BW=BN
( )2
( )2
LPF
Compare
to δ
Estimate
δ
y’(t)
y’ (t)2
z(t)
v(t)
X(T)
0
(.)
T
dt
∫
 
 
Figure 11.5-1 Chip rate detector for BPSK modulation. 
 
First, the signal plus noise is filtered by the ideal bandpass filter (IBPF) of bandwidth B, and then 
the result is detected in a square law detector and narrowband filtered (NBF) to a bandwidth of BN centered at 
f = 1/T. The tone that is generated at this point is still immersed in noise, and it is detected in another square 
law detector. This result is low pass filtered to pass the dc terms proportional to signal power at f = 1/T and 
the low-pass filtered noise. 
These filtered terms are then integrated in an integrator and the output is compared to a threshold, 
which was based on the input to the integrator when no signal was present. 
 
The input is composed of a BPSK signal and band-limited noise with a two-sided spectral density of 
N0/2. Thus the input can be modeled as 
 
 
( )
( )
( ) 
y t
s t
n t
=
+
 
(11.5-1) 
 
After filtering by the ideal bandpass filter the output is given by 
 
 
( )
( )
( ) 
y t
s t
n t
=
+
%
%
%
 
(11.5-2) 
 
which is the filtered version of (11.5-1). The signal is modeled as  
 

 
                                             Low Probability of Detection Systems 
 
 
           807 
 
0
(
)
( )
Re
( )
 
i
t
s t
v t e ω
θ
+
⎡
⎤
=
⎣
⎦
%
 
(11.5-3) 
 
and the complex envelope is given by 
 
 
( )
2
(
) 
k
T
k
v t
A
a p
t
kT
=
−
∑
%
 
(11.5-4) 
 
where 
( ) 
Tp
t
%
is the filtered version of p
t
T ( ), with the filter being the low pass equivalent of the ideal 
bandpass filter. The noise can be expressed in the quadrature form, as  
 
 
0
0
( )
2
( )cos(
)
2
( )sin(
) 
c
s
n t
n t
t
n t
t
ω
θ
ω
θ
=
+
+
+
%
%
%
 
(11.5-5) 
 
The signal component is defined to be the mean value of the signal squared; thus  
 
 
2( )
( , ) 
ss
E s
t
R
t t
⎡
⎤=
⎣
⎦
%
 
(11.5-6) 
 
Based on (11.5-3) and (11.5-4) along with (11.4-5) out of the ideal bandpass filter, one obtains the signal 
component 
 
 
{
}
0
*
(2
2 )
2
1
1
( ( ))
Re
( , )
Re
( , )
 
2
2
i
t
vv
vv
E
y t
R
t t
R
t t e
ω
θ
−
+
⎡
⎤
⎡
⎤
=
+
⎣
⎦
⎣
⎦
%
 
(11.5-7) 
 
It follows that the signal plus noise out of the squarer is given by 
 
 
0
*
(2
2 )
2
(
)
2
1
1
( ( ))
Re
( , )
Re
( , )
 
2
2
            +n.p.s.t.+ ( )Re
( ( ))
0
i
t
vv
vv
i
t+
y t
R
t t
R
t t e
n t
v(t)e
n t
ω
θ
ω
θ
−
+
⎡
⎤
⎡
⎤
=
+
⎣
⎦
⎣
⎦
⎡
⎤+
⎣
⎦
%
%
%
 
(11.5-8) 
 
where n.p.s.t. denotes nonperiodic signal terms. These terms will not be considered since they are only 
relevant at high SNRs, and the analysis will be based on the assumption of low SNRs. The narrowband 
bandpass filter (NBPF) will filter out the entire signal components, except the line spectra generated by the 
squaring operation. Thus only the signal component located at f = 1/T, where f is the chip rate, will be 
considered, plus the noise that passes through the NBPF. Now consider the baseband terms, which are 
derived from the first term in (11.5-8). Expand 
*
(1/ 2)
( , )
vv
R
t t  in a complex exponential series 
 
 
2
*
2
/
[
(
)][
(
)]
 
i
nt T
T
T
n
k
k
A
p
t
kT
p
t
kT
d e
π
∞
∞
=−∞
=−∞
−
−
=
∑
∑
%
%
 
(11.5-9) 
 
The Fourier coefficients are given by 
 
 
[
]
/ 2
*
2
/
/ 2
(
)
(
)
 
T
i
nt T
n
T
T
T
k
P
d
p
t
kT
p
t
kT
e
dt
T
π
∞
−
−
=−∞
⎡
⎤
=
−
−
⎣
⎦
∑
∫
%
%
 
(11.5-10) 
 
which again can be written as 
 
 
*
*
( )
( )
(
/
)
(
/
)
 
n
L
T
L
T
P
d
H
f P
f H
f
n T P
f
n T df
T
∞
−∞
=
−
−
∫
 
(11.5-11) 
 

 808                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
Writing dn as 
 
 
dn
i
n
n
d
d e
θ
=
 
(11.5-12) 
 
The steady state value of the signal component at f = 1/T out of the NBPF is given  
 
 
1
1/
1
( )
2
cos(2
/
) 
T
d
e
t
d
t T
π
θ
=
+
 
(11.5-13) 
 
which has already been derived in (11.4-32). With the assumption that   = BT/2, and   = 1 (the maximum 
value of d1 occurs at   =1) or B = 2/T the expression for d1 ((11.4-36) is given by  
 
 
1
0
sin( ) sin(
)
0.247  
(
)
P
x
x
d
dx
P
x
x
π
π
π
π
−
=
=
−
∫
 
(11.5-14) 
 
where P is the power of the input direct sequence signal. The tone power is given by 
 
 
2
2
1
1
(2
) / 2
0.122
 
P
d
P
=
=
 
(11.5-15) 
 
where P in the input signal power. The signal times noise term and the noise times noise terms of (11.5-8) 
have been analyzed by Davenport and Root [22] and with a minor correction to account for modulation, the 
results at f = 1/T are given by 
 
 
0
2
0
  
(1/ )
2
 
(1/ )
(
1/ )
n
nn
S
T
PN
S
T
N
B
T
γ
=
=
−
 
(11.5-16) 
 
where N0 is the input noise spectral density and   is the filter loss. The parameter   is given by 
 
 
/ 2
/ 2
( )
( )
B
s
B
s
S
f df
S
f df
γ
−
∞
−∞
= ∫
∫
 
(11.5-17) 
 
Thus the two-sided noise spectral density at f = 1/T is given by 
 
 
'
2
0
0
0
(
1/ )
2
 
2
N
N
B
T
PN
γ
=
−
+
 
(11.5-18) 
 
The spectral density, at f = 1/T, is not flat over the bandwidth and the process is not Gaussian (when BN
B 
it is approximately Gaussian). However in order to proceed with the analysis it will be assumed that the 
process is band-limited white Gaussian noise, with one-sided equivalent spectral density N 
' . Therefore, the 
signal plus noise at the point in the Figure 11.5-1, labeled z(t), is given by  
 
 
1
( )
2 cos(2
/
)
2
( )cos(2
/
)
2
( )sin(2
/
)  
d
c
s
z t
a
t T
n t
t T
n t
t T
π
θ
π
π
=
+
+
+
%
%
 
(11.5-19) 
 
where a =  d1. The noise terms have density N '  and each have two-sided bandwidth BN. The output of the 
squarer and the low-pass filter (which removes the 2/T frequency terms) is given by, after some 
simplifications, 
 

 
                                             Low Probability of Detection Systems 
 
 
           809 
 
2
2
2
2
( )
( )
2
( )
(
( ))
(
( ))  
c
c
s
LPF
z
t
v t
a
an t
n t
n t
=
=
+
+
+
%
%
%
 
(11.5-20) 
 
At this point (11.5-20) can be written in the form 
 
 
2
2
( )
(
( ))
(
( ))  
c
s
v t
a
n t
n t
=
+
+
%
%
 
(11.5-21) 
 
Thus it is seen that v(t) is the composed of two independent noise processes; one has zero mean and one has 
mean a. The signal v(t) is integrated and compared with the threshold, which was estimated from the input 
when only noise was present. The integral can be approximated by the sum of discrete steps of the form 
 
 
0
1
( )
( )
( )
 
I
M
T
i
i
X T
v t dt
v t
t
=
=
≅
Δ
∑
∫
 
(11.5-22) 
 
where M is the least integer greater than BNTI and  t = 1/BN, with TI the integration time. It is shown in the 
appendix that samples of white Gaussian noise are independent every BN seconds, where BN is the bandpass 
(positive frequency) bandwidth of the ideal bandpass filter. Following Proakis [11], the random variable X(T) 
can be described by the following probability density function in the case of noise only as  
 
 
(
)
2
1
2
2
0
/ 2
1
2
( / 2)
N
x
n
X
n
n
N
p
x H
x
e
n
σ
σ
−
−
=
Γ
 
(11.5-23) 
 
and when the signal is present by 
 
 
2
2
2
2
(
)
4
2
1
2
2
2
1
2
1
(
)
 
2
S N
n
S
x
X
n
S
N
S
N
x
S
p
x H
e
I
x
S
σ
σ
σ
+
−
⎛
⎞
+
−⎜
⎟
⎜
⎟
⎝
⎠
−
+
+
⎛
⎞
⎛
⎞
=
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
 
(11.5-24) 
 
where  
 
 
2
N
I
n
B T
=
⎢
⎥
⎣
⎦ 
(11.5-25) 
 
and x
⎢⎥
⎣⎦ denotes the least integer greater than or equal to x. The S parameter is given by 
 
 
2
2
2
n
S
a
=
 
(11.5-26) 
 
and the variance is given the product of the two-sided noise spectral density times the two-sided noise 
bandwidth; thus, 
 
 
2
'
2
0
0
0
2
(
1/
)
4
 
S
N
N
N
N B
N
B
T
PN
B
σ
γ
+
⎡
⎤
=
=
−
+
⎣
⎦
 
(11.5-27) 
and  
 
 
2
'
2
0
0
2
(
1/ )
 
N
N
N
N B
N
B
T
B
σ
⎡
⎤
=
=
−
⎣
⎦
 
(11.5-28) 
 
The false alarm and the detection probabilities are given by 
 

 810                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
0
1
(
)
 
(
)
FA
X
D
X
P
p
x H
dx
P
p
x H dx
δ
δ
∞
∞
=
=
∫
∫
 
(11.5-29) 
 
Letting u = y/S2 the false alarm and detection probabilities can be put in a more convenient form to yield 
 
 
2
1
/ 2
2
/ 2
1
2
( / 2)
N
n
u
FA
n
P
u
e
du
n
δ
σ
−
∞
−
=
Γ
∫
 
(11.5-30) 
 
and5 
 
2
2
2
2
2
4
2
2
1
2
1
2
S N
S N
n
S
u
S
N
D
n
S
N
u
S
P
e
e I
u
du
S
σ
δ
σ
σ
σ
+
+
−
⎛
⎞
−⎜
⎟
∞
⎜
⎟
−
+
⎝
⎠
−
+
⎛
⎞
⎛
⎞
=
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
∫
 
(11.5-31) 
 
Consider the quantity 
2
2
S
N
S
σ
+
. Denoting Pi as the input power it can be shown that 
 
 
(
)
2
2
2
1
2
2
0
0
2
2
( )
2
(
1/ )
4
2
N
I
i
S N
i
N
B T
d
P
S
N
B
T
PN
B
α
σ
γ
+
⎢
⎥
⎣
⎦
= ⎡
⎤
−
+
⎣
⎦
 
(11.5-32) 
 
where   is the filtering loss due to the first bandpass filter of bandwidth B and is given by (11.5-17) and d ( ) 
is the integral 
 
 
1
1
0.5
0
0.5
(1
)
1
sin( ) sin(
)
( )
,  
( )
= 0 
(
)
x
x
d
dx
d
x
x
απ
α
α
α π
π
α
α
π
π
≥
≤≤
−
−
=
−
∫
 
(11.5-33) 
 
From (11.5-17) and (11.5-27) to (11.5-33) it is possible to compute the detection and false alarm 
probabilities for this rate line detector. It should be pointed out that the narrower the narrowband filter and 
the longer the integrator integration time, the better the performance, at least in theory. However, phase noise 
and the lack of exact rate line (frequency) knowledge due to Doppler effects and oscillator drift limit the 
practical bandwidth BN and therefore the performance of this rate line detector. 
 
 
11.6 FREQUENCY ESTIMATION OF AN UNMODULATED TONE WITH A LIMITER  
DISCRIMINATOR 
Equation Section (Next) 
In the field of covert communications any parameter that can be estimated to provide some information about 
the signal under investigation is a worthwhile piece of information. Instantaneous frequency measurement 
(IFM) systems provide carrier frequency information and possibly the spectral shape information of the 
signal under investigation. Consider Figure 11.6-1, which illustrates the discriminator frequency detector.  
 
                                                          
5 Note that PD is best evaluated by the series of Schnidman discussed in Section 6.5.4. 

 
                                             Low Probability of Detection Systems 
 
 
           811 
BPF
(BIF)
Limiter
Discriminator
LPF
(BLPF)
Frequency
estimate
Received signal
plus noise
BPF
(BIF)
Limiter
Discriminator
LPF
(BLPF)
Frequency
estimate
Received signal
plus noise
 
 
Figure 11.6-1 Limiter discriminator frequency estimator. 
 
 
The first element of the system is the bandpass filter having bandwidth BIF. It will be assumed that 
this filter is an ideal bandpass filter to simplify the approximate analysis to follow. The second element is a 
limiter, followed by a discriminator, and in turn followed by an ideal low-pass filter having bandwidth BLPF. 
The unmodulated tone plus band-limited white Gaussian noise out of the BPF can be written as 
 
 
( )
2 cos(
)
2
( )cos(
)
2
( )sin(
) 
c
c
c
s
c
y t
A
t
n t
t
n t
t
ω
θ
ω
θ
ω
θ
=
+
+
+
+
+
 
(11.6-1) 
 
where it has been assumed, without a loss in generality, that the phase of the signal and the noise terms are 
the same. The noise power out of the bandpass filter is given by N0BIF. Each low-pass noise term has a 
spectral density of N0/2, and a two-sided bandwidth of BIF. In what follows, a simplified analysis will be 
presented. Writing (11.6-1) in the envelope and phase form produces  
 
 
(
)
2
2
( )
2 (
( ))
(
( )) cos
( )  
c
s
c
y t
A
n t
n t
t
t
ω
θ
ϕ
=
+
+
+
+
 
(11.6-2) 
 
where the phase function is given by 
 
 
1
( )
( )
tan
 
( )
s
c
n t
t
A
n t
ϕ
−⎡
⎤
=
⎢
⎥
+
⎣
⎦
 
(11.6-3) 
 
After the limiter, the approximate fundamental component of the output is given by 
 
 
(
)
( )
cos
( )  
L
c
y t
A
t
t
ω
θ
ϕ
≅
+
+
 
(11.6-4) 
 
where AL is the amplitude of the limiter output level. Assuming that the signal-to-noise ratio is reasonably 
high, the total phase of (11.6-4) can be approximated by  
 
 
( )
( )
2
 
s
c
n t
t
f t
A
φ
π
θ
⎡
⎤
≅
+
+ ⎢
⎥
⎣
⎦
 
(11.6-5) 
 
The instantaneous frequency, in Hz, is given by  
 
 
( )
( )
( )
 
2
2
s
c
n t
t
f t
f
A
φ
π
π
=
=
+
&
&
 
(11.6-6) 
 
The noise-induced frequency error is seen to be the quantity 
 
 
( )
2
sn t
f
A
π
Δ = &
 
(11.6-7) 
 
It is well known that the power spectral density of the derivative of a noise process is given by  

 812                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
 
2
2
0
2
2
(2
)
( )
( )
         
 
(2
)
2
2
sn
IF
f
f
S
f
N
B
f
S
f
f
A
A
π
π
Δ
⎛
⎞
=
=
≤
⎜
⎟
⎝
⎠
 
(11.6-8) 
 
It therefore follows that the variance of the frequency error, for this high SNR case, is given by 
 
 
2
2
0
2
0
LPF
B
f
N
f df
A
σ Δ =
∫
 
(11.6-9) 
 
where it is assumed that the low-pass filter bandwidth is less than one half of the bandpass filter bandwidth. 
Evaluating (11.6-9) produces the result 
 
 
(
)
3
3
2
2
2
0
(
)
=
      Hz  
3(
/
)
3
LPF
LPF
f
IF
B
B
A
N
B
σ
ρ
Δ =
 
(11.6-10) 
 
where      
   N0BIF) and is the signal-to-noise ratio out of the bandpass filter  Thus the center frequency of a 
tone has been estimated with a one sigma error of  
 
 
(
)
3
   Hz
3
LPF
f
IF
B
B
σ
ρ
Δ =
 
(11.6-11) 
 
Hence the IFM could be used to detect the line components from a filter and squarer or delay and multiply 
detector. 
  major problem with IFM receivers is the fact that they do not work well with two or more spectral 
lines present at one time. If one tone is considerably stronger than the other tones, the others will degrade its 
estimate. If the powers of the stronger signals are comparable then the estimate will be normally useless. 
All the rate line detectors have assumed to have only one signal present at the input. However this 
may not be the case in the “real world,” where multiple signals may be present, and thus multiple lines might 
appear. If a high gain antenna can be utilized then it may be possible to “separate” the different signals.  
 
11.7 SUMMARY 
 
This chapter introduced some of the types of low probability of intercept receivers that are used to 
surreptitiously detect signals. Covert communications were discussed along with some propagation models 
that are applicable to LPI detection. The radiometer and its performance were introduced along with its 
variants. This was followed by a discussion of spectrum analyzers.  
Narrowband signals were introduced and applied to various chip modulations. With this 
background, second order cyclostationary feature detection was presented via the filter and square circuit. 
The intensity and the frequency of the lines that generated from this process are developed for BPSK, QPSK, 
OQPSK, MSK, and frequency hopping, with both frequency shift keying modulation and DPSK modulation.  
 
Based on a Gaussian approximation, an estimate of both the detection probability and the false 
alarm probability were obtained for a PLL-based tone detection scheme for the filter and squarer detector, 
followed by a PLL and its lock detector. BPSK, balanced QPSK, balanced OQPSK, and MSK were assumed 
as the direct sequence modulation type. This same scheme was then applied to slow and fast frequency 
hopping with MFSK modulation and slow frequency hopping with DPSK data modulation.  
 
In addition, the delay and multiply detector was briefly looked at for balanced QPSK data 
modulation. 
Finally an instantaneous frequency estimator was analyzed, assuming high signal-to-noise ratio for 
the standard deviation of the frequency error of the carrier frequency. Obviously this brief introduction 

 
                                             Low Probability of Detection Systems 
 
 
           813 
doesn’t do justice to the many techniques used in covert communications work, but at least it has provided a 
brief introduction to some of the techniques used.  
 
References 
 
[1] D. L. Nicholson, Spread Spectrum Signal Design, New York: Computer Science Press, 1988. 
 
[2] F. H. Palmer, "Measurements of VHF/UHF Propagation Characteristics over Arctic Paths,” IEEE Trans. on Antennas and  
       Propagations, Vol. AP-28, No. 6, November 1980. 
 
[3] J. J. Egli, “Radio Propagation Above 40 MHz over Irregular Terrain,” Proc. IRE, 1957, pp. 1383–1391.  
 
[4] M. Hata, “Empirical Formula for Propagation Loss in Mobile Radio Services,” IEEE Trans. on Vehicular Technology, VT-29, 1980, 
pp.  
      317–325. 
 
[5] Y. Okumura, E. Ohmori, T. Kawana, and K. Fukuda, “Field Strength and Its Variability in VHF and UHF Land-Mobile Radio  
      Service,” Rev. Elec. Communication Lab., 1968, pp. 825–873. 
 
[6] V. K. Garg, K. Smolik, and J. E. Wilkes, Applications of CDMA in Wireless/Personal Communications, Englewood Cliffs, NJ:  
       Prentice-Hall, 1997. 
 
[7] J. Betz and R. Rifkin, “Intercept Detection Performance,” Mitre Report MTR 94B0000092, September 1994, Secret (only  
       unclassified portions used in this book). 
 
[8] H. Van Trees, Detection, Estimation, and Modulation Theory, Vol. III, Section 12.2, New York: John Wiley & Sons, 1971. 
 
[9] R. Price and P. E. Green, “Signal Processing in Radar Astronomy-Communication Via Fluctuating Multipath Media,” MIT, Lincoln  
      Lab., TR 234, October 1960. 
 
[10] H. Urkowitz, “Energy Detection of Unknown Deterministic Signals,” Proceedings of the IEEE, Vol. 55, No. 4, April 1967. 
 
[11] J. G. Proakis, Digital Communications, New York: McGraw-Hill, 1983. 
 
[12] A. Sonnenschein and P. Fishman, “Limitations on the Detectability of Spread Spectrum Signals,” Milcom 89, Boston, MA,  
        October 15–18, 1989. 
 
[13] J. K. Holmes, Coherent Spread Spectrum Systems, Malabar, FL: Krieger Publishing, 1990. 
 
[14] Probe Systems Inc. “Principles of Spread Spectrum Intercept,” Teal Wing Program, PSI-ER-5419-05, February 1978, Secret  
        (unclassified sections only). 
 
[15] W. A. Gardner and C. M. Spooner, “Signal Interception: Performance Advantages of Cyclic-Feature Detectors,” IEEE Trans. on  
        Communications, Vol. 40, No. 1, January 1992. 
 
[16] J. D. Edell, “Wideband, Noncoherent, Frequency-Hopped Waveforms and Their Hybrids in Low-Probability-of-Intercept  
         Communications,” Naval Research Lab. Report NRL 8025, Washington, D.C., November 8, 1976. 
 
[17] D. G. Woodring, “Performance of Optimum and Suboptimum Detectors for Spread Spectrum waveforms,” Naval Research Lab.  
        Report NRL 8432, Washington, D.C., December 30, 1980. 
 
[18] D. Woodring and J. Edell, “Detectability Calculation Technique,” U.S. Naval Research Laboratory, Code 5480, September 1, 1977. 
 
[19] R. Dillard, “Detectability of Spread-Spectrum Signals,” IEEE Trans. on Aerospace and Electronic Systems, Vol. AES-15, No. 4, 
July 1979. 
 
[20] R. J. Webster, “Minimum Detectable Signal of Spectrogram Displays,” IEEE Trans. on Signal Processing, Vol. 41, No. 4, April 
1993, pp. 1724–1726. 
 
[21] W. A. Gardner, Introduction to Random Process, 2nd ed., New York: McGraw-Hill, 1989. 
 
[22] W. B. Davenport and W. L. Root, An Introduction to the Theory of Random Signals and Noise, New York: McGraw-Hill, 1958. 
 
[23] R. E. Ziemer and R. L. Peterson, Digital Communications and Spread Spectrum Systems, New York: Macmillan Publishing  
        Company, 1985. 
 

 814                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
 
Selected Bibliography 
 
R. A. Dillard and George M. Dillard, Detectability of Spread-Spectrum Signals, Norwood, MA: Artech House, 1989. 
 
R. A. Scholtz, “The Spread Spectrum Concept,” IEEE Trans. on Communications, Vol. COM-25, No. 8, August 1977. 
 
D. J. Torrieri, Principles of Secure Communication Systems, Dedham, MA: Artech House, 1985. 
 
Problems 
 
1. Show that (11.2-3) can be written in the form of (11.2-4), where QM(a,b) is defined by (11.2-5). 
 
2. Investigate the optimum burst time of a signal to minimize the probability of detection for a fixed false 
alarm probability under the assumption of fixed signal burst energy, at low input SNR. Using (11.2-7) to 
(11.2-9) show that for a fixed false alarm probability, PFA, and fixed energy (E = PT), with the 
assumption that the radiometer has fixed integration time T and the signal burst is T seconds long, and 
the radiometer is synchronized in time with the pulse transmission, that the optimum burst time 
(minimum detection probability) is as long as possible (and therefore the signal power is as low as 
possible). To establish this result it is necessary to adjust the threshold in such a way that as T varies E 
and   are held constant and P will vary to satisfy the energy constraint. 
 
3. Consider the one-pole LPF radiometer that was discussed in Section 11.2.3 and assume that the time 
constant is  . 
(a) Show that the mean output at the end of the signal pulse of T seconds is given by  
 
 
 
 
(
)
/
0
1
1
 
T
N B
SNR
e
τ
μ
−
⎡
⎤
=
+
−
⎣
⎦ 
 
 
 
 
    (P11-1) 
 
             where SNR is the input signal-to-noise ratio (SNR = P/(N0B)). 
(b) Show that the steady state variance of the output noise is given by  
 
 
 
 
 
(
)
2
2
0
0
1
2
 
2
N B
PN
σ
τ
⎛
⎞
=
+
⎜
⎟
⎝
⎠
 
 
 
 
    (P11-2) 
 
                where the two-sided noise bandwidth of the low-pass filter is 1/(2 ). 
(c) Show that the false alarm probability, with an assumption that the output variable  
        is approximately Gaussian, that  
 
 
 
 
( )
0
2
0
-
   where  =
 
1
2
FA
N B
P
Q
N B
δ
β
β
τ
=
⎛
⎞
⎜
⎟
⎝
⎠
 
 
 
 
    (P11-3) 
                 and where 
 
 
 
 
2
 
2
1
( )
 
 
2
t
x
Q x
e
dt
π
−
∞
= ∫
  
 
 
 
    (P11-4) 
 
(d) Show that the under the same approximation that the probability of detection is  
        given by  

 
                                             Low Probability of Detection Systems 
 
 
           815 
 
 
 
(
)
/
2
 
1
1
2
T
D
B
SNR
e
P
Q
SNR
τ
β
τ
−
⎡
⎤
−
−
⎢
⎥
=
+
⎢
⎥
⎣
⎦
 
 
 
 
    (P11-5) 
 
      (e)  Show that the value of   that makes the detection probability greatest occurs when  = 0.795T. 
      (f)  Show that at low SNR the loss relative to the integrate-and-dump radiometer is about 0.5-dB on the  
            input SNR. 
 
4. Show that the complex envelopes satisfy the same relationships as the actual signals themselves; that is, 
show that 
 
 
 
 
(1)   
( )
( )*
( )   and 
(2)    
( )
( )
( )
o
i
L
o
i
L
v t
v t
h t
V
f
V
f H
f
=
=
 
 
 
 
    (P11-6) 
 
where Vo(f) and Vi(f) are defined in Chapter 1. 
 
5. Starting with (11.4-18), that is, if 
 
 
 
 
 
    
[
]
2
2
/
( )
 
i
nt T
n
T
P
c
p
t
e
dt
T
π
∞
−
−∞
=
∫
%
 
 
 
 
    (P11-7) 
 
show that cn can be written, in the frequency domain, in the form  
 
 
 
 
( ) ( )
( /
)
( /
)
 
n
L
L
T
P
c
H
f P f H
n T
f P n T
f df
T
∞
−∞
=
−
−
∫
 
 
    (P11-8) 
 
where HL(f) is the low-pass equivalent filter, of the bandpass filter preceding the squarer. 
 
6.    Establish that the value of d1 can be expressed as (11.4-36) by doing the following: 
      (a) Evaluate the region that the product of the filter at baseband and the filter at 1/T Hz is nonzero over 
the frequency (1- )/T to  /T so that from (11.4-31) d1 becomes 
 
 
 
/
1
1
0.5
0.5
(1
)/
sin(
) sin(
)
( )
,  and 
( )
0 
(
)
T
T
fT
fT
d
PT
df
d
fT
fT
α
α
α
α
π
π
π
α
α
π
π
π
≥
≤
−
−
=
=
−
∫
 
   (P11-9) 
 
       (b) Make a change of variables and achieve the result indicated in (11.4-36).  
 
7.   (a) Evaluate the carrier covariance Fourier series expansion coefficients for OQPSK to obtain  
 
 
      
1
( )
( )
( /
)
( /
)
 
2
i n
n
L
T
L
T
P
c
e
H
f P
f H
n T
f P n T
f df
T
π
∞
−∞
⎡
⎤
=
−
−
−
⎣
⎦∫
 
 
  (P11-10) 
 
 (b)  Evaluate the baseband covariance to obtain 
 
 
(
)
*
*
1
( )
( )
( /
)
( /
)
 
2
i n
n
L
T
L
P
d
e
H
f P
f H
n T
f P n T
f df
T
π
∞
−
−∞
=
+
−
−
∫
 
 
 
  (P11-11) 
 
Conclude that the carrier spectral lines occur only for n even and the baseband spectral lines occur only 
for n odd. 
 

 816                                 Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
  
8. Show that the coefficients of the Fourier series for (11.4-115) is given by 
 
 
 
        
2
/
*
0
cos(
)
( )
(
)
 
c
i
nt T
n
P
d
t
p t p t
e
dt
T
π
ω
τ
∞
−
−∞
=
−
∫
 
 
 
 
  (P11-12) 
 
 
 
2
/
*
2
0
cos(
)
( )
(
/
)
 
i
n
T
i
f
n
P
d
e
P f P
f
n T e
df
T
π τ
π τ
ω τ
∞
−
−∞
=
−
∫
 
 
 
 (P11-13) 
 
Hint: Assume that the second pulse function in (11.4-113) is complex. 
 
9.    Show that (11.2-15) follows from (11.2-14). 
 
 
APPENDIX 11A 
SAMPLES FROM A BANDPASS FILTERED GAUSSIAN RANDOM PROCESS 
Equation Section  1 
In this appendix ideal bandpass filtered Gaussian noise will be sampled and shown that all samples taken at 
the rate of every 1/B seconds will be statistically independent. 
Let the noise be represented in narrowband bandpass form 
 
 
0
0
( )
2
( )cos(
)
2
( )sin(
) 
c
s
n t
n t
t
n t
t
ω
θ
ω
θ
=
+
+
+
 
(11A-1) 
 
where   is a random variable uniform from 0 to 2 . The autocorrelation function is given by 
 
 
[
]
( )
( ) (
)  
n
R
E n t n t
τ
τ
=
+
 
(11A-2) 
 
Evaluating one obtains 
 
 
0
0
0
0
( )
2
( )cos(
)cos(
(
))
2
( )sin(
)sin(
(
)) 
c
s
n
n
n
R
R
t
t
R
t
t
τ
τ
ω
ω
τ
τ
ω
ω
τ
=
+
+
+
 
(11A-3) 
 
Since both quadrature autocorrelation functions are the same, this simplifies to  
 
 
0
( )
2
( )cos(
) 
c
n
n
R
R
τ
τ
ω τ
=
 
(11A-4) 
 
To evaluate the quadrature autocorrelation function consider 
 
 
2
( )
( )
 
c
i
f
n
R
S f e
df
π τ
τ
∞
−∞
= ∫
 
(11A-5) 
 
 
0
sin(
)
( )
 
2
cn
N B
B
R
B
π τ
τ
π τ
=
 
(11A-6) 
 
since the low-pass noise terms have bandwidth B Hz extending from –B/2 to B/2 Hz. The autocorrelation of 
the noise process satisfies 
 
 
0
0
sin(
)
( )
cos(
) 
n
B
R
N B
B
π τ
τ
ω τ
π τ
=
 
(11A-7) 
 
It is clear that samples of n(t) are uncorrelated, and therefore statistically independent when   
satisfies  

 
                                             Low Probability of Detection Systems 
 
 
           817 
 
/
     =
1,
2,
3,... 
k B,
k
τ =
±
±
±
 
(11A-8) 
 
Thus samples are independent every 1/B seconds.  


 
                                    819 
CHAPTER 12 
Lock Detector Theory and Absorbing Markov Chains  
 
 
12.0 INTRODUCTION  
Equation Chapter 12 Section 1 
This chapter deals with the performance of lock detectors, which are normally found in conjunction with 
almost all synchronization devices. The analytical approach taken in this chapter is to treat the lock detectors 
as absorbing Markov chains. The results of which, with the use of simple matrix operations, allow one to 
obtain the mean and variance of the time to indicate the out-of-lock state. The same theory can be used to 
determine performance for the case of acquisition lock detection and for out-of-lock detection as well. Lock 
detectors are a very important part of any system design. They are used with PN code acquisition and PN 
code-tracking loops, frequency-hopping acquisition and tracking, carrier acquisition and tracking loops, 
frequency-hopping acquisition and tracking loops, as well as bit synchronizers in acquisition and tracking. 
 
Lock detectors are used for both acquisition indication and tracking lock status of code acquisition 
circuits, code-tracking circuits, and bit synchronization circuits. When the system is in lock, it is desirable 
that the lock detector indicates the in-lock condition as soon as possible, after the system locks. Conversely, 
if the system suddenly drops out of lock, it is highly desirable that the lock detector indicate that fact, as soon 
as possible. 
 
Acquisition time is normally determined by the time the system takes to acquire the signal (be it PN 
code, hop pattern, carrier, and so on) and to indicate that it is in lock. Thus the lock detector’s response time 
is a factor in the overall acquisition time. Also the time to indicate the out-of-lock state is an important 
consideration when designing systems, since reacquisition can’t start until the out-of-lock indication occurs. 
 
The method developed here follows the work of Holmes [1], whose matrix approach was based on 
Kemeny and Snell’s [2] textbook and was first applied to a lock detector problem by Hopkins [3]. First, some 
background material will be presented, and then the theory will be applied to some lock detectors 
configurations. 
 
First we will present the mathematical background for lock detectors and then analyze different 
algorithms for lock detector performance via the derived theory and then follow that with some different lock 
detector models for various modulation types.  
 
12.1 ABSORBING MARKOV CHAINS 
 
In this section a few definitions will be introduced to set the stage for the forthcoming analysis. The states of 
a Markov chain can be divided into transient states and persistent states (note: the terms “recurrent” and 
“ergodic” are sometimes used in place of persistent). Transient states, once left, can never be entered again, 
while persistent states, once entered, can never be left. A set of persistent states with only one element is 
called an absorbing state, which is characterized by a transition probability of pii = 1. In this case all the 
other entries in the i-th row of the transition matrix must be zero. In general pij denotes the probability of 
going from state i to state j in one step.  
A Markov chain, consisting of a single persistent set, is called a persistent Markov chain. A Markov 
chain, all of whose nontransient states are absorbing, is called an absorbing Markov chain.  
 
Every Markov chain must have a persistent set of states, but it does not have to have a set of 
transient states. If a Markov chain contains only one state, then it must be an absorbing chain (this is not a 

 820                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
very interesting chain, however!). As an example to clarify these definitions, consider a Markov chain 
characterized by the state transition matrix of the form 
 
 
1
                1    2    3    4    5
1
1
0
0
0
0
2
0
0
0
   
          
3
0
0
0
4
0
0
0
5
0
0
0
0
1
p
q
P
p
q
p
q
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
 
(12.1-1) 
 
where q is the probability of the process going to one higher state and p the probability that of going to one 
lower state. Notice once the process reaches state 1 or 5, it remains there forever; hence states 1 and 5 are 
absorbing states. States 2, 3, and 4, are transient states, since eventually the process leaves them and remains 
in the persistent states (1 and 5). Note that this matrix describes an absorbing Markov chain. Note also that 
the sum of the row entries equals unity. This means that the sum the probabilities going from state i to any of 
the states j is one. 
 
If we modify our example to have “reflecting boundaries” at states 1 and 5, the transition matrix 
becomes 
 
 
2
                1    2    3    4    5
1
0
1
0
0
0
2
0
0
0
   
           
3
0
0
0
4
0
0
0
5
0
0
0
1
0
p
q
P
p
q
p
q
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
 
(12.1-2) 
 
 
Now there are no transient states; they are all persistent. Since they all communicate (i.e., any state 
can be reached by any other state) there is one persistent set. Hence we have a persistent Markov chain. The 
rest of this section we will be concerned with absorbing Markov chains. 
 
Theorem 1 In any Markov chain the probability that the process is in a persistent state tends to 1 as the 
number of steps, n, tends to infinity, no matter where the starting point is. 
 
Proof Once a persistent set is reached it can never be left (by definition of a persistent set of states). Suppose 
that the process starts in a transient state. Suppose that from any transient state it is possible to reach an 
ergodic (persistent) state in not more than n steps. There is positive probability p of entering a persistent state 
from any transient state in n steps. Therefore the probability of not reaching a persistent state, in n steps, is  
1–p < 1. Consequently, the probability of not reaching a persistent state in mn steps in less than or equal to  
(1–p)m, which approaches zero, as m 
. 
→∞ Hence, it must reach a persistent state. 
 
From this theorem we see that if the chain is absorbing, the process will eventually end up in an 
absorbing state with probability of 1. Most of the lock detector problems that we will be concerned with will 
be modeled as absorbing chains, with a single absorbing state. 
 
In order to utilize our matrix results it is convenient to utilize a canonical form of the transition 
matrix P, which we will call Pc. First, group all the persistent states together, and then all the transient states. 
Assume there are n total states and t transient states, and therefore n−t persistent states. Rearranging the 
matrix according to the two types of states yields 
 
 
 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         821 
 
}
}
              
     
c
n
t
t
n
t
S
P
t
R
Q
−
−
⎡
⎤
=
⎢
⎥
⎣
⎦
O  
(12.1-3) 
 
where the submatrix S is concerned with the process after it has reached the persistent states, O is an  
(n – t) × (t) all-zero submatrix, the t by (n – t) submatrix R is concerned with the transition from transient 
states to persistent states, and the submatrix Q deals with the process as long as it stays in the transient states. 
 
Theorem 1 allows us to conclude that the powers of Q tend to a t by t zero matrix, and consequently 
all the elements of the last t columns of 
n
cP
 0 as n 
 0. 
 
Now consider an absorbing chain. For an absorbing Markov chain it is obvious that the canonical 
form is given by 
 
}
}
              
     
c
n
t
t
n
t
I
P
t
R
Q
−
−
⎡
⎤
=
⎢
⎥
⎣
⎦
O  
(12.1-4) 
 
since, by definition, if we have n – t absorbing states, then I represents the absorbing states as an  
(n – t) × (n – t) unit submatrix. With probability one, the chain will enter an absorbing state and stay there 
(i.e., it will be “absorbed”). In what follows, the unit matrix I, when it is used in this chapter for addition, 
subtraction, and multiplication, will be assumed to be of the same dimensions as the matrix it is being added 
to or subtracted from, or multiplied by. 
 
Example 1 Let us consider our first example, which has the transition matrix given by  
 
 
1
                1    2    3    4    5 
1
1
0
0
0
0
2
0
0
0
   
          
3
0
0
0
4
0
0
0
5
0
0
0
0
1
p
q
P
p
q
p
q
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
 
(12.1-5) 
 
Since states 1 and 5 are absorbing, the canonical form is given by  
 
 
 
1
                 1    5    2    3    4 
1
1
0
0
0
0
5
0
1
0
0
0
   
          
2
0
0
3
0
0
0
4
0
0
0
cP
p
0
q
p
q
q
p
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
 
(12.1-6) 
 
where the states 1 and 5 are arranged to form a two-dimensional I matrix, and all states agree with the 
original matrix in the sense that the same elements occur at the same row and column number. Hence it is 
clear from (12.1-6) that 
 
 

 822                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
1
0
0
0
0
    =
 
0
1
0
0
0
0
0
0
0
0    =
0
0
0
0
I
p
q
R
Q
p
q
q
p
⎡
⎤
⎡
⎤
= ⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
⎡
⎤
⎡
⎤
⎢
⎥
⎢
⎥
= ⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
O
 
(12.1-7) 
 
 
If we do not care at which state the absorbing set of states is entered, we may combine the two 
absorbing states together to obtain  
 
 
 
 
 
'
1
            1or5
2
3
4 
1or 5 1
0
0
0
2
0
0
3
0
0
4
0
0
c
p
q
P
p
q
q
p
⎡
⎤
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎣
⎦
 
(12.1-8) 
 
 
When we are interested in what happens as we go from state j to state k we may make state k an 
absorbing state. We will find that absorbing chains answer the type of questions we have regarding the time 
to drop out of lock, as well as the time to enter lock, for lock detectors. 
 
Equation Section (Next) 
12.2 THE FUNDAMENTAL MATRIX 
 
A very important matrix will be used in the following development. First we prove a theorem required to 
prove that the matrix exists. 
 
Theorem 2 If Qn tends to 0 (the zero matrix) as n tends to infinity, then [I – Q] has an inverse, and further 
 
 
[
]
1
0
  0
      
 
k
k
I
Q
Q
Q
I
∞
−
=
−
=
=
∑
 
(12.2-1) 
 
Proof Consider the following equality: 
 
 
2
3
1
(
)(
...
)
n
n
I
Q I
Q
Q
Q
Q
I
Q
−
−
+
+
+
+
+
=
−
 
(12.2-2) 
 
 
We shall show that I – Q has a nonzero determinant since this is a sufficient condition for the matrix 
to have an inverse. By hypothesis, the right side of this equation converges to the unit matrix I. Hence the 
determinant of the right side is nonzero for sufficiently large n. Now the determinant of the product of two 
matrices is the product of the two determinants. Therefore I – Q cannot have a zero determinant, which is 
what we set out to show; that is, I – Q has an inverse. Now premultiply both sides of the equation by  
[I – Q]–1 to yield 
 
 
[
]
1
2
3
1
 
 
 
 
n
n
I
Q+ Q + Q + ...Q
I
Q
I
Q
−
−
⎡
⎤
⎡
⎤
+
=
−
−
⎣
⎦
⎣
⎦ 
(12.2-3) 
 
Therefore, as n becomes unbounded, one obtains from (12.2-3) 
 
 
[
]
1
  0
 
k
k
I
Q
Q
∞
−
=
−
= ∑
 
(12.2-4) 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         823 
 
This leads to the following result. 
 
Corollary 1 
 
[
]
1
0
 0
       
 
k
k
I
Q
Q
Q
I
∞
−
=
−
=
=
∑
 
(12.2-5) 
 
Definition 1 We define the fundamental matrix for an absorbing Markov chain to be the matrix, where: 
 
 
[
]
1,       
  
N
I
Q
t
t
−
=
−
×
 
(12.2-6) 
 
and I and Q are of the same dimensions, and Q is as defined in (12.1-4). 
 
 
12.3 MEAN AND VARIANCE OF THE NUMBER OF TIMES A PROCESS IS IN A TRANSIENT  
STATE 
Equation Section (Next) 
In this section we develop the mean and variance of the number of times a Markov process, starting in a 
transient state, remains in a transient state. 
 
Definition 2 We define nj to be the total number of times that the process is in state j (denoted by Sj), where 
Sj is a transient state. Also, define uj
k as a function that is equal to 1 if the process is in state Sj after k steps, 
and is zero otherwise. 
 
 
In this chapter we will denote { }
 i j
a
 as a matrix whose ij component is ai j. Similarly we write 
{ } 
ja
 for a row vector and { } 
ia
 for a column vector. 
 
Theorem 3 Letting T denote the set of transient states, we have 
 
 
{
}
[
]
1       
         ,
  
i
j
i
j
E
n
N
I
Q
t
t
S S
T
−
⎡
⎤=
=
−
×
∈
⎣
⎦
 
(12.3-1) 
 
where {
} 
i
j
E
n
⎡
⎤
⎣
⎦
 denotes the t×t dimensioned matrix, composed of elements formed by the mean number 
of total times the process is in state j, starting in state i. Hence this result shows that the average number of 
times that the process is in a particular transient state j, starting in state i, is the ij-th element of the matrix N. 
Furthermore it establishes the fact that the mean number of times the process is in a particular state is finite. 
 
Proof First we note that by definition 
 
 
j
 0
k
j
k
n
u
∞
=
= ∑
 
(12.3-2) 
 
Therefore  
 
{
}
 0
 0
k
k
i
j
i
j
i
j
k
k
E
n
E
u
E
u
∞
∞
=
=
⎧
⎫
⎡
⎤
⎧
⎫
⎡
⎤
⎡
⎤=
=
⎨
⎬
⎨
⎬
⎢
⎥
⎣
⎦
⎣
⎦
⎣
⎦
⎩
⎭
⎩
⎭
∑
∑
 
(12.3-3) 
 

 824                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
Now since 
( )  
k
ijp
 is defined as the probability of going from state i to state j in k steps, we have, 
since u j
k is either one or zero, the result 
 
 
{
}
( )
( )
( )
 0
 0
(
) 0
 
1
 
k
k
k
k
i
j
ij
ij
ij
k
k
E
u
1- p
p
p
∞
∞
=
=
⎧
⎫
⎧
⎫
⎡
⎤=
× +
×
=
⎨
⎬
⎨
⎬
⎣
⎦
⎩
⎭
⎩
⎭
∑
∑
 
(12.3-4) 
 
But {
} [ ]
( )
k
k
ij
c
p
P
=
, for all states i, j 
T
∈
. Recall that 
 
 
[ ]
c
S
P
R
Q
⎡
⎤
= ⎢
⎥
⎣
⎦
O
 
(12.3-5) 
 
It is clear by matrix multiplication that 
 
 
[ ]
'
n
n
c
n
S
P
R
Q
⎡
⎤
= ⎢
⎥
⎣
⎦
O
 
(12.3-6) 
 
where R' is in general different from R, but is of no concern here, and S n and Q n are just the n-th powers of 
their respective matrices. But since the states i and j were restricted to transient states, we have 
 
 
 0
 0
     
,
  transient states 
(k)
k
ij
i
j
k
k
p
Q
S S
∞
∞
=
=
⎧
⎫=
⎨
⎬
⎩
⎭
∑
∑
 
(12.3-7) 
 
 
By our corollary 1, we have  
 
 
[
]
1
 0
       x   matrix  
(k)
ij
k
p
I
Q
N
t
t 
∞
−
=
⎧
⎫=
−
=
⎨
⎬
⎩
⎭
∑
 
(12.3-8) 
 
This completes the proof. 
 
Example 2 To illustrate the application of the matrix [N] consider the canonical form of the transition matrix 
hereh 
 
               1       2        3 
1
1
0
0
2 1/ 2
0
1/ 2
3 1/ 4
1/ 4
1/ 2
cP
⎡
⎤
⎢
⎥
=
⎢
⎥
⎢
⎥
⎣
⎦
 
(12.3-9) 
 
Therefore it follows that 
 
            2        3 
2
0
1/ 2
3 1/ 4
1/ 2
Q
⎡
⎤
=
⎢
⎥
⎣
⎦
 
(12.3-10) 
 
Hence the fundamental matrix is given by 
 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         825 
 
[
]
1
                                 2       3 
2 4/3
4/3
 
3 2/3
8/3
N
I
Q
−
⎡
⎤
=
−
=
⎢
⎥
⎣
⎦
 
(12.3-11) 
 
 
It follows that the mean number of times the process is in state 2 starting in state 3 before entering 
state 1 is 2/3, whereas the mean number of times the process is in state 3, starting at state 3, before entering 
state 1, is 8/3. Note that the mean number of times the process is in a nonabsorbing state, starting in state 3, is 
10/3 (2/3+8/3), and the mean number of times the process is in a nonabsorbing state, starting in state 2, is 8/3 
(4/3+4/3). 
 
 
We are now at a point in our development that we can prove a slightly less general form of our main 
results. The results are found in Kemeny and Snell [2]. 
 
Definition 3 Let n be the function giving the time, including the original position, in which the process is in a 
transient state. Note that n is an integer-valued function. 
 
 
If a process starts in an ergodic state, then n = 0. If the process starts in a transient state, then n gives 
the total number of steps needed to reach an ergodic set. It is to be noted that it is assumed that the time (or 
dwell in each state) is unity. In an absorbing chain this is the time to absorption. 
 
Theorem 4 The mean value of n, given that the process starts in state i, is given by  
 
 
[ ]
{
} [ ]       
    and  is a   
 1 column vector 
i
i
E n
N
S
T
t
=
∈
×
1
1
 
(12.3-12) 
 
where [N] is the matrix [I-Q]-1 and 1 is a t component unit column vector (recall that Q is a t × t matrix), 
each component of which represents the time in that state. Note that both the left side and the right side of 
(12.3-12) are column vectors with t components, as is required. 
 
Proof From our definition of nj we have 
 
 
  
j
j
S
T
n
n
∈
= ∑
 
(12.3-13) 
 
with T denoting the set of transient states, so that  
 
 
[ ]
{
}
  
j
i
i
j
S
T
E n
E
n
∈
⎧
⎫
⎪
⎪
⎡
⎤
= ⎨
⎬
⎣
⎦
⎪
⎪
⎩
⎭
∑
 
(12.3-14) 
 
 
But in Theorem 3 we have showed that 
 
 
{
}
i
j
E
n
N
⎡
⎤=
⎣
⎦
 
(12.3-15) 
 
Hence it follows that  
 
 
[ ]
{
}
iE n
N
=
1  
(12.3-16) 
 
Since this expression gives the row sums of the matrix N. 
 

 826                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
Theorem 5 The variance of the time that the process is in a transient state, starting in state i, is given by 
 
 
[ ]
sq
i
var
(2
 )
 (
)       S
 
i n
N
I N
N
T
=
−
−
∈
1
1
 
(12.3-17) 
 
where again (N1)sq is a t dimensional column vector having components that are the square of each 
component of N1. Thus this equation gives the variance of the number of times (n) that the process is in 
transient states before being absorbed, given that the process started in state i. This result holds for unit 
occupation times (alternatively dwell times). 
 
Proof: First we note that by definition 
 
 
[ ]
{
} {
}
[ ]
{
}
2
2
var
 
 
i
i
i
n
E
n
E n
⎡
⎤
=
−
⎣
⎦
 
(12.3-18) 
 
 
Hence it remains to evaluate Ei[n2], since the second term has been evaluated in (12.3-16). Denote 
~T  as the set of nontransient states (persistent states). Then  
 
 
{
}
2
2
  
    
1
(
1)
 
k
k
i
ik
ik
k
S
T
S
T
E
n
p
p E
n
∈
∈
⎧
⎫
⎪
⎪
⎡
⎤
⎡
⎤
=
⋅+
+
⎨
⎬
⎣
⎦
⎣
⎦
⎪
⎪
⎩
⎭
∑
∑
%
 
(12.3-19) 
 
so that 
 
 
{
}
[ ]
2
2
 
 
   
 
1
2
 
k
k
k
i
ik
ik
k
ik
k
S
T
S
T
S
T
T
E
n
p
p E
n
p E
n
∈
∈
∈
∪
⎧
⎫
⎪
⎪
⎡
⎤
⎡
⎤
=
⋅+
+
⎨
⎬
⎣
⎦
⎣
⎦
⎪
⎪
⎩
⎭
∑
∑
∑
%
 
(12.3-20) 
 
where 
kS
T
T
∈
∪%  denotes the states that are in T or T% (i.e., the whole space). Now since the probability of 
going from state i to any of the possible states is 1, we have 
 
 
{
}
2
2
 
E
2 (
)  
k
i
ik
i
S
T
E
n
p
n
Q N
∈
⎧
⎫
⎪
⎪
⎡
⎤
⎡
⎤
=
+
+
⎨
⎬
⎣
⎦
⎣
⎦
⎪
⎪
⎩
⎭
∑
1
1
 
(12.3-21) 
 
where the last term on the right was obtained by noting 
[ ]
 
(
)
k
ik
k
S
T
p E
n
Q N
∈
=
∑
1 . Finally, we have 
 
 
{
}
2
2
i
i
E
n
2QN
QE
n
⎡
⎤
⎡
⎤
=
+
+
⎣
⎦
⎣
⎦
1
1
 
(12.3-22) 
 
or 
 
{
}
2
-1
(
 Q) (2
 ) 
iE
n
I
QN
⎡
⎤=
−
+
⎣
⎦
1
1  
(12.3-23) 
 
or since N = (I–Q)–1 it follows that 
 
 
{
}
2
2
 
 
iE
n
NQN
N
⎡
⎤=
+
⎣
⎦
1
1  
(12.3-24) 
 
 
From the definition of N it is not difficult to show that 
 
 
 
QN
NQ
N
I
=
=
−
 
(12.3-25) 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         827 
 
so that  
 
 
{
}
[
]
2
2
 
 
(2
 )
 
iE
n
N
I N
N
N
I N
⎡
⎤=
−
+
=
−
⎣
⎦
1
1
1  
(12.3-26) 
 
Finally, we have the relationship 
 
 
[ ]
{
}
[ ]
{
}
2
(2
 )
(2
 )
 (
)
i
i
sq
Var n
N
I N
E n
N
I N
N
=
−
−
=
−
−
1
1
1
 
(12.3-27) 
 
This is the result that we wanted to prove. Note that (N 1)sq is the column vector in which the elements are the 
square of the elements in (N 1).  
 
 
12.4 MEAN AND VARIANCE OF THE NUMBER OF TIMES A PROCESS IS IN A TRANSIENT  
STATE—GENERAL CASE 
Equation Section (Next) 
In this section the concept of n, the number of times that the system is in a transient state, is generalized to 
the case that the dwell times are not equal. A more general result for the mean and the variance of the “time” 
that a system is in a transient state is presented with the proofs.  
 
Definition 4 Let tn be the function giving the time, including the time in the original position, that the process 
is in a transient state. Note that tn generalizes the variable n, of Definition 3, to noninteger and unequal values 
for different states. The function tn may be written as  
 
 
j
n
j
j
s
T
t
n T
∈
= ∑
 
(12.4-1) 
 
where nj is the number of times the process is in state j and Tj is the duration or “dwell” of state j. Now the 
mean time to reach an absorbing state, starting in state i, is given by 
 
 
{
}
( )
(
)
j
i
n
i
j
j
s
T
M t
M n T
∈
⎧
⎫
⎪
⎪
= ⎨
⎬
⎪
⎪
⎩
⎭
∑
 
(12.4-2) 
 
Theorem 6 The mean time the process is in a transient state including the original position, starting in state i, 
is given by  
 
[ ]
{
}
1
2
t
        =
 
i
n
T
T
E t
N
T
⎧
⎫
⎪
⎪
⎪
⎪
=
⎨
⎬
⎪
⎪
⎪
⎪
⎩
⎭
M
τ
τ
 
(12.4-3) 
 
where   is a t-component column vector, whose components are the respective “dwell” times and tn denotes 
time. Note that   generalizes the 1 vector to unequal (and not necessarily unity) components. This result 
generalizes (12.3-16) to the case that the dwell times are not unity and not necessarily equal. 
 
Proof Starting in state “i”, one has for the mean time to reach an absorbing state, the expression 
 

 828                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
{
}
( )
j
i
n
j
j
s
T
M t
n T
∈
⎧
⎫
⎪
⎪
= ⎨
⎬
⎪
⎪
⎩
⎭
∑
 
(12.4-4) 
 
which is a t×1 column vector. Again use the definition of nj given in Definition 2, and placing the 
expectation inside the summation produces  
 
 
{
}
{
}
0
(
)
k
i
j
j
i
j
j
k
M n T
M
u T
∞
=
⎧
⎫
= ⎨
⎬
⎩
⎭
∑
 
(12.4-5) 
 
Evaluating the mean value produces 
 
 
{
}
( )
( )
0
(
)
(1
)0
k
k
i
j
j
ij
ij
j
k
M n T
p
p
T
∞
=
⎧
⎫
⎡
⎤
=
−
+
⎨
⎬
⎣
⎦
⎩
⎭
∑
 
(12.4-6) 
 
where 
( )
k
ijp
 is the transition probability of going from state i to state j in k steps. Hence we have 
 
 
{
}
( )
0
0
(
)
k
k
i
j
j
ij
j
k
k
M n T
p
T
Q
∞
∞
=
=
⎧
⎫
⎡
⎤
=
=
⎨
⎬
⎣
⎦
⎩
⎭
∑
∑
τ  
(12.4-7) 
 
From (12.2-4) and (12.2-6) it follows that  
 
 
{
}
0
(
)
k
i
j
j
k
M n T
Q
N
∞
=
=
=
∑
τ
τ  
(12.4-8) 
 
Therefore Theorem 6 follows. Hence the mean time to go from state i, to an absorbing state, is given by the 
result of Theorem 6. 
 
Theorem 7 The variance of the time that the process is in a transient state, including the initial state, given 
that it starts in state i (a transient state), is given by  
 
 
( )
{
}
[ ][ ] [ ]
[ ](
)
[ ]
(
)
var
2
 
i
n
sq
sq
t
N T Q N
N
N
=
+
−
τ
τ
τ
 
(12.4-9) 
 
with (a)sq  defined for the column vector a as the column vector with each component squared. In addition 
the matrix T is defined by 
 
 
1
2
3
4
0
0
0
0
0
0
0
0
0
0
0
0
t
T
T
T
T
T
T
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
= ⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
L
L
L
L
M
M
M
M
O
M
 
(12.4-10) 
 
Note that the Ti in this matrix is the same parameters as defined in the definition of  . 
 
Proof Now consider a recursive expression of the variance of the time to reach an absorbing state. Consider 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         829 
 
 
{
}
{
}
2
2
2
( )
((
) )
k
k
i
n
ik
i
ik
k
n
i
s
T
s
T
M t
p T
p M
t
T
∈
∈
⎧
⎫
⎪
⎪
=
+
+
⎨
⎬
⎪
⎪
⎩
⎭
∑
∑
%
 
(12.4-11) 
 
where T denotes the transient states and T%  denotes the absorbing states. Expanding the squared term on the 
right-hand side of (12.4-11) and combining the 
2
iT  terms produces 
 
 
{
}
{
}
{
}
2
2
2
( )
( )
2
( )
k
k
k
i
n
ik
i
ik
k
n
ik
i
k
n
s
T
s
T
s
T
T
M t
p T
p M
t
p T M
t
∈
∈
∈∪
⎧
⎫
⎪
⎪
=
+
+
⎨
⎬
⎪
⎪
⎩
⎭
∑
∑
∑
%
 
(12.4-12) 
 
Recognizing the definition of the Q matrix in the second term produces 
 
 
{
}
{
}
2
2
2
( )
{
}
( )
2
( )
k
k
i
n
ik
i
k
n
ik
i
k
n
s
T
s
T
T
M t
p T
Q M
t
p T M
t
∈
∈∪
⎧
⎫
⎪
⎪
=
+
+
⎨
⎬
⎪
⎪
⎩
⎭
∑
∑
%
 
(12.4-13) 
 
Solving for {
}
2
( )
i
n
M t
 yields 
 
 
[
]{
}
2
2
( )
{
}
2
( )
k
k
i
n
ik
i
ik
i
k
n
s
T
s
T
T
I
Q
M t
p T
p T M
t
∈
∈∪
⎧
⎫
⎪
⎪
−
=
+
⎨
⎬
⎪
⎪
⎩
⎭
∑
∑
%
 
(12.4-14) 
 
Consider the first term on the right side of (12.4-14) and denote it as TI 
 
 
2
2
2
11 1
12 1
1
1
2
2
2
2
21 1
22 1
2
1
2
2
2
1 1
2 1
1
,
,...
,
,...
 
 
,
,...
k
s
s
I
ik
i
s
T
T
s
s
ss
p T
p T
p T
p T
p T
p T
T
p T
row sum of
p T
p T
p T
∈∪
⎡
⎤
⎢
⎥
⎧
⎫
⎪
⎪
⎢
⎥
=
=
⎨
⎬
⎢
⎥
⎪
⎪
⎩
⎭
⎢
⎥
⎢
⎥
⎣
⎦
∑
%
M
 
(12.4-15) 
 
Since the probability of going from state i to one of the s states is unity, it follows that 
 
 
2
1
2
2
2
I
sq
s
T
T
T
T
⎧
⎫
⎪
⎪
⎪
⎪
=
=
⎨
⎬
⎪
⎪
⎪
⎪
⎩
⎭
M
τ  
(12.4-16) 
 
Now consider the second term, call it TII.  
 
 
2
( )
k
II
ik
i
k
n
s
T
T
p T M
t
∈
⎧
⎫
⎪
⎪
=
⎨
⎬
⎪
⎪
⎩
⎭
∑
 
(12.4-17) 
 
Reordering the transient states as 1 through s–1, assuming only one absorbing state, and denoting 
( )
k
n
k
M
t
M
=
 for notational convenience yields 
 

 830                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
11 1
1
12 1
2
1(
1) 1
1
21 2
1
22
2
2
2(
1)
2
1
(
1)1
1
1
(
1)2
1
2
(
1)(
1)
1
1
,
,...
,
,...
2  row sum of
,
,...
s
s
s
s
II
s
s
s
s
s
s
s
s
p T M
p T M
p
T M
p T M
p T M
p
T M
T
p
T
M
p
T
M
p
T
M
−
−
−
−
−
−
−
−
−
−
−
−
⎡
⎤
⎢
⎥
⎢
⎥
=
×
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
M
 
(12.4-18) 
 
This can be rewritten as  
 
 
11 1
12 1
1(
1) 1
1
21 2
22
2
2(
1)
2
2
1
(
1)1
1
(
1)2
1
(
1)(
1)
1
,
,...
,
,...
2
,
,...
s
s
II
s
s
s
s
s
s
s
s
p T p T
p
T
M
p T
p T
p
T
M
T
M
p
T
p
T
p
T
−
−
−
−
−
−
−
−
−
−
⎡
⎤⎧
⎫
⎢
⎥⎪
⎪
⎪
⎪
⎢
⎥
=
⎨
⎬
⎢
⎥⎪
⎪
⎢
⎥⎪
⎪
⎢
⎥⎩
⎭
⎣
⎦
M
M
 
(12.4-19) 
 
Now consider the matrix A defined by 
 
 
11 1
1(
1) 1
21 1
2(
1)
2
(
1)1 1
(
1)(
1)
1
,...           
,...          
,...
s
s
s
s
s
s
p T
p
T
p T
p
T
A
p
T
p
T
−
−
−
−
−
−
⎡
⎤
⎢
⎥
⎢
⎥
= ⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
M
 
(12.4-20) 
 
Also define the matrix T by 
 
1
2
3
1
,0,0,...0
0,
,0,...0
0,0,
,...,0
0,0,0,... s
T
T
T
T
T −
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
M
 
(12.4-21) 
 
Then it is clear that  
 
 
1
1
11
12
1(
1)
2
2
21
22
2(
1)
3
3
(
1)1
(
1)2
(
1)(
1)
1
1
,0,0,...0
,0,0,...0
,
,...
0,
,0,...0
0,
,0,...0
,
,...
0,0,
,...,0
0,0,
,...,0
,
,...
0,0,0,...
0,0,0,...
s
s
s
s
s
s
s
s
T
T
p
p
p
T
T
p
p
p
T
T
p
p
p
T
T
−
−
−
−
−
−
−
−
⎡
⎤
⎡
⎡
⎤
⎢
⎥
⎢
⎢
⎥
⎢
⎥
⎢
⎢
⎥
⎢
⎥
⎢
=
⎢
⎥
⎢
⎥
⎢
⎢
⎥
⎢
⎥⎢
⎥
⎣
⎦
⎢
⎥
⎣
⎦
⎣
M
M
M
[ ] [ ]
Q
A
⎤
⎥
⎥
⎥
=
⎥
⎢
⎥
⎢
⎥⎦
 
(12.4-22) 
 
It follows from (12.4-14), (12.4-16), (12.4-19), (12.4-20), and (12.4-22) that  
 
 
[
] {
}
[ ][ ]{ }
2
( )
2
i
n
sq
I
Q
M t
T
Q
M
−
=
=
+
τ
 
(12.4-23) 
 
where { }
M  is the column vector having components {
}
( )
i
n
M t
. Since { }
M  has been evaluated as  
 
 
{ } [ ]
M
N
=
τ  
(12.4-24) 
 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         831 
we can evaluate the second moments by 
 
 
{
}
[
] [ ][ ][
]
[
]
1
1
1
2
( )
2
i
n
sq
M t
I
Q
T
Q
I
Q
I
Q
−
−
−
=
−
−
+
−
τ
τ  
(12.4-25) 
 
Now the variance is given by 
 
 
2
2
2
( )
( )
i
i
n
i
n
M t
M t
σ =
−
 
(12.4-26) 
 
or 
 
 
{ }
[ ][ ][ ][ ]
[ ]
[ ]
{
}
2
2
i
sq
sq
N T
Q
N
N
N
σ
=
−
τ +
τ
τ
 
(12.4-27) 
 
As an application of these theorems, let us consider an example. We will consider the time at each 
state in the rest of the chapter as the “dwell time.” 
 
Therefore the variance of the time it takes to reach the absorbing state from state i is given by the  
i-th component of { }
2
i
σ
. 
 
Example 3 Obtain the mean and variance of the time in a transient state using the transition matrix of 
Example 2. Recall that the transition matrix is in canonical form and is represented by 
 
 
               1       2        3 
1
1
0
0
2 1/ 2
0
1/ 2
3 1/ 4
1/ 4
1/ 2
cP
⎡
⎤
⎢
⎥
=
⎢
⎥
⎢
⎥
⎣
⎦
 
(12.4-28) 
 
From this transition matrix, Q and N were obtained as  
 
 
            2        3  
2
0
1/ 2
3 1/ 4
1/ 2
Q
⎡
⎤
=
⎢
⎥
⎣
⎦
 
(12.4-29) 
 
 
[
]
1
                                 2       3 
2 4/3
4/3
 Q
3 2/3
8/3
N
I
−
⎡
⎤
=
−
=
⎢
⎥
⎣
⎦
 
(12.4-30) 
 
It will be assumed that the dwell time in each state is one second. Using Theorem 4 or 6 with Ti = 1, one 
obtains 
 
 
{
}
                                2        3
2 4/3
4/3
1
2
8/3
[ ]
3 2/3
8/3
1
3 10/3
i
n
E t
N
⎡
⎤⎧⎫
⎧
⎫
=
=
⎨⎬
⎨
⎬
⎢
⎥
⎣
⎦⎩⎭
⎩
⎭
1 =
 
(12.4-31) 
 
Thus we see that the mean time in a transient state before being absorbed, starting in state 2, is 8/3 
seconds and, starting in state 3, is 10/3 seconds. To compute the variance, one must use (12.3-27) or 
(12.4-27). Hence, one has, using (12.3-27), 
 

 832                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
 
[ ]
{
}
var
(2
 )
 (
)  
i
n
sq
t
N
I N
N
=
−
−
1
1
 
(12.4-32) 
 
Therefore 
 
 
[ ]
{
}
2
8/3
8/3
1
0
8/3
64/9
var
 
3
4/3 16/3
0
1
10/3
100/9
i
nt
⎧
⎫
⎡
⎤
⎡
⎤⎧
⎫
⎧
⎫
=
−
−
⎨
⎬⎨
⎬
⎨
⎬
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦⎩
⎭
⎩
⎭
⎩
⎭
 
(12.4-33) 
 
Combining leads to the final result 
 
 
[ ]
{
}
2 56/9
var
 
3 62/9
i
nt
⎧
⎫
=
⎨
⎬
⎩
⎭
 
(12.4-34) 
 
Consequently the variance of the number of times (or time) the process is in transient states is slightly larger 
starting in state 3 than starting in state 2. 
This theory allows us to readily compute the mean and variance of the number of steps (including 
the original position) and the time it takes to be absorbed in an absorbing state. 
 
In general to study the mean time (or variance of the time) it takes to reach a particular state, it is 
convenient to modify the transition matrix or state transition diagram so that the state under study is an 
absorbing one. The resulting process is a Markov process with one absorbing state. The behavior of the 
process, before absorption, is exactly the same as the original process. 
 
 
12.5 THE PROBABILITY OF STARTING IN A TRANSIENT STATE AND ENDING IN A  
PERSISTENT STATE 
Equation Section (Next) 
Another interesting result due to Kemeny and Snell [2] concerns the probability of starting in a transient state 
and ending up in a persistent state. This result yields no time information. Furthermore, with only one 
absorbing state the probabilities are all 1! Therefore the result is primarily useful when there are two or more 
absorbing states. 
 
Theorem 8 The probability that the Markov process, starting in a transient state i, ends up in an absorbing 
state j, is bij, where 
 
 
{ }
(
)
     
 
 (
) matrix  
ijb
B
NR
t
n
t
=
=
×
−
 
(12.5-1) 
 
where R is the submatrix defined in (12.1-3) and deals with the transition from transient to absorbing states. 
 
Proof Starting in state i, the process may be absorbed in state j in one or more steps. For a single step the 
probability of absorption is pij. If the process is not absorbed, the process can move to either another 
absorbing state (and cannot reach state j) or to a transient state k. In this latter case the probability of being 
absorbed in state j, from state k, is bkj for any transient state k. Therefore we can write 
 
 
  
k
ij
ij
ik
kj
S
T
b
p
p b
∈
=
+ ∑
 
(12.5-2) 
 
which, in matrix form is  
 
 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         833 
 
B
R
QB
=
+
 
(12.5-3) 
 
Since the submatrix R contains the transition probabilities of the transient states (the set T) to the absorbing 
states (the set ~T ), and the submatrix Q contains the transition probabilities of transient states to transient 
states. Solving (12.5-3) yields 
 
 
[
]
1
 
  
B
I
Q
R
NR
−
=
−
=
 
(12.5-4) 
 
where 
[
]
1
N
I
Q
−
=
−
 from (12.2-6). 
 
As can be seen from this problem, this theory can be applied to an acquisition process, as well as to 
a lock detection process, besides a myriad of other problems in other fields. 
 
Example 4 Consider the following transition matrix in canonical form 
 
 
1/ 3
2 / 3
1/ 3
2 / 3
2 / 3
1/ 3
1,   0,  0,  0,    0
0,   1,  0,  0,    0
,0,  0, 
, 0
0,   0, 
, 0, 
0, 
, 0, 
, 0
P
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
 
(12.5-5) 
 
If follows from the definition of R that  
 
 
1/3,0
0,   0
0,2/3
R
⎡
⎤
⎢
⎥
= ⎢
⎥
⎢
⎥
⎣
⎦
 
(12.5-6) 
 
And N can be shown to be given by 
 
 
[
]
1
7 /5,6/5,4/5
3/5,9/5,6/5
1/5,3/5,7 /5
N
I
Q
−
⎡
⎤
⎢
⎥
=
−
= ⎢
⎥
⎢
⎥
⎣
⎦
 
(12.5-7) 
 
It therefore follows that 
 
 
                      
1
5
2
3
4
 S
S
7/15,8/15
1/5,   4/5
1/15,14/15
S
S
B
NR
S
⎡
⎤
⎢
⎥
=
=
⎢
⎥
⎢
⎥
⎣
⎦
6447448
 
(12.5-8) 
 
Thus the probability of going from state 2 to state 1 is 7/15, and the probability of going from state 4 
to state 5 is 14/15. 
 
 
 
 
 

 834                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
12.6 LOCK DETECTOR PERFORMANCE 
Equation Section (Next) 
Now that we have built up sufficient theory to address lock detector problems, let us consider some lock 
detectors algorithms. 
Lock detectors are devices that indicate when a synchronizing device has succeeded in obtaining 
synchronization or lock. The synchronizing device could be a code tracking loop, a code acquisition system, 
a carrier-tracking loop, a frequency-tracking loop, or a bit synchronization loop. Virtually any 
synchronization function that requires an acquisition process or a tracking process also requires a lock 
detector to indicate when lock occurs. The results that are developed here are applicable to lock detectors that 
can be characterized as Markov chains, with the transition probabilities being independent of time. In the 
theory to follow it is assumed that the transition probabilities are known. These probabilities have to be 
determined from the lock detection devices themselves. This section will utilize the results of Section 12.4. 
 
The basic function of a lock detector is to indicate the in-lock condition when the signal is “locked” 
and to indicate the out-of-lock condition when the system is out of lock. Unfortunately, no lock detector is 
perfect and thus there is a probability that when the system is in lock the lock detector will declare the out-of-
lock state and vice versa. Normally this probability is very small, by design. The mean time to declare the 
out-of-lock condition, when the system is in lock, is a useful measure of the capabilities of a lock detector. 
Clearly a very long time is desired.  
 
Commonly, lock detectors utilize a long integration time, or a series of integrations based on a 
counter that declares the system to be in lock until some number of below-threshold indications occur, at 
which time the system is declared out of lock. One possible problem with simply extending the integration 
time to ascertain the lock state is due to the fact that if a signal drop-out occurs due, for example, to antenna 
switching or deep fades, a single integration might become unreliable. Thus it, may indicate that the system 
is in lock, when it is in fact out of lock. Counter-type lock detectors will be the subject of this section, since a 
single drop out does not seriously affect their performance. The actual implementation can be done in 
hardware or software, or a combination of both. 
 
We shall utilize the results that were developed in this chapter to solve a very simple type of lock 
detector based on an integrator with an integration time of T seconds. We shall assume that when the signal is 
present, the probability of lock detector detection is p, and the probability of a missed detection is q. It 
follows that p + q =1. One missed detection causes the system to declare the out of lock condition, even if the 
system is in lock. Also a single detection puts the system in the locked state, directly from the unlocked state. 
The state transition diagram of this single count lock detector is shown in Figure 12.6-1. 
 
1
2
p
1
Locked
Unlocked
q
1
2
p
1
Locked
Unlocked
q
 
 
Figure 12.6-1 A simple single-count lock detector state transition diagram. 
 
The process starts in state 1 (the locked state) for T seconds, then the system is tested again and 
either remains in state 1 for T more seconds or is “absorbed” in state 2. This is lock state monitoring. 
 
The state transition matrix for the detection of the unlocked condition, given that the system is in the 
locked condition, is given by  
 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         835 
 
          1
2 
1
2 0
1
p
q
P
⎡
⎤
=
⎢
⎥
⎣
⎦
 
(12.6-1) 
 
In canonical form the matrix becomes 
 
 
          2
1 
2 1
0
1
cP
q
p
⎡
⎤
=
⎢
⎥
⎣
⎦
 
(12.6-2) 
 
The mean time to absorption is given by (using Theorem 6 with   = T) 
 
 
[ ]
1
1
(1
)
  
n
T
E t
N
p
T
q
τ
−
=
=
−
=
 
(12.6-3) 
 
since Q is a one-dimensional matrix. Thus, the mean time to declare that the system is out of lock, when it is 
in lock, is given by (12.6-3). As an example, if p = 0.99, then the mean time to falsely indicate that the 
system is out of lock, when it is in lock, is 100T. Note that the results could be applied to the case when the 
signal is absent (for example, when the signal drops out). In this case p would normally be near zero, and q 
near one, so that the mean time to correctly indicate the out of lock state, when the signal is out of lock, is 
about T seconds, since (1–p)–1T   T seconds. It is to be noted that (12.6-3) is the mean time to declare that 
the system is out-of-lock when it is in fact in lock. Thus p must be designed to be very large when the system 
is in lock, and p should be very small when the system is out of lock.  
 
Thus there are two conflicting requirements for lock detectors: (1) the mean time to declare out of 
lock, when the system is in lock, should be very large, and (2) the mean time to detect the out of lock 
condition, when the system is out of lock, should be as small as possible! 
 
Thus, from this example it is seen that the basic modeling method is to consider the state or states 
that one is operating in to be transient states and then characterize the state that is to be investigated as an 
absorbing state. In the previous example the unlocked state was modeled as an absorbing state and the in-
lock state (state 1) as the transient state. This simple example for the mean time to incorrectly indicate that 
the system is out of lock can be solved in a straightforward manner without resorting to the matrix theory 
presented here. Let Pk be the probability of being absorbed on the k-th trial. Also p = 1–q. The mean time to 
be absorbed is given by the following expression 
 
 
1
1
 1
(1
)
 
k
k
k  
k
T
kTP
k
q
qT
∞
∞
−
=
=
=
=
−
∑
∑
 
(12.6-4) 
 
Note that in k–1 trials, it is not absorbed (with probability 
1
(1
)k
q
−
−
), but in the k-th trial it is absorbed (with 
probability q), so that (12.6-4) follows. Note that 
 
 
1
2
 1
1
(1
 )
 
 
k
k
k
q
q
∞
−
=
−
=
∑
 
(12.6-5) 
 
Inserting (12.6-5) into (12.6-4) results in the expression 
 
 
 
 
1
T
T
T
q
p
=
=
−
 
(12.6-6) 
 

 836                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
as was obtained form the matrix theory approach indicated earlier. However, as the number of states 
increases, this direct enumeration of the k-th absorption probability becomes much more difficult to 
formulate, and therein lies the advantage of the matrix method. Although not computed, the variance can be 
easily obtained in the same manner. 
 
As a more complex example of a lock detector consider Example 5.  
 
Example 5 Consider a lock detector that requires that it must have three consecutive missed detections 
before the system is declared to be out of lock. It is clear that the state transition diagram associated with this 
detector is given in Figure 12.6-2.  
 
1
p
1
2
3
4
q
p
p
Locked
state
Unlocked state
q
q
1
p
1
2
3
4
q
p
p
Locked
state
Unlocked state
q
q
 
 
Figure 12.6-2 A “three consecutive counts” lock detector state transition diagram. 
 
 
The state transition matrix is given by  
 
 
          1
2
3
4 
1
0
0
2
0
0
3
0
0
4 0
0
0
1
p
q
p
q
P
p
q
⎡
⎤
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎣
⎦
 
(12.6-7) 
 
In canonical form the matrix is of the form 
 
 
           4
1
2
3 
4 1
0
0
0
1 0
0
2 0
0
3
0
0
c
p
q
P
p
q
q
p
⎡
⎤
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎣
⎦
 
(12.6-8) 
 
since the fourth state is the absorbing one. The mean value vector is given by  
 
 
[ ]
{
}
1
1
0
0
0
1
0
1
0
0
1
 
0
0
1
0
0
1
i
n
p
q
E t
p
q
T
p
−
⎧
⎫
⎡
⎤
⎡
⎤
⎧⎫
⎪
⎪
⎪⎪
⎢
⎥
⎢
⎥
=
−
⎨
⎬
⎨⎬
⎢
⎥
⎢
⎥
⎪
⎪
⎪⎪
⎢
⎥
⎢
⎥
⎣
⎦
⎣
⎦
⎩⎭
⎩
⎭
 
(12.6-9) 
 
where T is the duration of each dwell time. Evaluating this expression yields 
 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         837 
 
{
}
2
1
3
1
 
 
[ ]
 
n
q
q
E t
q
+
+
=
 
(12.6-10) 
 
 
It has been proven by Holmes [4] that the n consecutive count lock detector has a mean false 
dismissal time of  
 
 
[ ]
{
}
2
1
1
1
n
n
n
q
q
q
E t
q
−
+
+
+
=
L
 
(12.6-11) 
 
where there are n +1 nodes on the state transition diagram. Kordosz [5] has also obtained the variance for this 
lock detector and some bounds on the probability distribution function for the time to lose lock.  
 
Example 6 Another type of detector is the up-down counter that starts in state 1 and remains there unless a 
miss detection occurs, at which time the counter drops to state 2. A hit returns the counter to state 1, whereas 
a miss detection sends the counter to state 3 from state 2. Finally when the fourth state is reached, the lock 
detector declares the system is out of lock. 
 
Consider the state transition diagram for a three-state, up-down counter, lock detector shown in 
Figure 12.6-3.  
 
1
p
1
2
3
4
q
p
p
Unlocked state
Locked
state
q
q
1
p
1
2
3
4
q
p
p
Unlocked state
Locked
state
q
q
 
 
Figure 12.6-3 “Three state up-down counter” lock detector state transition diagram. 
 
 
 
The canonical form of the matrix is given by 
 
 
           4
1
2
3 
4 1
0
0
0
1 0
0
2 0
0
3
0
0
c
p
q
P
p
q
q
p
⎡
⎤
⎢
⎥
⎢
⎥
=
⎢
⎥
⎢
⎥
⎣
⎦
 
(12.6-12) 
 
It can be shown (Problem 5) that the mean time to declare a false lock, starting in state 1, is given by 
 
 
[ ]
{
}
2
1
3
1
2
n
q
E t
T
q
+
=
 
(12.6-13) 
 
which does not differ significantly from the lock detector shown in Figure 12.6-2. Note that as a check, if  
q = 1 (and therefore p = 0), that  
 
 
[ ]
{
}
1
3  
n
E t
T
=
 
(12.6-14) 

 838                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
as is obvious from Figure 12.6-3. Note also that (12.6-13) holds when the signal is not present also. In 
general there is not much to choose between the two types of three-count lock detectors. 
 
The design of lock detectors must balance the desire not to declare the out-of-lock state, when the 
signal is present, against the desire to quickly declare the out-of-lock state when the signal is not present. 
 
 
12.7 LOCK DETECTOR SYSTEM MODELS 
 
In this section we will indicate some typical lock detector system models, which can be used for lock 
detection and monitoring. We will consider residual carrier, suppressed carrier, and a PN code lock detector, 
in the following. When the lock detector statistics are known, the probabilities p and q can be determined and 
applied to the lock detector algorithms as discussed in this chapter. This enables one to determine the lock 
detector performance. 
In order to utilize the theory presented here, it is necessary to: (1) determine the values of the 
probabilities p and q, (2) choose a lock detector algorithm, and (3) then apply these probabilities to the 
algorithm to evaluate the mean time to an event, to acquire lock, for example. 
 
 
12.7.1 Residual Carrier Loop Lock Detector Block Diagram Model 
 
This lock detector model for coherent detection of an unmodulated tone plus noise is shown in Figure 12.7-1. 
It is assumed that the modulated sidebands do not possess any significant spectral composition at the carrier 
frequency. It is assumed that the tone plus white Gaussian noise are fed into the phase lock loop. The 
multiplier, VCO, along with the quadrature (input) multiplier, forms the phase locked loop. The lock detector 
is formed from inphase multiplier, the low pass filter (LPF), and the integrator. The LPF removes the double 
frequency term, and the integrator does the filtering of the signal plus noise. The integrated output is then 
compared to a threshold, which determines the lock status. 
 
In this scheme it is necessary to provide for an AGC circuit to prevent the noise level from changing 
with the absence or presence of the signal. Typically both a noncoherent and a coherent AGC are used in 
coherent systems. 
 
Loop filter
LPF
Averaging
integrator
Threshold
detector
Lock status
Lock
detector 
algorithm
Input
VCO
hybrid
90o
Loop filter
LPF
Averaging
integrator
Threshold
detector
Lock status
Lock
detector 
algorithm
Input
VCO
hybrid
90o
hybrid
90o
 
 
Figure 12.7-1 Carrier loop lock detector block diagram model. 
 
 
 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         839 
12.7.1.1 Residual Carrier Loop Lock Detector Performance 
Equation Section (Next) 
Let us consider, as an example, how to compute the values of p and q for the simple lock detector of Figure 
12.7-1. Let us model received signal plus thermal noise as  
 
 
(
)
(
)
(
)
0
0
0
( )
2
cos
2
( )cos
2
( )sin
c
s
y t
P
t
n t
t
n t
t
ω
θ
ω
θ
ω
θ
=
+
+
+
+
+
 
(12.7-1) 
 
where P is the received signal power in watts, 
0
ω  is the center frequency in radians/sec, and the white 
Gaussian noise is represented by the in-phase and quadrature baseband components as seen in the last two 
terms in (12.7-1). The input noise is assumed to have a one-sided noise spectral density of N0/2. The 
reference signal r(t) is given by 
 
 
(
)
 
ˆ
( )
2 cos
r t
t
ω
θ
=
+
 
(12.7-2) 
 
It will be assumed that the carrier phase lock loop is tracking perfectly, so that ˆθ
θ
=
, for simplicity in the 
analysis to follow. Out of the lower mixer, just before the low pass filter, in Figure 12.7-1, the following 
signal and noise components exist 
 
 
0
( )
( )
(2
)
c
u t
P
n t
O
ω
=
+
+
 
(12.7-3) 
 
where 
0
(2
)
O
ω
 is the sum term which is located at twice the carrier frequency. After removing 
0
(2
)
O
ω
 and 
averaging over T seconds, the output is given by 
 
 
0
1
( )
( )
T
c
v T
P
n t dt
T
⎡
⎤
=
+
⎣
⎦
∫
 
(12.7-4) 
 
The mean and variance can be computed as 
 
 
0
1
T
Pdt
P
T
μ =
=
∫
 
(12.7-5) 
 
and 
 
 
[
]
2
0
3
0 0
1
E
( )
( )
2
T T
c
c
N
n t n u
dtdu
T
T
σ =
=
∫∫
 
(12.7-6) 
 
where we have used the fact that the white noise component has expectation given by 
0
(
/ 2) (
)
N
t
u
δ
−
. Let 
the threshold be  ; then the probability p is given by 
 
 
2
2
2
1
(
)
exp
2
2
y
p
dy
δ
μ
σ
πσ
∞
⎛
⎞
−
=
−
⎜
⎟
⎝
⎠
∫
 
(12.7-7) 
 
Now if the threshold is chosen halfway between zero and 
P , then p can be expressed as 
 

 840                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
(
)
0
= 
   and   
1
PT
p
Q
Q
R
q
p
N
⎛
⎞
=
−
−
= −
⎜
⎟
⎜
⎟
⎝
⎠
 
(12.7-8) 
 
where Q(x) is defined by 
 
 
2
1
( )
exp
2
2
x
t
Q x
dt
π
∞
⎛
⎞
=
−
⎜
⎟
⎝
⎠
∫
 
(12.7-9) 
 
and 
0
/
R
PT N
=
. The results are shown in Figure 12.7-2. The upper curve (solid curve) is the value of p 
plotted against the signal-to-noise ratio parameter, R in dB. The lower curve, which is dashed, represents the 
value of q versus R in dB. 
 
0
2
4
6
8
10
12
14
16
18
20
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
p
q
R (dB)
p, q
0
2
4
6
8
10
12
14
16
18
20
1  10 6
1  10 5
1  10 4
1  10 3
0.01
0.1
1
p
q
R (dB)
p, q
 
Figure 12.7-2 The values of p and q for a carrier loop lock detector versus the SNR, R in dB. 
 
 
12.7.2 Suppressed Carrier Lock Detector 
 
A suppressed carrier signal would typically be demodulated by either a Costas loop or a squaring loop [1]. 
Figure 12.7-3a and Figure 12.7-3(b) contain representative models for the lock detector’s block diagram 
models for a Costas loop and a squaring loop, respectively.  
Figure 12.7-3(a) illustrates the lock detector model and a Costas loop carrier tracking loop. The left 
side of the system is the Costas loop up to the multiplier feeding the loop filter. The right side of the diagram 
is the lock detector for this loop. It forms I2−Q2, which is filtered by the integrator and compared to a 
threshold. The lock detector decisions are made after every integration time.  
 
Figure 12.7-3(b) is the model for the squaring loop lock detector. Basically it is the same as the 
carrier lock detector with the addition of a squaring circuit after a bandpass filter.  
 
 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         841 
 
 
VCO
Loop
filter
LPF
LPF
-
Thres.
Lock
status
Integ.
Lock
detector 
algorithm
Input
(.)2
(.)2
90o
VCO
Loop
filter
LPF
LPF
LPF
LPF
-
Thres.
Lock
status
Integ.
Lock
detector 
algorithm
Input
(.)2
(.)2
90o
 
 
Figure 12.7-3 (a) Costas loop lock detector block diagram model. 
 
 
Loop filter
90º
hybrid
LPF
Integrator
Threshold
detector
Lock status
(. )
2
BPF
Input
Lock
detector 
algorithm
VCO
Loop filter
90º
hybrid
LPF
Integrator
Threshold
detector
Lock status
(. )
2
BPF
Input
Lock
detector 
algorithm
Lock
detector 
algorithm
VCO
 
 
Figure 12.7-3 (b) Squaring loop lock detector block diagram model. 
 
 
12.7.3 PN Code Acquisition Lock Detector 
 
A code lock detector is shown in Figure 12.7-4. It may be used for code acquisition and code track 
monitoring. Consider Figure 12.7-4(a).  
The on-time code generator despreads the incoming code, which is then filtered in the bandpass 
filter and detected and integrated. The integrated process is then compared to the threshold and either the 
signal plus noise is above the threshold, or it is not. These decisions are then fed into the lock detector 
algorithm that determines if the system is still in synchronization. The baseband version is shown in Figure 
12.7-4(b). It basically does the same operation as Figure 12.7-4(a), except at baseband. 
 
 
12.7.4 A Frequency-Hopping Lock Detector for SFH/DPSK 
 
In Figure 12.7-5 a block diagram model of a lock detector for a frequency hopping tracking system is 
illustrated. The tracking system utilizes an early and a late hopping pattern to generate an error signal to feed 

 842                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
back to the voltage controlled crystal oscillator (VCXO) that drives the hopping code generator. This closed 
loop process maintains the tracking function to keep the on-time (OT) hopping pattern in time with the 
received hopping pattern. 
 
BPF
square
law
detector
On time
code gen.
Lock
detector 
algorithm
Thres.
detect
(a)  Bandpass version
Lock
status
0
T
dt
∫
VCO
LPF
LPF
( ) 2
( ) 2
+
Lock
detector 
algorithm
Thres.
detect.
I
Q
(b) I-Q Baseband version
Lock
status
On time
code gen.
0
T
dt
∫
BPF
square
law
detector
On time
code gen.
On time
code gen.
Lock
detector 
algorithm
Thres.
detect
(a)  Bandpass version
Lock
status
0
T
dt
∫
VCO
LPF
LPF
( ) 2
( ) 2
+
Lock
detector 
algorithm
Thres.
detect.
I
Q
(b) I-Q Baseband version
Lock
status
On time
code gen.
0
T
dt
∫
VCO
LPF
LPF
( ) 2
( ) 2
+
Lock
detector 
algorithm
Thres.
detect.
I
Q
(b) I-Q Baseband version
Lock
status
On time
code gen.
0
T
dt
∫
 
 
Figure 12.7-4 (a, b) A direct sequence code lock detector for PN code acquisition for PN code acquisition and tracking. 
 
 
 
The lock detector is composed of an on-time dehopped signal, a bandpass filter, a square law 
detector, a threshold detector, followed by a lock detector algorithm. Basically, the DPSK signal is filtered to 
limit the noise level, and then is detected and integrated. The integrated signal is then compared to a 
threshold and the binary decision is fed to the lock detector algorithm, which indicates lock status. 
 
-
Input
Frequency
synthesizer
Hopping
Code
generator
BPF
BPF
( )2
( )2
LPF
LPF
Loop
filter
E
L
OT
BPF
( )2
Threshold
detector
Lock
detector
algorithm
Lock
status
VCO
0
(.)
h
T
dt
∫
Lock Detection Portion
           
Hop tracking portion
⎨
⎪
⎪
⎪
⎧
⎪⎪
⎪
⎩
Notes: OT denotes “on-time,” E denotes “early,” and L denotes “late.”
-
Input
Frequency
synthesizer
Hopping
Code
generator
BPF
BPF
( )2
( )2
( )2
( )2
LPF
LPF
Loop
filter
E
L
OT
BPF
( )2
( )2
Threshold
detector
Lock
detector
algorithm
Lock
status
VCO
0
(.)
h
T
dt
∫
Lock Detection Portion
           
Hop tracking portion
⎨
⎪
⎪
⎪
⎧
⎪⎪
⎪
⎩
⎪
⎧
⎪⎪
⎪
⎩
⎧
⎪⎪
⎪
⎩
Notes: OT denotes “on-time,” E denotes “early,” and L denotes “late.”
 
 
Figure 12.7-5 A slow hop FH/DPSK lock detector. 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         843 
 
12.8 SUMMARY 
 
In this chapter absorbing Markov chains were introduced from a matrix point of view. Some theorems that 
were pertinent to lock detector theory were presented and proven. The main result of this chapter was the 
mean and variance of the time it takes to start in a transient state and end in a persistent state (Theorems 6 
and 7), since this relates to lock detectors directly. In particular it models both the case when the signal is 
present and computes the mean and the variance of the time it takes to falsely declare out of lock; it also 
allows modeling the case in which the signal has dropped out and allows the determination of the mean and 
variance of the time it takes to declare that the signal is not present. 
 
Then lock detector performance was developed for a few lock detectors, in terms of the probabilities 
of being above and below a threshold, p and q. It was assumed that the relevant probabilities of being above 
and below the threshold were known. A methodology was developed so that virtually any type of counting 
lock detector could be analyzed by the methods presented in this chapter. One analysis was developed that 
determined the values of p and q for the case of a carrier loop lock detector. The values of p and q were 
obtained in terms of the threshold level and the signal to noise ratio. 
 
Finally some block diagram models of lock detectors for both suppressed and residual carrier 
tracking, PN code tracking, and frequency hopping were presented and discussed. 
 
As another note, we have used the convention that q is the probability of moving toward the 
persistent state, and p is the probability of moving away from it. 
 
References 
 
[1] J. K. Holmes, Coherent Spread Spectrum Systems, Malabar, FL: Krieger Publishing Co., 1990. 
 
[2] J. Kemeny, and J. Snell, Finite Markov Chains, New York: Van Nostrand, 1960. 
 
[3] P. Hopkins, “A Spread Spectrum Synchronization Scheme for the Space Shuttle Orbiter,” Johnson Space Center, Tracking and 
Communications Development Division Internal Note (Rev A), September 1975. 
 
[4] J. K. Holmes, “Code Tracking Lock Detector Mean Time to Declare Out-of-Lock,” TRW IOC IUS-110, May 1979. 
 
[5] R. A. Kordosz, “Useful New Results on the Time to Lose Lock for a Simple Markov Tracking Scheme,” Milcom 96, McLean, VA, 
October 21–24, 1996. 
 
Selected Bibliography 
 
R. Howard, Dynamic Programming and Markov Processes, New York: Technology Press and Wiley, 1960. 
 
W. H. Huggins, “Signal Flow Graphs and Ransom Signal,” Proc. IRE, January 1957. 
 
S. J. Mason, “Feedback Theory-Some Properties of Signal Flow Graphs,” Proc. IRE, Vol. 41, No. 9, September 1953. 
 
S. J. Mason, “Feedback Theory-Further Properties of Signal Flow Graphs,” Proc. IRE, Vol. 44, No. 7, July 1956. 
 
R. W. Sittler, “Systems Analysis of Discrete Markov Processes,” IRE Trans. Circuit Theory, Vol. CT-3, December 1956. 
 
 
Problems 
 
1. Show that N is as indicated in (12.3-11) of Example 1. That is to say, evaluate N from Q by performing the  
    appropriate matrix inverse. 
 
2. Show that (12.4-8) collapses to (12.3-12) when   equals 1. 
 
3. Consider the following state transition diagram shown in the figure. Here qd is the probability of going  
     to a higher state and pd is the probability of going to a lower state. 

 844                                Spread Spectrum Systems for GNSS and Wireless Communications 
 
 
 
 
0
1
2
3
pd
pd
qd
qd
1
1
Locked
Unlocked
0
1
2
3
pd
pd
qd
qd
qd
qd
1
1
Locked
Unlocked
 
 
Figure for Problem 3 The state transition diagram. 
 
 
      The diagram represents a simplified model to determine the probability of lock, where 
      qd = P(hit|search mode) and pd = P(no hit|search mode). 
     (a) Show that the probability of reaching state 3, starting from state 1, is given by 
 
 
2
 
1
d
L
d
d
q
p
p q
=
−
 
 (P12-1) 
 
     (b) Show that the probability of reaching state 3 or state 0 from state 1 is unity! 
 
4.  Show that the variance of the previously described lock detector for unit dwell times is given by 
 
 
2
2
2
d
d
q T
p
σ
=
 
(P12-2) 
 
    where T is the dwell time in seconds. Use both the matrix method and the direct evaluation method to  
    obtain the variance. 
 
5. Referring to Figure 12.6-3, which illustrates the three-state up-down lock detector counter state transition  
    diagram, show that the mean time to indicate the out-of-lock state, when the system is in lock, is given by  
 
 
[ ]
{
}
2
1
3
1
2
n
q
E t
T
q
+
=
 
(P12-3) 
 
    In this equation q is the probability of the T-sec and integrator being above the threshold and p is the  
    probability of it being below the threshold. Note that this applies in the case when the signal is present and  
    to the case when the signal is absent. 
 
6. Consider the count-to-five lock detector shown in the figure following. This lock detector requires that 5  
   consecutive above-threshold values occur before acquisition is declared. Let qd denote the probability of a  
   correlation indicating an above threshold value and pd the probability of a correlation being below the  
   threshold. Show that the mean time to indicate acquisition (locked state) is given by 
 
 
2
3
4
 
5
1
d
d
d
d
Declare lock
d
q
q
q
q
T
T
q
+
+
+
+
=
 
(P12-4) 
 
 
 
  Therefore if qd is very near unity, then 
 
5
Declare lock
T
T
≅
. 

 
                                    Lock Detector Theory and Absorbing Markov Chains 
 
 
         845 
 
1
2
3
4
5
6
qd
pd
qd
qd
qd
qd
pd
pd
pd
1
Locked
Unlocked
pd
1
2
3
4
5
6
qd
pd
qd
qd
qd
qd
pd
pd
pd
1
Locked
Unlocked
pd
 
 
Figure for Problem 6 An illustration of the “five-counts-in-a-row” lock detector. 
 


About the Author 
Jack K. Holmes has a B.S., an M.S., and a Ph.D. from UCLA in electrical engineering. He is the author of 
the book Coherent Spread Spectrum Systems (Wiley Interscience, 1982; Krieger Press, 1990). Dr. Holmes 
has published over 50 papers in journals and conferences in the area of spread spectrum systems, 
communications, navigation, and synchronization. He has been employed by a number of aerospace 
companies in the Los Angeles area as well as operating as a consultant. He has taught numerous short 
courses and tutorials, as well as graduate courses, at both UCLA Extension School and California State 
College, Northridge.  
847 


 
                                          849    
Index  
Absorbed  821, 826, 831, 832, 834, 835 
Absorbing Markov chain  819–823, 843 
Absorbing state  819–822, 825, 827–829, 831–833, 835 
Absorption probability  836 
Acquisition time  349, 353–364, 369, 370, 371–375, 386, 392, 
400, 401, 403, 404, 409–412, 422, 423, 434, 436–439, 450–
452, 454, 455 
Active search  349, 350, 353–356, 360, 369, 372, 375, 394, 
440, 445, 448, 452 
Adaptive array  752, 757, 761 
Adaptive equalization  723, 726, 728–730 
Additive white Gaussian noise (AWGN)  196, 210, 211, 213, 
234, 239, 241, 242, 244, 246, 248, 259, 267, 478, 644, 665, 
679, 712–714, 726, 838, 839 
Alberty, T.  564, 579 
Allan variance  294, 296 
ALOHA system  624, 626–629, 662, 674, 676, 678 
Angle of arrival diversity  716 
Antenna diversity  716 
Aperiodic correlation functions  79, 80, 83, 107–109, 110, 114 
A priori probability  356 
Arm filter  314–317, 319–323, 326, 333, 335, 339, 341, 344, 
346, 347, 479, 493, 495, 500, 501, 516, 540 561, 578, 583, 
588, 589 
Array factor  755–757 
Asymptotic tracking error  543 
Asynchronous transfer mode (ATM)  208 
Autocorrelation  309, 313, 338, 346, 481, 486, 487, 490, 492, 
493, 499, 516–519, 525, 532, 533, 535, 537, 539, 541, 573, 
580, 594, 596, 599 
Automatic frequency control (AFC)  316, 343 
 
Balanced code  98 
Balanced Gold codes  98–103, 114, 117, 118 
Ball, Cocke, Jelinek and Raviv (BCJR) algorithm  246 
Bandpass filter (BPF)  298, 299, 305, 306, 307, 318, 320, 321, 
346, 356, 390, 392, 393, 404–408, 421, 422, 427, 493, 494, 
503, 504, 507, 509, 523, 529, 534, 538, 540, 541, 539, 583, 
711, 770, 771, 806–808 
Bandwidth efficiency  266–268 
Barker sequences  79, 108 
Barrage jammer  123 
Baseband covariance function  789, 803 
Baseband cycle spectrum  799, 804 
Baseband cyclostationary  788 
Baseband (or low pass) equivalent transfer function  5, 778, 
790, 791, 793, 807, 808 
Bello, P.  700, 701, 704, 706, 711 
Bent sequences  106, 107 
Between bin losses  387 
Biederman, L.  556, 578, 589 
Binary phase shift keying (BPSK)  8–16, 20–25, 27–30, 38–
41, 58, 57, 126, 128, 129, 132, 133, 242–244, 248, 268, 
350, 351, 353–355, 362, 364, 365, 371, 375, 376, 380, 384, 
386, 390, 391–400, 404, 407, 417, 418, 419–421, 424, 451, 
456, 473, 478, 484, 502, 524, 559, 560, 656, 566, 619, 620,  
 
 
 
 
 
 
 
 
 
 
623, 624, 644, 657, 667, 676, 711, 712, 714, 715, 733, 734, 
736, 738, 770, 777, 788, 789, 792, 793, 796, 799, 780, 812 
Binary symmetric channel  191, 209, 216, 230–232, 238, 241, 
258, 263 
Bit error probability  208, 210, 216, 218, 219, 244, 255, 256, 
259, 264, 266, 269, 274 
Bit error rate (BER)  644–646, 676, 711, 713–715, 723, 734, 
737, 738, 744, 747, 751, 759, 762 
Blanking  568, 570, 575, 577 
Block periodic interleaver  192 
Bose, Chaudhuri, and Hocquenghem (BCH) codes  253–255, 
269, 270 
Braasch, M. S.  552, 578 
Branch gain  460 
Bragg cell  765 
Broadband noise jamming  560, 561 
BPSK/BPSK  161, 164, 168, 178, 179, 183, 185 
BPSK-SFH/MFSK  154 
Branch  356, 357, 366, 407, 408, 458–460, 462, 464, 469 
Branch metric  231, 233, 236–238 
Buffer-and-burst  612 
Butterworth filter  500 
 
C/A code  1, 417 
Canonical form  820, 821, 824, 831, 835, 837 
Carrier covariance function  789, 796, 797 
Carrier cycle spectrum  799, 804, 805 
Carrier cyclostationary  788 
Carrier sense multiple access  629, 630 
Cauchy Inequality  82 
cdma2000  603, 646, 648–650– 652, 655–658, 660–662, 675, 
676, 678 
Cell  355–357, 364, 368, 373–375, 387, 388, 393, 410–415, 
441, 442, 428–430, 432–434, 445, 454 
Cell radius  608 
Cell splitting  606, 658, 666, 676 
Cellular communications  603, 604, 676 
Channel coding  715, 723, 743 
Channelized radiometer  765 
Channel traffic  625, 628 
Characteristic equation  73–75 
Characteristic phase  88, 98–101 
Characteristic polynomial  73, 75–77, 84, 87, 98–101, 103–
106, 117 
Chen, C.  355, 452 
Chernoff bounds  743, 744,. 747, 750, 751, 763 
Chip  349–356, 361, 362, 364, 365, 367, 371, 375, 376, 383, 
387, 390, 391–394, 400, 401, 410–418, 421, 422, 424, 426–
428, 432, 433, 434, 438, 456, 457, 475, 478, 483, 489, 490, 
508, 522, 523, 527, 547, 552, 524, 559, 564, 559, 579, 582 
Chip rate detector  765, 804, 806 
Classic radiometer  770, 779, 780 
Closed-loop noise bandwidth  477, 481, 490, 503, 516, 531, 
532, 539, 544, 558, 573, 589, 598 
Closed-loop response  29, 309, 512, 532, 539, 572, 512, 532, 
539, 572 

 850                                           Spread Spectrum Systems for GNSS and Wireless Communications  
            
Closed-loop transfer function  282, 283, 285, 290, 292, 338, 
345, 382, 480, 481, 489, 542, 576 
Cluster  605, 606, 608, 676, 678 
Code acquisition  349–351, 353–356, 365, 366, 368, 371, 375, 
376, 378, 384, 392, 394, 415–417, 433, 437, 438, 447, 451–
454 
Code division multiple access (CDMA)  3, 4, 52, 57, 79, 125, 
269, 270, 603, 608, 615, 618, 668, 610, 616, 617, 618, 619, 
620, 622, 623, 624, 629–633, 636, 642, 646, 650, 651, 656–
659, 660–662, 665–676, 742, 752, 758, 761  
Code division multiple access noise  616, 617, 619, 673 
Code rate  196, 224,226, 237–239, 241–244, 149, 251, 253, 
254, 258, 365, 394, 746 
Code tracking loop  351, 352, 360, 365, 410, 424, 434, 473, 
477, 478, 480, 481, 483, 484, 488, 489, 492–494, 501–504, 
507, 511, 412, 506, 523, 527, 528, 532, 536, 537, 539, 541, 
544, 545, 548, 552, 555–560, 562, 568, 569, 570, 572, 574, 
577–581, 583, 588, 589 
Code weight distribution  196 
Coherent bandwidth  695, 696, 715, 716, 723 
Coherent code tracking loop  477, 478, 534, 577 
Coherent integration time  376, 391, 425, 429 
Coherent reference  14 
Communicate  820 
Communication channel  3, 760 
Complex conjugate symmetric  18, 19, 182, 184, 504, 791 
Complex envelope  4–7, 17, 23, 28, 33–38, 40, 45, 47, 788, 
789, 790, 795, 797, 798, 800, 801, 802, 805, 807, 815 
COMSEC  766 
Concatenated codes  243, 244, 246, 248, 249, 251, 252, 257, 
269, 271 
Constraint length  224–228, 233, 234, 240, 242, 246, 248, 257, 
268, 269, 273, 665  
Conventional sliding correlator  350, 354 
Covert transmission  766 
Convolutional code  195, 224, 226–233, 237–240, 242–248, 
257, 259, 269, 270, 271, 653, 657, 658, 661, 665, 667, 673 
Convolutional interleaver  194, 195 
Convolution operation  91 
Convolutional  745, 750–752, 759 
Correlation loss  16, 19, 20, 58, 379, 393, 425, 427, 430, 438, 
457 
Correlation time  349, 350, 353, 365, 372, 374, 376, 378–380, 
387, 392, 396, 421, 424, 425, 429, 456, 457, 570, 573 
Correlator  349, 350, 352–355, 360, 372, 377, 378, 380, 389, 
395, 400, 404, 412, 417, 424, 435, 428, 429, 436, 442, 443, 
445–447, 450, 451, 454, 456, 477–479, 483, 493, 506, 522, 
523, 527, 528, 538, 552, 553, 557, 570, 574, 578, 579, 593–
596, 619, 620, 623, 635, 636, 638, 629, 643, 644 
Correlation radiometer  777, 780 
Cosine wave pulse  418 
COST-231 Hata model  685, 686 
Costas loop  275, 310, 311, 313–319, 321–323, 326, 329, 332, 
334, 340, 342–344, 346, 347 
Cramer-Rao bound  562, 563, 567, 569 
Cross correlation  84, 94, 96–98, 115 
Cross-correlation spectrum  94 
Cyclic redundant check (CRC) codes  207, 208, 269, 270 
Cross product frequency lock loop  341–343 
Cyclic property  207 
Cyclic shift  207 
Cyclostationary  788, 789, 797, 805, 812 
 
Damping factor  284, 286, 287, 292, 293, 294, 299, 544 
Decimation  88, 96, 101, 103, 104, 228 
Decision-directed feedback loop  327 
Decision feedback equalization  731 
Decoding table  197, 198 
Decorrelating detector  636, 638, 639, 642, 643, 645, 646, 676 
Deflection  779, 786, 787 
Delay-and-multiply detector  765, 812 
Demod-remod quadriphase tracking loop  331, 332 
Degradation  178, 281, 297, 299, 310, 561, 577, 603, 619, 646, 
715, 733, 759 
Dehopped signal  30 
Delay and multiply  783, 800, 802, 804, 812 
Delay-doppler cross power spectral density  707, 708, 710, 
711 
Delay-doppler domain  702 
Demod-remod quadriphase tracking loop  331, 332, 343 
Despreading  4, 11 13, 14, 20, 22, 58, 128, 394, 621 
Despread noise process  20 
Despread terms  496, 505  
Detection probability  354, 355, 359, 364, 383, 386, 387, 392, 
393, 397, 399, 400, 515, 423, 433, 434, 446, 447–449, 451, 
452, 458, 770–773, 777, 779, 781, 783, 788, 806, 809, 812, 
814, 815 
DiCarlo, M.  363, 364, 452 
Differential phase shift keying (DPSK) 11, 27, 36–38, 60, 111, 
112, 130, 131, 254–256, 258, 259, 343, 591, 601, 602, 713, 
736, 738, 743, 783, 800, 802, 804, 812 
Diffraction  679, 680, 684 
DiFranco, J.  403, 406, 419, 453 
Digital frequency synthesis  299, 300, 343, 602 
Dillard, R.  782, 813, 814 
Dirac delta function  482, 499, 573 
Directed branches  229, 458 
Direct frequency synthesizer  275, 301, 303, 342 
Direct path  680, 684, 688, 693, 694 
Direct sequence  1,2, 3, 7–10, 13, 15, 16, 19, 20, 22, 27, 30, 
40–42, 48, 57, 58, 60, 349, 353, 364, 366–368, 375, 391, 
392, 394, 408, 417, 418, 453, 473–475, 478, 502, 537, 568, 
569, 577, 591, 602, 603, 618, 667, 669, 842  
Discrete aperiodic cross-correlation function  83 
Discrete Fourier transform  381, 415 
Discrete normalized periodic cross-correlation function  80 
Discrete memoryless channel (DMC)  191, 257 
Discriminator function  478, 479, 483, 496, 513, 516, 549, 
551–558, 571, 573, 575, 577, 580, 583, 589 
Distance metric  213 
Doppler  350, 356, 360, 361, 364, 365, 407, 424, 441, 451, 
562, 568, 695, 698, 699, 701, 702, 706, 707–709, 711 
Doppler domain  702, 707 
Doppler-spread function  701, 706, 708, 709, 710 
Dot product  493, 494, 496, 501, 502, 527, 552, 577, 578, 580 
Double dwell time  349, 362–364 
DS/BPSK  126, 159, 178   
DS/PSK  125, 129, 131, 133, 140, 144, 157–160 
DS-FFH/FSK  140, 
DS-FFH/MFSK  152–154 
DS-SFH/DPSK 131, 139, 147, 157, 161 
DS-BPSK/BPSK  168 
DS-QPSK/BPSK  168 
DS-SFH/MFSK  125, 129, 136, 139, 152, 154–156, 160 
DS-SFH/PSK  129, 138, 139 
Dual BCH codes  103, 104, 114,  
Dual-k convolutional codes  243 
Duplexing  609, 610, 611 
Dwell time  349, 353, 355–357, 359, 360, 362–365, 368, 374, 
375, 387, 393, 401, 412, 420–422, 424 
 
Early-late gate  473, 478, 483, 484, 489, 491–493, 495, 502, 
503, 505, 512, 516, 519, 521–523, 536, 542, 544, 547, 548, 
550, 552–554, 556–559, 650, 569, 570, 574, 575, 577, 583 

 
                                                Index 
 
 
          851 
Effective phase error  327, 329, 338, 341, 342, 345  
Egli’s path loss model  684 
Energy detector  765 
Equalization  679, 715, 723, 724–734, 743, 759, 761 
Equal weight combining  720–722 
Equivalent low-pass channel  693, 694 
Error burst  207, 257 
Error detection  197 
Error signal  479, 481, 487–489, 512, 514, 538, 543, 557, 574, 
584 
Extrinsic information  244, 247, 248 
Extrinsic log likelihood ratio  250 
Euclidean distance  210, 211–213, 230 
Euclid’s division algorithm  65 
Extension field  64 
 
Fading  2, 5, 6, 610, 616, 618, 657, 665, 666, 673, 679, 691–
699, 702, 703, 706, 710, 711–716, 719, 723, 732, 733, 735–
737, 739, 743–746, 748–752, 759, 761 
False alarm probability  354–356, 359, 363, 372, 374, 375, 
384–386, 390, 397, 399, 414, 430, 431, 433– 436, 444, 446, 
447, 45, 451, 455, 456, 765, 770–772, 776, 779, 780, 781, 
783, 793, 795, 797–799, 801, 802, 804, 806, 809, 819, 812, 
814 
False lock  315, 318, 319, 321–327, 342, 344, 347, 348, 837 
Fast fading  698, 699 
Fast Fourier transform (FFT)  354, 371, 372, 375–379, 380–
382, 387–390, 382, 393, 395, 416, 417, 419, 420–422, 424, 
426, 428–432, 434, 451, 453–455, 457, 765 
FDMA  94, 610–613, 616, 617, 619, 631, 676 
Feedback loop  352, 357, 360, 362, 363 
Fenton, P.  492, 578, 579 
FFH  34, 112, 259–261, 263, 265–267 
FFH/BFSK  137, 138 
FFH/MFSK 151, 153, 154, 439, 440, 441, 442, 444, 446, 448, 
450 
Fibonacci form  67 
Fibonacci generator  71, 72, 106 
Field  199, 204, 273 
Filter and square circuit  789, 793, 796–798, 800, 804, 805 
Filter branch combiner  781–783 
Final value theorem  288 
Finite impulse response (FIR)  245 
First generation (1G)  602, 607 
First order loop  283, 288, 290, 291, 297, 316, 346, 543, 557, 
583 
Fisher information matrix  563 
Flat fading  125, 694, 695, 697, 698 
Floor attenuation factor  690, 691 
Floor function ( x )  52, 740 
Flow graph  355–359, 363, 452, 458, 459, 460–471 
Fokker-Planck  298, 558, 584–586, 588 
Follower jammer  32, 134 
Footprint  606, 608, 609 
Ford, T.  492, 578 
Forney, D.  299 
Forward band  609 
Forward link  604, 614, 619, 646, 648, 650–652, 655–662, 
668, 669, 671 
Forward path  460, 462 
Fourier transform  4–6, 16, 43–45, 50, 353, 354, 371, 381, 
415, 417, 418, 453, 454, 503, 504, 508, 518, 535, 539, 540, 
541, 564, 573, 580, 701–703, 705–710, 739, 762, 784, 791, 
801 
Fraunhofer region  682 
Free distance  228–230, 237, 239, 241 
Free space path loss  680, 682, 686 
Frequency acquisition  315, 341, 343, 344 
Frequency diversity  716, 743 
Frequency division duplexing (FDD)  609–614, 664, 674 
Frequency-follower jammer  31 
Frequency-hopped (FH)  2, 20, 109, 452, 591, 592, 601, 602, 
780, 781, 800–802 
Frequency-hopped multiple access (FHMA)  615, 616, 618, 
676 
Frequency-hopping tracking loop  592, 596, 598, 600, 602 
Frequency locked loop  341–343 
Frequency reuse  605–609, 676 
Frequency-hopping synthesizers  111 
Frequency selective fading  125, 695, 697, 698, 711, 761 
Frequency slot  111–113 
Frequency synthesis  275, 299, 300, 301, 303, 304, 342, 343 
Friis equation  681 
Frequency shift keying (FSK)  2, 111, 112 
Fundamental matrix  822, 824 
 
Gabor bandwidth  564 
Galois Field  63, 199 
Galois form  67, 70–72 
Gaussian approximation  386, 389, 433, 438, 448, 451, 456, 
771, 772, 797, 798, 801, 806, 812 
Gaussian density function  693, 698, 711 
Gaussian modulated sinusoidal pulse  49 
Gaussian random process  484, 494, 499, 524,620, 621, 637, 
770, 817 
General packet radio service (GPSR)  603 
Generalized likelihood ratio  419 
Generating function  75, 76, 85, 98, 116, 356, 357, 463–471 
Generating polynomial  204,205, 207, 254 
Generator matrix  200–203 
Geosynchronous satellites  1 
GF(2)  64–66, 70, 77, 81–84, 117 
Global Positioning System (GPS)  1, 102, 103, 132, 345, 373, 
417, 421, 437, 438, 453, 454 
GLOBALSTAR  2 
Global System for Mobile Communications (GSM)  2 
Golay  748–750 
Gold Codes  3, 89, 94–103, 105–107, 671, 672 
Gold-like codes  79, 103, 105–107, 114 
Greatest common divisor  88 
Greatest integer function ( x )  52, 740 
Green’s function  586 
 
Hamming correlation  112 
Handoff  606, 607, 613, 617, 618, 651, 656, 676 
Hard decision  209, 211, 231, 233, 258, 260, 263, 264, 272, 
273, 743, 745, 748–752, 759 
Heaviside operator  479, 489, 515, 538 
High frequency (HF)  679 
Holmes, J. K.  319, 343, 344, 355, 371, 452–454, 471, 492, 
527, 547, 556, 577, 578, 579, 589, 813 
Hopkins, P.  819, 843 
Hybrid frequency division multiple access (HFDMA)  617 
Hybrid spread spectrum systems  39 
Hypothesis  351, 373, 375, 381, 387, 404, 408–410, 412, 417, 
422  
 
Impulse function  500, 503–505 
Indirect frequency synthesis  275, 301, 303, ,304 342 
Initial conditions  67, 70, 71, 76, 85, 88, 97, 99–102, 117 
Initial state  76, 77, 828 
Input delay spread function  701, 702, 711 
Instantaneous frequency measurement  810 

 852                                           Spread Spectrum Systems for GNSS and Wireless Communications  
            
Integrate-and-dump filter  15, 365, 405, 425, 493, 501, 506, 
516, 554, 557, 572, 576, 588, 589, 593, 770, 775, 776, 778, 
780, 786, 789, 815 
Interference  477, 502, 503, 505, 520, 521, 523, 524, 527, 542, 
548, 560, 561, 577, 578 
Interference cancellation  642, 643, 676, 677 
Interleaver  190, 192–195, 244, 245, 248–252, 257, 260, 269, 
270, 650, 657 
Intermediate frequency (IF)  135 
Intersymbol interference  647, 715, 723, 727, 730, 731, 732 
Irreducible polynomial  84, 86, 87, 96, 117 
IS-54  2, 603 
Iteratively decoded codes  243, 270 
 
Jaffe-Rechtin filter  284, 289, 292, 345 
Jammer degradation  561 
Jammer side information  192, 211, 212, 220, 221, 241, 258, 
260, 263, 265, 266, 270 
Jamming  1, 12, 23, 31, 32, 39, 121–186, 365, 374, 390, 502, 
548, 560, 561, 578 
Jamming scenario  122 
Jammer-state information (JSI)  192, 211, 212, 220, 221, 241, 
258, 260, 263, 265, 266, 270 
Jamming types  123, 427 
Jolley, L. BB. W.  534, 540, 578 
JPL  2, 343, 344 
 
Kaji and Aleyama model  687, 760 
Karkosz, R. A.  837, 843 
Kasami sequences  84, 104–106 
Kemeny, J.  819, 825, 832, 843 
Kernels  702 
Kilgus, C.  353, 452 
 
Lagrangian multiplier technique  402 
Large-scale  679, 680, 691, 692, 759 
Large set of Kasami sequences  104, 105, 106, 114 
Laplace transform  479 
Law of transposed products  202, 204 
Least mean square  727–730 
Lee microcell model  688 
Likelihood criterion  474 
Likelihood function  475, 476, 563, 633, 634, 637, 639 
Likelihood ratio  404–406, 419 
Limiter discriminator  810 
Linear block code  195, 199, 205, 206, 216, 217, 251, 269, 
272 
Linear feedback  84,  
Linearized tracking loop  490 
Linear shift register  69, 103, 114 
Linear recursion  70, 76, 87, 92 
Linear span  71, 72, 106, 107 
Local area augmentation systems (LAAS)  568 
Lock detector  317, 318, 319, 343, 789, 793, 795, 797, 802, 
804, 812, 819, 820, 822, 834–838, 840–845 
Lock detector for PN codes  842 
Lock detector performance  819, 834, 838, 839, 843 
Log normal  692 
Log normal path loss  689 
Long loop  278, 279 
Loop gain  542, 543, 573 
Loop noise bandwidth  280, 290–292, 294, 308, 314, 327, 329, 
338, 341, 342, 345, 478, 481, 490, 503, 516, 531, 532, 539, 
544, 558, 573, 589, 789, 794 
Low-pass filter radiometer  775, 776 
Low density parity check (LDPC) codes  243, 251–253 
Low-pass equivalent impulse response  5 
Low probability of detection (LPD)  765, 766,  
Low probability of exploitation (LPE)  766 
Low probability of interception (LPI)  1, 28, 57, 755, 766, 
777, 778, 779, 788, 792, 812 
Loop pull-in  545 
 
Macrocell  606, 674 
Markov process  354, 360, 452, 458, 463, 466, 470, 471 
Mason’s gain formula  460, 462, 465–467, 469 
M code  483, 578 
Matched filter  349, 350, 353, 376, 377, 386, 417–425, 434, 
436, 452, 454, 456, 457, 632, 635, 636, 642 
Matched spectral jammer  124, 390, 392, 397, 426, 431, 432, 
439, 451 
Maximum a posteriori (MAP)  244, 247, 208, 276, 332 
Maximal length  63, 68, 73, 84, 85, 87, 96, 98, 113, 116 
Maximal ratio combiner  720, 733, 743 
Maximal ratio combining  723, 726, 728–730  
Maximum likelihood decoding  209, 214, 217, 221, 230, 232, 
233 242, 243, 257, 269 
Maximum likelihood estimate 276, 277, 342, 474, 475, 477, 
478, 462, 465, 577, 639 
Mean acquisition time  355, 359, 361, 362, 372, 375, 386, 
392–394, 436–439, 451, 452, 454, 455 
Mean sweep time  369, 370 
Mean time to lose lock  297, 473, 483, 556, 558, 560, 577, 
578, 583, 586, 589 
Merged trellis  227  
Microcell  606, 674 
Microcell propagation model  687 
Milstar  1 
Miniature airborne GPS receiver (MAGR)  568 
Minimum distance decoding rule  233 
Minimum shift keying (MSK)  27, 30, 33–35, 111–112, 131, 
134–135, 168, 173, 174, 355, 356, 362, 364, 367, 368, 439–
422, 444, 446–448, 450–452, 591, 756, 783, 800, 801–802, 
812 
Mobile cell  604, 608, 676 
Mobile switching center (MSC)  604, 609, 617 
Modified Bessel function of the first kind  419 
Modified four-phase Costas loop  331, 332 
Multiple return shift register generator (MRSRG)  68 
MSK/BPSK  168 
m-sequence  2, 66, 68, 84, 85, 86, 88–100, 103–105, 109, 111, 
113, 114 
Multicarrier UWB signals  52 
Multipath  473, 548, 679, 688, 691–695, 697, 698, 715, 723, 
732, 740, 741, 743, 752, 759, 760, 761 
Multipath diagram  548, 552, 554, 556, 577 
Multipath fading  679, 681, 685, 743, 759 
Multiphase tracking loop  330 
Multiple access  603, 609, 611, 612, 615, 618, 619, 629, 630, 
631, 642, 662, 668, 676, 677 
Multiple input  758, 759, 761 
Multiple-input-multiple-output (MIMO) 758, 757, 761 
Multiplexing function  528, 529, 533 
Multiplier output  509 
Multitone jamming  124, 178 
Multiuser detection  631, 636, 642, 676, 677 
 
Nakagami fading  714 
Narrowband interference  523, 524, 527 
Narrowband processes  4, 9 
Narrowband signals  4 
Narrowband signal spectrum analyzers  786 
Narrowband systems  5 
Natural frequency  284, 286, 287, 289, 292, 294, 316, 544 

 
                                                Index 
 
 
          853 
Near-far problem  56–58, 616–618, 636, 638, 673, 677 
Neumann-Hoffman codes  109, 115 
Nielson, P. T.  546, 578 
Node  356–362, 364–366, 369 
Noise bandwidth  15 
Noise jamming  129 
Noise spectral density reduction  20 
Noncentrality parameter  384, 396, 431, 432 
Noncoherent code tracking loop  477, 478, 483, 484, 493, 494, 
502, 527, 542, 548, 555–557, 559 
Noncoherent correlation time  350, 422 
Noncoherent integration time  365 
Nondispersive fading channel  711, 713, 714, 715, 723, 732, 
734, 738, 744, 747, 751, 759 
Nonlinear convolutional codes  243 
Nonlinear simple shift register generator (SSRG)  69 
Nontouching loop  460, 462 
Norm of a vector  82 
Normalization threshold  386, 397, 414, 431, 432, 450 
N-phase Costas loop  331, 343 
N-th power loop  320 
Nonreturn to zero (NRZ)  9, 311, 322, 323–326, 338–341, 
347, 354, 365, 371, 373, 412, 419, 421, 424, 428, 430, 432, 
454, 456, 478–480, 483, 484, 489, 492, 493, 500, 501, 503, 
512, 518, 522–524, 526, 527, 531, 539, 560, 561, 564, 569, 
577–579, 583, 589, 623, 677 
 
On-off keying (OOK)  51 
Orthogonal frequency division multiplexing (OFDM) 43–46 
Okumura-Hata path loss model  685, 686, 760 
Open loop gain  281 
Optimum decoding  208, 211, 213, 233, 270 
Orthogonal frequency shift keying (OFSK)  737, 738 
Orthogonal signals  136 
Orthogonal transmit diversity  658 
Orthogonality principle  640 
Orthonormal function  276, 474, 657, 661 
Output Doppler-spread function  701, 708, 711 
Outer bin loss  377, 378 
Offset quadriphase shift keying (OQPSK)  23–27, 41, 126, 
128, 132, 133, 355, 356, 362, 364–367, 394, 398, 400, 451, 
799, 812, 815 
OQPSK-SFH/MFSK  156  
OmniTRACS  2 
 
Packet radio  603, 624, 676 
Paging channel  649, 651–653, 667, 669 
Parallel concatenated convolutional codes  244, 246 
Parity check matrix  202, 203, 252 
Parseval’s theorem  21, 309 
Partial band jammer  123, 140, 141, 144, 146, 147, 149 
Partial band noise jammer  123, 140 
Passive matched filter  349, 350, 417, 420, 421, 454 
Path gain  460–462 
Path loss equation  768, 769 
Peak periodic cross-correlation function magnitude  81 
Peak periodic out-of-phase autocorrelation function  
magnitude  81 
Periodic correlation  79, 81, 83, 102, 107–109, 114 
Persistent state  819–821, 826, 832, 843 
Phase constant  753 
Phase detector  280, 298, 299, 305, 307, 311 
Phase detector gain  280 
Phase error  280, 286–290, 293–295, 297–299, 304, 306, 308, 
311–313, 316, 327, 329, 331, 337, 338, 340, 346 
Phase error variance  290, 294, 295, 299, 312–316, 329, 340, 
346 
Phase locked loop (PLL)  275, 276, 278, 279, 281, 283–288, 
290–294, 318, 341–346, 789, 793–795, 812, 838 
Phase noise  282, 283, 285, 293–296, 304, 311, 344, 390, 391 
Phase plane  545–548  
Phase rotation  565–569, 577 
Picocell  606, 674 
Pilot channel  651, 652, 656, 657, 661–663, 639  
Plane Earth model  680, 683, 684 
Polarization diversity  716 
Polynomial arithmetic  65 
Polynomial code  205, 207 
Polynomial over GF(2)  65 
Power control  616, 655, 658, 659, 661, 662, 665–657, 670. 
671, 673, 674 
Power spectral density  6, 7, 9, 11, 12, 15–22, 27–29, 37, 38, 
46, 50–52, 57, 60, 90, 279, 295, 295, 311, 332, 338, 339, 
383, 390, 398, 424, 426, 481, 482, 490, 497, 498, 509, 517, 
518, 524, 525, 535, 539, 564, 576, 617, 622, 707–712 
Predecessor state  69 
Preferred pairs  95, 97, 98, 105 
Prime field  64 
Prime number  64 
Primitive polynomial  66, 84–88, 101, 104, 118 
Proakis, J.  384, 444, 452, 636, 677, 732, 735, 737, 738, 744, 
748, 750, 751, 761 
Probability of acquisition  353, 355, 368, 369, 370, 401, 402, 
409, 410–412, 434, 436, 456 
Probability of error (PE)  734, 736, 743, 751, 762 
Processing gain  4, 9, 11, 13, 15, 16, 27, 30, 41, 42, 60, 61, 
131, 143, 165, 187, 191, 391, 432, 617 
Product codes  243, 244 
Protection level  326 
Pseudonoise (PN)  349, 452, 615, 623, 632, 656, 660, 662, 666 
PSK/BPSK  168 
Pulse amplitude modulation (PAM)  51 
Pulsed jamming  157, 159, 160, 186 
Pulsed noise jammer  124 
Pulsing  542, 568, 570, 573, 577 
Punctured convolutional code  228 
P(Y) code  1, 437, 438, 452, 632 
 
Q function  386, 387, 433, 450, 771, 772, 776, 777, 781, 784, 
795, 797–799, 801, 802, 804, 806 
Quadriphase shift keying (QPSK)  22–27, 126, 128, 129, 132, 
133 331, 344, 355, 356, 362, 364–367, 394, 396–400, 451, 
455, 655, 657, 661, 668, 670, 772, 796–799, 804, 805, 812 
QPSK/BPSK  23, 165, 168, 173 
QPSK/QPSK  25 
QPSK-SFH/MFSK  156 
Quality factor  767, 768 
Quotient  65, 99–101 
 
Radiometer  765, 770–773, 775–777, 779–783 
Radio propagation  679, 680, 760 
Raghavan, S.  492, 577–579 
RAKE receiver  679, 739, 740, 742, 743, 759 
Rapid acquisition by sequential estimation (RASE)  352, 353 
Rate line detector  765, 793, 810, 812 
Rayleigh fading  692–694, 711–714, 733, 735–737, 743, 745, 
746, 748–752, 759 
Reciprocal polynomial  87, 117 
Recursion-aided rapid acquisition by sequential estimation 
(RARASE)  352, 353 
Recursive concatenated codes  244, 245 
Reflected path  680, 683, 693 
Reed-Solomon codes  243, 255, 257, 268, 269, 270, 272 
Remainder  65, 66 

 854                                           Spread Spectrum Systems for GNSS and Wireless Communications  
            
Repeater jammer  124 
Residual carrier  5, 275, 276, 342 
Reversal law of transposed products  640, 641 
Reverse link  604, 609, 612, 646, 648, 649, 662, 663, 665–
657, 659, 670 
Rician channel  680, 683, 693 
Rubin, W.  403, 406, 419, 453 
 
Sample and hold  485, 490, 510 
Scale parameter of the oscillator  489, 558 
Scanning diversity  723 
Scattering  679, 688, 689, 702, 708, 709–711, 759 
S-curve  331, 332, 479, 480, 487, 490, 492, 494, 496, 512, 
513, 531, 545, 548, 549, 555 
Search threshold  365 
Second generation (2G)  603, 607, 669 
Second-order loop  283–288, 291–294, 297, 298, 304, 305 
Sectoring  606, 607 
Seidel, S. Y.  690, 760 
Selection diversity  716, 720 
Self-loop  460 
Self-noise  479, 509, 529, 538 
Sequential decoding  242, 271 
Sequential detection  403, 404, 407, 412, 451, 453 
Sequential probability ratio test  404, 453 
Serial active search  439, 444, 437 
Serial concatenated convolutional codes (SCCC)  250, 251 
Shannon’s capacity theorem  266, 267 
Shannon’s coding theorem  266 
Shift register generated sequence  81 
Shift register matrix  72 
Simple shift register generator  67 
Sinc(x)  13 
Single-sideband rotation  565, 568 
Single-sideband phase noise  295 
Slow frequency hopping (SFH)  33, 36, 38, 41, 125, 129, 132, 
133, 138, 254–256, 258, 259, 265 
FH/BFSK  219  
SFH/BFSK  133, 136, 138 
SFH/BPSK  146, 149 
SFH/DPSK  129, 130, 131, 144, 146, 160, 175, 178, 254–256, 
258, 259 
SFH/MFSK  126, 133–136, 139, 148, 152, 154, 156, 159, 160, 
173, 175, 178, 265 
SFH/PSK  129, 132, 133, 146 
SFH/QPSK  146 
SFH/OQPSK  146 
Shift register  63, 66, 67–73, 76, 81, 84–88, 92, 93, 96, 98, 
100–103, 106, 107, 114, 116–118, 120 
Shnidman P.  386, 387, 414, 433, 452 
Single count lock detector  834 
Snell, J.  819, 825, 832, 843 
Super-high frequency (SHF)  679 
Short loop  278, 279, 306 
Sidelnikov’s bound  102, 115 
Signal flow graph  229, 358, 452, 458–460, 462 
Slotted ALOHA channel  626, 627, 628, 662, 674, 676, 678 
Small-scale  679, 681, 685, 743, 759 
Small set Kasami  102, 115 
Smart antenna  752, 757, 759, 762 
Soft decisions  191, 204, 210, 211, 213, 230, 231, 234–237, 
239–243, 246, 258, 743–745, 747, 749–752, 759 
Soft input and soft output (SISO)  248, 249, 250 
Space diversity  716 
Space division multiple access (SDMA)  619, 676 
Spectral masks  53 
Spectral regrowth  355, 356, 362, 367, 368, 451, 456 
Spectral separation coefficient  181, 622 
Spread spectrum communications  1, 676 
Spread spectrum multiple access (SSMA)  615, 616 
Squaring loop  275, 306, 308, 310, 311, 314, 315, 317, 318, 
328, 331, 344, 346 
SSRG  67–70, 72–78, 81, 94, 114, 116, 117 
Steady state  287–289, 298, 315, 346, 473, 542, 544, 577, 808, 
814  
Steering vector  757 
Stiffler, J.  353, 452 
Stochastic time variant linear channel  703, 759 
Squaring loop  275, 306, 308, 310, 311, 314–319, 331, 344, 
346 
Suboptimal detector  130 
Super element  756 
Suppressed carrier-lock detector  840 
Sweep rate  298 
Sweep search  400 
Switched beams  7572, 757, 758 
Synchronization  349, 351, 412, 450, 452, 453 
Sync word  132 
Syndrome  303, 204 
Systematic form  200, 201, 205 
 
Tail biting  237,  271 
TDMA  2, 270, 603, 610–614, 616, 618, 619, 631, 676, 758 
Third generation (3G)  603, 618, 646, 669, 676, 678 
Three consecutive count lock detector  836 
Three state up-down counter lock detector  837 
Threshold  349–351, 356, 357, 362, 365, 372, 384–386, 397, 
406, 408–410, 412, 414, 415, 419, 424, 420, 431, 432, 434, 
445, 447, 448, 449–451, 456, 768, 770–774, 776, 779–784, 
786, 806, 809, 814 
Threshold decoding  242 
Throughput  624–629, 630, 631, 678 
Tikhonov V. I.  298, 343 
Time dispersion  695 
Time diversity  716 
Time division code division multiple access (TDCDMA)  618 
Time division duplex (TDD)  609, 610, 612, 616 
Time division frequency hopping (TDFH)  618 
Time division multiple access/frequency division duplex 
(TDMA/FDD)  610, 612, 614 
Time division multiple access/time division duplex 
(TDMA/TDD)  610, 612 
Time division synchronous code division multiple access  
(TD-CDMA)  603, 604, 676 
Time-hopping receiver  43 
Time invariant transfer function  701, 739 
Time to first fix  371 
Time selective fading  695, 699, 711 
Time-shared  477, 527, 528, 531, 532, 536, 539, 577 
Time uncertainty  349, 351, 353, 355, 356, 359, 372, 373, 392, 
400, 412, 420–422 
Timing error  487, 488, 490, 509, 515, 529, 542, 545, 552–
556, 558, 584 
Tone jamming  161, 165, 173, 175, 178, 186, 254–256, 258, 
272 
Tong detector  412, 413, 414, 451 
Total phase noise  294 
Tracking error  595, 598, 600, 601, 602 
Tracking error variance  294, 309, 312, 314, 315, 317, 229, 
337, 340, 344, 346–348, 473, 477, 482, 483, 490–492, 500, 
502, 516, 519, 521–523, 525, 527, 536, 537, 542, 559, 562, 
570, 577, 583, 588, 589 
 
TRANSEC  766 

 
                                                Index 
 
 
          855 
Transform technique  765 
Transient  68 
Transient response  286, 287 
Transient state  819–821, 813–819, 831–833, 835, 843 
Transition probability  819, 828, 833, 834 
Transmission function  458–460 
Transmittance  229 
Trellis depth  227 
Triangle function  89, 90 
Truncation time  408–411 
Turbo codes  192, 244, 246, 247, 248, 252, 269, 270, 271, 
653, 658, 661, 665, 667, 673 
Two-sample Allan variance  296 
 
Ultra-high frequency  679. 686, 760 
Ultrawideband signal modeling  49 
Uncorrelated scattering channel (US)  708, 709, 759 
Undetectable error pattern  204 
Uniform interleaver  194 
Union bound  215, 220, 238, 264, 747–749, 759 
Unit circle  378, 464 
Universal mobile telecommunication systems (UMTS)  603, 
646 
UWB  47–56 
 
Van Dierendonck, A. J.  492, 552, 557, 558, 559 
Verdu, S.  636, 677 
Verification threshold  365 
Viterbi, A. J.  115, 135, 297, 298, 343, 344, 750 
Vocoder  603 
Voltage-controlled oscillator (VCO)  278, 289, 292–294, 298, 
303–305, 308, 310, 312, 320, 333, 337, 480, 497, 515, 532, 
542, 557, 558, 572, 794, 838, 840–842 
 
Wald, A.  403, 404, 407, 453 
Walsh code  651, 652, 656–662  
Ward, P.  351, 352, 386 
Wavelength  679, 694, 698, 676, 753 
Weight  701, 708, 709, 720–722, 724, 728, 729, 730, 731, 733 
Weight structure  230, 257, 258 
Welch’s bound  105, 106 
White Gaussian noise (WGN)  355, 358, 386, 390, 392, 406, 
418, 420, 442, 443, 457, 473, 475, 478, 489, 502, 521–523, 
525, 528, 560, 562, 569, 581, 583, 621, 644, 667, 770, 776, 
794, 808, 809, 811 
White sense stationary  704, 706 
Wideband code division multiple access (WCDMA)  603, 
617, 646, 668, 669–676, 678 
Wideband jammer  123 
Wideband signal spectrum analyzers  787 
Wide sense cyclostationary  788 
Wide sense stationary channel (WSS)  704, 706, 709, 759 
Wide sense stationary uncorrelated scattering model (WSSUS)  
709, 759 
Willard sequences  79, 108, 115 
Word error probability  208, 214, 216, 217, 221, 222, 223, 
241, 274, 747, 748 
 
z transform  378, 464, 465, 469 
Zero filling  237 
Zero padded FFT  372, 387, 388, 429, 431, 434, 455 


The GNSS Technology and Applications Series
Elliott Kaplan and Christopher Hegarty, Series Editors
Applied Satellite Navigation Using GPS, GALILEO, and Augmentation Systems, Ramjee Prasad
and Marina Ruggieri
Digital Terrain Modeling: Acquisition, Manipulation, and Applications, Naser El-Sheimy,
Caterina Valeo, and Ayman Habib
Geographical Information Systems Demystified, Stephen R. Galati
GNSS Markets and Applications, Len Jacobson
GNSS Receivers for Weak Signals, Nesreen I. Ziedan
Introduction to GPS: The Global Positioning System, Second Edition, Ahmed El-Rabbany
Spread Spectrum Systems for GNSS and Wireless Communications, Jack K. Holmes
Understanding GPS: Principles and Applications, Second Edition, Elliott Kaplan and
Christopher Hegarty, editors
For further information on these and other Artech House titles,
including previously considered out-of-print books now available through our In-Print-Forever®
(IPF®) program, contact:
Artech House Publishers
Artech House Books
685 Canton Street
46 Gillingham Street
Norwood, MA 02062
London SW1V 1AH UK
Phone: 781-769-9750
Phone: +44 (0)20 7596 8750
Fax: 781-769-6334
Fax: +44 (0)20 7630 0166
e-mail: artech@artechhouse.com
e-mail: artech-uk@artechhouse.com
Find us on the World Wide Web at: www.artechhouse.com
